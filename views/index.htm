<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Lesieur's API</title>

        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/styles/default.min.css">
    </head>
    <body>
        <div class="jumbotron">
            <div class="container">
                <h1>API Atlas</h1>
                <p>API Atlas is an example of distant API provided with <a href="https://node-atlas.js.org/">NodeAtlas</a>.</p>
                <p><a href="https://github.com/MachinisteWeb/ApiAtlas">See code source this page here</a>.</p>
            </div>
        </div>
        <div class="container">
            <h2>API's List</h2>
            <ul>
                <li>
                    <h3>CV (JSON Example)</h3>
                    `GET /api/cv/`
                </li>
                <li>
                    <h3>Blog (MongoDB example)</h3>
                    <ul>
                        <li>`GET /api/blog/categories/`</li>
                        <li>`GET /api/blog/articles/`</li>
                    </ul>
                </li>
                <li>
                    <h3>Comments (RESTfull Example)</h3>
                    `GET /api/comments/`
                    <p>`POST /api/comments/` (variable: message)</p>
                    <ul>
                        <li>`GET /api/comments/:id/`</li>
                        <li>`PUT /api/comments/:id/` (variable: message)</li>
                        <li>`DELETE /api/comments/`:id/</li>
                    </ul>
                </li>
                <li>
                    <h3>Game (Depth example)</h3>
                    <ul>
                        <li>
                            <h4>Munchkin</h4>
                            `GET /api/games/munchkin/[&lt;extension&gt;/][&lt;stack&gt;/][&lt;type&gt;/]` <em>(extension: <strong>1</strong> to <strong>n</strong>)</em>
                        </li>
                        <li>
                            <h4>Super Munchkin</h4>
                            `GET /api/games/super-munchkin/[&lt;extension&gt;/][&lt;stack&gt;/][&lt;type&gt;/]` <em>(extension: only <strong>1</strong>)</em>
                        </li>
                        <li>
                            <h4>Star Munchkin</h4>
                            `GET /api/games/star-munchkin/[&lt;extension&gt;/][&lt;stack&gt;/][&lt;type&gt;/]` <em>(extension: <strong>1</strong> to <strong>2</strong>)</em>
                        </li>
                        <li>
                            <h4>Munchkin Zombies</h4>
                            `GET /api/games/munchkin-zombies/[&lt;extension&gt;/][&lt;stack&gt;/][&lt;type&gt;/]` <em>(extension: <strong>1</strong> to <strong>2</strong>)</em>
                        </li>
                        <li>
                            <h4>Munchkin Cthulhu</h4>
                            `GET /api/games/munchkin-cthulhu/[&lt;extension&gt;/][&lt;stack&gt;/][&lt;type&gt;/]` <em>(extension: <strong>1</strong> to <strong>4</strong>)</em>
                        </li>
                    </ul>
                    <br>
                    <dl>
                        <dt>&lt;extension&gt;</dt>
                        <dd>
                            <strong>1</strong>,
                            <strong>2</strong>,
                            <strong>3</strong>,
                            <strong>4</strong>,
                            <strong>5</strong>,
                            <strong>6</strong>,
                            <strong>7</strong>,
                            <strong>8</strong>,
                            <strong>m</strong>,
                            <strong>n</strong>
                        </dd>
                    </dl>
                    <dl>
                        <dt>&lt;stack&gt;</dt>
                        <dd>
                            <strong>donjons</strong>,
                            <strong>doors</strong>,
                            <strong>treasures</strong>,
                            <strong>spells</strong>
                        </dd>
                    </dl>
                    <dl>
                        <dt>&lt;type&gt;</dt>
                        <dd>
                            <em>donjons:</em>
                            <strong>fields</strong> <br>
                            <em>doors:</em>
                            <strong>acolytes</strong>,
                            <strong>classes</strong>,
                            <strong>curses</strong>,
                            <strong>madnesses</strong>,
                            <strong>mojos</strong>,
                            <strong>monsters</strong>,
                            <strong>mounts</strong>,
                            <strong>origins</strong>,
                            <strong>powers</strong>,
                            <strong>races</strong>,
                            <strong>rooms</strong>,
                            <strong>upgrades</strong>,
                            <strong>warps</strong><br>
                            <em>spells:</em>
                            <strong>books</strong><br>
                            <em>treasures:</em>
                            <strong>acolytes</strong>,
                            <strong>actions</strong>,
                            <strong>levels</strong>,
                            <strong>munchkinomicon</strong>,
                            <strong>objects</strong>,
                            <strong>stuffs</strong>
                        </dd>
                    </dl>
                    <em>Note: if a command redirect you here, it's because `&lt;type&gt;` do not exist in this `&lt;stack&gt;` or Game.</em>
                </li>
            </ul>
            <h2>Call Example from External Projects</h2>
            <div class="row">
                <div class="col-sm-6">
                    <h3>Client Side - with <a href="https://github.com/MachinisteWeb/vanilla-js">Vanilla JS</a></h3>
                    <p>`GET http://www.lesieur.name/api/comments/` </p>
                    <h4>Code</h4>
                    <pre><code class="js">/* jslint browser: true */
var xhr = new XMLHttpRequest();
xhr.open("GET", "http://www.lesieur.name/api/comments/", true);
xhr.addEventListener("readystatechange", function () {
    var commentsArea = document.getElementsByClassName("comments")[0],
        comments;

    if (xhr.readyState === 4 && xhr.status === 200) {
        comments = JSON.parse(xhr.responseText);
        comments.forEach(function (comment) {
            var group = document.createElement("li"),
                title = document.createElement("h4"),
                paragraph = document.createElement("p");

            title.textContent = comment.id;
            paragraph.textContent = comment.message;

            group.appendChild(title);
            group.appendChild(paragraph);
            commentsArea.appendChild(group);
        });
    }
});
xhr.send(null);</code></pre>
                    <h4>Result</h4>
                    <ul class="comments">
                    </ul>
                </div>
                <div class="col-sm-6">
                    <h3>Server Side - with <a href="https://github.com/MachinisteWeb/NodeAtlas">NodeAtlas</a></h3>
                    <p>`GET http://www.lesieur.name/api/comments/` </p>
                    <h4>Code</h4>
                    <pre><code class="js">/* jslint node: true, esversion: 6 */
exports.changeVariations = function (next, locals) {
    var NA = this,
        http = NA.modules.http,
        result = "";

    http.get({
        hostname: "www.lesieur.name",
        port: 80,
        path: "/api/comments/",
        agent: false
    }, function (response) {
        response.on("data", function (chunk) {
            JSON.parse(chunk).forEach(function (comment) {
                result += `&lt;div&gt;
                    &lt;h4&gt;
                        ${comment.id}
                    &lt;/h4&gt;
                    &lt;p&gt;
                        ${comment.message}
                    &lt;/p&gt;
                &lt;/div&gt;`;
            });

            locals.comments = result;
            next();
        });
    }).on('error', function () {
        locals.comments = "";
        next();
    });
};</code></pre>
                    <h4>Result</h4>
                    <ul>
                        <?- comments ?>
                    </ul>
                </div>
            </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.6.0/highlight.min.js"></script>
        <script>
            /* jslint browser: true */
            /* global hljs */
            hljs.initHighlightingOnLoad();
            function getAll() {
                var xhr = new XMLHttpRequest();
                xhr.open('GET', 'https://www.lesieur.name/api/comments/', true);
                xhr.addEventListener("readystatechange", function () {
                    var commentsArea = document.getElementsByClassName("comments")[0],
                        comments;

                    if (xhr.readyState === 4 && xhr.status === 200) {
                        comments = JSON.parse(xhr.responseText);
                        comments.forEach(function (comment) {
                            var group = document.createElement("li"),
                                title = document.createElement("h4"),
                                paragraph = document.createElement("p");

                            title.textContent = comment.id;
                            paragraph.textContent = comment.message;

                            group.appendChild(title);
                            group.appendChild(paragraph);
                            commentsArea.appendChild(group);
                        });
                    }
                });
                xhr.send(null);
            }
            getAll();
        </script>
    </body>
</html>