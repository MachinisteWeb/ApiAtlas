{"_id":{"$oid":"530afe7a31a27642989254ec"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"En CSS, tout comme avec le librairie JavaScript [jQuery], il faut _utiliser des sélecteurs_ pour _cibler une balise_ ou un ensemble de balise :\n\n- on utilise le **sélecteur #** si l'on désire accéder à l'élément par la valeur de son _attribut id_ ou,\n- on utilise le **sélecteur .** si on désire accéder à l'élément par une des valeurs de son _attribut class_.\n\nEn combinant les deux sélecteurs précédent on peut sélectionner une balise par son _attribut id_ **et** son _attribut class_.\n\nOn peut donc cibler la _balise HTML_ suivante :\n\n```html\n\u003cdiv id=\"main\" class=\"example\"\u003e\u003c/div\u003e\n```\n\navec le _sélecteur CSS_ suivant :\n\n```css\ndiv#main.example { /* ... */ }\n```\n\n\n\n\n\n## Comment sélectionner l'id d'une balise si celui-ci contient un point ? ##\n\nIl n'est a première vue pas possible de sélectionner une balise par la valeur de son _attribut id_ si celui-ci contient un point.\n\n\n\n### Cibler une balise HTML par son id s'il contient un point est impossible ###\n\n\u003e _`Impossible de faire :`_ On ne peut pas cibler la _balise HTML_ suivante :\n\n```html\n\u003cdiv id=\"main.example\"\u003e...\u003c/div\u003e\n```\n\navec le _sélecteur CSS_ suivant :\n\n```css\ndiv#main.example { /* ... */ }\n```\n\nparce que la partie située après le point, à savoir \u003cem\u003eexample\u003c/em\u003e, est interprétée non pas comme la suite du nom de l'id, mais comme une valeur d'attribut class.\n\n\n\n\n\n## La solution pour les id contenant des points sont le \\ et le \\\\\\ ##\n\nLa solution pour cibler un id ou une classe contenant le caractère `.` est simple, il suffit de l'**échapper avec le caractère \\** en CSS et **les caractères \\\\\\** avec [jQuery].\n\n\n\n### Cibler une balise HTML par son id s'il contient un point est possible avec le BackSlash ###\n\n\u003e **`Il faut faire :`** On peut cibler la _balise HTML_ suivante,\n\n```html\n\u003cdiv id=\"main.example\"\u003e...\u003c/div\u003e\n```\n\navec le _sélecteur CSS_ suivant :\n\n```css\ndiv#main\\.example { /* ... */ }\n```\n\nou le _sélecteur [jQuery]_ suivant :\n\n```javascript\n$(\"div#main\\\\.example\");\n```\n\nNotez bien qu'en CSS on utilise un BackSlash `\\` alors qu'avec jQuery il faut également échapper le caractère échappement d'où deux BackSlash `\\\\`.\n\n  [jQuery]: http://jquery.com/ (jQuery: The Write Less, Do More, JavaScript Library)","dates":{"published":{"$date":"2012-12-18T12:12:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Comment \u003cspan\u003ecibler\u003c/span\u003e un \u003cspan\u003eid\u003c/span\u003e qui contient un point","urn":"comment-cibler-un-id-qui-contient-un-point","description":"La solution pour cibler un id ou une classe contenant le caractère . est simple, il suffit de l'échapper avec le caractère « \\ »","image":""}
{"_id":{"$oid":"530f4a3e6f56ae3b67f67204"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48b7"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"530cc2f27188099a66e9bcec"}],"content":"Beaucoup de design demande que les bordures des cadres de contenu soient des images pour avoir des bords aux motifs complexes ou faire des effets d'ombre. Bien qu'il existe des propriétés CSS3 qui gèrent cela à présent, la compatibilité sur tous les navigateurs ne sera possible que si ceci est réalisé avec du CSS standard et du HTML.\n\n\n\n\n\n## Avec un tableau ou la mauvaise façon de faire ##\n\nL'objet HTML presque exclusivement utilisé pour réaliser cela est la balise `\u003ctable\u003e` et ses enfants `\u003ctr\u003e` et `\u003ctd\u003e`. C'est l'un des rares objets permettant dans sa configuration brute de gérer dynamiquement un cadre qui s'adapte au contenu qu'il contient sans CSS.\n\nCependant, l'usage premier d'une balise `\u003ctable\u003e` est d'afficher des données sous forme de tableau **et ne doit** servir qu'à ça.\n\n\u003e Donc se servir de la balise `\u003ctable\u003e` pour faire du positionnement de contenu c'est mal et se servir de la balise `\u003ctable\u003e` pour faire des cadres en image c'est mal.\n\nUn exemple de ce qui certes fonctionne mais qui n'ai pas à faire ci-dessous :\n\n\n\n### On ne doit jamais utiliser la balise `\u003ctable\u003e` pour autre chose que du contenu de type donnée ###\n\n\u003e _`Mauvaise façon :`_ Avec ce type de structure HTML :\n\n```html\n\u003ctable class=\"global\"\u003e\n    \u003cthead\u003e\n        \u003ctr\u003e\n            \u003ctd class=\"top-left\"\u003e\u003c/td\u003e\n            \u003ctd class=\"top\"\u003e\u003c/td\u003e\n            \u003ctd class=\"top-right\"\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/thead\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003ctd class=\"left\"\u003e\u003c/td\u003e\n            \u003ctd class=\"content\"\u003e{Contenu réel}\u003c/td\u003e\n            \u003ctd class=\"right\"\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n    \u003ctfoot\u003e\n        \u003ctr\u003e\n            \u003ctd class=\"bottom-left\"\u003e\u003c/td\u003e\n            \u003ctd class=\"bottom\"\u003e\u003c/td\u003e\n            \u003ctd class=\"bottom-right\"\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tfoot\u003e\n\u003c/table\u003e\n```\n\nça marche effectivement en collant :\n\n- des images de type coin en `background-image` des classes `top-left`, `top-right`, `bottom-left`, `bottom-right`,\n- des images qui se répètent en `repeat-x_`des classes `top` et `bottom` et\n- des images qui se répètent en `repeat-y` des classes `left` et `right`.\n\n\n\n\n\n## Avec une `div` ou la bonne pratique ##\n\n_Mais alors comment réaliser des bordures en images autour d'un contenu ?_\n\nPar n'importe quel autre moyen possible et imaginable ! Les seuls contraintes seront la compatibilité inter-navigateur.\n\nSachez qu'il est tout à fait possible de faire remplir ce rôle par des `\u003cdiv\u003e` de façon aussi dynamique que le tableau `\u003ctable\u003e`. Les `\u003cdiv\u003e` divisent l'espace d'affichage et permettent au CSS d'habiller le tout.\n\nEt comme je suis de bonne humeur, je vais livrer ici ma technique qui est compatible tout navigateur ! Quelle chance ;)\n\n\n\n\n\u003e ### Une bonne manière de créer des cadres dynamiques en image sans tableau ###\n\n\u003e **`Bonne façon :`** En utilisant cette structure HTML :\n\n```html\n\u003cdiv class=\"global-width\"\u003e\n    \u003cdiv class=\"top-right\"\u003e\n        \u003cdiv class=\"bottom-right\"\u003e\n            \u003cdiv class=\"bottom-left\"\u003e\n                \u003cdiv class=\"top-left\"\u003e\n                    \u003cdiv class=\"top\"\u003e\u003c/div\u003e\n                    \u003cdiv class=\"left\"\u003e\n                        \u003cdiv class=\"right\"\u003e\n                            \u003cdiv class=\"content-height\"\u003e\n                                {Contenu réel}\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"bottom\"\u003e\u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nil suffit d'associer :\n\n- des images de type coin en background-image des classes `top-left`, `top-right`, `bottom-left`, `bottom-right`,\n- des images qui se répètent en `repeat-x` des classes `top` et `bottom` et\n- des images qui se répètent en `repeat-y` des classes `left` et `right`.\n\nLa largeur du tableau ce paramètre avec la classe `global-width` et sa hauteur avec la classe `content-height`.\n\n\u003e **Attention :** La largeur se calcule en incluant la largeur des bords `left` et `right` alors que la hauteur se calcule en excluant la hauteur des bords `top` et `bottom`.\n\nVoici un exemple de CSS associé pour notre tableau :\n\n```css\ndiv.global-width {\n    width: auto;\n}\n\ndiv.content-height {\n    height: auto;\n}\n\ndiv.top {\n    margin-left: 23px;\n    margin-right: 23px;\n    height: 23px;\n    background-image: url('top.png');\n    background-repeat: repeat-x;\n}\n\ndiv.top-right {\n    background-image: url('top-right.png');\n    background-position: top right;\n    background-repeat: no-repeat;\n}\n\ndiv.right {\n    padding-right: 23px;\n    background-image: url('right.png');\n    background-position: right;\n    background-repeat: repeat-y;\n}\n\ndiv.bottom-right {\n    background-image: url('bottom-right.png');\n    background-position: bottom right;\n    background-repeat: no-repeat;\n}\n\ndiv.bottom {\n    margin-left: 23px;\n    margin-right: 23px;\n    height: 23px;\n    background-image: url('bottom.png');\n    background-repeat: repeat-x;\n}\n\ndiv.bottom-left {\n    background-image: url('bottom-left.png');\n    background-position: bottom left;\n    background-repeat: no-repeat;\n}\n\ndiv.left {\n    padding-left: 23px;\n    background-image: url('left.png');\n    background-repeat: repeat-y;\n}\n\ndiv.top-left {\n    background-image: url('top-left.png');\n    background-repeat: no-repeat;\n}\n```\n\n\n\n\n\n## Autres modèles avec des `\u003cdiv\u003e` ##\n\nSi vous avez d'autres modèles n'hésitez pas à les laisser dans les commentaires, je les ajouterai ici.\n\n\n\n\n### Structure en semi-tableau ###\n\nVoici une alternative qui vous semble peut-être plus naturelle. Cependant sous **IE7** et **IE8** il y a un décalage de pixel impossible à enlever justement au niveau des flottants,.  À réserver donc si vous ne supportez pas ces navigateurs.\n\n```html\n\u003cdiv class=\"global-width\"\u003e\n    \u003cdiv\u003e\n        \u003cdiv class=\"top-left\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"top-right\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"top\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"left\"\u003e\n        \u003cdiv class=\"right\"\u003e\n            \u003cdiv class=\"content-height\"\u003e\n                {Contenu réel}\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv\u003e\n        \u003cdiv class=\"bottom-left\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"bottom-right\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"bottom\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nen appliquant :\n\n- à `top-left`, `bottom-left` un `float: left;`,\n- à `top-right`, `bottom-right` un `float: right;` et\n- à `top` et `bottom` un `margin-left: \u003clargeur bord gauche\u003e;` et `margin-right: \u003clargeur bord droit\u003e;`.","dates":{"published":{"$date":"2013-01-13T08:02:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Faire des \u003cspan\u003ebordures\u003c/span\u003e en image sans la balise \u003cspan\u003eTable\u003c/span\u003e","urn":"faire-des-bordures-en-image-sans-la-balise-table","description":"Faire des bordures en image sans la balise Table","image":""}
{"_id":{"$oid":"530f5f63620731fe86cb71a4"},"cache":{"comment":{"number":1}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48c4"},{"$oid":"5310456355dfd5f7698d48bc"}],"content":"Vous connaissez tous l'instruction `switch` en _JavaScript_ ; c'est une bonne alternative à la suite d'instruction `if, else if, else if, else if... else` dans le cas de choix multiples. Et si vous vous en débarrassiez pour quelque chose de plus ~~simple~~ concis ?\n\n\n\n\n\n## Les cas d'école ##\n\n\n\n\n### if, else if, encore else if, toujours else if... et else ###\n\nTout d'abord, rappelons la façon la plus ~~simple~~ connue de faire un choix parmi plusieurs valeurs :\n\n```javascript\n// On a la variable \"character\" à tester.\n\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc.\" */;\n\nif (character === \"edward\") {\n    description = \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\";\n} else if (character === \"alphonse\") {\n    description = \"Alphonse Elric change de voix durant FMA Brotherhood.\";\n} else if (character === \"winry\") {\n    description = \"Winry Rockbell est secrètement amoureuse de R2D2.\";\n} else {\n    description = \"Y a pas mal de personnage.\";\n}\n\n// On récupère la valeur de description.\n```\n\n\n\n\n### Tu as trop de choix, utilise un Switch ! ###\n\nAvec l'instruction `switch`, on peut également produire le même résultat. Et oui, paraît que c'est plus rapide, ça utilise moins de caractères (346 au lieu de 352 !), c'est mieux de faire ça (on me l'a dit), ça sauve plus de chatons prématurés, bref c'est formidable !\n\n```javascript\n// On a encore la variable \"character\" à tester.\n\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */;\n\nswitch (character) {\n    case \"edward\":\n        description = \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\";\n        break;\n    case \"alphonse\":\n        description = \"Alphonse Elric change de voix durant FMA Brotherhood.\";\n        break;\n    case \"winry\":\n        description = \"Winry Rockbell est secrètement amoureuse de R2D2.\";\n        break;\n    default : \n        description = \"Y a pas mal de personnage.\";\n}\n\n// On récupère encore la valeur de description.\n```\n\n_Simplement, il y a quelques petites choses qui m'ennuient avec le `switch`_. Non pas que ce soit une mauvaise idée de l'utiliser, mais j'ai du mal avec sa syntaxe (bien que je m'y sois fait) et oublier le mot clé `break` vous envoie droit au bûché. C'est vrai, dans la majorité des cas il est nécessaire : alors ça aurait été sympa qu'il soit implicite, quitte à utiliser un mot-clé pour simuler le fonctionnement d'un `switch` sans `break`.\u003c/p\u003e\n\n\n\n\n\n## Ce problème fait l'Objet d'une astuce ##\n\n\n\n\n#### L'alternative au Switch, (et au If) ? ####\n\nLes deux cas ci-dessus peuvent être remplacés élégamment par un parcourt de valeur dans un **litérale JSON** ! Voyez plutôt :\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions;\n\n/* J'associe à une clé, une valeur. Une sorte de dictionnaire. */\ndescriptions = {\n    \"edward\" : \"Edward Elric fait 1m57 + 6cm de mèche + 2 cm de talon.\",\n    \"alphonse\" : \"Alphonse Elric change de voix durant FMA Brotherhood.\",\n    \"winry\" : \"Winry Rockbell est secrètement amoureuse de R2D2.\",\n    \"other\" : \"Y a pas mal de personnage.\"\n}\n\n/* Je cherche la valeur clé dans mon dictionnaire. Si elle n'est pas trouvé,\n'descriptions[character]' renvoi 'undefinded' qui est testé comme 'false' et on prend alors la valeur par défaut 'other'. */\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// On récupère toujours la valeur de description.\n```\n\nCela a l'avantage de séparer la logique (dernière ligne), des données (l'objet JSON) ; ce qui n'est pas le cas de nos précédents exemples.\n\n\n\n\n### Et pour plusieurs instructions ? ###\n\nRien ne vous empêche de vous créer ce genre de \"Switch\" avec un Objet qui fait un calcule avant retour :\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions;\n\ndescriptions = {\n    \"edward\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"alphonse\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"winry\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    },\n    \"other\" : function () {\n        // Trucs un peu plus conséquents.\n        return; // Le résultat. \n    }\n}\n\n// On choisit le bon calcul/résultat à obtenir.\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// Et on l'exécute.\ndescription();\n```\n\nVous pouvez également préparer des traitements différents en fonction de la variable.\n\n```javascript\n// On a toujours la variable \"character\" à tester.\nvar description /* = \"Information obtenue d'une input, d'une variable GET/POST ou d'un cookie etc...\" */, \n    descriptions = {};\n\ndescriptions[\"edward\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"winry\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"edward\"] = function () {\n    // Traitement de controle ici.\n};\n\ndescriptions[\"other\"] = function () {\n    // Traitement de controle ici.\n};\n\n// On choisit la bonne fonction à exécuter.\ndescription = descriptions[character] || descriptions[\"other\"];\n\n// Et on l'exécute.\ndescription();\n```\n\n\n\n\n\n## Le(s) mot(s) de la fin ##\n\nJe ne me risquerais pas à dire que c'est une bonne pratique, mais c'est au moins une bonne astuce que j'utilise régulièrement. Qu'en pensez vous ?","dates":{"published":{"$date":"2013-03-23T10:44:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Une \u003cspan\u003ealternative\u003c/span\u003e au \u003cspan\u003eSwitch\u003c/span\u003e, c'est possible en \u003cspan\u003eJavaScript\u003c/span\u003e","urn":"une-alternative-au-switch-c-est-possible-en-javascript"}
{"_id":{"$oid":"530f5f63620731fe86cb71a7"},"cache":{"comment":{"number":3}},"categories":[{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c6"},{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48c2"},{"$oid":"5310456355dfd5f7698d48c0"}],"content":"\u003cp\u003eAlors que certains s'en réjouissent et que d'autres le craignent, le support des vieux navigateurs tel que Internet Explorer 6, Internet Explorer 7 et Internet Explorer 8 est terminé pour jQuery...\u003c/p\u003e\r\n\r\n\u003cp\u003e...et cela dès aujourd'hui puisque jQuery 2.0 est arrivé. Alignons quelques faits pour aider à juger l'utilité de la chose.\u003c/p\u003e\r\n\r\n\u003ch2\u003eLa part des navigateurs en Mars 2013\u003c/h2\u003e\r\n\r\n\u003cp\u003eCelle-ci concerne le monde entier :\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eChrome fait \u003cspan class=\"highlighting\"\u003e38%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eFirefox fait \u003cspan class=\"highlighting\"\u003e20%\u003c/span\u003e\u003c/li\u003e \r\n\u0009\u003cli\u003eSafari fait \u003cspan class=\"highlighting\"\u003e8%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eOpera fait \u003cspan class=\"highlighting\"\u003e1%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eIE10 fait \u003cspan class=\"highlighting\"\u003e2%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eIE9 fait \u003cspan class=\"highlighting\"\u003e16%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eIE8 fait \u003cspan class=\"highlighting\"\u003e10%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eIE7 fait \u003cspan class=\"highlighting\"\u003e0.6%\u003c/span\u003e\u003c/li\u003e\r\n\u0009\u003cli\u003eIE6 fait \u003cspan class=\"highlighting\"\u003e0.0...%\u003c/span\u003e\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp class=\"eye-catching\"\u003e\r\n\u0009Source : \u003ca href=\"http://gs.statcounter.com/#browser_version_partially_combined-ww-monthly-201303-201303-bar\" title=\"Source de la part des navigateurs en Mars 2013\"\u003eStatCounter.com\u003c/a\u003e\r\n\u003c/p\u003e\r\n\r\n\u003ch2\u003eLe support de jQuery\u003c/h2\u003e\r\n\r\n\u003ch3\u003eSupport et poids de jQuery 1.9.1\u003c/h3\u003e\r\n\r\n\u003cp\u003eLa version 1.9.1 de jQuery supporte IE6/7/8/9/10, Chrome, Firefox, Safari, Opera. Elle supporte donc \u003cspan class=\"highlighting\"\u003e95.6%\u003c/span\u003e des navigateurs (et surement d'autres).\u003c/p\u003e\r\n\u003cp\u003eElle pèse en production \u003cspan class=\"highlighting\"\u003e90.4kB\u003c/span\u003e.\u003c/p\u003e\r\n\r\n\u003cp class=\"eye-catching\"\u003e\r\n\u0009Source : \u003ca href=\"http://code.jquery.com/jquery-1.9.1.min.js\" title=\"Source de la production jQuery1.9.1\"\u003ejquery-1.9.1.min.js\u003c/a\u003e\r\n\u003c/p\u003e\r\n\r\n\u003ch3\u003eSupport et poids de jQuery 2.0\u003c/h3\u003e\r\n\r\n\u003cp\u003eLa version 2.0 supporte IE9/10, Chrome, Firefox, Safari, Opera.\r\nElle supporte donc \u003cspan class=\"highlighting\"\u003e85%\u003c/span\u003e des navigateurs (et surement d'autres en moins).\u003c/p\u003e\r\n\u003cp\u003eElle pèse en production \u003cspan class=\"highlighting\"\u003e81.1kB\u003c/span\u003e.\u003c/p\u003e\r\n\r\n\u003cp class=\"eye-catching\"\u003e\r\n\u0009Source : \u003ca href=\"http://code.jquery.com/jquery-2.0.0.min.js\" title=\"Source de la production jQuery2.0\"\u003ejquery-2.0.0.min.js\u003c/a\u003e\r\n\u003c/p\u003e\r\n\r\n\u003ch2\u003eConparaison poids/support de jQuery 1.9.1 et 2.0\u003c/h2\u003e\r\n\r\n\u003cp\u003eLa librairie jQuery 2.0 de production est \u003cspan class=\"highlighting\"\u003e9%\u003c/span\u003e (et pas 12%) plus légère que jQuery 1.9.1\u003c/p\u003e\r\n\u003cp\u003eLa librairie jQuery 2.0 supporte \u003cspan class=\"highlighting\"\u003e9%\u003c/span\u003e d'utilisateurs en moins que jQuery 1.9.1\u003c/p\u003e\r\n\r\n\u003ch2\u003eQue faut-il en penser ?\u003c/h2\u003e\r\n\r\n\u003cp\u003ePour ma part, cela soulève trois questions :\u003c/p\u003e\r\n\r\n\u003cul class=\"highlighting\"\u003e\r\n\u0009\u003cli\u003eN'est-il pas encore tôt pour balayer le support IE8 ? (10% des navigateurs)\u003c/li\u003e\r\n\u0009\u003cli\u003eN'est-il pas tant d'arrêter le support IE6 et IE7 ? (moins de 1% des navigateurs)\u003c/li\u003e\r\n\u0009\u003cli\u003eSupporter 9% d'utilisateurs en moins pour être 9% moins lourds est-il justifié ?\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003eEt vous ? Que pensez-vous de l'arrêt du support IE6/7/8 de jQuery ?\u003c/p\u003e","dates":{"published":"2013-04-20 11:49:00","updated":["2013-04-20 11:49:00"]},"title":"\u003cspan\u003ejQuery\u003c/span\u003e 2.0 ne supporte plus \u003cspan\u003eIE6, IE7 et IE8\u003c/span\u003e","urn":"jquery-2-ne-supporte-plus-ie6-ie7-et-ie8"}
{"_id":{"$oid":"530f5f63620731fe86cb71a8"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c8"}],"content":"N'avez-vous jamais rêvé de manipuler votre DOM aussi facilement côté serveur que dans votre navigateur ? N'avez-vous jamais cherché un équivalent à [Vanilla JS](https://blog.lesieur.name/vanilla-js-france/) côté serveur dans l'espoir de manipuler aisément les fragments de DOM de vos moteurs de template avant envoie côté client ? Êtes-vous tombé amoureux de JavaScript ? Ce langage étrange qui semble plat, mais qui est finalement objet, sans type mais finalement typé, procédurale mais finalement événementiel, mono-thread mais finalement multi-traitement asynchrone...\n\nEt si vous réalisiez vos développements Back-end en JavaScript ? C'est possible avec [Node.js](https://nodejs.org/en/) !\n\n\n\n\n\n## Avantages de Node.js ##\n\nNode.js ? Oui mais pourquoi ? Voici une petite liste non-exhaustive des points forts de Node.js.\n\n- Un seul langage front-end et back-end. Le langage est connu de tous (au moins des développeurs front-end) et rien est à réapprendre (peut-être une mise à niveau pour les back-end).\n- Open Source sous licence MIT.\n- Projet soutenu par de grandes sociétés comme Microsoft et Google.\n- Le gestionnaire de modules npm performant et très simple.\n- Pas de serveur web lourd (voir plus loin).\n- Mono-thread non bloquant (événementiel / asynchrone) avec de grandes performances.\n- Simplicité de mise en oeuvre (si si) surtout avec le [framework NodeAtlas](http://node-atlas.js.org/).\n- Gestion fine des interaction HTTP client/serveur avec [Express](http://expressjs.com/) (inclut dans NodeAtlas).\n- Interactions en temps réel pour de vrais applications web grâce à [Socket.IO](http://socket.io/) (inclut dans NodeAtlas).\n- Manipulation de DOM performant simple et côté serveur avec [jsdom](https://cheerio.js.org/) (Vanilla JS pour serveur, inclut dans NodeAtlas).\n- ...\n\nBref, passons à la suite.\n\n\n\n\n\n## Passer de Apache / PHP à Node.js ##\n\nJe devine déjà quelles sont vos premières interrogations. Comment diable utiliser JavaScript pour faire du développement côté serveur ? Je veux bien mais :\n\n\n\n### Questions existentielles ###\n\n- Comment je fais de la lecture / écriture de fichier ? C'est impossible en JavaScript.\n- Comment je fais de l'inclusion de fichier ? C'est impossible en JavaScript.\n- Comment un setInterval ou un setTimeout peuvent marcher côté serveur ?\n- Comment ça fonctionne avec Apache ? IIS ?\n- Moi je veux bien, mais ça se débogue ?\n- ...\n\nJ'aurais dit la même chose il y a quelques temps. Essayons d'y voir plus clair.\n\nLe JavaScript que vous avez l'habitude de côtoyer dans vos navigateurs, chers intégrateurs, n'est qu'une partie de l'iceberg. Il n'est pas interprété de la même manière en fonction des navigateurs car chacun met à disposition des briques de JavaScript pour le développement web. Cependant tout le monde s'accorde à dire que permettre au JavaScript de manipuler des fichiers coté client ce n'est pas très nette, et tout le monde s'accorde à dire que cibler un nœud HTML avec `document.getElementById` c'est la moindre des choses.\n\nSachez que si l'implémentation de JavaScript est si uniforme entre différents interpréteurs c'est parce qu'ils suivent tous les mêmes directives : celle de ECMA International qui définie les standards du « ECMAScript scripting langage » alias notre bon vieux JavaScript. Vous trouverez rapidement plus de détails sur l'histoire du JavaScript dans cette [Curious JavaScript Story](https://blog.lesieur.name/apprendre-et-comprendre-javascript-version-es6/#a-curious-javascript-story).\n\nEn résumé le JavaScript est un langage hôte qui a besoin d'un support pour être utilisé. Le support le plus connu est le navigateur web, et la surcouche applicative JavaScript dans les navigateurs (manipulation du DOM) est elle défini par le W3C.\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eLe JavaScript des navigateurs et celui de Node.js\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"http://blog.haeresis.fr/upload/image/js-browser-vs-node.png\" alt=\"Le JavaScript des navigateurs et celui de Node.js\" width=\"618\" height=\"428\" style=\"max-width: 94%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nTout en suivant au mieux les directives de [ECMA International](http://www.ecma-international.org/default.htm \"Site de l'ECMA International\"), il est donc tout à fait possible de développer son propre support JavaScript pour une utilisation du langage hors d'un navigateur qui pourrait faire appel à des fichiers, faire des appels HTTP, etc. Cet interpréteur s'appelle [Node.js]. Cependant, Node.js n'a pas réinventé la roue, il utilise comme socle le même interpréteur JavaScript que celui qu'utilise Google Chrome le « [V8 JavaScript Engine](https://code.google.com/p/v8/ \"Site du projet V8 JavaScript Engine\") ». Par exemple, là où la variable mère du socle du moteur « JavaScript V8 Engine » sous Chrome est `window`, celui de [Node.js] (même socle) est `global`.\n\nNode.js, est donc un autre support pour le langage hôte JavaScript dont la surcouche applicative (ouverture de fichier, gestion HTTP) est elle défini par la Node.js Foundation.\n\n\n\n### Architecture web avec Node.js ###\n\nComment faire fonctionner Apache ou IIS avec [Node.js] ? C'est très simple, il suffit de ne pas les faire fonctionner du tout. En fait, avec [Node.js], vous n'en avez pas besoin. Il va falloir re-créer vous-même un serveur web avec l'API HTTP. Hola... il est possible que vous n'ayez jamais mis les mains dans Apache bien que vous ayez quelques notions d'échanges client / serveur alors de là à développer votre serveur web... Et bien dite vous que c'est très simple et que ça sera l'occasion de bien comprendre les rôles de PHP, Apache, de vos pages en PHP, etc (si vous faites du PHP bien sur).\n\nCependant si vous n'avez pas le temps de ré-inventer la roue, bien entendu on l'a déjà fait pour vous :\n\n- [NodeAtlas](https://node-atlas.js.org/) qui facilite votre développement de site / application pour des réalisations les plus simples aux plus complexes.\n- [forever](https://github.com/nodejitsu/forever) vous permettra de maintenir vos sites en vie sur serveur de production.\n- [nginx](http://nginx.com/) and co. feront du reverse proxy pour vos multiples sites.\n- Et même avec [issnode](https://github.com/tjanczuk/iisnode), vous pourrez gérer sur IIS vos site [Node.js] comme s'ils étaient de vrai apps .NET et même [les développer avec Visual Studio](http://nodejstools.codeplex.com/) si ça vous chante.\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eArchitecture PHP vs Node.js\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"http://blog.haeresis.fr/upload/image/php-vs-node.png\" alt=\"Architecture PHP vs Node.js\" width=\"618\" height=\"400\" style=\"max-width: 94%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nUn dernier mot sur le débogage. Il suffit d'utiliser l'option `--inspect` en lançant in script côté serveur pour obtenir toutes les informations de débogage nécessaire à une adresse Websocket. Cela vous permettra de connecter votre navigateur préféré et de débugger le code back-end... directement dans votre navigateur ! Vous pouvez maintenant remballer vos IDE, un déboggeur n'est plus nécessaire dans vos outils. Sublime Text ferra amplement l'affaire !\n\n\n\n\n\n## En résumé ##\n\nFinalement [Node.js] n'est qu'un interpréteur JavaScript enrichissant celui-ci avec diverses API (appelées module) qui permet d'exécuter des fichier `.js` (Ça remplace donc aisément des scripts PHP, Ruby, Python, Bash, etc.).\n\nPour faire un site web, la première étape sera donc de créer un serveur web. Mais si on commençait par le commencement ? [Installer et utiliser Node.js sous Windows](http://blog.haeresis.fr/installer-et-utiliser-nodejs-sous-windows/ \"Installer et utiliser Node.js sous Windows\")\n\n  [Node.js]: http://nodejs.org/","dates":{"published":{"$date":"2013-04-24T12:09:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"\u003cspan\u003eDévelopper\u003c/span\u003e en \u003cspan\u003eJavaScript\u003c/span\u003e côté \u003cspan\u003eserveur\u003c/span\u003e avec \u003cspan\u003eNode.js\u003c/span\u003e","urn":"developper-en-javascript-cote-serveur-avec-nodejs","description":"Développer en JavaScript côté serveur avec Node.js","image":""}
{"_id":{"$oid":"530f5f63620731fe86cb71a9"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48c9"},{"$oid":"5310456355dfd5f7698d48cb"}],"content":"Avez-vous déjà ressenti de la Flemme empathique ? Mais qu'est-ce que c'est au juste la Flemme empathique ou Flemme par empathie. Je ne sais pas réellement le définir ; ça s'apparente à « ne pas vouloir déranger » ou encore ça signifie ce que ça signifie : avoir la flemme à la place de quelqu'un.\n\n\n\n\n\n## Quelques exemples ##\n\nVoici quelques mises en situation pour comprendre le principe :\n\n### La bouteille d'eau ###\n\nVotre collègue passe à côté de vous et voit votre bouteille d'eau vide. Il va à la source remplir la sienne, à l'accueil, à trois portes d'ici dans une fontaine où il faut \"plier\" sa bouteille pour la remplir plus ou moins. Il vous interpelle et vous dit « Je te remplis ta bouteille ? ».\n\nVous ne lui avez rien demandé, ça fait une heure que vous n'avez pas forcément soif mais qu'à la réflexion un peu d'eau ne serait pas de refus.\n\nMais y a ce code à faire marcher, vous y êtes presque. Remplir une bouteille d'eau nécessiterait de se lever, d'ouvrir les portes, de peut-être se faire distraire au passage, de lutter avec la fontaine... bref... « la flemme », ça attendra ; et vous répondez seulement pour je ne sais quelle raison : « Non merci, ça ira ».\n\n**En réalité... vous avez probablement été frappé par la Flemme empathique !** Ça ne dérangeait absolument pas votre collègue de remplir la bouteille, sinon il ne l'aurait pas proposé. Vous, ça ne vous aurait rien coûté, vous aviez juste à continuer ce que vous faisiez. « J'ai pas envie de le déranger ». Ouais... Flemme empathique :)\n\n\n\n\n### La question à 10 sous ###\n\nVous exposez une question à quelqu'un dont vous n'avez pas la réponse. On sait jamais des fois qu'il sache. Au delà de ça, vous savez où trouver la réponse, mais il faut se déplacer quelque part par exemple pour l'obtenir, ou sortir son portable et —avec le réseau du coin— mettre 5 minutes à trouver une réponse qui sera, vu la nature particulière de la question, incomplète. Votre interlocuteur vous dit que justement il va à cet endroit demain pour une raison X, qu'ils ont surement la réponse et vous dit : « Je leur poserai la question pour toi, si tu veux ? ». **Et là... probablement frappé par la Flemme empathique,** vous répondez : « Non, c'est pas grave ne t'embête pas ». Quoi ?! Mais c'était qu'une simple question à poser.\u003c/p\u003e\n\n\n\n\n## Palier au problème ##\n\nEn fait on pourrait se dire que c'est dramatique... mais pas vraiment. Dans notre premier cas le collègue à juste à répondre : « Non, mais ça ne me dérange pas, sinon je n'aurai pas demandé » pour obtenir aisément un « Bon, puisque tu insistes ! » et dans notre second cas à dire « Je demanderai quand même car la réponse m'intéresse aussi ».\n\n_Si vous repérez des personnes souffrant de Flemme empathique : **il est de votre devoir d'insister** !_\n\n\n\n\n\n## Attention aux faux-positif ##\n\nIl ne faut cependant pas négliger le cas du faux-positif. Et oui, il est aussi possible que dans notre premier cas la personne ai répondu « Non merci, ça ira » seulement parce qu'elle avait presque corrigé l'erreur dans son algorithme et que son collègue vient de lui faire perdre 10 minutes en la coupant. On pourrait alors qualifier ça de « Psycopathie refoulé ». C'est vrai, il n'aura pourtant pas tué son collègue !","dates":{"published":{"$date":"2013-04-26T09:00:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"La \u003cspan\u003eFlemme\u003c/span\u003e empathique ou Flemme par \u003cspan\u003eempathie\u003c/span\u003e","urn":"la-flemme-empathique-ou-flemme-par-empathie"}
{"_id":{"$oid":"530f5f63620731fe86cb71aa"},"cache":{"comment":{"number":1}},"categories":[{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"Je vous propose à travers cet article de découvrir [Node.js] pour le système d'exploitation Windows 7,  8 et 10. [Node.js] est multi-plateforme et s'exécute tout aussi bien sous Unix que sous Mac. Mais QUID de Windows ? Vous allez voir que c'est assez trivial même si certains modules dépendent de quelques logiciels externes pour compiler ([python27](https://www.python.org/download/releases/2.7/), [msvc2013](https://www.microsoft.com/fr-fr/download/details.aspx?id=40784)). Assez rapidement donc, il vous sera possible de développer des sites web et applications web très interactives et avec une grande vélocité d'exécution le tout avec JavaScript !\n\n\n\n\n\n## Télécharger Node.js pour Windows ##\n\nJe passe les [présentations qui ont déjà été faites dans cet article](./developper-en-javascript-cote-serveur-avec-nodejs/ \"Développer en JavaScript côté serveur avec Node.js\") et ajoute que même si cet article a été réalisé avec des tests parallèles sous Seven, je ne vois pas pourquoi il ne serait pas valable pour Windows 8 ou 10.\n\n\n\n### Le site officiel de Node.js ###\n\nSite du projet : [nodejs.org](https://nodejs.org/ \"Site du projet Node.js\").\n\n\u003cdiv class=\"center\"\u003e\n\u0009\u003ca href=\"https://nodejs.org/en/\" title=\"Logo Node.js en HD\"\u003e\u003cimg src=\"https://nodejs.org/static/images/logo.svg\" alt=\"Le logo Node.js\" width=\"1024\" height=\"768\" style=\"max-width: 75%;height: auto;\" /\u003e\u003c/a\u003e\n\u003c/div\u003e\n\nAvant de nous jeter sur la partie « Downloads », jetons un œil aux parties du site que je ne vais pas détailler plus dans cet article. Vous pourrez apprendre à l'accueil (\u003ca href=\"https://nodejs.org/en/\" title=\"node.js\"\u003eHome\u003c/a\u003e) que Microsoft, Google, Yahoo!, LinkedIn, Ebay... et bien d'autres utilisent d'ores et déjà Node.js, découvrir le projet dans \u003ca href=\"https://nodejs.org/about/\" title=\"node.js\"\u003eAbout\u003c/a\u003e et le suivre avec le \u003ca href=\"http://blog.nodejs.org/\" title=\"node.js\"\u003eNode.js Blog\u003c/a\u003e ainsi que la \u003ca href=\"https://nodejs.org/community/\" title=\"node.js\"\u003eCommunity\u003c/a\u003e. Vous pourrez même trouver du travail dans la partie \u003ca href=\"http://jobs.nodejs.org/a/jobs/list/\" title=\"node.js\"\u003eJobs\u003c/a\u003e. Pour finir un jolie fond d'écran traine sur la page \u003ca href=\"https://nodejs.org/en/about/resources/\" title=\"node.js\"\u003eLogos\u003c/a\u003e.\n\n\n\n### Intaller node et npm ###\n\nDepuis l'accueil, vous devriez voir un bouton « Download for Windows (x64) » (si vous êtes sur Windows). Cliquez dessus pour télécharger automatiquement le zip le plus adapté à votre système. Vous pouvez également choisir vous même votre zip dans \u003ca href=\"https://nodejs.org/en/download/\" title=\"node.js\"\u003eDownload\u003c/a\u003e pour obtenir au choix le *Windows Installer (.msi)* et/ou le *Windows Binary (.exe)* en 32/64 bit.\u003c/p\u003e\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eListe des composants de l'installeur Node.js\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/node-install.png\" alt=\"Liste des composants de l'installeur Node.js\" width=\"495\" height=\"362\" style=\"max-width: 75.2%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nExécutez votre fichier, acceptez la licence, déposez-le dans \"Program files\" et ce package va vous installer :\n\n- **L'exécuteur node.js** : le programme permettant d'exécuter des fichiers .js (comme php.exe le ferait avec des .php).\n- **Le module npm (Node Package Manager)** : un gestionnaire de modules qui va vous permettre simplement d'ajouter et retirer les librairies dont vous aurez besoin pour vos applications (pas de surplus, seulement le nécessaire donc).\n- **Un raccourci vers la documentation en ligne**.\n- **Des variables d'environnements** : Ainsi vous pourrez exécuter les commandes `node` et `npm` dans votre invité de commande.\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eDossier de Node.js après installation\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/node-folder.png\" alt=\"Dossier de Node.js après installation\" width=\"650\" height=\"274\" style=\"min-width: 98.7%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nQuand l'installeur aura fini vous aurez un joli dossier d'environ 12Mo contenant entre autre node.js et npm.cmd qui seront appelables depuis n'importe quel dossier avec les commandes `node` et `npm`.\n\n\n\n\n\n## Un Hello world en Node.js ##\n\nJuste après l'installation, tentons notre premier « Hello World ». Tout d'abord, définissez vous un endroit ou installer vos projets [Node.js]. Pour ma part j'ai décidé de placer tous mes projets dans `C:\\nodejs`. Je vais donc y _**créer un fichier**_ `hello-world.js` accessible à cette adresse sur mon poste : `C:\\nodejs\\hello-world.js`. Rien ne vous empêche de placer ça dans un autre dossier, sur un autre disque dur, dans le workspace de votre IDE ou le repository de votre logiciel de gestion de code source et version.\n\n\n\n### Édition de hello-world.js ###\n\nFaisons la chose la plus simple possible, affichons un message dans une console d'exécution. Ouvrez le fichier `C:\\nodejs\\hello-world.js` que vous venez de créer avec \u003ca href=\"http://notepad-plus-plus.org/fr/\" title=\"Site de Nodepad++\"\u003eNodepad++\u003c/a\u003e ou \u003ca href=\"http://www.sublimetext.com/3\" title=\"Site de Sublime Text 3\"\u003eSublime Text 3\u003c/a\u003e (ou l'IDE de votre choix) et copier/coller à l'intérieur le code suivant :\n\n```js\nconsole.log(\"Hello World !\"); // Va écrire dans la console \"Hello World !\".\n\nglobal.console.log(\"Hello World !\"); // Va écrire dans la console \"Hello World !\".\n\nwindow.console.log(\"Hello World !\"); // Va faire planter le programme.\n```\n\npuis sauvegardé le.\n\n\n\n### Exécution de script avec node.exe ###\n\nIl y a plusieurs façons d'appeler du code JavaScript avec le programme node.exe.\n\nTout d'abord :\n\n- appuyez/cliquez sur la touche/bouton « Logo Windows » ce qui ouvrira votre « Menu Démarrer » ou vos tuiles,\n- écrivez directement `cmd` ici et cela se tapera dans une barre de recherche,\n- enfin, appuyez sur la touche « Entrer » pour ouvrir votre Console.\n\nEnsuite deux possibilités.\n\n#### Exécution en absolue ####\n\n- Écrivez `node C:\\nodejs\\hello-world.js` (dans la console) puis appuyez sur « Entrer » pour exécuter le script,\n- ou écrivez `node C:\\nodejs\\hello-world` (pas d'extension).\n\n#### Exécution en relatif ####\n\n- Écrivez `cd C:\\nodejs\\` puis appuyez sur « Entrer » pour vous rendre dans le dossier,\n- écrivez `node hello-world.js` puis appuyez sur « Entrer » pour exécuter le script,\n- ou `node hello-world` (pas d'extension).\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eRésultat d'exécution du fichier C:\\nodejs\\hello-world.js\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/hello-world-crash.png\" alt=\"Résultat d'exécution du fichier C:\\nodejs\\hello-world.js\" width=\"658\" height=\"302\" style=\"max-width: 100%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\n\n\n### L'équivalent de window est global ###\n\nNotre code plante et c'est normal ! Revenons sur le résultat obtenu (image ci-avant) et voyons se que l'on peut en déduire.\n\n- Les commandes `global.console.log` et `console.log` sont identiques. La base global est donc implicite comme `window.document` et `document` dans les navigateurs.\n- La pile d'exécution nous indique qu'au lancement de node.exe, avant même le traitement du fichier en paramètre, il y a :\n - Lecture du fichier `node.js` et exécution de `startup`.\n - Lecture du fichier `module.js` exécutant la fonction `Function.Module.runMain` exécutant la fonction `Function.Module._load` exécutant la fonction `Module.load` exécutant la fonction `Object.Module._extensions..js` exécutant la fonction `Module._compile`.\nOr, il n'y a pas de fichier node.js ou module.js dans le dossier de node.exe. Ce traitement est donc réalisé par le cœur de Node.js, node.exe.\n\n- `window` n'est pas défini. Il est de type Undefined et renvoi \"undefined\" puisqu'il fait planter le script. `global` remplace donc `window` en Node.js.\n\n\n\n\n\n## La documentation, les modules et le principe ##\n\nEffectivement, notre exemple précédent est loin de servir à quelque chose et même loin de nous permettre de développer un site Internet (mais pas si loin que ça tout de même). Faisons quelque chose de plus conséquent.\n\nEt si nous utilisions un bout de code qui va nous permettre de parcourir l'intégralité d'une arborescence de fichier/dossier de manière asynchrone et de lever des événements à chaque fois que quelque chose est parcouru.\n\nNous allons manipuler le contenu d'un dossier avec le code ci-après. Pour le moment, nous allons nous attacher à la syntaxe du langage.\n\n```\n// Déclaration de plusieurs variables.\nvar\n\u0009fs = require(\"fs\"), // Instanciation du module natif \"File System\" dans la variable \"fs\".\n\u0009walk = require(\"walk\"), // Instanciation du module communautaire \"node-walk\" dans la variable \"walk\".\n\u0009files = [], // Instanciation d'un tableau vide dans la variable \"files\".\n\u0009targetFolder = process.argv[2] || \"./\", // Instanciation d'une variable avec \"process.argv[2]\". Si process.argv[2] est de type Undefined alors il renvoi \"false\" et targetFolder vaut \"./\";.\n\u0009\n\u0009// Appel à la fonction \"walk\" du module \"walk\".\n\u0009walker = walk.walk(\n\u0009\u0009targetFolder, // Passage d'une \"String\" en premier paramètre.\n\u0009\u0009{ followLinks: false } // Passage d'un \"Objet\" JSON en second paramètre.\n\u0009);\n\u0009\n\u0009/* Equivalant du code ci-dessus\n\u0009var walk = require(\"walk\");\n\u0009var files = [];\n\u0009var walker = walk.wa....;\n\u0009mais moins performant. */\n\n// Appel à la fonction \"on\" du module \"walk\".\nwalker.on(\"file\", function(root, stat, next) { // \"String\" en premier paramètre et \"Function\" en second paramettre.\n    // Ajout d'une entrée dans le tableau \"files\".\n    files.push(root + stat.name);\n\u0009\n\u0009// Exécution du paramètre \"next\" de type \"Function\".\n    next();\n});\n\n/* En javascript, les paramètres peuvent être également des fonctions !\nLa fonction de walk \"on\" est probablement défini ainsi : \nfunction on(String, Function) {\n\u0009var \n\u0009\u0009root = String,\n\u0009\u0009stat = ** infos sur le fichier **\n\u0009\u0009next = function () { ** du code ** }\n\n\u0009Function(root, stat, next);\n}\n*/\n\n// Appel à la fonction \"end\" du module \"on\".\nwalker.on(\"end\", function() {\n\u0009// On affiche le contenu du tableau dans la console Windows.\n    console.log(files);\n});\n\n// Affichage de \"Traitement en cours...\" dans l'invité de commande Windows (la console).\nconsole.log(\"Traitement en cours...\");\n```\n\nLe code ci-dessus permet d'afficher tous les fichiers d'un dossier. Si vous êtes familier avec JavaScript il ne vous aura pas échappé que la fonction `require` sort d'un chapeau magique. C'est une fonction spécifique à [Node.js] qui permet d'inclure des fonctions en provenance d'un autre fichier (en l’occurrence du cœur de Node.js pour « File System » et du module `node-walk` pour « walk ».\n\n\n\n### Compiler les modules qui ne sont pas en JavaScript sous Windows ###\n\nSi vous souhaiter pouvoir utiliser l'intégralité des modules de [Node.js] il va falloir être en mesure de tous les compiler. Effectivement, la majorité des modules sont écrit en JavaScript et [Node.js] sait très bien les utiliser. Mais pour ceux qui sont écrit dans un autre langage (pas en JavaScript), voici les deux logiciels qui peuvent couvrir tous les cas de figure : [installer Python et Microsoft Visual Studio](https://blog.lesieur.name/installer-tous-les-modules-npm-sous-windows/).\n\n\n### La documentation de Node.js et de ses modules ###\n\nLe cœur de [Node.js] contient les modules vitaux lui permettant d'écrire dans des fichiers. C'est au développeur, en fonction de ses besoins, de « télécharger » les modules complémentaires qu'y vont lui permettre de réaliser ses développements.\u003c/p\u003e\n\n#### Documentation des modules natifs ####\n\nLa documentation des modules natifs de [Node.js] se trouve sur le site officiel dans la partie \u003ca href=\"https://nodejs.org/api/\" title=\"node.js\"\u003eDocumentation\u003c/a\u003e. Vous pourrez vous renseigner sur le fonctionnement des modules incontournables comme « \u003ca href=\"https://nodejs.org/api/fs.html\" title=\"node.js\"\u003eFile System\u003c/a\u003e » ou encore « \u003ca href=\"https://nodejs.org/api/http.html\" title=\"node.js\"\u003ehttp\u003c/a\u003e » (pour faire des serveurs web). Vous aurez également des information sur notre fameuse fonction \u003ca href=\"https://nodejs.org/api/all.html#all_require\" title=\"node.js\"\u003erequire\u003c/a\u003e\u003c/p\u003e\n\n#### Documentation des modules tiers ####\n\nTout un chacun peut développer son propre module Node.js et le mettre à disposition des autres utilisateurs via \u003ca href=\"https://www.github.com/\" title=\"GitHub\"\u003eGitHub\u003c/a\u003e et à disposition en téléchargement via le NPM de Node.js en l'ajoutant au registre de la page \u003ca href=\"https://npmjs.org/\" title=\"node.js\"\u003eNPM Registry\u003c/a\u003e.\n\n\u003e Par exemple, pour ma part, je développe [NodeAtlas](https://www.lesieur.name/node-atlas/) qui est un module permettant de créer rapidement de petit site web MVC2, de créer des gros sites interactif ou encore gérer des maquettes HTML.\n- J'héberge les fichiers de développement [Haeresis/NodeAtlas](https://github.com/Haeresis/NodeAtlas/) sur [GitHub](https://www.github.com/),\n- et vous pouvez [télécharger via npm le module node-atlas](https://www.npmjs.org/package/node-atlas).\n\nC'est également le cas du module `node-walk` qui ajoute la fonction walk équivalente à la fonction du même nom en Python mais pour [Node.js]. Ce module est utilisé dans le code précédent et développé par l'utilisateur *coolaj86*. La documentation de `node-walk` se trouve donc sur \u003ca href=\"https://github.com/coolaj86/node-walk\" title=\"Page de node-walk\"\u003ela page de son projet GitHub\u003c/a\u003e et \u003ca href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\"\u003eson module est référencé\u003c/a\u003e dans le registre NPM sur \u003ca href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\"\u003ecette page\u003c/a\u003e.\n\nEn se référent à sa documentation, nous sommes à même de comprendre le code précédent :\n\n```js\nvar\n\u0009fs = require(\"fs\"),\n\u0009walk = require(\"walk\"),\n\u0009files = [],\n\u0009// Récupération du premier paramètre derrière le nom du fichier, sinon dossier d'exécution du fichier.\n\u0009targetFolder = process.argv[2] || \"./\",\n\u0009\n\u0009// La fonction walk permet de lire de manière asynchrone le contenu d'un fichier mais ne renvoi rien. \n\u0009// Le code du script va continué à être lu pendant que walk va faire son boulot.\n\u0009walker = walk.walk(targetFolder, { followLinks: false }); // L'option dit qu'on ne va pas lire les fichiers derrière les raccourcis de dossier.\n\u0009\n// La fonction \"on\" avec en premier paramètre \"file\" est exécuté quand la fonction assynchrone précédente \"walk\" lit un fichier.\nwalker.on(\"file\", function(root, stat, next) {\n\u0009//... et le paramètre \"root\" contient le chemin absolue du fichier.\n\u0009//... et le paramètre \"stat\" contient diverses informations comme le \"name\" du fichier.\n\u0009//... et le paramètre \"next\" est en réalité une function.\n    files.push(root + stat.name);\n\u0009\n\u0009// Différent traitement avec fs (suppression, copy, etc...) sont possible.\n\u0009\n\u0009// On valide les actions.\n    next();\n});\n\n// La fonction \"on\" avec en premier paramètre \"end\" est exécuté quand tout le contenu du répertoire à été lu.\nwalker.on(\"end\", function() {\n    console.log(files);\n});\n\n// Va être lu immédiatement après l'exécution de la fonction \"walk\".\n// Si votre walk lit le dossier \"C:\\\", cela preut prendre du temps de tout lire. Mais il ne sera pas bloqué car les fonctions dans \"on\" sont appelés de façon assynchrone.\nconsole.log(\"Traitement en cours...\");\n```\n\n\n\n### npm et le téléchargement de modules ###\n\n#### Téléchargement depuis le registre ####\n\nCopiez-collez le code précédent dans un fichier appelé `list-file.js` (par exemple dans `C:\\nodejs\\routine\\list-file.js`) et exécutez-le.\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eRésultat d'exécution du fichier C:\\nodejs\\routine\\list-file.js\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/list-file-crash.png\" alt=\"Résultat d'exécution du fichier C:\\nodejs\\routine\\list-file.js\" width=\"658\" height=\"302\" style=\"max-width: 100%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nNotre code plante encore et c'est encore normal ! Revenons sur le résultat obtenu (image ci-avant) et voyons ce que l'on peut en déduire.\n\n- L'exécution de ce script est identique au précédent, mais la pile ne s'affiche pas complètement (manque startup et node.js).\n- Quand la fonction `require` est rencontrée, à l'instar de `startup` c'est `require` qui prend la main exécutant la fonction `Function.Module._load` exécutant la fonction `Function.Module._resolveFilename`.\n- Si un module n'a pas été préalablement téléchargé, ça coince (logique).\n\n*Note : les scripts qui plantent arrête le programme [Node.js]. Si votre script ne plante pas, et que vous souhaitez arrêter le programme : au lieu de fermer la console, appuyez simultanément sur « CTRL + C ».*\n\nNous allons donc télécharger le module « node-walk » avec les lignes de commande suivante :\n\n- `cd C:\\nodejs\\routine\\`\n- `npm install walk`\n\n\u003cfigure\u003e\n\u0009\u003cfigcaption\u003eTéléchargement du module node-walk avec npm\u003c/figcaption\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/npm-install-walk.png\" alt=\"Téléchargement du module node-walk avec npm\" width=\"658\" height=\"302\" style=\"min-width: 100%;height: auto;\" /\u003e\n\u003c/figure\u003e\n\nVous constaterez qu'un dossier « node_modules » est apparu. Les futurs modules que vous téléchargerez via `npm` depuis la racine `C:\\nodejs\\routine\\` seront automatiquement ajoutés dans ce dossier. Les fichiers dont le fichier appelant est exécuté dans cette racine pourront tous bénéficier des modules via la commande « require » directement avec le nom du module en paramètre. Pour utiliser le module d'un autre dossier « node_modules », il ne faudra plus passer le nom du module à `require` mais le chemin d'accès. Pour finir si vous utilisez la commande `npm install` depuis un autre dossier, les modules téléchargés se mettront dans le dossier « node_modules » de cet endroit (ou le créera s'il n'existe pas).\n\nVotre dossier « node_modules » contient le module « walk ». Vous constatez que « walk » lui-même contient un dossier « node_modules » avec le module « forEachAsync » ! C'est une dépendance du module : « walk » à besoin de « forEachAsync » pour fonctionner. Idem dans « forEachAsync » il y a encore un dossier « node_modules » contenant « sequence ».\n\n*Note : vous pouvez également passer l'option `-g` soit `npm install -g walk` qui installera `walk` dans le node_modules global. Vos projets n'auront alors pas besoin d'avoir `walk` dans leur dossier « node_modules » pour fonctionner.*\n\nVous pouvez de nouveau exécuter votre script et constater que \"Traitement en cours...\" s'écrit avant l'affichage des fichiers alors que c'est pourtant la dernière instruction du fichier. Là est le pouvoir de l'asynchrone !\n\n*Note : vous pouvez passer des paramètres à vos scripts avec `process.args[x]` x représentant le xième élément séparé par un espace dans la chaine de commande (`process.args[0]` étant donc le mot `node`). Dans notre exemple `node list-file C:\\` affichera les fichiers de tout le disque dure !\u003c/p\u003e\n\n#### Téléchargement depuis le site du module ####\n\nDans notre exemple précédent nous aurions tout aussi bien pu créer nous-même le dossier « node_modules » et y placer le module **node-walk** à la main en \u003ca href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\"\u003el'ayant téléchargé depuis le site GitHub\u003c/a\u003e.\u003c/p\u003e\n\nSi vous voulez essayer, effacez votre dossier « walk » de « node_modules » et c'est parti !\n\n- Une fois sur \u003ca href=\"https://npmjs.org/package/walk\" title=\"Module node-walk\"\u003ela page du projet\u003c/a\u003e, cliquez sur « ZIP » pour télécharger l'archive.\n- Placer le dossier « node-walk-master » dans « node_modules » et renommez-le en « walk ».\n- Dans votre nouveau dossier « walk », supprimez tout sauf le dossier « lib ».\n- Remontez le contenu du dossier « lib » dans « walk ». Vous pouvez maintenant supprimer le dossier « lib » qui est vide.\n- Exécutez de nouveau `list-file` et vous aurez l'erreur « Error: cannot find module 'forEachAsync' » (souvenez vous, « walk » dépend de « forEachAsync »).\n- Rendez-vous sur le \u003ca href=\"https://npmjs.org/\" title=\"node.js\"\u003eNPM registry\u003c/a\u003e et cherchez « forEachAsync » dans « Search Packages ». Cliquez dessus dans la liste et repérez la ligne « Dependencies » : vous voyez bien que ce module est dépendant de\u0009« sequence ». Repérez ensuite « Homepage » : cliquez sur le lien associé et nous revoilà sur Git. Cliquez de nouveau sur « ZIP » pour télécharger l'archive. Nous trouvons dedans, entre autre, les dossiers « forEachAsync » et « sequence » ! Ça tombe bien.\n- Créez dans « walk » un dossier « node_modules » pour y placer « forEachAsync », puis dans « forEachAsync » vous créez de nouveau un dossier « node_modules » pour y placer « sequence ».\n- Exécutez de nouveau `list-file` et voilà, ça marche !\n\nCette technique à vite ses limites pour les gros modules.\n\n\n\n\n\n## Node.js pour créer des routines ##\n\nPour clore cet article je résumerais en mettant en avant le fait que sans même parler de site Internet, [Node.js] est parfais pour créer des fichiers de maintenance pour effacer des fichiers temporaires, exécuter des actions, etc... comme le ferait des fichiers .php avec php.exe. Il est tout à fait possible de mettre en place des tâches planifiées pour vider les fichiers de plus de un jour dans le répertoire temporaire des fichiers uploadés de votre site par exemple !\u003c/p\u003e\n\nBon, maintenant qu'on voit à peut-prêt l'outil pour une utilisation standard et simple, [si on faisait des sites web avec le module NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) !\n\n  [Node.js]: https://nodejs.org/","dates":{"published":{"$date":"2013-04-27T09:00:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"div.center {\n    margin-top: 16px;\n    border-radius: 3px;\n    text-align: center;\n    background-color: #363636;\n}","title":"\u003cspan\u003eInstaller\u003c/span\u003e et \u003cspan\u003eutiliser\u003c/span\u003e \u003cspan\u003eNode.js\u003c/span\u003e sous \u003cspan\u003eWindows\u003c/span\u003e","urn":"installer-et-utiliser-nodejs-sous-windows","description":"Je vous propose à travers cet article de découvrir Node.js pour le système d'exploitation Windows 7,  8 et 10.","image":"https://nodejs.org/static/images/logo.svg"}
{"_id":{"$oid":"530f5f63620731fe86cb71ae"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cc"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48cd"}],"content":"Mais le JavaScript n'est pas typé ? Mais si, il y en a 13 ! Ah non, il y en 7... Bah il me semble qu'il y a `Object`, `Function`, `Array`, `Math`, `String`, `Number`, `Boolean`. Et tu fais quoi de `RegExp` ? Attends, `Function` c'est pas un type, c'est un sous type mais `Null` c'est un type... ? Ho là là...\n\nSi vous faites du jQuery à vos heures ou même pas mal de JavaScript sur vos sites web, il est temps d'apprendre tout ce qu'il y a à savoir sur le typage implicite de JavaScript, car oui : contrairement à ce que certain vous ont dit, JavaScript manipule des éléments typés, on peut même dire que le JavaScript est [faiblement typé et dynamiquement typé](https://fr.wikipedia.org/wiki/Typage_fort#Conditions) si vous voulez tout savoir. Les fonctions (et les instances) `Object`, `Function`, `Array`, `Date`, `String`, `Number`, `Boolean`, `RegExp`, `Error` ou encore les objets globaux, `Math` et `JSON` : tous sont d'un seul et même type, le type `Object`. Pourtant `String`, `Number` et `Boolean` sont eux-mêmes un type à par entière en plus des deux petits spéciaux les type `Null` et `Undefined`.\n\n\nSi vous deviez retenir quelques trucs rapidement à propos du JavaScript et des types ça serait que :\n\n- Le JavaScript n'a que 6 types : **`Object`, `Number`, `String`, `Boolean`, `Null` et `Undefined`**.\n- À part le type `Object` : les **5 autres types** sont dit **des types primitifs**.\n- Les types **`Null` et `Undefined`** sont **des types spéciaux**.\n- La **`Function`** n'est qu'un type `Object` **qui peut être exécuté et instancié** avec « new ».\n- **`Array`, `Date` et `RegExp`** sont des **types Object instanciables** (Function).\n- **`Math`** et **`JSON`** sont simplement un type Object (ne s'instancie pas avec « new »).\n- Bien que **`Number`, `String` et `Boolean`** soient des types primitifs, il existe un **équivalent de type Object** instanciable (Function) **pour chacun d'eux** (à ne pas confondre).\n\n\u003cfigure\u003e\n\u0009\u003cimg class=\"openable\" src=\"media/images/upload/6-types-javascript-objet-primitif.png\" alt=\"Les 6 types en JavaScript\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\n\u0009\u003cfigcaption\u003eLes 6 types en JavaScript\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nJe vais dans un premier temps vous proposer la traduction d'un article de Dmitry Baranovskiy —développeur JavaScript expérimenté— qui explique très bien les types en JavaScript. Je lèverai le doute sur le fameux sixième type (Null ou Function). Et je vous fournirai des lignes de code test pour mettre en évidence ce qui a été expliqué.\n\nDans cet article les propos entre [ ... ] sont les miens ainsi que ceux qui ne sont pas entre « ... ».\n\nPour finir, bien que l'auteur vous encourage à lire les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm) (pour les initiés), je vous encourage pour ma part à lire [JavaScript Eloquent](http://eloquentjavascript.net/) ([disponible en français ici](http://fr.eloquentjavascript.net/)).\n\n\n\n\n\n## Témoignage de Dmitry Baranovskiy, développeur JavaScript ##\n\n[Le billet original en anglais est sur le blogs d'Adobe (editeur de Flash)](http://blogs.adobe.com/webplatform/2012/08/27/javascript-types/)\n\n« J'aime le JavaScript. C'est un langage alliant puissance et flexibilité, mais à condition de bien savoir l'utiliser. Une fois que vous maîtrisez le langage JavaScript, vous pouvez construire pratiquement n'importe quoi, et cela vraiment rapidement et de manière interactive. »\n\n« Si vous pensez que le JavaScript est simple ou primitif, alors vous êtes tombé dans un piège. Vous constaterez qu'il y a pas mal de monde dans ce piège. Les soi-disant développeurs JavaScript du dimanche vous diront qu'un autre langage “X” est supérieur. Ils peuvent même vous dire que vous seriez mieux avec un système qui traduit la langue “X” en JavaScript. Pour sortir du piège et maîtriser JavaScript cela exige un effort et du dévouement. Je le sais parce que, en 1997, j'en étais là. »\n\n« Depuis, j'ai appris en long, en large et en travers le JavaScript moi-même en étudiant les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm). Vous pouvez apprendre l'intégralité du langage de cette manière. En tout cas, si votre intitulé de poste comprend les mots “développeur JavaScript”, vous devriez. »\u003c/p\u003e\n\n\n\n\n### Trouverez vous la réponse ? ###\n\n« Dans ce billet je vais tenter de présenter un petit extrait de programme JavaScript et vous demander de prédire ce qu'il va renvoyer. Si vous êtes un développeur JavaScript, cela sera un jeu d'enfant pour vous. Si vous êtes toujours en train d'apprendre le langage, vous allez avoir quelques soucis et j'espère que vous lirez les explications suivantes. »\n\n« Le code JavaScript suivant va afficher une fenêtre d'alerte. Que va contenir cette fenêtre ? »\n\n```js\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n« Allez à la fin de cet article pour trouver la réponse. » _[En fait allez plutôt à la fin de cette partie](./les-types-en-javascript-pour-tout-savoir/#demo)._ « Et ci-dessous, je vais laisser une explication pour vous démontrer comment JavaScript arrive à ce résultat. »\n\n\n\n\n### Les six types qui existent en JavaScript ###\n\n« Il n'y a que 6 [types en JavaScript](http://ecma-international.org/ecma-262/5.1/#sec-8) : \n[Object](http://ecma-international.org/ecma-262/5.1/#sec-8.6), \n[Number](http://ecma-international.org/ecma-262/5.1/#sec-8.5), \n[String](http://ecma-international.org/ecma-262/5.1/#sec-8.4), \n[Boolean](http://ecma-international.org/ecma-262/5.1/#sec-8.3), \n[Null](http://ecma-international.org/ecma-262/5.1/#sec-8.2), et \n[Undefined](http://ecma-international.org/ecma-262/5.1/#sec-8.1). »\u003c/p\u003e\n\n- « **Object** inclue les tableaux _[Array]_, les fonctions _[Function]_ et des objets ordinaires _[Object, Date, RegExp, Math, …]_. »\n- « **Number** peut être un entier ou un nombre à virgule ou même les valeurs spécifiques _NaN_ et _Infinity_. »\n- « **String** inclue la chaîne vide _\"\"_. » _Ainsi que toute chaîne de caractère._\n- « **Booleans** n'a que deux uniques valeurs : _true_ et _false_. »\n\n« Les deux derniers types primitifs sont un peu déroutants : »\n\n- « La seule valeur du type **Null** est _null_. »\n- « La seule valeur du type **Undefined** est _undefined_. »\n\n_Note : il est important de garder à l'esprit que les types primitifs Number _(0, -10, NaN...)_, String _(\"\", \"coucou\"...)_ et Bool _(true, false)_ ont chacun leur équivalent en Object. Je parle d'équivalence car `(new String(\"\"))` n'est pas la même chose que `\"\"`, le premier est de type `Object` alors que le second de type `String`. Cela s'éclairera peut-être plus loin. Pour finir il est bon de rappeler que les valeurs _0, -10, NaN, \"\", \"coucou\", function() { return; }, { bla: \"\", blu,\"\" }_... sont appelés des expressions ou (opérandes) et _+, -, /, ==, !==_... sont appelés des opérateurs.\n\n« Tous les types à l'exception de Object sont également appelés “primitif”. Le type d'une variable JavaScript n'est pas déclaré explicitement, il est défini par le moteur d'exécution JavaScript. Dans notre exemple, le type de la variable “five” est Number parce que nous lui avons assigné un nombre entier. »\n\n« Exactement comme d'autres langages de programmation, JavaScript va implicitement convertir le type d'une valeur en fonction de l'opérateur qui est appliquée à la valeur. Et à la différence d'autres langages de programmation, JavaScript [insiste lourdement là dessus](http://ecma-international.org/ecma-262/5.1/#sec-9). Par exemple le résultat de `\"5\"` - `\"3\"` est le nombre `2` parce que l'opérateur moins demande la conversion des expressions [\"5\" et \"3\"] en Number. Si un opérateur n'arrive pas à convertir [(trouver une équivalence en Number)] l'un des membres, c'est `NaN` ([Not a Number](http://ecma-international.org/ecma-262/5.1/#sec-4.3.23)) qui est utilisé à la place. Par exemple `\"5\"` - `\"Fred\"` est implicitement converti en `5` - `Nan` ce qui donne `NaN`. »\n\n« L'ensemble complet des règles pour les conversions de types implicites n'est pas compliqué tant que vous savez quel type chaque opérateur exige pour les expressions qu'ils manipulent. »\n\n\n\n\n### Connaître et comprendre les règles de conversion implicite ###\n\n« Les Object et String suivent la règle suivante : [toute valeur doit être convertie en type primitif](http://ecma-international.org/ecma-262/5.1/#sec-9.1) ». »\n\n- Si le type d'une expression doit être [converti en] Number [par l'opérateur], cela signifie que le moteur JavaScript va appeler la méthode `valueOf()` [si l'expression n'est pas de type primitif, donc un type Object] et si le résultat [de la conversion] n'est pas un type primitif, il est converti en type String par la méthode `toString()`. »\n- Si le type de l'opérande doit être String, cela signifie que le moteur JavaScript commence d'abord par appeler la méthode `toString()` et si le résultat n'est pas un type primitif, il est converti avec la méthode `valueOf()`.\n\n« Dans chacun des cas, si le résultat obtenu au final n'est pas un type primitif. une exception est levée. »\n\nVoyons plutôt les conversions :\n\nChaque opérateur demandera la conversion de l'expression en un type primitif bien précis pour fonctionner (\"if (condition)\" demandera la conversion en un type Boolean de \"condition\", \"nombre * 3\" demandera la conversion en un type Number de \"nombre\", etc.).\n\n_Note : L'opérateur `+` est « spécial ». La majorité des opérateurs imposent un type primitif à leur expression pour effectuer leur opération mais pas `+` qui lui, peut imposer soit des types String (concaténation), soit des types Number (addition). La condition est que si au moins une des expressions est de type String initialement, l'opérateur va demander des types String, s'il n'y a pas un seul type String initialement, l'opérateur va réclamer des types Number. Ce n'est pas le seul opérateur « spécial », par exemple l'opérateur `==` est très complexe dans sa réclamation de conversion d'expression.\n\n\n\n#### L'expression doit être transformée en type Number ####\n\n« Si le type de l'expression doit être `Number`, et que son type actuel est : »\n\n- un **Number** : aucune conversion.\n- « un **Object** : la valeur est convertie en un type primitif et si le résultat n'est pas un Number alors l'une des conversions suivantes [les 4 suivantes de cette liste] est appliquée. »\n- « un _String_ : la chaîne est convertie en un nombre conformément aux règles habituelles en JavaScript. » NaN dans la majorité des cas.\n- « un **Boolean** : 1 si la valeur est true, sinon 0. »\n- « un **Null** : 0. »\n- « un **Undefined** : NaN »\n\n\n\n#### L'expression doit être transformée en type String ####\n\n« Si le type de l'expression doit être `String`, et que son type actuel est : »\n\n- un **String** : aucune conversion.\n- « un **Object** : la valeur est convertie en un type primitif et si le résultat n'est pas une chaîne de caractères alors l'une des conversions suivantes est appliquée. »\n- « un **Number** : le nombre sous forme de chaîne, par exemple \"123\" ou \"12.34\". » ou \"NaN\".\n- « un **Boolean** : \"true\" or \"false\". »\n- « un **Null** : \"null\". »\n- « un **Undefined** : \"undefined\". »\n\n\n\n#### L'expression doit être transformée en type Boolean ###\n\n« Si le type de l'expression doit être `Boolean`, et que son type actuel est : »\n\n- un **Boolean** : aucune conversion.\n- « un **Object** : true. »\n- « un **Number** : false si la valeur est zéro [ou NaN], sinon true [même pour Infinity]. »\n- « un **String** : false si la valeur est une chaîne vide, sinon true. »\n- « un **Null** : false. »\n- « un **Undefined** : false. »\n\n_Note : méfier vous ! Regardez l'exemple ci-dessous._\n\n```js\n// A première vue, si on ne cerne pas la différence entre \n// le type String (type primitif) et l'objet String (type Object),\n// et bien on peut penser que ces deux lignes sont équivalentes.\nvar primiveString = \"\";\nvar objectString = new String(\"\");\n\n// Mais la première est un type String.\nif (primiveString) {\n    console.log(\"true\");\n} else {\n    console.log(\"false\"); // On passe ici !\n}\n// Et la conversion en Bool d'un String vide renvoi \"false\".\n\n// Quant à la deuxième, elle est de type Object.\nif (objectString) {\n    console.log(\"true\"); // On passe ici !\n} else {\n    console.log(\"false\");\n}\n// Et la conversion en Bool d'un Object renvoi \"true\" quoi qu'il arrive !\n\n// Mais par contre...\nif (objectString.toString()) {\n    console.log(\"true\");\n} else {\n    console.log(\"false\"); // On passe ici\n}\n//...avec toString(), on renvoi bien \"false\".\n\n// car \"\" et (new String(\"\")).toString() sont eux bien égaux.\n```\n\n\n\n### L'expression doit être transformée en type Object ###\n\n« Si le type de l'expression doit être `Object`, et que son type actuel est : »\n\n- un **Object** : aucune conversion.\n- « un **Number** : la valeur est injecté dans l'objet équivalent à Number : (new Number(value)). »\n- « un **String** : la valeur est injecté dans l'objet équivalent à String : (new String(value)). »\n- « un **Boolean** : la valeur est injecté dans l'objet équivalent à Boolean : (new Boolean(value)). »\n- « un **Null** : Une exception est levé. »\n- « un **Undefined** : Une exception est levé. »\n\n\n\n\n### Et la réponse est ! ###\n\n« Maintenant que les règles de conversions sont claires, retournons à notre exemple du début. »\n\n```js\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n« Comme expliqué avant, la première ligne crée une variable nommée `five` dont le type est `Number`. »\u003c/p\u003e\n\n« Quand l'[assesseur de propriété](http://ecma-international.org/ecma-262/5.1/#sec-11.2.1) lit `five`, il est converti en type `Object`. L'équivalent du type `Number` est le constructeur `Number` [(le type Object)] qui produit un objet [(puisque c'est une fonction)], et pas le type primitif `Number`. La seconde ligne de notre exemple est donc un équivalent [pour le moteur d'exécution dans ce cas précis] de : »\n\n```js\n(new Number(five)).three = 3;\n```\n\n« Comme vous pouvez le constater, aucune référence à une variable n'a été faite pour l'objet `new Number`. Après que cette expression ai été évaluée, la propriété `three` de l'objet `Number` est abandonnée. »\n\n« Le `five.three` de la troisième ligne créée un nouvel objet Number. Comme le nouvel objet n'a pas de propriété `three`, le type spéciale `undefined` (est [affectée et] retournée [et `five.three` est de type `Undefined`]. Le résultat est équivalent à : »\n\n```js\nalert(5 + undefined);\n```\n\n« L'opérateur d'addition converti chacune des deux expressions en type Number. Dans ce cas `undefined` est converti en `NaN` [et 5 reste de type Number] ce qui donne : »\n\n```js\n« alert(5 + NaN); »\n```\n\n\u003cp id=\"demo\"\u003e« Ce qui explique pourquoi la fenêtre d'erreur dans notre exemple affiche `NaN`. »\u003c/p\u003e\n\n\n\n\n### Pour aller plus loin dans la compréhension ###\n\nQue ce passerai t-il si le constructeur Number (le type Object (qui affiche 'function' testé par typeof)) possédait bel et bien une propriété nommée « three » ?\u003c/p\u003e\n\n```js\n// Ajoutons au constructeur de la fonction Number (le type Object) la propriété « three ».\nNumber.prototype.three = 0; // Initialisation la arbitrairement à 0.\n\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\nCette fois la sortie va t-elle être `NaN` ou `8` ?\n\nEt bien en vérité elle sera `5` (défini dans le prototype). Pourquoi ? La réponse est que `five.three` devient bien `(new Number(five)).three` et qu'une propriété three existant bien : à ce moment précis de l'exécution, `(new Number(five)).three` ne vaut plus `0` (prototype) mais bien `3` (assignation). Cependant, une fois l'instruction terminée : le `(new Number(five))` disparait et la valeur `3` de la propriété disparaît avec lui. Passé à l'instruction suivante, `five` est lu en tant que type Number et à `five.three` le moteur JavaScript recommence le processus précédent pour aboutir à `0` (pas d'assignation ici).\u003c/p\u003e\n\n\n**Obtenir 8 en forçant la valeur du prototype**\n\nPour obtenir en sortie `8` **sans toucher au code**, la seule solution est de définir le `Number.prototype.three` à `3`\n\n```js\nNumber.prototype.three = 3;\nvar five = 5;\nfive.three = 3;\nalert(five + five.three);\n```\n\n**Obtenir 8 par avec une variable intermédiaire**\n\nPour obtenir en sortie `8` on peut également utiliser une variable intermédiaire pour « conserver » l'état de transformation `(new Number(five)).three.`\n\n```\nNumber.prototype.three = 0;\nvar \n   five = 5,\n   temp = five.three = 3;\nalert(five + temp);\n```\n\n**Obtenir 8 par déclaration Object au lieu de Number**\n\nPour obtenir en sortie `8` on peut également initialiser directement un type Number à partir du constructeur Number.\n\n```js\nNumber.prototype.three = 0;\n\nvar five = new Number(5);\nfive.three = 3;\nalert(five + five.three);\n```\n\n**Obtenir 8 en Bonus**\n\nPour obtenir en sortie `8` on pouvait aussi faire....\n\n```js\nalert(8);\n```\n\n... okay je m'arrête là :) C'était juste, pour finir en vous disant que bien que les tests ci-avant sont « inutiles » : ils sont là uniquement pour vous montrer les différents mécanismes possibles et la richesse de ceux-ci comparés à d'autres langages plus strictes. Après « c'est bien » ou « c'est mal » ; c'est une autre histoire.\n\n\n\n\n\n## Function et Null sont dans un bâteau ##\n\nD'un côté, Dmitry Baranovskiy et moi-même affirmons que les 6 types en JavaScript sont :\n\n- Object, Number, String, Boolean, **Null** et **Undefined**.\n\nEt pourtant, vous pourrez lire, comme dans [JavaScript Eloquent](http://eloquentjavascript.net/) ([ici, ligne 4](http://eloquentjavascript.net/chapter2.html)) que les 6 types de JavaScript sont :\n\n- Object, Number, String, Boolean, **Function** et **Undefined**.\n\nMais alors qui a raison ? S'il y a bien quelqu'un qui a raison ce sont les [spécifications officielles](http://www.ecma-international.org/publications/standards/Ecma-262.htm) qui liste bien que les 6 types sont [Object, Number, String, Boolean, Null et Undefined](http://ecma-international.org/ecma-262/5.1/#sec-8).\n\nMais alors comment des ouvrages professionnels peuvent se tromper ? En réalité il ne se trompe pas réellement, mais ne font pas référence aux types JavaScipt mais [aux valeurs que peut retourner la fonction `typeof`](http://ecma-international.org/ecma-262/5.1/#sec-11.4.3) censé retourner le type d'une expression. En effet la spécification demande explicitement aux moteurs JavaScript de retourner 'function' et non pas 'object' pour une fonction (type Object) et de retourner 'object' plutôt que 'null' pour la valeur null (le type Null). Et bah franchement...\n\n\n\n\n\n## Mémo : les 6 types JavaScript ##\n\nAfin de tester ce qui a été évoqué par **Dmitry Baranovskiy**, voici plusieurs tests.\n\n\n\n\n### Le type Object (et déclinaisons) ###\n\n#### Object ####\n\n```js\n/********************/\n/* Le type Object */\n/********************/\n\n// Objet en JavaScript\nvar objectJS = new Object();\nconsole.log(typeof objectJS); // retourne \"object\"\nconsole.log(typeof Object); // retourne \"function\"\nconsole.log(objectJS instanceof Object); // retourne \"true\"\nconsole.log(objectJS instanceof Array); // retourne \"false\"\nconsole.log(objectJS instanceof Function); // retourne \"false\"\n\n// Objet en JSON\nvar objectJSON = {};\nconsole.log(typeof objectJSON); // retourne \"object\"\nconsole.log(typeof {}); // retourne \"object\" (la même chose que \"new Object()\")\nconsole.log(objectJSON instanceof Object); // retourne \"true\"\nconsole.log(objectJS instanceof Array); // retourne \"false\"\nconsole.log(objectJS instanceof Function); // retourne \"false\"\n```\n\n#### Array ####\n\n```js\n/**************************/\n/* Le type Object : Array */\n/**************************/\n// Tableau en JavaScript\nvar arrayJS = new Array();\nconsole.log(typeof arrayJS); // retourne \"object\"\nconsole.log(typeof Array); // retourne \"function\"\nconsole.log(arrayJS instanceof Object); // retourne \"true\"\nconsole.log(arrayJS instanceof Array); // retourne \"true\"\nconsole.log(arrayJS instanceof Function); // retourne \"false\"\n\n// Tableau en JSON\nvar arrayJSON = [];\nconsole.log(typeof arrayJSON); // retourne \"object\"\nconsole.log(typeof []); // retourne \"object\" (la même chose que \"new Array()\")\nconsole.log(arrayJSON instanceof Object); // retourne \"true\"\nconsole.log(arrayJSON instanceof Array); // retourne \"true\"\nconsole.log(arrayJSON instanceof Function); // retourne \"false\"\n```\n\n\n\n#### Function ####\n\n```js\n/*****************************/\n/* Le type Object : Function */\n/*****************************/\n\n// Fonction en JavaScript\nvar functionJS = function() {};\nconsole.log(typeof functionJS); // retourne \"function\"\nconsole.log(typeof Function); // retourne \"function\"\nconsole.log(functionJS instanceof Object); // retourne \"true\"\nconsole.log(functionJS instanceof Array); // retourne \"false\"\nconsole.log(functionJS instanceof Function); // retourne \"true\"\n```\n\n#### Date, RegExp, Error ####\n\n```js\n/****************************************/\n/* Les autres types Object instanciable */\n/****************************************/\n\n// L'objet Date\nvar date = new Date();\nconsole.log(typeof date); // retourne \"object\"\nconsole.log(typeof Date); // retourne \"function\"\nconsole.log(date instanceof Object); // retourne \"true\"\nconsole.log(date instanceof Date); // retourne \"true\"\nconsole.log(date instanceof Function); // retourne \"false\"\n\n// L'objet RegExp\nvar regex = new RegExp(\" \");\nconsole.log(typeof regex); // retourne \"object\"\nconsole.log(typeof RegExp); // retourne \"function\"\nconsole.log(regex instanceof Object); // retourne \"true\"\nconsole.log(regex instanceof RegExp); // retourne \"true\"\nconsole.log(regex instanceof Function); // retourne \"false\"\n\n// L'objet RegExp court\nvar sRegex = / /;\nconsole.log(typeof sRegex); // retourne \"object\"\nconsole.log(typeof / /); // retourne \"object\" (la même chose que \"new RegExp()\")\nconsole.log(sRegex instanceof Object); // retourne \"true\"\nconsole.log(sRegex instanceof RegExp); // retourne \"true\"\nconsole.log(sRegex instanceof Function); // retourne \"false\"\n\n// L'objet Error\nvar error = new Error();\nconsole.log(typeof error); // retourne \"object\"\nconsole.log(typeof Error); // retourne \"function\"\nconsole.log(error instanceof Object); // retourne \"true\"\nconsole.log(error instanceof Error); // retourne \"true\"\nconsole.log(error instanceof Function); // retourne \"true\"\n```\n\n#### JSON, Math, Global (Window) ####\n\n```js\n/**********************************/\n/* Les autres types Object simple */\n/**********************************/\n\n// L'objet JSON\n//var json = new JSON(); // error\nconsole.log(typeof json); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof JSON); // retourne \"object\"\n//console.log(json instanceof Object); // error\n//console.log(json instanceof JSON); // error\n//console.log(json instanceof Function); // error\n\n// L'objet Math\n//var math = new Math(); // error\nconsole.log(typeof math); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof Math); // retourne \"object\"\n//console.log(math instanceof Object); // error\n//console.log(math instanceof Math); // error\n//console.log(math instanceof Function); // error\n\n// L'objet Global (Window dans les navigateurs)\n//var globalVar = new global(); // error\nconsole.log(typeof globalVar); // retourne \"undefined\" (n'existe pas du coup)\nconsole.log(typeof global); // retourne \"object\"\n//console.log(globalVar instanceof Object); // error\n//console.log(globalVar instanceof global); // error\n//console.log(globalVar instanceof Function); // error\n```\n\n\n\n\n### Les types primitifs (et Objets associés) ###\n\n#### Number ####\n\n```js\n/******************/\n/* Le type Number */\n/******************/\n\n// Number primitif\nvar pNumber = 104.56;\nconsole.log(typeof pNumber); // retourne \"number\"\nconsole.log(typeof 104.56); // retourne \"number\"\nconsole.log(pNumber instanceof Object); // retourne \"false\"\nconsole.log(pNumber instanceof Number); // retourne \"false\"\n\n// L'Objet Number\nvar number = new Number(104.56);\nconsole.log(typeof number); // retourne \"object\"\nconsole.log(typeof Number); // retourne \"function\"\nconsole.log(number instanceof Object); // retourne \"true\"\nconsole.log(number instanceof Number); // retourne \"true\"\n\n// Number primitif à 0\nvar pNumber0 = 0;\nconsole.log(typeof pNumber0); // retourne \"number\"\nconsole.log(pNumber0 instanceof Object); // retourne \"false\"\nconsole.log(pNumber0 instanceof Number); // retourne \"false\"\n\n// L'Objet Number à 0\nvar number0 = new Number(0);\nconsole.log(typeof number0); // retourne \"object\"\nconsole.log(number0 instanceof Object); // retourne \"true\"\nconsole.log(number0 instanceof Number); // retourne \"true\"\n\n// Number primitif invalide\nvar pNumberN = NaN;\nconsole.log(typeof pNumberN); // retourne \"number\"\nconsole.log(pNumberN instanceof Object); // retourne \"false\"\nconsole.log(pNumberN instanceof Number); // retourne \"false\"\n\n// L'Objet Number invalide\nvar numberN = new Number(NaN);\nconsole.log(typeof numberN); // retourne \"object\"\nconsole.log(numberN instanceof Object); // retourne \"true\"\nconsole.log(numberN instanceof Number); // retourne \"true\"\n\n// Number primitif infinie\nvar pNumberI = Infinity;\nconsole.log(typeof pNumberI); // retourne \"number\"\nconsole.log(pNumberI instanceof Object); // retourne \"false\"\nconsole.log(pNumberI instanceof Number); // retourne \"false\"\n\n// L'Objet Number infinie\nvar numberI = new Number(Infinity);\nconsole.log(typeof numberI); // retourne \"object\"\nconsole.log(numberI instanceof Object); // retourne \"true\"\nconsole.log(numberI instanceof Number); // retourne \"true\"\n```\n\n#### String ####\n\n```js\n/******************/\n/* Le type String */\n/******************/\n\n// String primitif\nvar pString = \"test\";\nconsole.log(typeof pString); // retourne \"string\"\nconsole.log(typeof \"test\"); // retourne \"string\"\nconsole.log(pString instanceof Object); // retourne \"false\"\nconsole.log(pString instanceof String); // retourne \"false\"\n\n// L'Objet String\nvar string = new String(\"test\");\nconsole.log(typeof string); // retourne \"object\"\nconsole.log(typeof String); // retourne \"function\"\nconsole.log(string instanceof Object); // retourne \"true\"\nconsole.log(string instanceof String); // retourne \"true\"\n\n// String vide primitif\nvar pStringE = \"\";\nconsole.log(typeof pStringE); // retourne \"string\"\nconsole.log(pStringE instanceof Object); // retourne \"false\"\nconsole.log(pStringE instanceof String); // retourne \"false\"\n\n// L'Objet vide String\nvar stringE = new String(\"\");\nconsole.log(typeof stringE); // retourne \"object\"\nconsole.log(stringE instanceof Object); // retourne \"true\"\nconsole.log(stringE instanceof String); // retourne \"true\"\n```\n\n\n\n#### Boolean ####\n\n```js\n/*******************/\n/* Le type Boolean */\n/*******************/\n\n// Boolean primitif à true\nvar pBoolTrue = true;\nconsole.log(typeof pBoolTrue); // retourne \"boolean\"\nconsole.log(typeof true); // retourne \"boolean\"\nconsole.log(pBoolTrue instanceof Object); // retourne \"false\"\nconsole.log(pBoolTrue instanceof Boolean); // retourne \"false\"\n\n// L'Objet Boolean à true\nvar boolTrue = new Boolean(true);\nconsole.log(typeof boolTrue); // retourne \"object\"\nconsole.log(typeof Boolean); // retourne \"function\"\nconsole.log(boolTrue instanceof Object); // retourne \"true\"\nconsole.log(boolTrue instanceof Boolean); // retourne \"true\"\n\n// Boolean primitif à false\nvar pBoolTrue = false;\nconsole.log(typeof pBoolTrue); // retourne \"boolean\"\nconsole.log(pBoolTrue instanceof Object); // retourne \"false\"\nconsole.log(pBoolTrue instanceof Boolean); // retourne \"false\"\n\n// L'Objet Boolean à false\nvar boolTrue = new Boolean(false);\nconsole.log(typeof boolTrue); // retourne \"object\"\nconsole.log(boolTrue instanceof Object); // retourne \"true\"\nconsole.log(boolTrue instanceof Boolean); // retourne \"true\"\n```\n\n\n\n#### Null ####\n\n```js\n/*******************/\n/* Le type Null */\n/*******************/\n\n// Null primitif\nvar pNull = null;\nconsole.log(typeof pNull); // retourne \"object\"\nconsole.log(typeof null); // retourne \"object\"\nconsole.log(typeof Null); // retourne \"undefined\"\nconsole.log(pNull instanceof Object); // retourne \"false\"\n//console.log(pNull instanceof Null); //error\n```\n\n\n\n#### Undefined ####\n\n```js\n/*********************/\n/* Le type Undefined */\n/*********************/\n\n// Undefined primitif\nconsole.log(typeof thisVarDoesntExist); // retourne \"undefined\"\nconsole.log(typeof undefined); // retourne \"undefined\"\nconsole.log(typeof Undefined); // retourne \"undefined\"\n//console.log(thisVarDoesntExist instanceof Object); //error\n//console.log(pNull instanceof Undefined); //error\n```","dates":{"published":{"$date":"2013-05-17T12:20:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"$(\".openable\").click(function () {\n    window.open($(this).attr(\"src\"));\n});","stylesheet":"","title":"Les \u003cspan\u003etypes\u003c/span\u003e en \u003cspan\u003eJavaScript\u003c/span\u003e : pour tout savoir !","urn":"les-types-en-javascript-pour-tout-savoir","description":"Contrairement à ce que certain vous ont dit, JavaScript manipule des éléments typés","image":"https://blog.lesieur.name/media/images/upload/6-types-javascript-objet-primitif.png"}
{"_id":{"$oid":"530f5f63620731fe86cb71b0"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"Je rencontre souvent des personnes se plaignant de problèmes de `z-index` et qui les évitent ou se contente de dire que les `z-index` ça pose problème. Bien souvent le problème vient du fait que le développeur ne s'attend pas à ce que la priorité d'affichage des `z-index` fonctionnent en cascade dans le DOM. Voyez plutôt l'exemple suivant :\n\n\n\n\n\n## Un exemple d'utilisation du z-index problématique\n\n\u003cdiv id=\"ex-global\"\u003e\n\u0009\u003cdiv id=\"ex-content\"\u003e\n\u0009\u0009Coucou je suis le contenu principale !\u003cbr /\u003e\n\u0009\u0009z-index: 1;\n\u0009\u0009\u003cdiv id=\"ex-test\"\u003e\n\u0009\u0009\u0009Coucou je suis un problème !\u003cbr /\u003e\n\u0009\u0009\u0009z-index: 7777;\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u0009\u003cdiv id=\"ex-footer\"\u003e\n\u0009\u0009\u003cdiv\u003e\n\u0009\u0009\u0009Coucou je suis le pied de page !\u003cbr /\u003e\n\u0009\u0009\u0009z-index: 2;\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\nNous observons que la zone avec un `z-index` de `7777` passe en dessous de la zone avec un `z-index` de `2`. Comment cela est-il possible ? « J'ai des problèmes de `z-index` ! ».\n\nRegardons de plus près le code :\n\n\n\n### HTML ###\n\n```html\n\u003cdiv id=\"content\"\u003e\n\u0009Coucou je suis le contenu principale !\u003cbr /\u003e\n\u0009z-index: 1;\n\u0009\u003cdiv id=\"test\"\u003e\n\u0009\u0009Coucou je suis un problème !\u003cbr /\u003e\n\u0009\u0009z-index: 7777;\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv id=\"footer\"\u003e\n\u0009\u003cdiv\u003e\n\u0009\u0009Coucou je suis le pied de page !\u003cbr /\u003e\n\u0009\u0009z-index: 2;\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n```\n\n### CSS\n\n```css\n#content {\n\u0009position: absolute;\n\u0009width: 100%;\n\u0009height: 100%;\n\u0009z-index: 1; /* Le contenu doit s'afficher en arrière plan. */\n}\n#footer  {\n\u0009padding-top: 100px;\n\u0009margin: 0 auto;\n\u0009width: 50%;\n}\n#footer \u003e div {\n\u0009position: relative;\n\u0009width: 100%;\n\u0009height: 100%;\n\u0009z-index: 2; /* Le contenu s'affiche au-dessus de `#content`. */\n}\n#test {\n\u0009position: absolute;\n\u0009width: 80%;\n\u0009height: 200px;\n\u0009z-index: 7777; /* Le contenu ne s'affiche pas au-dessus de `#footer` comme attendu... */\n\u0009left: 10%;\n}\n```\n\n\n\n\n\n## z-index et priorité d'affichage en cascade dans le DOM\n\nTous les éléments dont nous allons parler sont des éléments en `position: relative`, `position: absolute`, `position: fixed` ou `position: sticky`.\n\n\n\n### Priorité aux éléments frères bas\n\nOn part des éléments les plus hauts dans le DOM et de même niveau (frères). C'est l'élément situé en dessous d'un autre dans le code source qui s'affiche par dessus l'autre.\n\n### Changer les priorités\n\nPour modifier ce comportement on applique un z-index plus grand aux éléments plus haut pour les forcer à passer par dessus.\n\n### Priorité aux éléments parents\n\nQuoi qu'il arrive, et peut importe le `z-index` utilisé, un élément fils d'un élément avec un `z-index` plus faible qu'un de ses frères ne passera jamais au-dessus de ce frère. Il faut se faire une raison...\n\n\n\n\n\n## Mon conseil ##\n\n**Le mieux est de ne pas mélanger l'affichage relatif / absolue / fixe / sticky d'éléments fils venant de différent pères eux-mêmes relatifs.**","dates":{"published":{"$date":"2013-06-28T16:11:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","style":"#ex-content {\r\n\u0009-moz-box-sizing: border-box;\r\n\u0009box-sizing: border-box;\r\n\u0009padding: 8px;\r\n\u0009color: #ffffff;\r\n\u0009position: absolute;\r\n\u0009width: 100%;\r\n\u0009height: 100%;\r\n\u0009background-color: #800000;\r\n\u0009z-index: 1;\r\n}\r\n#ex-footer  {\r\n\u0009padding-top: 100px;\r\n\u0009margin: 0 auto;\r\n\u0009width: 50%;\r\n\u0009-moz-box-sizing: border-box;\r\n\u0009box-sizing: border-box;\r\n}\r\n#ex-footer \u003e div {\r\n\u0009position: relative;\r\n\u0009width: 100%;\r\n\u0009height: 100%;\r\n\u0009background-color: #008000;\r\n\u0009z-index: 2;\r\n\u0009padding: 8px;\r\n\u0009-moz-box-sizing: border-box;\r\n\u0009box-sizing: border-box;\r\n\u0009color: #ffffff;\r\n}\r\n#ex-test {\r\n\u0009position: absolute;\r\n\u0009width: 80%;\r\n\u0009height: 200px;\r\n\u0009background-color: #000080;\r\n\u0009z-index: 7777;\r\n\u0009left: 10%;\r\n\u0009padding: 8px;\r\n\u0009-moz-box-sizing: border-box;\r\n\u0009box-sizing: border-box;\r\n\u0009color: #ffffff;\r\n}\r\n#ex-global {\r\n\u0009height: 300px;\r\n\u0009position: relative;\r\n\u0009margin: 16px;\r\n\u0009-moz-box-sizing: border-box;\r\n\u0009box-sizing: border-box;\r\n}","stylesheet":"#ex-content {\n\u0009-moz-box-sizing: border-box;\n\u0009box-sizing: border-box;\n\u0009padding: 8px;\n\u0009color: #ffffff;\n\u0009position: absolute;\n\u0009width: 100%;\n\u0009height: 100%;\n\u0009background-color: #800000;\n\u0009z-index: 1;\n}\n#ex-footer  {\n\u0009padding-top: 100px;\n\u0009margin: 0 auto;\n\u0009width: 50%;\n\u0009-moz-box-sizing: border-box;\n\u0009box-sizing: border-box;\n}\n#ex-footer \u003e div {\n\u0009position: relative;\n\u0009width: 100%;\n\u0009height: 100%;\n\u0009background-color: #008000;\n\u0009z-index: 2;\n\u0009padding: 8px;\n\u0009-moz-box-sizing: border-box;\n\u0009box-sizing: border-box;\n\u0009color: #ffffff;\n}\n#ex-test {\n\u0009position: absolute;\n\u0009width: 80%;\n\u0009height: 200px;\n\u0009background-color: #000080;\n\u0009z-index: 7777;\n\u0009left: 10%;\n\u0009padding: 8px;\n\u0009-moz-box-sizing: border-box;\n\u0009box-sizing: border-box;\n\u0009color: #ffffff;\n}\n#ex-global {\n\u0009height: 300px;\n\u0009position: relative;\n\u0009margin: 16px;\n\u0009-moz-box-sizing: border-box;\n\u0009box-sizing: border-box;\n}","title":"Problème de z-index et priorité d'affichage","urn":"probleme-de-z-index-et-priorite-d-affichage","description":"Quoi qu'il arrive, et peut importe le `z-index` utilisé, un élément fils d'un élément avec un `z-index` plus faible qu'un de ses frères ne passera jamais au-dessus de ce frère.","image":""}
{"_id":{"$oid":"530f5f63620731fe86cb71b2"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ce"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"5310456355dfd5f7698d48b7"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"C'est suite à plusieurs conversations m'invitant à ne pas utiliser de multiples balises `h1` dans mes intégrations HTML (et plus récemment une demande « insistante » sur le fait de ne pas le faire) que je me vois forcé de marcher sur les pas de \u003ca href=\"http://www.goetter.fr/\" title=\"Site Raphaël Goetter\"\u003eRaphaël Goetter\u003c/a\u003e -qui avait \u003ca href=\"http://blog.goetter.fr/articles/mythe-h1-unique-html/\" title=\"Le mythe de l’élément H1 unique en HTML\"\u003edéjà abordé le sujet\u003c/a\u003e- pour expliquer pourquoi : en plus d'être tout à fait valide, cette pratique est bénéfique.\n\nTout document HTML5 dispose de cloison de contenu ([Sectionneur de contenu](http://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#sectioning-content)) que sont `article`, `aside`, `nav` et `section`. Ces zones de contenu peuvent chacune contenir une balise `header` et `footer` (ne cloisonnant pas elles-mêmes le contenu) et de multiple éléments de titrage ([Titre en HTML](http://www.w3.org/TR/html-markup/h1.html)) allant de `h1` à `h6`.\n\nBien que l'utilisation de plus d'une balise `h1` ai pu rationnellement laisser à débattre (même si techniquement les standards ne l'interdise pas), les recommandations et même l'interdiction d'une telle pratique ne sont plus pertinentes et rationnelles à l'heure du HTML5.\n\n\n\n\n\n## La balise h1 et les balises entêtes h2-h6 ##\n\n\n\n### Que dit la référence HTML ###\n\nLe [W3C], sans parler de HTML5, nous explique [ici](http://www.w3.org/TR/html-markup/h1.html) que : « Les éléments h1 à h6 servent de titre pour les sections auxquelles ils sont rattachés. ». Dans les contraintes additionnelles (là où logiquement nous devrions donc trouver notre interdiction de multiple `h1`) il est seulement mentionné que :\n\n- « L'élément h1 ne doit pas être contenu comme élément enfant d'un élément address. »\n- « L'attribut align sur l'élément h1 est obsolète. Utilisez CSS à la place. »\n\nAucune interdiction n'est donc mentionnée dans cette partie. Ces balises sont autorisés dans [les éléments listés ici](http://www.w3.org/TR/html-markup/common-models.html#common.elem.flow).\n\n [W3C]: http://www.w3.org/TR/html-markup/h1.html\n\n\n\n### Que dit la référence HTML5 ###\n\nLe [W3C] nous explique ([ici](http://www.w3.org/TR/2011/WD-html5-20110525/sections.html#the-section-element)) : « L'élément section représente une zone ou une application générique à un document. Une section, dans ce contexte, est un regroupement de contenu avec une même thématique, et de fait avec des balises d'entêtes. ».\n\nLe [W3C] nous explique également [ici](http://www.w3.org/TR/2011/WD-html5-20110525/sections.html#headings-and-sections) que : « Les éléments `h1–h6` et l'élément `hgroup` sont des éléments d'entêtes. ».\n\n\n\n\n\n## Exemple donné par le W3C ##\n\nAvant de présenter des exemples tous valide, soulignons que le [W3C] explique : « Les sections peuvent contenir des balises d'entête de n'importe quel niveau. Mais l'auteur insiste lourdement sur le fait de n'utiliser que des éléments `h1`, ou d'utiliser les éléments de rang appropriés pour les sections imbriquées à différents niveaux. »\n\n### Exemple valide ###\n\n\u003e ```html\n\u003e \u003cbody\u003e\n\u003e     \u003ch1\u003eFoo\u003c/h1\u003e\n\u003e     \u003ch2\u003eBar\u003c/h2\u003e\n\u003e     \u003cblockquote\u003e\n\u003e         \u003ch3\u003eBla\u003c/h3\u003e\n\u003e     \u003c/blockquote\u003e\n\u003e     \u003cp\u003eBaz\u003c/p\u003e\n\u003e     \u003ch2\u003eQuux\u003c/h2\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch3\u003eThud\u003c/h3\u003e\n\u003e     \u003c/section\u003e\n\u003e     \u003cp\u003eGrunt\u003c/p\u003e\n\u003e \u003c/body\u003e\n\u003e ```\n\n\n\n### Deux exemples valides, mais avec une différence de clarté ###\n\n\u003e **Peu lisible** *`ici`*\n\u003e \n\u003e ```html\n\u003e \u003cbody\u003e\n\u003e     \u003ch4\u003eApples\u003c/h4\u003e\n\u003e     \u003cp\u003eApples are fruit.\u003c/p\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch2\u003eTaste\u003c/h2\u003e\n\u003e         \u003cp\u003eThey taste lovely.\u003c/p\u003e\n\u003e         \u003ch6\u003eSweet\u003c/h6\u003e\n\u003e         \u003cp\u003eRed apples are sweeter than green ones.\u003c/p\u003e\n\u003e         \u003ch1\u003eColor\u003c/h1\u003e\n\u003e         \u003cp\u003eApples come in various colors.\u003c/p\u003e\n\u003e     \u003c/section\u003e\n\u003e \u003c/body\u003e\n```\n\npar contre\n\n\u003e **Plus lisible**\n\u003e \n\u003e ```html\n\u003e \u003cbody\u003e\n\u003e     \u003ch1\u003eApples\u003c/h1\u003e\n\u003e     \u003cp\u003eApples are fruit.\u003c/p\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch2\u003eTaste\u003c/h2\u003e\n\u003e         \u003cp\u003eThey taste lovely.\u003c/p\u003e\n\u003e         \u003csection\u003e\n\u003e             \u003ch3\u003eSweet\u003c/h3\u003e\n\u003e             \u003cp\u003eRed apples are sweeter than green ones.\u003c/p\u003e\n\u003e         \u003c/section\u003e\n\u003e     \u003c/section\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch2\u003eColor\u003c/h2\u003e\n\u003e         \u003cp\u003eApples come in various colors.\u003c/p\u003e\n\u003e     \u003c/section\u003e\n\u003e \u003c/body\u003e\n\u003e ```\n\n\n\n### Le plus facile à maintenir (les sections peuvent bouger) ###\n\n\u003e **Maintenable** **`ici`**\n\u003e \n\u003e ```html\n\u003e \u003cbody\u003e\n\u003e     \u003ch1\u003eApples\u003c/h1\u003e\n\u003e     \u003cp\u003eApples are fruit.\u003c/p\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch1\u003eTaste\u003c/h1\u003e\n\u003e         \u003cp\u003eThey taste lovely.\u003c/p\u003e\n\u003e         \u003csection\u003e\n\u003e             \u003ch1\u003eSweet\u003c/h1\u003e\n\u003e             \u003cp\u003eRed apples are sweeter than green ones.\u003c/p\u003e\n\u003e         \u003c/section\u003e\n\u003e     \u003c/section\u003e\n\u003e     \u003csection\u003e\n\u003e         \u003ch1\u003eColor\u003c/h1\u003e\n\u003e         \u003cp\u003eApples come in various colors.\u003c/p\u003e\n\u003e     \u003c/section\u003e\n\u003e \u003c/body\u003e\n\u003e ```\n\n[Explication approfondie sur une architecture HTML orientée composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/).\n\n\n\n\n\n## Les multiples h1 et le SEO ##\n\nEt qu'en dise les moteurs ? Cela est tout à fait pris en compte par les moteurs et heureusement. En se posant deux minutes : on s'aperçoit aisément qu'une architecture sectionné avec plusieurs `h1` est plus facilement maintenable qu'une architecture à plat parsemée de `h1` à `h6`. Un exemple en est fait dans [Conventions HTML et CSS orientés composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/).\n\nMais je laisse la parole à [Matt Cutts](http://www.mattcutts.com/blog/), ingénieur chez Google depuis 2000 communiquant énormément via son blog du SEO chez Google :\n\n\u003cdiv class=\"video\"\u003e\n\u0009\u003ciframe width=\"500\" height=\"330\" src=\"//www.youtube.com/embed/GIn5qJKU8VM\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\nLe monsieur nous explique que s'il y a une raison logique à avoir plusieurs sections et plusieurs balises `h1` dans une page, ce n'est pas mauvais de les mettre en place. Il insiste sur le fait qu'une page intégralement remplis de `h1` est problématique en ce qui concerne par exemple un rendu sans CSS (si celle-ci ne se charge pas par exemple) et qu'il est toujours bon d'utiliser les autres balises de niveau. L'important est que les balises h1 restent réservées si possible à la partie entête de chaque section. Mais si elles sont utilisées de manière logique et avec parcimonie il n'y a aucun inconvénient SEO.\n\n## Il est autorisé d'avoir plusieurs h1 dans une page HTML5 ##\n\nEn conclusion utilisés plusieurs balises `h1` dans un document HTML5 est non seulement valide, mais recommandé par le W3C pour respecter une logique de hiérarchie. De plus si deux éléments de premier niveau se valent en importance, il n'y a pas de problème à utiliser deux balises `h1`, le `title` étant l'unique élément pouvant représenter un titre unique pour une page donnée.","dates":{"published":{"$date":"2013-08-07T11:52:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","style":".video {\r\n\u0009margin: 8px 0;\r\n}\r\n.video iframe {\r\n\u0009width: 100%;\r\n\u0009margin: 0 auto;\r\n}\r\n","stylesheet":".video {\n\u0009margin: 8px 0;\n}\n.video iframe {\n\u0009width: 100%;\n\u0009margin: 0 auto;\n}\n","title":"Les \u003cspan\u003ebalises\u003c/span\u003e \u003cspan\u003eh1\u003c/span\u003e multiples autorisées en \u003cspan\u003eHTML5\u003c/span\u003e","urn":"les-balises-h1-multiples-autorisees-en-html5","description":"Les balises h1 multiples autorisées en HTML5","image":""}
{"_id":{"$oid":"530f5f63620731fe86cb71b3"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48be"}],"content":"Le « Responsive Web Design » comme son nom l’indique est le concept de « Responsive Design » adapté au Web. Il est parfois raccourci par le terme  « RWD » ou simplement par « Responsive ».\n\n\u003cfigure\u003e\n\u003cimg width=\"630\" height=\"387\" src=\"media/images/upload/responsive-web-design.jpg\" alt=\"Responsive Web Design\"\u003e\n\u003cfigcaption\u003eSource : www.tridentdesign.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans la majorité des cas d’utilisations, il est utilisé comme raccourci pour désigner la version Mobile d’un site web originalement conçu pour un écran d’ordinateur.\n\nLa vérité est que le Responsive Web Design n’est qu’un des nombreux concepts appliqués à un site web pour le rendre « utilisable agréablement » sur mobile tout en sachant qu’il ne se limite pas qu’aux mobiles et qu’il vaut tout aussi bien pour :\n\n- une tablette,\n- une phablette (terminal intermédiaire se situant entre le smartphone et la tablette),\n- un ordinateur et tous ses types d’écrans (HD, 3D, tactile),\n- une télévision numérique,\n- un tableau de bord de voiture,\n- une console de jeu portable,\n- …et tout appareil capable d’afficher un site web par l’intermédiaire d’un navigateur web.\n\nEn plus du fait que Responsive Web Design ne signifie donc pas obligatoirement « version mobile », il est le porte étendard d’une liste de concept comme l’« Adaptative Web Design ». Difficile de comprendre ce dont on parle réellement quand il est question de Responsive Web Design.\n\n\n\n\n\n## Les concepts permettant (entre autre) de faire du web mobile ##\n\nFaisons un petit tour des termes et concepts autour de la réalisation mobile d’une interface web.\n\n\n\n### Adaptatif Web Design ###\n\nL’idée derrière ce terme est que la partie fonctionnelle d’un site web est différente en fonction du périphérique qui réclame la page web. Si je demande une page sur un téléphone, il est probable que je ne fournisse pas la vidéo HD que j’aurais fourni si elle avait été demandée sur un ordinateur. Il est également probable que je ne fournisse pas de carte Google Maps sur mobile mais plutôt un lien ouvrant l’application Google Maps sur le téléphone alors que sur ordinateur, une grande carte interactive aurait été proposée.\n\nCe concept repose donc sur un design fonctionnel (et donc visuel) adapté au périphérique de l’utilisateur. Le cas le plus extrême de ce concept pourrait être de ne pas proposer seulement des fonctionnalités adaptées mais un site dédié complet (un site version ordinateur à une adresse, un site version mobile à une autre).\n\n*__Technique__ : Cela demande d’utiliser du JavaScript côté client et également de communiquer des informations clientes au serveur pour qu’il décide quelles sont les fonctionnalités nécessaires au périphérique. Le serveur peut donc décider de renvoyer certaines fonctionnalités. Dans un cas de site mobile dédié, de renvoyer l’utilisateur sur le site mobile en question.*\n\n\n\n### Responsive Web Design ###\n\nNotre fameux Responsive Web Design, expression fourre-tout dont l’idée originale associée au terme est qu'en fonction de la taille et des interactions utilisateurs possibles (souris ou doigts) le design n’est pas présenté de la même manière.\n\nAussi un affichage sur 3 grandes colonnes côte à côte sur grand écran se résumera à 3 éléments l’un en dessous de l’autre sur mobile. Un menu large vertical se permettant de prendre de la place sur grand écran se résumera à un menu vertical masqué par défaut pour garder de la place visible sur mobile, etc… Il est donc tout à fait possible qu’avec le même périphérique, en fonction qu’il affiche la page en mode portrait ou en mode paysage, le rendu soit différent.\u003c/p\u003e\n\nLe Responsive Design adapté au web utilise principalement la technique de « Responsive Layout » (ou Fluid Layout) qui est la fusion de deux concepts sous-jacents. Voici donc (Responsive Layout inclus) les 3 principes responsives.\n\n#### Basic Layout ####\n\nChaque partie du design bouge de manière fluide en fonction de la largeur du périphérique qui l’affiche. On obtient donc des titres sur 1 ligne qui peuvent passer sur 3 et tous les éléments ne font que s’étirer et passer les un sous les autres. Il n’y a aucune disposition spéciale ou changement notable de design entre une basse et une haute résolution, seulement un étirement infini : c’est le concept de « fluidité ». Il est dit basique dans le sens ou le rendu « sans CSS » d’une page web possède ces caractéristiques.\n\nCe concept est utilisé majoritairement pour les sites mobiles dédiés (un autre site web uniquement réservé à l’affichage mobile) permettant éventuellement un affichage sur grand mobile et tablette).\n\n*__Technique__ : La feuille CSS est simple et ne fait pas intervenir de Media Queries. Les tailles sont fournies en % et non en pixel et beaucoup de valeur sont en auto. Les éléments ne prennent qu’une ligne et s’empile les un sous les autres.*\n\n#### Adaptative Layout ####\n\nÀ ne pas confondre avec l’Adaptative Web Design, ce concept défini le fait qu’un même site web revêt une apparence différente en fonction de résolution d’écran défini à l’avance. Il peut donc en résulter un affichage pour bureau et un affichage pour mobile (et même un affichage pour tablette) sur la même application (page web). Cependant le design est donc adapté uniquement pour 2 ou 3 résolution faisant office de « gap ».\n\nIl en découle donc qu’un périphérique dont l’affichage se situe entre deux gaps prendra l’apparence du gap le plus petit et laissera des blancs de part et d’autre de la page. Ce blanc peut être masqué en forçant alors le zoom de l’écran pour qu’ils n’apparaissent plus.\n\n*__Technique__ : La feuille CSS utilise des Media Queries. L’approche « if … else if  …  else » est envisageable dans le sens ou entre les gaps il n’y a aucune modification CSS. Il y a donc un pend mobile, un pend tablette et un pend ordinateur par exemple. L’approche en cascade (on commence par le desktop, puis on écrase les propriétés différentes au fur et à mesure qu’on descend) est tout aussi valide et permet à terme d’évoluer vers du (Limited) Responsive Layout.*\n\n#### Responsive Layout ####\n\nCe concept est un mélange des deux précédentes approches. Il y a toujours des gaps visuels définis à des résolutions précises mais ces gaps, tout en présentant une disposition différente, garde une cohérence en terme de placement permettant « entre les gaps » de faire intervenir le concept de fluidité. Ainsi quel que soit la résolution du périphérique, le design est toujours adapté à l’écran en rendant fluide le gap précédent ou suivant.\n\n\n\u003e #### Limited Responsive Layout ####\n\u003e \n\u003e C’est le concept le plus répandu et le plus associé au « Responsive Web Design ». Il est identique au concept du dessus cependant :\n\u003e - en-dessous du plus petit gap le site n’est plus Responsive mais scrollable et/ou\n\u003e - au-dessus du plus grand gap le site n’est plus Responsive mais des zones vides s’étendent de part et d’autre de l’écran.\n\n\n\n### Desktop First ###\n\nCe concept ne portait pas de nom avant l’arrivée du concept de « Mobile First » mais il désigne tout simplement un site qui a été créé pour s’afficher sur un ordinateur en premier lieu. Ce n’est qu’ensuite, avec le concept de « Progressive Enhancement » (Amélioration Progressive) que vient se greffer des gaps visuels pour les versions tablette et mobile (avec éventuellement de la fluidité).\n\nCette approche donne lieu en générale à des sites finaux « Limited Responsive Layout » ou le site original est le gap final du rendu visuel. En générale ce type d’approche permet de supporter des vieux navigateurs comme IE7 et IE8 tout en permettant du « Responsive Web Design » sur les autres. Cette approche à le défaut d’alourdir en poids les fichiers au fur et à mesure qu’on habille des périphériques aux écrans plus petits.\n\n*__En bref__ : Desktop First supporte les vieux navigateurs facilement mais impose un travail spécifique pour les tablettes et mobiles.*\n\n\n\n### Mobile First ###\n\nC’est l’approche se rapprochant le plus de l’idée première du « Responsive Web Design » permettant un affichage Responsive du petit écran vers les écrans très grand. Cette approche consiste à d’abord pensé le site et le design sur petit périphérique comme des mobiles (d’où le nom) puis ensuite d’augmenter le design vers des périphériques plus gros.\n\nCette approche, en plus de permettre une responsivité infinie permet également de s’assurer que ce sont les plus petits périphériques qui chargent le moins de ressources. Cette approche impose cependant le concept de « Fallback Mechanism » (Dégradation élégante) pour ajouter le support de IE8 et/ou IE7 n’étant pas supporté de base dans cette approche (ou ayant alors l’apparence mobile).\n\n*__En bref__ : Supporte les tablettes et mobiles facilement mais également les écrans HD, etc..., impose un travail spécifique pour IE8 et/ou IE7.*\n\n\u003cfigure\u003e\n\u003cimg src=\"media/images/upload/43-650x487.png\" alt=\"Responsive Web Design\"\u003e\n\u003cfigcaption\u003eSource : www.bradfrostweb.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### Progressive Enhancement ###\n\nL’amélioration progressive est un concept visant à développer une application (dans notre cas un site web) en partant de standard volontairement âgé et encore supporté par les navigateurs les plus récents pour couvrir une compatibilité maximale avec les anciens périphériques, navigateurs, etc... Elle permet notamment un support sans JavaScript ou un support IE7 ou IE8 plus facile à mettre en place mais bride l’accès aux technologies récentes dans le sens ou les mettre en place devient excessivement complexe et couteux puisqu’il faut continuer le support des navigateurs ne permettant pas nativement de tel chose.\n\nS’ajoute comme une nouvelle brique le passage en Responsive Web Design, très chronophage, et demandant bien souvent une refonte profonde du code initiale de manière à l’améliorer. Bien qu’ils conviennent aux sites existant il est parfois bien plus judicieux dans le cas du passage en Responsive d’un site de le refaire avec l’approche qui va suivre.\n\n\n\n### Fallback Mechanism ###\n\nÀ contre-pied de l’amélioration progressive, la dégradation élégante consiste à utiliser des standards à la pointe de la technologie et en phase avec les périphériques de nos temps de manière à offrir une expérience utilisateur la plus agréable possible compte tenu des outils que leur appareil leur offre.\n\nCela permet facilement d’adapter les designs et les fonctionnalités au monde actuel du web. Il va ensuite être question d’ajouter une surcouche pour gérer les anciens périphériques ne disposant pas de quoi utiliser les nouvelles fonctionnalités (comme IE8 ou IE7). Il convient alors de les rendre utilisable sans nécessairement reproduire à l’identique la fonctionnalité ou le visuel. La structure initiale est souvent légère et adaptée pour une approche Responsive et donc pour faire des versions mobiles (même avec une approche Desktop First).\n\n\n\n\n\n## Maintenant que tout le monde se comprend... ##\n\n...Peut-être pourrez-vous plus aisément bien border le périmètre d'action quand vous réalisez un site Responsive Web Design ou plus vulgairement une « Version Mobile ».","dates":{"published":{"$date":"2013-09-06T15:15:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","style":"p.eye-catching,\r\n.variation {\r\nmargin-left: 32px;\r\nfont-size: 0.9em;\r\n}","stylesheet":"","title":"Les \u003cspan\u003econcepts\u003c/span\u003e autour du \u003cspan\u003eResponsive Web Design\u003c/span\u003e","urn":"les-concepts-autour-du-responsive-web-design","description":"Le « Responsive Web Design » comme son nom l’indique est le concept de « Responsive Design » adapté au Web.","image":"https://blog.lesieur.name/media/images/upload/responsive-web-design.jpg"}
{"_id":{"$oid":"530f5f63620731fe86cb71b4"},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48cc"}],"content":"On parle souvent de la grande vélocité de Node.js et de son brillant avenir. Mais il n'est pas toujours judicieux de l'utiliser. Pour certains cas d'utilisations, c'est le meilleur choix à faire (application web temps réel). Pour d'autres cas, ça le deviendra mais c'est encore un peu tôt (CMS web). Et pour d'autre il ne sera jamais réellement adapté (intelligence artificielle). Voici [l'adaptation française] d'un article de [Felix Geisendörfer], contributeur Node.js. Il nous explique de manière pragmatique comment raisonnablement et rationnellement il est possible d'utiliser Node.js pour son business.\n\n [l'adaptation française]: http://nodeguide.com/convincing_the_boss.html (Felix's Node.js Convincing the boss guide)\n [Felix Geisendörfer]: http://felixge.de/ (Felix Geisendörfer) \n\n« Maintenant que vous êtes au point sur l'utilisation de Node.js, il est temps de convaincre votre boss. Enfin peut-être. J'ai eu l'occasion de conseiller différente entreprise sur la question : Node.js est la bonne technologie ? Et parfois, la réponse est tout simplement non.\n\nCe guide est ma collection opiniâtre des conseils pour ceux d'entre vous qui veulent savoir si Node.js fait sens pour leur entreprise, et si oui, comment convaincre la direction.\n\n\n\n\n\n## Les mauvais cas d'utilisation ##\n\n### Des applications à forte charge CPU ###\n\nMême si j'adore Node.js, il y a plusieurs cas d'utilisation où ça n'a pas de sens de l'utiliser. Les cas les plus évidents sont ceux des applications avec une importante utilisation du CPU avec peu de communication Entrée/Sortie. Donc, si vous avez l'intention d'écrire un logiciel d'encodage vidéo, d'intelligence artificielle ou un logiciel similaire gourmand en processeur, s'il vous plaît n'utiliser pas Node.js. Alors qu'en Node.js vous allez un peu galérer, vous aurez probablement de meilleurs résultats avec C ou C++.\n\nCela étant dit, Node.js vous permet d'écrire facilement des addons C++, de sorte que vous pourriez l'utiliser comme un moteur de script utilisant lui-même vos algorithmes ultra-secrets.\n\n\n\n\n### Des applications HTML simple (Créer, Lire, Mettre à jour et Effacer) ###\n\nAlors que Node.js devient un outil amusant pour écrire toutes sortes d'applications web, ne vous attendez pas à ce qu'il vous fournisse plus que PHP, Ruby ou Python sur ces points. Oui, votre application sera probablement plus évolutive, mais cependant votre application ne vous permettra pas, magiquement, d'obtenir plus de trafic tout simplement parce que vous l'écrivez en Node.js.\n\nLa vérité est que si nous commençons à regarder du côté de bons frameworks Node.js, il n'y a rien de plus puissant que Rails, CakePHP ou Django sur la scène à l'heure actuelle. Si la plupart de vos applications se contente d'un simple rendu HTML basé sur une base de données précise, s'aider de Node.js ne vous fournira pas beaucoup d'avantages commerciaux tangibles.\n\n\n\n\n### NoSQL + Node.js + Truc qui fait classe mais c'est tout ###\n\nSi l'architecture pour vos prochaines applications contient du NoSQL, arrêtez vous un instant, et lisez ceci :\n\nOui, Redis, CouchDB, MongoDB, Riak, Casandra, etc... ont tous l'air vraiment tentant, mais c'est peut-être la pomme rouge à laquelle Eve n'a pas pu résister. Si vous prenez déjà un risque technologique avec Node.js, vous ne devriez pas les multiplier avec plus de technologie que vous ne comprenez probablement pas encore complètement.\n\nBien sûr, il y a des cas d'utilisation légitimes pour choisir une base de données orientée document. Mais si vous essayez de créer une entreprise basée sur votre logiciel, s'en tenir à la technologie des bonnes vieilles base de données relationnelles (comme postgres ou mysql) pourrait bien être plus pertinent que satisfaire votre esprit de nerd et d'impressionner vos amis.\n\n\n\n\n\n## Les bons cas d'utilisation ##\n\n### Les APIs JSONP ###\n\nConstruire des APIs légère REST / JSON est quelque chose pour laquelle Node.js brille vraiment. Son modèle non-bloquant Entrée/Sortie combiné à JavaScript en font un excellent choix pour emballer d'autres sources de données telles que des bases de données ou des services Web et de les exposer via une interface JSON.\n\n\n\n\n### Applications simple d'une seule page ###\n\nSi vous envisagez d'écrire une application avec une page lourde unique avec AJAX (pensez à Gmail), Node.js répond parfaitement au besoin. La capacité de traiter de nombreuses demandes à la secondes avec un temps de réponse faible, ainsi que le partage des tâches comme la validation d'informations entre le client et le serveur en font un excellent choix pour les applications web modernes qui font beaucoup de traitement sur ​​le client.\n\n\n\n\n### Les lignes de commande des OS ###\n\nAvec Node.js qui est encore jeune, c'est tentant de re-inventer toutes sorte de software pour lui. Cependant, une meilleure approche est de taper dans le vaste univers des lignes de commandes de vos OS. Les capacités de Node permettent de créer des milliers de processus fils et de traiter leurs retours comme un flux permettant de tirer partie des développements existants.\n\n\n\n\n### Flux de données ###\n\nGénéralement les traitements web se limitent aux requêtes et réponses http et aux évènements piochés dans une pile. La vérité est que ces informations font partie d'un flux et les applications Node.js peuvent tirer partie de cela. Le plus gros exemple est celui des uploads en temps réel et également des ponts entre les différentes couches de données.\n\n\n\n\n### Les applications en temps réel ###\n\nUn autre grand aspect de Node.js est la facilité avec laquelle vous pouvez développer des systèmes temps réel souples. Par cela j'entends des trucs comme Twitter, des logiciels de chat, de paris sportifs ou des interfaces avec les réseaux de messageries instantanées.\n\nMais soyez prudent, bien que JavaScript soit un langage dynamique avec garbage collector, votre temps de réponse peut dépendre du temps que mets le garbage collector à faire son ménage (à ce moment votre programme est arrêté). Donc n'essayez pas de créer un system temps réel ultra-précis en Node, cela nécessite des temps de réponses cohérents. Erlang est probablement un meilleurs choix pour ce type d'application.\n\n\n\n\n\n## Convaincre le Boss ##\n\nUne fois que vous avez déterminé que votre cas d'utilisation est parfait pour Node.js, il est temps pour convaincre votre patron ou votre hiérarchie qu'il faut l'utiliser.\n\n\n\n\n### Construction d'un prototype ###\n\nLa meilleure façon de mettre le pied dans la porte, est de suggérer de prendre une semaine pour construire un prototype simple d'une certaine partie de l'application que vous avez à l'esprit. Il est généralement facile d'obtenir le feu vert pour cela, car cela n'implique pas encore un engagement à long terme.\n\n\n\n\n### Trouver des développeurs ###\n\nPensez ce que vous voulez du JavaScript, mais il devient le langage commun à tout les appareils de programmation. Quasiment tous les ordinateurs personnels à un ou plusieurs interpréteurs JavaScript (navigateurs) installés, ce qui signifie qu'il est presque impossible à la plupart des développeurs web de ne pas l'apprendre à un moment donné dans leur carrière.\n\nCela signifie que vous avez un grand pannel de compétences dans vos rangs, et vous avez probablement déjà beaucoup de talent dans votre propre entreprise. Donc, si vous travaillez pour une entreprise en pleine croissance, c'est un solide argument favorisant Node.js.\n\n\n\n\n### Communauté dynamique ###\n\nA ce stade, la communauté Node.js se développe à un rythme fou, attirant certains des développeurs les plus brillants de l'industrie. Cela signifie aussi que l'écosystème de Node augmente chaque jour, et il est également facile d'obtenir un support gratuit et commercial auprès de diverses sources.\n\n\n\n\n### Performance ###\n\nCet argument doit être soigneusement avancé, mais si la performance est un aspect essentiel de votre demande, Node.js a beaucoup à offrir. Avec cinq entreprises (Mozilla, Google, Apple, Microsoft, Opera) en compétition sur la meilleure mise en œuvre JavaScript, l'interprèteur sous-jacente de Node (V8 de Google) est devenu incroyablement rapide, et cela s'améliore de jour en jour.\n\nEn combinant cela avec le modèle non-bloquant de Node en Entrée/Sortie, vous pouvez toujours vous accrocher pour avoir un programme moux. La plupart des applications Node sont facilement capable de gérer des milliers de connexions simultanées, ce qui peut-être considéré comme un standard pour lui.\n\n\n\n\n### Risque pour l'entreprise ###\n\nL'un des risques avec un jeune projet open source est le manque d'engagement à long terme par ses auteurs. Ce n'est pas le cas avec Node.js. Node est actuellement sponsorisé par Joyent, qui a embauché Ryan Dahl et plusieurs autres contributeurs de base, il y a donc une véritable force économique soutenant le développement futur du projet.\n\nEntre autres choses, cela a déjà tenté des sociétés comme Yahoo! et HP (anciennement Palm) qui ont assez de confiance en Node.js pour construire leurs produits de prochaine génération dessus. Votre Boss peut certainement se détendre en lisant leurs témoignages rassurants.\n\n\n\n\n\n## Convaincre un client ##\n\nSi vous êtes une société autonome ou un freelance, convaincre un client d'utiliser Node.js peut-être une autre histoire. Après tout, ils sont généralement très dépendant de votre avis, tout autant que du support continu que vous appportez à leur logiciels.\n\nMon conseil est d'être un peu plus conservateur, et vérifier tout de même si Node est un bon ajustement. Si c'est le cas, assurez-vous que vous avez les ressources et le temps pour soutenir la demande sur le long terme. L'équipe Node.js publie de nouvelles versions à un rythme rapide, et donc vous ne devez jamais attendre plus de 3 à 6 mois pour le mettre à jour vers la dernière version. »","dates":{"published":{"$date":"2013-09-09T09:11:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Node.js : le \u003cspan\u003eguide\u003c/span\u003e pour convaincre son Boss","urn":"node-js-le-guide-pour-convaincre-son-boss"}
{"_id":{"$oid":"530f5f63620731fe86cb71b7"},"cache":{"comment":{"number":0}},"categories":[],"content":"\u003cp\u003eCet article est une adaptation du Google JavaScript Style Guide en FR. La partie ci dessous est spécifique à la manière de travailler de Google et ne constitue pas en soit une manière de procéder absolue, cependant cela peut vous servir de base de travail en groupe. Plusieurs conseils sont d'ailleurs très bon à suivre comme le fait d'attacher explicitement ses contextes d'exécution à une variable faisant office de « namespace » et d'autres discutable comme le nombre d'espace nécéssaire à l'indentation. J'espère que tout ceci pourra vous aiguiller du mieux possible.\u003c/p\u003e\n\n\u003cdiv class=\"correct-practice\"\u003e\n\u0009\u003cdiv class=\"title highlighting\"\u003eGoogle JavaScript Style Guide en français\u003c/div\u003e\n\u0009\u003cnav class=\"content\"\u003e\n\u0009\u0009\u003col\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca class=\"highlighting\" href=\"http://blog.haeresis.fr/les-bonnes-pratiques-javascript-selon-google/\" title=\"Les bonnes pratiques JavaScript selon Google\"\u003eLes bonnes pratiques JavaScript selon Google\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca class=\"highlighting\" href=\"./conventions-et-commentaires-javascript-selon-google/\" title=\"Conventions et commentaires JavaScript selon Google\"\u003eConventions et commentaires JavaScript selon Google\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u003c/ol\u003e\n\u0009\u003c/nav\u003e\n\u003c/div\u003e\n\n\u003ch2\u003eGoogle JavaScript Style Guide en français\u003c/h2\u003e\n\n\u003cp\u003eVous pourrez trouver l'article original \u003ca href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\" title=\"Google JavaScript Style Guide\"\u003eGoogle JavaScript Style Guide\u003c/a\u003e derrière \u003ca href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\" title=\"Google JavaScript Style Guide\"\u003ece lien\u003c/a\u003e. Au moment où je réalise cette traduction, le document est en \u003cspan class=\"eye-catching\"\u003eversion 2.93\u003c/span\u003e.\u003c/p\u003e\n\n\u003ch2\u003eAvant-propos\u003c/h2\u003e\n\n\u003cp\u003eJavaScript est le principal langage de programmation de la partie cliente d'un navigateur web utilisé par beaucoup de projets Google open-source. Ce guide de style représente la liste des bonnes et des mauvaises pratiques lors d'un développement JavaScript.\u003c/p\u003e\n\n\u003ch2\u003eRègles du langage JavaScript\u003c/h2\u003e\n\n\u003cp\u003eLire mon précédent article : \u003ca class=\"highlighting\" href=\"./les-bonnes-pratiques-javascript-selon-google/\" title=\"Les bonnes pratiques JavaScript selon Google\"\u003eLes bonnes pratiques JavaScript selon Google\u003c/a\u003e.\u003c/p\u003e\n\n\u003ch2\u003eConventions pour le JavaScript\u003c/h2\u003e\n\n\u003ch3\u003eNommage\u003c/h3\u003e\n\n\u003cp\u003e\n\u0009En générale, nommé \n\u0009les fonctions \u003csamp\u003efunctionNamesLikeThis\u003c/samp\u003e, \n\u0009les variables \u003csamp\u003evariableNamesLikeThis\u003c/samp\u003e,\n\u0009les classes (constructeur) \u003csamp\u003eClassNamesLikeThis\u003c/samp\u003e,\n\u0009les énumérations \u003csamp\u003eEnumNamesLikeThis\u003c/samp\u003e,\n\u0009les méthodes \u003csamp\u003emethodNamesLikeThis\u003c/samp\u003e,\n\u0009les constantes \u003csamp\u003eCONSTANT_VALUES_LIKE_THIS\u003c/samp\u003e,\n\u0009les propriétés \u003csamp\u003efoo.namespaceNamesLikeThis.bar\u003c/samp\u003e et\n\u0009les noms de fichier \u003csamp\u003efilenameslikethis.js\u003c/samp\u003e.\n\u0009- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\n\u0009\u003ch4\u003ePropriétés et méthodes\u003c/h4\u003e\n\n\u0009\u003cul\u003e\n\u0009\u0009\u003cli\u003eLes propriétés et méthodes privées (Private) doivent commencé par un underscore.\u003c/li\u003e\n\u0009\u0009\u003cli\u003eLes propriétés et méthodes protégées (Protected) doivent être nommée sans commencé par un underscore (comme les publiques).\u003c/li\u003e\n\u0009\u003c/ul\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Pour plus d'informations sur \u003csamp\u003eprivate\u003c/samp\u003e et \u003csamp\u003eprotected\u003c/samp\u003e, rendez-vous à la section ««««««««««««««visibilité»»»»»»»»»»»».\n\u0009\u003c/p\u003e\n\n\u0009\u003ch4\u003eParamètres de fonctions et de méthodes\u003c/h4\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Les arguments de fonction optionnelle doivent commencé par \u003csamp\u003eopt_\u003c/samp\u003e.\n\u0009\u003c/p\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Les fonctions pouvant prendre un nombre variable d'arguments en entrée doivent avoir un dernier argument nommé \u003csamp\u003evar_args\u003c/samp\u003e. Vous ne devez, dans votre code, non plus faire référence à \u003csamp\u003evar_args\u003c/samp\u003e ; utilisez un tableau d'arguments.\n\u0009\u003c/p\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Les arguments optionnelles peuvent également prendre l'annotation \u003csamp\u003e@param\u003c/samp\u003e en commentaire. Comme les deux conventions sont accepté par les compilateurs, utiliser les deux est préférable.\n\u0009\u003c/p\u003e\n\n\u0009\u003ch4\u003eAccesseurs Get et Set\u003c/h4\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Nous vous décourageons d'utiliser les accesseurs EcmaScript 5 pour rendre accessible les propriétés. Cependant, s'ils douvent être utilisés, les getteurs ne montre aucan signe d'utilité.\n\u0009\u003c/p\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003e/**\n * MAUVAIS -- Ne faites PAS ça.\n */\nvar foo = { get next() { return this.nextId++; } };\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003ch4\u003eDes fonctions comme accesseurs\u003c/h4\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Les méthodes de Get ou de Set pour les propriétés ne sont pas requis. Cependant s'ils doivent être utilisés, les Getters doivent être nommés \u003csamp\u003egetFoo()\u003c/samp\u003e et les Setters doivent être nommés \u003csamp\u003esetFoo(value)\u003c/samp\u003e (Pour les booléen, \u003csamp\u003eisFoo()\u003c/samp\u003e est également possible, et souvent cela sonne mieux).\n\u0009\u003c/p\u003e\n\n\u0009\u003ch4\u003eLes espaces de nom (Namespaces)\u003c/h4\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009JavaScript n'a pas de base de système de package et d'espace de nom.\n\u0009\u003c/p\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Les conflits de nom de Variables Globales sont difficile à débogguer, et cause des problèmes insolubles quand deux projets essaient d'être intégrés ensemble. Dans l'optique de rendre du code JavaScript commun partageable, nous avons adopté une convention pour prévenir les conflits. \n\u0009\u003c/p\u003e\n\n\u0009\u003cp\u003e\u003cspan class=\"highlighting\"\u003eUtilisation de namespaces pour le code global\u003c/span\u003e\u003c/p\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009TOUJOURS préfixer une variable dans le champ lexical global avec un espace de nom relatif au projet ou à la librairie. Si vous travaillez sur « Project Sloth », un nom possible serait le namespace \u003csamp\u003esloth.*\u003c/samp\u003e\n\u0009\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003evar sloth = {};\n\nsloth.sleep = function() {\n  ...\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Beaucoup de librairie JavaScript, tout comme \u003ca href=\"http://code.google.com/closure/library/\" title=\"the Closure Library\"\u003ethe Closure Library\u003c/a\u003e et \u003ca href=\"http://www.dojotoolkit.org/\" title=\"Dojo toolkit\"\u003eDojo toolkit\u003c/a\u003e vous fournissent des fonctions de hauts niveaux pour déclarer vos espaces de nom.\n\u0009\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003egoog.provide('sloth');\n\nsloth.sleep = function() {\n  ...\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003e\u003cspan class=\"highlighting\"\u003eRespecter la paternité d'espace de nom\u003c/span\u003e\u003c/p\u003e\n\n\u0009\u003cp\u003eQuand vous choisissez de créer un espace de nom enfant, assurez-vous que les propriétaire de l'espace de nom parent en sont informés. Si vous démarrez un projet qui créé des « hats » pour les « sloths », soyez sure que l'équipe en charge de \u003csamp\u003esloth\u003c/samp\u003e sait que vous utilisez \u003csamp\u003esloth.hats\u003c/samp\u003e.\u003c/p\u003e\n\n\u0009\u003cp\u003e\u003cspan class=\"highlighting\"\u003eUtiliser des espaces de nom différent pour le code externe et le code interne\u003c/span\u003e\u003c/p\u003e\n\n\u0009\u003cp\u003e« Un code externe » est un code qui vient de l'extérieur de la base de code, et il est compilé indépendemment. Les espaces de nom externe et interne doivent être strictement séparé. Si vous utilisez une librairie externe vous donnant accès à \u003csamp\u003efoo.hats.*\u003c/samp\u003e, votre code interne ne doit pas être défini dans \u003csamp\u003efoo.hats.*\u003c/samp\u003e, car cela pourrait poser problème à d'autre équipe voulant ajouter des espaces de nom au votre (qui ne vous appartient pas).\u003c/p\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003efoo.require('foo.hats');\n\n/**\n * MAUVAIS -- Ne faites PAS ça.\n * @constructor\n * @extends {foo.hats.RoundHat}\n */\nfoo.hats.BowlerHat = function() {\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Si vous avez besoin de définir de nouvelles APIs dans un espace de nom externe, vous allez devoir exporter explicitement ces fonctions. Votre code appelera des APIs internes par leurs espaces de nom internes, ceci pour la robustesse et une optimisation du code par le compileur.\n\u0009\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003efoo.provide('googleyhats.BowlerHat');\n\nfoo.require('foo.hats');\n\n/**\n * @constructor\n * @extends {foo.hats.RoundHat}\n */\ngoogleyhats.BowlerHat = function() {\n  ...\n};\n\ngoog.exportSymbol('foo.hats.BowlerHat', googleyhats.BowlerHat);\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003e\u003cspan class=\"highlighting\"\u003eCréer des alias pour les longs espace de nom facilite la lecture\u003c/span\u003e\u003c/p\u003e\n\n\u0009\u003cp\u003eUtilisez des alias locals sur les variables pour augmenter la lisibilité de votre code. Le nom pourra concorder avec le dernier nom de variable de la chaine d'espace de nom.\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003e/**\n * @constructor\n */\nsome.long.namespace.MyClass = function() {\n};\n\n/**\n * @param {some.long.namespace.MyClass} a\n */\nsome.long.namespace.MyClass.staticHelper = function(a) {\n  ...\n};\n\nmyapp.main = function() {\n  var MyClass = some.long.namespace.MyClass;\n  var staticHelper = some.long.namespace.MyClass.staticHelper;\n  staticHelper(new MyClass());\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eNe créer pas d'alias sur les espaces de nom. Les alias d'espace de nom doivent uniquement être créé en utilisant «««««««««««««««««««««««««goog.scope »»»»»»»»»»»»»»»»»»»»»»»»».\u003c/p\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003emyapp.main = function() {\n  var namespace = some.long.namespace;\n  namespace.MyClass.staticHelper(new namespace.MyClass());\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003e\n\u0009\u0009Il est donc interdit d'accéder à une propriété d'un alias, sauf si c'est un enumérateur.\n\u0009\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003e/** @enum {string} */\nsome.long.namespace.Fruit = {\n  APPLE: 'a',\n  BANANA: 'b'\n};\n\nmyapp.main = function() {\n  var Fruit = some.long.namespace.Fruit;\n  switch (fruit) {\n    case Fruit.APPLE:\n      ...\n    case Fruit.BANANA:\n      ...\n  }\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003emyapp.main = function() {\n  var MyClass = some.long.namespace.MyClass;\n  MyClass.staticHelper(null);\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eNe jamais créer d'alias dans le champ lexical global. Utilisez-les uniquement dans des contextes d'exécution interne.\u003c/p\u003e\n\n\u0009\u003ch4\u003eNom de fichier\u003c/h4\u003e\n\n\u0009\u003cp\u003eLes noms de fichier doivent être écris uniquement avec des minuscules en vu d'enrayer la confusion sur les plateformes sensibles à la casse. Les nom de fichier doivent finir par \u003csamp\u003e.js\u003c/samp\u003e, et ne doivent contenir aucune ponctuation excepté pour - ou _ (préferrez - à _).\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eMéthodes toString() personnalisées\u003c/h3\u003e\n\n\u003cp\u003e\nDoit toujours marcher sans effets de bord.\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003e\n\u0009\u0009Vous pouvez contrôler la manière dont un objet ce retourne sous forme de chaine de caractère en définissant une méthode \u003csamp\u003etoString()\u003c/samp\u003e personnalisée. Cela est bien, mais vous devez vous assurer que votre méthode (1) fontionne dans tous les cas et (2) qu'elle n'a pas d'effets de bord. Si votre méthode ne possède pas ces critères, vous irez droit à la catastrophe. Par exemple, si \u003csamp\u003etoString()\u003c/samp\u003e appelle une méthode qui doit faire une assertion, l'assertion peut se solder par le retour du nom de l'objet qui l'a fait rater, ce qui bien sur requier d'appeler \u003csamp\u003etoString()\u003c/samp\u003e.\n\u0009\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eInitialisation différée\u003c/h3\u003e\n\n\u003cp\u003e\nOK.\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003e\n\u0009\u0009Il n'est pas toujours possible d'initialiser une variable au moment ou elle est déclarée, en ce sens l'initialisation différée est une bonne chose.\n\u0009\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eChamp lexical explicite (contexte d'execution / scope)\u003c/h3\u003e\n\n\u003cp\u003e\nToujours.\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003e\n\u0009\u0009Utilisez toujours un champ lexical explicite - cela améliore la portabilité et la clarté. Par exemple, n'attaché pas implicitement un ensemble de variable à l'objet \u003csamp\u003ewindow\u003c/samp\u003e. Il est possible ainsi d'utiliser votre code dans un autre programme ou l'objet \u003csamp\u003ewindow\u003c/samp\u003e n'existerrait pas.\n\u0009\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eFormattage de code\u003c/h3\u003e\n\n\u003cp\u003e\nDéplier pour plus d'informations.\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003e\n\u0009\u0009Nous suivons (chez Google) \u003ca href=\"http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Formatting\" title=\"Règle de formatage C++\"\u003eles règles de formatage C++\u003c/a\u003e dans l'idée, avec des clarifications additionnelles.\n\u0009\u003c/p\u003e\n\n\u0009\u003ch4\u003eAccolades\u003c/h4\u003e\n\n\u0009\u003cp\u003eÀ cause des insertions de points virgules, toujours ouvrir ceux-ci sur la même ligne que ce qui demande l'ouverture d'une accolade. Par example :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003eif (something) {\n\u0009// ...\n} else {\n\u0009// ...\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003ch4\u003eInitialisation d'objet et de tableau\u003c/h4\u003e\n\n\u0009\u003cp\u003eL'initialisation ce fait sur une seule ligne autant que possible.\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003evar arr = [1, 2, 3]; // Pas d'espace aprés [ ni avant ].\nvar obj = {a: 1, b: 2, c: 3}; // Pas d'espace aprés { ni avant }.\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eLes tableaux et objets initialisés sur plusieurs lignes sont indentés de deux espaces, avec l'accolade ouvrante sur la même ligne :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003e// Initialisation d'objet.\nvar inset = {\n  top: 10,\n  right: 20,\n  bottom: 15,\n  left: 12\n};\n\n// Initialisation de tableau.\nthis.rows_ = [\n  '\"Slartibartfast\" \u0026lt;fjordmaster@magrathea.com\u0026gt;',\n  '\"Zaphod Beeblebrox\" \u0026lt;theprez@universe.gov\u0026gt;',\n  '\"Ford Prefect\" \u0026lt;ford@theguide.com\u0026gt;',\n  '\"Arthur Dent\" \u0026lt;has.no.tea@gmail.com\u0026gt;',\n  '\"Marvin the Paranoid Android\" \u0026lt;marv@googlemail.com\u0026gt;',\n  'the.mice@magrathea.com'\n];\n\n// Utilisé en paramètre de méthode.\ngoog.dom.createDom(goog.dom.TagName.DIV, {\n  id: 'foo',\n  className: 'some-css-class',\n  style: 'display:none'\n}, 'Hello, world!');\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eLes longs attributs ou valeurs presentent des problèmes dans une liste d'initialisation, aussi préférrez toujours une initialisation non alignée. Par exemple :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003eCORRECT_Object.prototype = {\n  a: 0,\n  b: 1,\n  lengthyName: 2\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eMais pas comme ça :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003eWRONG_Object.prototype = {\n  a          : 0,\n  b          : 1,\n  lengthyName: 2\n};\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003ch4\u003eParamètres de fonctions\u003c/h4\u003e\n\n\u0009\u003cp\u003eQuand cela est possible, touts les paramètres de fonctions doivent être écrits sur la même ligne. S'il dépasse 80 caractères, les paramètres doivent être renvoyé à la ligne de manière lisible. Pour gagner de la place, vous pouvez les aligner par groupe de 80 caractères ou le cas échéant em mettre un par ligne pour augmenter la lisibilité. L'indentation doit être faites de 4 espaces, ou être alignée avec la paranthèse ouvrante. Ci-dessous vous trouverrez les exemples les plus commun de mise en groupe et retour à la ligne des arguments :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003e// Quatre espace, par groupe de 80. Marche avec les longs nom de fonctions.\n// Par groupe de 80, prend peu de place.\ngoog.foo.bar.doThingThatIsVeryDifficultToExplain = function(\n    veryDescriptiveArgumentNumberOne, veryDescriptiveArgumentTwo,\n    tableModelEventHandlerProxy, artichokeDescriptorAdapterIterator) {\n  // ...\n};\n\n// Quatre espace, un paramètre par ligne. Marche avec les longs nom de fonctions,\n// Gardez le nom, et mettez en avant chaque paramètres.\ngoog.foo.bar.doThingThatIsVeryDifficultToExplain = function(\n    veryDescriptiveArgumentNumberOne,\n    veryDescriptiveArgumentTwo,\n    tableModelEventHandlerProxy,\n    artichokeDescriptorAdapterIterator) {\n  // ...\n};\n\n// Indentation alignée à la paranthèse, par groupe de 80.\n// Prend peu de place.\nfunction foo(veryDescriptiveArgumentNumberOne, veryDescriptiveArgumentTwo,\n             tableModelEventHandlerProxy, artichokeDescriptorAdapterIterator) {\n  // ...\n}\n\n// Indentation alignée à la paranthèse, un paramètre par ligne.\n// Gardez le nom, et mettez en avant chaque paramètres.\nfunction bar(veryDescriptiveArgumentNumberOne,\n             veryDescriptiveArgumentTwo,\n             tableModelEventHandlerProxy,\n             artichokeDescriptorAdapterIterator) {\n  // ...\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eQuand une fonction appelée est elle même indenté vis à vis de son parent, vous êtes libre d'indenter les paramètres par rapport à l'indentation du parent. Ceux qui suit est un exemple d'indentation acceptable.\u003c/p\u003e\n\u0009\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003eif (veryLongFunctionNameA(\n        veryLongArgumentName) ||\n    veryLongFunctionNameB(\n        veryLongArgumentName)) {\n  veryLongFunctionNameC(veryLongFunctionNameD(\n      veryLongFunctioNameE(\n          veryLongFunctionNameF)));\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003ch4\u003ePassage de fonction anonymes\u003c/h4\u003e\n\n\u0009\u003cp\u003eQuand vous déclarez une fonction anonyme dans une liste de paramètre d'appel d'une fonction, le corps de la fonction doit être indenté de deux espaces vis à vis de la ligne d'ouverture de la fonction, ou de deux espace par rapport au mot-clé \u003csamp\u003efunction\u003c/samp\u003e. Ceci dans le but de rendre le corps de la fonction anonyme plus facile à lire (c'est-à-dire pas écrasé à droite de votre éditeur).\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003eprefix.something.reallyLongFunctionName('whatever', function(a1, a2) {\n  if (a1.equals(a2)) {\n    someOtherLongFunctionName(a1);\n  } else {\n    andNowForSomethingCompletelyDifferent(a2.parrot);\n  }\n});\n\nvar names = prefix.something.myExcellentMapFunction(\n    verboselyNamedCollectionOfItems,\n    function(item) {\n      return item.name;\n    });\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n \u0009\u003ch4\u003eCréer des alias avec goog.scope\u003c/h4\u003e\n\n \u0009\u003cp\u003e\u003csamp\u003e\u003ca href=\"https://docs.google.com/document/pub?id=1ETFAuh2kaXMVL-vafUYhaWlhl6b5D9TOvboVg7Zl68Y\" title=\"Créer des alias avec goog.scope\"\u003egoog.scope\u003c/a\u003e\u003c/samp\u003e peut être utilisé pour racourcir les références à un espace de nom (namespace) dans les programmes en utilisant la librairie \u003ca href=\"http://code.google.com/closure/library/\" title=\"the Closure Library\"\u003ethe Closure Library\u003c/a\u003e.\u003c/p\u003e\n\n\u0009\u003cp\u003eSeulement un \u003csamp\u003egoog.scope\u003c/samp\u003e peut être invoqué par fichier. Toujours placé dans le contexte d'exécution global.\u003c/p\u003e\n\n\u0009\u003cp\u003eL'ouverture \u003csamp\u003egoog.scope (function () {\u003c/samp\u003e doit être exactement précédée par un saut de ligne et être à la suite de l'utilisation des \u003csamp\u003egoog.provide\u003c/samp\u003e, des \u003csamp\u003egoog.require\u003c/samp\u003e, ou des commentaires de haut de fichiers. La fermeture doit se faire à la dernière ligne du fichier. Ajoutez \u003csamp\u003e// goog.scope\u003c/samp\u003e à la suite de la ferneture. Séparrez le commentaire du point-virgule de deux espaces.\u003c/p\u003e\n\n\u0009\u003cp\u003eDe la même manière qu'avec les espaces de nom en C++, n'indentez pas après l'utilisation de \u003csamp\u003egoog.scope\u003c/samp\u003e. À la place, continuez au caractère 0 de la ligne.\u003c/p\u003e\n\n\u0009\u003cp\u003eLes alias de nom ne pourront pas être ré-assignés à d'autres objets (ex : la plupard des constructeurs, les enumérateurs ou même les espaces de nom). Ne faites pas ça (voir plus loin comment réassigné un alias à un constructeur) :\u003c/p\u003e\n\n\u0009\u003cdiv class=\"worst-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003egoog.scope(function() {\nvar Button = goog.ui.Button;\n\nButton = function() { ... };\n...\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eLes noms doivent être les mêmes que la dernière propriété du contexte global qui en faisait un alias.\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003egoog.provide('my.module.SomeType');\n\ngoog.require('goog.dom');\ngoog.require('goog.ui.Button');\n\ngoog.scope(function() {\nvar Button = goog.ui.Button;\nvar dom = goog.dom;\n\n// Faire un nouvel alias juste après la déclaration d'un constructeur.\nmy.module.SomeType = function() { ... };\nvar SomeType = my.module.SomeType;\n\n// Déclarer une méthode sur le prototype comme à l'accoutumé.\nSomeType.prototype.findButton = function() {\n  // Button as été défini comme alias plus haut.\n  this.button = new Button(dom.getElement('my-button'));\n};\n...\n});  // goog.scope\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n \u0009\u003ch4\u003eIndentation des retours à la ligne\u003c/h4\u003e\n\n \u0009\u003cp\u003eÀ l'exception de l'?????????????écriture litéral des tableaux ou objets????????????\u003c/a\u003e, ainsi que les fonctions anonymes, tous les retours à la ligne doivent être indenté alignée à côté de l'expression du dessus, de quatre espaces (pas de deux) de manière plus marquée que l'expression parente (Ici « à côté de l'expression du dessus » et « expression parente » font référence aux parenthèses du niveau courant).\u003c/p\u003e\n\n\u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003esomeWonderfulHtml = '' +\n                    getEvenMoreHtml(someReallyInterestingValues, moreValues,\n                                    evenMoreParams, 'a duck', true, 72,\n                                    slightlyMoreMonkeys(0xfff)) +\n                    '';\n\nthisIsAVeryLongVariableName =\n    hereIsAnEvenLongerOtherFunctionNameThatWillNotFitOnPrevLine();\n\nthisIsAVeryLongVariableName = siblingOne + siblingTwo + siblingThree +\n    siblingFour + siblingFive + siblingSix + siblingSeven +\n    moreSiblingExpressions + allAtTheSameIndentationLevel;\n\nthisIsAVeryLongVariableName = operandOne + operandTwo + operandThree +\n    operandFour + operandFive * (\n        aNestedChildExpression + shouldBeIndentedMore);\n\nsomeValue = this.foo(\n    shortArg,\n    'Some really long string arg - this is a pretty common case, actually.',\n    shorty2,\n    this.bar());\n\nif (searchableCollection(allYourStuff).contains(theStuffYouWant) \u0026\u0026\n    !ambientNotification.isActive() \u0026\u0026 (client.isAmbientSupported() ||\n                                        client.alwaysTryAmbientAnyways())) {\n  ambientNotification.activate();\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n \u0009\u003ch4\u003eSaut de ligne\u003c/h4\u003e\n\n \u0009\u003cp\u003eUtilisez les sauts de ligne pour grouper de façon logique les portions de code. Par example :\u003c/p\u003e\n\n \u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003edoSomethingTo(x);\ndoSomethingElseTo(x);\nandThen(x);\n\nnowDoSomethingWith(y);\n\nandNowWith(z);\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n \u0009\u003ch4\u003eOpérateurs binaires et ternaires\u003c/h4\u003e\n\n \u0009\u003cp\u003eToujours mettre l'opérateur sur la ligne précédente. Sinon, les sauts de ligne et l'indentation suivent les mêmes règles que dans d'autres guides de style Google. Ce placement de l'opérateur a été initialement convenu rapport à l'insertion de point-virgule automatique. En fait, l'insertion de point-virgule ne peut pas se produire avant un opérateur binaire, tout nouveau code devrait s'en tenir à ce style pour être parfait.\u003c/p\u003e\n\n  \u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003evar x = a ? b : c;  // Tout sur la même ligne est correcte.\n\n// Indentation +4 est OK.\nvar y = a ?\n    longButSimpleOperandB : longButSimpleOperandC;\n\n// indenté avec le premier opérateur est également OK.\nvar z = a ?\n        moreComplicatedB :\n        moreComplicatedC;\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\n\u0009\u003cp\u003eCeci inclut également l'opérateur « point ».\u003c/p\u003e\n\n  \u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003evar x = foo.bar().\n    doSomething().\n    doSomethingElse();\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eParenthèses\u003c/h3\u003e\n\n\u003cp\u003e\nSeulement si elles sont nécéssaire.\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003eÀ utiliser avec parciemonie et uniquement quand la sémantique ou la syntaxe les réclames.\u003c/p\u003e\n\u0009\u003cp\u003eNe jamais utiliser de parenthèse pour les opérateurs unaires comme \u003csamp\u003edelete\u003c/samp\u003e, \u003csamp\u003etypeof\u003c/samp\u003e et \u003csamp\u003evoid\u003c/samp\u003e ou tout autre mot-clé comme \u003csamp\u003ereturn\u003c/samp\u003e, \u003csamp\u003ethrow\u003c/samp\u003e ou tout autres (\u003csamp\u003ecase\u003c/samp\u003e, \u003csamp\u003ein\u003c/samp\u003e ou \u003csamp\u003enew\u003c/samp\u003e).\u003c/p\u003e\n\u003c/div\u003e\n\n\u003ch3\u003eChaînes de caractères\u003c/h3\u003e\n\n\u003cp\u003e\nPréférrez ' plutôt que \".\n- \u003cspan class=\"eye-catching a-like toggle-more\"\u003eEn savoir plus\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cdiv class=\"toggle-content\"\u003e\n\u0009\u003cp\u003ePour une meilleurs lisibilités l'apostrophe (') est préférée aux guillemets (\"). Cela est d'autant plus pratique quand on créer une chaine avec du HTML :\u003c/p\u003e\n\n  \u0009\u003cdiv class=\"best-practice\"\u003e\n\u0009\u0009\u003cdiv class=\"content\"\u003e\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"language-js\"\u003evar msg = 'This is some HTML';\u003c/code\u003e\u003c/pre\u003e\n\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e","dates":{"published":{"$date":"2016-11-09T10:53:00.000Z"},"updated":[]},"others":{"markdown":false,"published":false},"script":"$(\".toggle-more\").click(function () {\n\u0009$(this).parents(\"p\").next(\"div\").toggle('fast');\n});","style":".toggle-content {\r\n\u0009display: none;\r\n}","stylesheet":"","title":"\u003cspan\u003eConventions\u003c/span\u003e et \u003cspan\u003ecommentaires\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e selon \u003cspan\u003eGoogle\u003c/span\u003e","urn":"conventions-et-commentaires-javascript-selon-google"}
{"_id":{"$oid":"530f5f63620731fe86cb71b9"},"cache":{"comment":{"number":0}},"categories":[],"content":"Je remplirai cette partie à la fin de l'article.\n\n## Limit ##\n\n\n\n","dates":{"published":{"$date":"2016-11-09T20:25:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"","stylesheet":"","title":"\u003cspan\u003eComposant\u003c/span\u003e \u003cspan\u003eJavaScript\u003c/span\u003e \u003cspan\u003eresponsive\u003c/span\u003e sans !\u003cspan\u003eimportant\u003c/span\u003e en \u003cspan\u003eCSS\u003c/span\u003e","urn":"composant-javascript-responsive-sans-important-en-css"}
{"_id":{"$oid":"537236809c8e1b22535cb6b6"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"J'ai évoqué [pourquoi je n'utilisais pas Bootstrap](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/). Cependant, l'un des pré-requis pour un nouveau projet est de l'utilisé aussi j'ai retroussé mes manches pour approfondir la philosophie et j'ai déjà commencé à me casser les dents !\n\nAligner un texte à gauche sur _version mobile_ puis à droite sur  _version desktop_ est chose aisé en CSS avec les [Media Queries](http://www.alsacreations.com/article/lire/930-css3-media-queries.html). [Gérer le fait que deux colonnes côte à côte sur _version desktop_ passe l'une sous l'autre sur _version mobile_ l'est également avec Bootstrap](http://getbootstrap.com/css/). Pourtant aligner un texte à gauche sur _version mobile_ puis à droite sur _version desktop_ aussi facilement que la gestion des colonnes n'est pas possible...\n\nJe vais vous présenter un petit pan de code remédiant à cela.\n\n\n\n\n\n## Comment gérer des alignements différents en fonction de la taille ? ##\n\n### Philosophie des grilles ###\n\nLa philosophie utilisé pour gérer différemment les colonnes d'une grille avec Bootstrap en fonction de la taille du périphérique est de jouer avec les 4 préfixes suivant :\n\n- **xs** : défini un comportement à partir de la taille minimal d'un mobile jusqu'à l'infini en grande taille.\n- **sm** : défini un comportement à partir d'une taille type tablette jusqu'à l'infini en grande taille.\n- **md** : défini un comportement à partir d'une taille type desktop jusqu'à l'infini en grande taille.\n- **lg** : défini un comportement à partir d'une taille type grand desktop jusqu'à l'infini en grande taille.\n\nAinsi dans l'exemple ci-dessous notre élément va prendre 12 colonne sur _version mobile_ puis 8 sur _version tablette_ puis 6 sur _version desktop_ et enfin 4 sur _version grand desktop_ sur une base de 12 colonnes.\n\n```html\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-xs-12 col-sm-8 col-md-6 col-lg-4\"\u003eContenu\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n\n\n\n### Étendre la philosophie aux alignements de texte ###\n\nAlors quel ne fut pas ma déception quand j'ai essayé de faire ceci en espérant aligner une image à gauche sur mobile et à droite sur plus grand écran :\n\n```html\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"text-left-xs text-right-md\"\u003eContenu\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n**Le code ci-dessus ne marche pas**. Afin de le rendre fonctionnel, il va falloir ajouter à votre Bootstrap ceci :\n\n```css\n/* Comportement par défaut */,\n.text-left-sm,\n.text-left-md,\n.text-left-lg,\n.text-center-sm,\n.text-center-md,\n.text-center-lg,\n.text-right-sm,\n.text-right-md,\n.text-right-lg,\n.text-justify-sm,\n.text-justify-md,\n.text-justify-lg { \n\u0009text-align: inherit; \n}\n\n/* Style par défaut */\n.text-left-xs { \n\u0009text-align: left; \n}\n.text-center-xs { \n\u0009text-align: center; \n}\n.text-right-xs { \n\u0009text-align: right;\n}\n.text-justify-xs { \n\u0009text-align: justify; \n}\n\n/* Style pour tablette */\n@media (min-width: 768px) {\n\u0009.text-left-sm, \n\u0009.text-left-xs { \n\u0009\u0009text-align: left; \n\u0009}\n\u0009.text-center-sm, \n\u0009.text-center-xs { \n\u0009\u0009text-align: center; \n\u0009}\n\u0009.text-right-sm, \n\u0009.text-right-xs { \n\u0009\u0009text-align: right; \n\u0009}\n\u0009.text-justify-sm, \n\u0009.text-justify-xs { \n\u0009\u0009text-align: justify; \n\u0009}\n}\n\n/* Style pour desktop */\n@media (min-width: 992px) {\n  \u0009.text-left-md, \n  \u0009.text-left-sm, \n  \u0009.text-left-xs { \n  \u0009\u0009text-align: left; \n  \u0009}\n  \u0009.text-center-md, \n  \u0009.text-center-sm, \n  \u0009.text-center-xs { \n  \u0009\u0009text-align: center; \n  \u0009}\n\u0009.text-right-md, \n\u0009.text-right-sm, \n\u0009.text-right-xs { \n\u0009\u0009text-align: right;\n\u0009}\n\u0009.text-justify-md, \n\u0009.text-justify-sm, \n\u0009.text-justify-xs { \n\u0009\u0009text-align: justify;\n\u0009}\n}\n\n/* Style pour grand desktop */\n@media (min-width: 1200px) {\n\u0009.text-left-lg, \n\u0009.text-left-md, \n\u0009.text-left-sm, \n\u0009.text-left-xs {\n\u0009\u0009text-align: left;\n\u0009}\n\u0009.text-center-lg, \n\u0009.text-center-md, \n\u0009.text-center-sm, \n\u0009.text-center-xs {\n\u0009\u0009text-align: center;\n\u0009}\n\u0009.text-right-lg, \n\u0009.text-right-md, \n\u0009.text-right-sm, \n\u0009.text-right-xs {\n\u0009\u0009text-align: right;\n\u0009}\n\u0009.text-justify-lg, \n\u0009.text-justify-md, \n\u0009.text-justify-sm, \n\u0009.text-justify-xs {\n\u0009\u0009text-align: justify;\n\u0009}\n}\n```\n\net le tour est joué.\n\n\n\n\n## Et pour le reste ? ##\n\nJ'imagine que ce n'est pas le seul cas de figure ou j'aurai besoin d'ajouter ce type de comportement. Donc si cela arrive avec d'autres propriétés existantes sans préfixe, suivez juste le même schéma.\n\nEt vous ? Quelles sont vos surcharges utiles ? ","dates":{"published":{"$date":"2014-05-14T10:18:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Alignement de texte Responsive avec Bootstrap","urn":"alignement-de-texte-responsive-avec-bootstrap"}
{"_id":{"$oid":"5374aba4a48cab530ff13478"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"}],"content":"La balise HTML script permet de définir quand le code JavaScript dans votre page est exécuté. Les attributs HTML5 async et defer sont à présent supportés par Firefox, Chrome, Safari et Internet Explorer 10+ (sinon ils sont ignorés) et permettent de modifier le comportement de chargement des scripts. Voici de courtes explications sur les différences de chaque appel.\n\n\n\n\n\n## Tableau Explicatif ##\n\n\u003ctable class=\"parsing-html-demo\"\u003e\n    \u003ctbody\u003e\u003ctr\u003e\n        \u003cth class=\"type\" rowspan=\"3\"\u003e\u003csamp\u003e\u0026lt;script\u0026gt;\u003c/samp\u003e\u003c/th\u003e\n        \u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n        \u003ctd class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n        \u003ctd class=\"load\"\u003eChargement...\u003c/td\u003e\n        \u003ctd class=\"exec\"\u003eExécution JS\u003c/td\u003e\n        \u003ctd colspan=\"2\" class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr class=\"hidden separator\"\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003c/tr\u003e\n\n    \u003ctr\u003e\n        \u003cth class=\"type\" rowspan=\"3\"\u003e\u003csamp\u003e\u0026lt;script defer\u0026gt;\u003c/samp\u003e\u003c/th\u003e\n        \u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n        \u003ctd class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n        \u003ctd class=\"parse load\"\u003e\u003cspan\u003eAnalyse\u003c/span\u003e + Chargement...\u003c/td\u003e\n        \u003ctd colspan=\"2\" class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n        \u003ctd class=\"exec\"\u003eExécution JS\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr class=\"hidden separator\"\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003c/tr\u003e\n\n    \u003ctr\u003e\n        \u003cth class=\"type\" rowspan=\"3\"\u003e\u003csamp\u003e\u0026lt;script async\u0026gt;\u003c/samp\u003e\u003c/th\u003e\n        \u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\u003ctd class=\"hidden\"\u003e-\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr\u003e\n        \u003ctd class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n        \u003ctd class=\"parse load\"\u003e\u003cspan\u003eAnalyse\u003c/span\u003e + Chargement...\u003c/td\u003e\n        \u003ctd class=\"exec\"\u003eExécution JS\u003c/td\u003e\n        \u003ctd colspan=\"2\" class=\"parse\"\u003eAnalyse HTML\u003c/td\u003e\n    \u003c/tr\u003e\n    \u003ctr class=\"hidden\"\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003ctd\u003e-\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\n\n\u003cdiv class=\"parsing-html-demo\"\u003e\n    Legend :\n    \u003cul\u003e\n         \u003cli class=\"load\"\u003eChargement...\u003c/li\u003e\n         \u003cli class=\"exec\"\u003eExécution JS\u003c/li\u003e\n         \u003cli class=\"parse\"\u003eAnalyse HTML\u003c/li\u003e\n    \u003c/ul\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Pour les scripts externes ##\n\n### L'exécution normal ###\n\n`\u003cscript src=\"\"\u003e\u003c/script\u003e`\n\nC'est le comportement standard de l'élément script. L'analyse du code HTML est mise en pause le temps que le script soit exécuté. Pour les serveurs lents et les scripts lourds (en temps d'exécution et poids) cela signifie que l'affichage de la page va mettre du temps.\n\n\n\n\n### L'exécution différée ###\n\n`\u003cscript defer src=\"\"\u003e\u003c/script\u003e`\n\nCela revient à exécuter vos scripts dans l'ordre où ils ont été rencontrés mais seulement à la fin de l'analyse HTML. Cela est la même chose que de mettre vos scripts en pied de page juste avant la fermeture du body mais de tout de même les placer physiquement dans le DOM dans le `header`. En réalité defer existe depuis _IE6_ mais ne garantie pas l'ordre d'exécution avant _IE10_.\n\n\n\n\n### L'exécution asynchrone ###\n\n`\u003cscript async src=\"\"\u003e\u003c/script\u003e`\n\nAucune importance de savoir quand le script sera disponible ? L'asynchrone est votre ami. Le code JavaScript sera exécuté aussitôt qu'il sera disponible. Parfait pour des scripts comme les boutons sociaux ou **Modernizr** (si vous gérez élégamment les phénomènes de [FOUC](http://fr.wikipedia.org/wiki/FOUC)).\n\n\n\n\n\n## Pour les scripts inline ##\n\nLà, async et defer ne servent à rien, ils sont simplement ignorés. Sous Chrome et Safari tous les scripts inline bloque le rendu quelque soit le mot-clé employé et sous Firefox et IE de l'[analyse spéculative](http://web.developpez.com/tutoriels/web/how-browsers-work/#L3-4-2) est faites.\n\n\n\n\n\n## Fallback ##\n\nPour les navigateurs ne supportant pas defer et async comme il se doit vous pouvez utiliser la fallback [async_defer_script.js](https://gist.github.com/fearphage/881274) comme ceci :\n\n```html\n\u003chead\u003e\n     ...\n     \u003c!--[if lt IE 10]\u003e\u003cscript src=\"async_defer_script.js\"\u003e\u003c/script\u003e\u003c![endif]--\u003e\n     ...\n\u003c/head\u003e\n```","dates":{"published":{"$date":"2014-04-24T10:30:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"div.parsing-html-demo {\n\u0009display: none;\n}table.parsing-html-demo {\n    border-collapse:collapse;\n    width: 100%;\n    text-align: center;\n    border-top: dashed 1px #000;  \n    border-bottom: dashed 1px #000;    \n}.parsing-html-demo .separator {\n    border-bottom: dashed 1px #000;    \n}.parsing-html-demo .parse {\n    border-bottom: solid 2px #080;\n    color: #080;\n}.parsing-html-demo span {\n    color: #080;\n}.parsing-html-demo .load {\n    border-top: solid 2px #008;\n    color: #008;\n}.parsing-html-demo .exec {\n    border-top: solid 2px #800;\n    color: #800;\n}.parsing-html-demo .type {\n    vertical-align: middle;\n    width: 20%;\n    font-weight: bold;\n}.parsing-html-demo .hidden {\n    text-indent: -7777px;\n}\n@media (max-width: 460px) {\n\u0009.parsing-html-demo td {\n\u0009\u0009text-indent: -7777px;\n\u0009\u0009letter-spacing: -10px;\n\u0009}\n\u0009div.parsing-html-demo {\n\u0009\u0009display: block;\n\u0009}\n}","title":"\u003cspan\u003eDifférences\u003c/span\u003e entre \u003cspan\u003easync\u003c/span\u003e et \u003cspan\u003edefer\u003c/span\u003e en \u003cspan\u003eHTML5\u003c/span\u003e","urn":"differences-entre-async-et-defer-en-html5"}
{"_id":{"$oid":"5374d4054e21003a10eaa99f"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c0"}],"content":"Récemment, pour travailler avec mes collègues du Back-end C#, j'ai du « abandonner » Sublim Text 3, mes plugins tel que [Hayaku](https://github.com/hayaku/hayaku) ou [Emmet](https://github.com/sergeche/emmet-sublime) et tout un tas de raccourcis me privant d'une productivité non négligeable.\n\nJ'ai bien cru que cela était fini quand je devais travailler sur leurs projets dans leurs environnements mais heureusement il n'en n'est rien ! Suivez-le guide, je vais vous expliquer.\n\n\n\n\n\n## Étape 1 ##\n\nOuvrez Visual Studio, rendez-vous dans « **Tools** » et sélectionnez « **External Tools**... » :\n\n\u003cdiv class=\"img\"\u003e\u003cimg class=\"step-1\" src=\"media/images/upload/XapFz.png\" alt=\"Tools \u003e External Tools...\"\u003e\u003c/div\u003e\n\n\n\n\n\n## Étape 2 ##\n\nCliquez sur « *Add* ». Affectez dans _Title:_ « _Open in Sublim Text_ », rendez-vous dans le dossier d'installation de _Sublim Text_ et affectez dans _Command:_ « `\u003cchemin_installation\u003e/sublim_text.exe` ». Pour la partie _Arguments:_ affectez la valeur « **$(ItemPath):$(CurLine):$(CurCol)** » : Cela dit à Sublim de s'ouvrir dans le bon fichier, à la bonne ligne. Appliquez à _Initial directory:_ la valeur « **$(ItemDir)** ».\n\n\u003cdiv class=\"img\"\u003e\u003cimg class=\"step-2\" src=\"media/images/upload/7EO1r.png\" alt=\"Paramètres...\"\u003e\u003c/div\u003e\n\n\n\n\n\n## Étape 3 ##\n\nMaintenant si vous allez dans « **Menu \u003e Tools** » vous trouverez votre nouvelle commande « _Open in Sublim Text_ ». Et si on lançait maintenant Sublim Text via un raccourci clavier !\n\n\n\n\n\n## Étape 4 ##\n\nRendez-vous dans « **Menu \u003e Tools \u003e Options** », dans « **Environment** » sélectionnez « **Keyboard** ». Dans le champ _Show command containing:_, cherchez « **externalCommand** » et sélectionnez le numéro correspondant à votre item dans la liste des « Externa tools... ». Positionnez-vous ensuite dans _Press shortcut keys:_ et tapez votre combinaison de touche. Cliquez ensuite sur « **Assign** ».\n\nÉvitez les combinaisons déjà existantes.\n\n\u003cdiv class=\"img\"\u003e\u003cimg class=\"step-4\" src=\"media/images/upload/Mo2dB.png\" alt=\"Keybord Shortcut\"\u003e\u003c/div\u003e\n\n\n\n\n\n## Et c'est fait ! ##\n\nSublim Text est maintenant utilisable rapidement ! Une fois vos modifications faites, fermez ou switchez d'application et Visual Studio mettra à jour vos modifications.\n\n\n\n\n\nSource images : [StackOverflow](http://stackoverflow.com/questions/18450402/moving-from-visual-studio-to-sublime-text)","dates":{"published":{"$date":"2014-05-15T15:42:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".article .img {\n    text-align: center;\n}\n\n@media (max-width: 378px) {\n    .article img.step-1 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n@media (max-width: 495px) {\n    .article img.step-2 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n@media (min-width: 780px) and (max-width: 860px) {\n    .article img.step-2 {\n        width: 100%;\n        height: auto;\n    }\n}\n\n.article img.step-4 {\n    width: 100%;\n    height: auto;\n}\n","title":"\u003cspan\u003eUtiliser\u003c/span\u003e \u003cspan\u003eSublim Text\u003c/span\u003e avec \u003cspan\u003eVisual Studio\u003c/span\u003e","urn":"utiliser-sublim-text-avec-visual-studio"}
{"_id":{"$oid":"53772e8525b3faa72aba6590"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b7"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"530ef6a6789c1a55e4fde0af"}],"content":"Pourquoi je n'utilise pas [Bootstrap] ? Cela peut sembler une « évolution » de nos méthodes de travail front-end, mais gare au loup et attention de ne pas tomber dans un travers que le W3C tente d'enrayer au fur et à mesure des évolutions HTML et CSS.\n\nCommençons par le commencement. Qu'est-ce que [Bootstrap] ? Comme pleins d'autres « Bibliothèque » ou « Framework » CSS dans la même veine, [Bootstrap] est un outil permettant d'augmenter la productivité des développeurs front-end le maîtrisant, dans le but de fournir le plus rapidement possible un rendu visuel ergonomique et si possible responsive.\n\nMon problème ne vient pas tant de sa finalité qui est louable, mais bel et bien de la mise en œuvre technique qui permet d'atteindre cette finalité. Pour être concis avant de développer : **l'utilisation faites de [Bootstrap] est une régression pour un travail front-end de qualité**.\n\nJe ne compte persuader personne, et à défaut de convaincre, je vais au moins vous expliquer mon point de vue.\n\n\n\n\n\n## Les deux approches possibles pour de l'intégration front-end ##\n\n### L'approche sémantique / visuelle (ou celle du [W3C](http://www.w3.org/)) ###\n\nCette approche considère que dans un fichier HTML, les balises doivent avoir du sens et être complétées (que ce soit par leur genre, leur nom, leur id ou leur classe) de manière sémantique de façon à donner du sens au document.\n\n\u003e #### Exemple ####\n\u003e Si j'ai deux éléments qui se suivent : le premier pourrait porter l'attribut `class=\"main\"` et le second l'attribut `class=\"aside\"`.\n\n**L'attribut `class` est donc dans cette approche une extension de l'attribut `id` (mais en version multiple) et le HTML garde un unique rôle : le rôle de structure sémantique (que ce soit pour les moteurs de recherche mais également pour les développeurs ; qu'ils s'y connaissent ou non en design).**\n\n\n\n\n### L'approche « Tout en un » (ou celle de [Bootstrap] \u0026amp; cie) ###\n\nCette approche considère que dans un fichier HTML, les balises doivent représenter un visuel et être complétées de manière à laisser transparaître rapidement le résultat visuel.\n\n\u003e #### Exemple ####\n\u003e Si j'ai deux éléments qui se suivent : le premier pourrait porter l'attribut `class=\"column-sm-4 text-left\"` et le second l'attribut `class=\"column-sm-8 text-right\"`.\n\n**L'attribut `class` est donc dans cette approche une extension de l'attribut `style` (mais une sorte de raccourci) où il n'est pas nécessaire de lister les directives CSS en ligne mais dans un fichier CSS séparé.**\n\n_Note : le texte sera toujours à gauche pour la première partie et toujours à droite pour la seconde quelque soit le contexte dans lequel ces portions de HTML se retrouverons._\n\n\n\n\n\n## Comparaison de code des deux approches ##\n\nPour les plus curieux, voici techniquement la différence entres les codes :\n\n\n\n\n### Sémantique et visuel séparé ###\n\n**HTML :**\n\n```html\n\u003cheader\u003e\n    \u003ch1\u003eLe titre\u003c/h1\u003e\n    \u003cnav\u003e\n        \u003cul\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\u003csection\u003e\n    \u003carticle\u003e\n        \u003cp\u003eLe contenu\u003cbr\u003e\n        Le contenu\u003cbr\u003e\n        Le contenu\u003c/p\u003e\n    \u003c/article\u003e\n    \u003caside\u003eLes à cotés\u003c/aside\u003e\n\u003c/section\u003e\n```\n\n**CSS :**\n\n```css\n/* Entrer le padding dans le calcul interne */\nh1,\nnav,\narticle,\naside {\n    box-sizing: border-box;\n}\n\n/* Mettre le titre en gras */\nh1 {\n    font-weight: bold;\n}\n\n/* Centrer les textes du menu */\nnav {\n    text-align: center;\n}\n\n/* Retrait du comportement de liste standard */\nnav ul {\n    padding-left: 0;\n}\nnav li {\n    list-style-type: none;\n}\n\n/* À partir d'une tablette */\n@media (min-width: 768px) {\n\n    /* Empêcher les écoulements de flottants */\n    header:after,\n    section:after {\n        content: \"\";\n        display: block;\n        clear: both;\n    }\n\n    /* Flotter à gauche en 50% */\n    h1,\n    aside {\n        float: left;\n        width: 50%;\n    }\n\n    /* Flotter à droite en 50% */\n    h1,\n    article {\n        float: right;\n        width: 50%;\n    }\n\n    /* Remettre les menus en alignement standard */\n    nav {\n        text-align: left;\n    }\n\n    /* Mettre le menu en ligne */\n    nav li {\n        display: inline-block;\n    }\n\n    /* Placer le titre à droite */\n    h1 {\n        text-align: right;\n    }\n\n}\n```\n\n**Rendu**\n\n\u003e\n\u003cdiv class=\"example-header\"\u003e\n    \u003cdiv class=\"example-logo\"\u003e\u003cp\u003eLe logo\u003c/p\u003e\u003c/div\u003e\n    \u003cdiv class=\"example-menu\"\u003e\n        \u003cul\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n            \u003cli\u003emenu\u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"example-content\"\u003e\n    \u003cdiv class=\"example-main\"\u003e\n        \u003cp\u003eLe contenu\u003cbr\u003e\n        Le contenu\u003cbr\u003e\n        Le contenu\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"example-aside\"\u003e\u003cp\u003eLes à coté\u003c/p\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n_Note : vous pouvez rétrécir votre fenêtre sur périphérique desktop pour voir le résultat mobile._\n\n\n\n\n### Framework CSS comme Bootstrap ###\n\n**HTML :**\n\n```html\n\u003cheader class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003ch1 class=\"col-sm-6 col-sm-push-6 text-right-sm\"\u003e\n            \u003cstrong\u003eLe titre\u003c/strong\u003e\n        \u003c/h1\u003e\n        \u003cnav class=\"col-sm-6 col-sm-pull-6 text-center-xs text-left-sm\"\u003e\n            \u003cdiv class=\"navbar-collapse collapse in\"\u003e\n                \u003cul class=\"nav navbar-nav\"\u003e\n                    \u003cli\u003eMenu\u003c/li\u003e\n                    \u003cli\u003eMenu\u003c/li\u003e\n                    \u003cli\u003eMenu\u003c/li\u003e\n                    \u003cli\u003eMenu\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/div\u003e\n        \u003c/nav\u003e\n    \u003c/div\u003e\n\u003c/header\u003e\n\n\u003csection class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003carticle class=\"col-sm-6 col-sm-push-6\"\u003e\n            \u003cp\u003eLe contenu\u003cbr\u003e\n               Le contenu\u003cbr\u003e\n               Le contenu\u003c/p\u003e\n        \u003c/article\u003e\n        \u003caside class=\"col-sm-6 col-sm-pull-6\"\u003eLes à coté\u003c/aside\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n```\n\n**CSS :**\n\n```html\n\u003c!-- État de boite noire, ça marche tel que la doc l'explique --\u003e\n\u003clink rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\"\u003e\n```\n\n```css\n/* Parce que Bootstrap ne réalise pas tout ce que\nl'on souhaite faire, on surcharge ensuite avec sa\npropre CSS en essayant de conserver\nla philosophie Bootstrap (pas simple) */\n\n/* Comportement par défaut */\n\n.text-center-sm,\n.text-center-md,\n.text-center-lg,\n.text-right-sm,\n.text-right-md,\n.text-right-lg {\n    text-align: inherit;\n}\n\n/* Style par défaut */\n.text-center-xs {\n    text-align: center;\n}\n.text-right-xs {\n    text-align: right;\n}\n\n/* Style pour tablette */\n@media (min-width: 768px) {\n    .text-center-sm,\n    .text-center-xs {\n        text-align: center;\n    }\n    .text-right-sm,\n    .text-right-xs {\n        text-align: right;\n    }\n}\n\n/* Style pour desktop */\n@media (min-width: 992px) {\n    .text-center-md,\n    .text-center-sm,\n    .text-center-xs {\n        text-align: center;\n    }\n    .text-right-md,\n    .text-right-sm,\n    .text-right-xs {\n        text-align: right;\n    }\n}\n\n/* Style pour grand desktop */\n@media (min-width: 1200px) {\n    .text-center-lg,\n    .text-center-md,\n    .text-center-sm,\n    .text-center-xs {\n        text-align: center;\n    }\n    .text-right-lg,\n    .text-right-md,\n    .text-right-sm,\n    .text-right-xs {\n        text-align: right;\n    }\n}\n```\n\n_Note : une autre approche est de dupliquer un objet que [Bootstrap] ne saurait pas facilement afficher dans des états différents en fonction de la taille du périphérique afin de n'en afficher qu'un des deux à la fois. Ce qui créé du contenu dupliqué. Cela, en plus d'être un problème SEO, pose un problème de maintenance._\n\n**Rendu**\n\n\u003e\n\u003cdiv class=\"example-header\"\u003e\n    \u003cdiv class=\"example-logo\"\u003e\u003cp\u003eLe logo\u003c/p\u003e\u003c/div\u003e\n    \u003cdiv class=\"example-menu\"\u003e\u003cp\u003emenu menu menu menu\u003c/p\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"example-content\"\u003e\n    \u003cdiv class=\"example-main\"\u003e\n        \u003cp\u003eLe contenu\u003cbr\u003e\n        Le contenu\u003cbr\u003e\n        Le contenu\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"example-aside\"\u003e\u003cp\u003eLes à coté\u003c/p\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n_Note : vous pouvez rétrécir votre fenêtre sur périphérique desktop pour voir le résultat mobile._\n\n\n\n\n\n## Pourquoi l'approche sémantique est la meilleure (selon moi) ##\n\n### La raison historique de la séparation du fond et de la forme ###\n\nLe W3C améliore les normes de structures HTML dans un but de séparation de la structure et du rendu. Voyons ça plus en détail :\n\n#### D'abord HTML ####\n\nLe HTML dans ses débuts embarquait des balises permettant de créer du fond (ou de structurer) tel que `\u003cdiv\u003e`, `\u003cspan\u003e`, `\u003ctable\u003e`, etc. et des balises permettant de créer de la forme (ou du rendu) tel que `\u003cfont\u003e`, `\u003ci\u003e`, `\u003cb\u003e`, `\u003ccenter\u003e`, etc. Les deux étaient mélangés et c'est bien dans le fichier HTML, au travers de sa structure que l'on décidait qu'un texte devrait être rouge, centré et avoir une taille de 20 pixel.\n\n#### Puis le xHTML ####\n\nUne évolution logique a donc été de supprimer (ou déprécier) les balises porteuses d'un rendu visuel et de leur préférer un sens sémantique (tout en accordant une grande importance au CSS pour l'habillage). Ainsi un texte centré ou rouge se créé via une feuille CSS et on ne considère plus un texte important comme `\u003cb\u003e` (bold) mais plutôt ayant un sens `\u003cstrong\u003e` (fort). C'est au développeur de choisir si finalement `\u003cstrong\u003e` n'a pas plutôt un rendu italique et souligné via CSS ([à noter que `\u003ci\u003e` et `\u003cb\u003e` n'ont pas été remplacées comme on le pense trop souvent](https://blog.lesieur.name/icon-ou-la-balise-html-semantique-qui-n-existait-pas/)).\n\nIl y a donc une volonté du W3C de séparer la structure et le rendu.\n\n#### On continue avec le HTML5 ####\n\nToujours dans ce soucis de structure sémantique, les balises en elles-mêmes se voient rajoutées du sens et c'est pour cela que `\u003cheader\u003e`, `\u003cfooter\u003e`, `\u003csection\u003e`, `\u003carticle\u003e`, `\u003caside\u003e`, `\u003cfigure\u003e`, etc. font leur apparition.\n\nCela signifie que l'approche de [Bootstrap] prend le contre-pied de cette idée de séparation et instaure selon moi une approche plus liée qui n'est pas en accord avec la philosophie que je partage avec le W3C.\n\n\n\n\n\n## Les raisons techniques ##\n\n### La taille du fichier HTML généré ###\n\nAjouter des classes à outrance pour habiller visuellement sa structure HTML surcharge anormalement le DOM d'au moins trois manières :\n\n- Obligation d'imbriquer des éléments pour qu'ils fonctionnent tels que [Bootstrap] l'a prévu.\n- Multiplication du nombre de classes dans l'attribut `class`.\n- Duplication de contenu pour afficher / masquer simplement en fonction de la taille du périphérique.\n\nCela défère le poids de la CSS vers le HTML. Or, autant les fichiers CSS peuvent être mis en cache, autant la structure HTML peut difficilement l'être étant donné sa nature changeante en fonction du contrôleur qui la génère. Heureusement le transfert gzip allège ce soucis, encore faut t-il qu'il y ai un maximum de redondance en terme de naming dans les classes utilisée par [Bootstrap] ([ce qui est le cas dans un habillage orienté composant](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/)).\n\n\n\n### La surcharge CSS ###\n\n[Bootstrap] n'est pas négligeable en taille. Cela impose un préchargement plus lourds au premier chargement de page (en supposant qu'ensuite le fichier soit mis en cache). De manière assez amusante, plus Bootstrap « supporte » des périphériques petits avec de faibles débits à l'utilisation (ajout de fichiers CSS et JS), plus il est lourd en poids... (idem pour le support « Right to Left »).\n\n\n\n### La maîtrise de l'outil ###\n\nL'avantage offert par [Bootstrap] est perdu dès l'instant ou l'outil est utilisé par des personnes ne le connaissant pas (rapidité d'intégration). Pire encore, cela expose l'intégration par de multiples personnes à mélanger l'approche [Bootstrap] à une approche sémantique sans distinguer l'un de l'autre. Vous me direz que l'outil est simple d'utilisation tel qu'il est abordé dans la documentation, mais [une utilisation propre de celui ci n'est pas si compliquée](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/).\n\n\n\n### Maintenance de code et changement de design ###\n\nLa structure étant intimement liée au framework [Bootstrap] et aux visuels soumis, le code HTML est bon à revoir dans son architecture pour un changement de design. La structure étant liée aux contrôleurs, car créée par eux, c'est le back-end qui se retrouve impacté par un changement de design là ou seulement les CSS et les JS auraient du bouger (sans que le back-end soit touché par du changement de design).\n\n\n\n### Ne pas rendre service aux développeurs front-end apprenant ###\n\nL'approche « tout en un » masque le plus important : les mécanismes de fonctionnement des classes en elles-mêmes. Pourquoi —pour réaliser telles rendus— elles utilisent ces attributs précisément ? Si cet état de boîte noire peut s'avérer intéressant pour des débutants et un gain de temps pour les experts : cela maintient l'écart entre les deux. Et, les seuls apprenant réellement à utiliser les nouveautés du CSS en comprenant les mécanismes sous-jacent sont ceux qui maintiennent [Bootstrap] (ou équivalent) ou ceux qui ne l'utilisent pas.\n\n\n\n### Un problème de SEO ou de performance ? ###\n\nDupliquer du contenu de manière identique dans le DOM dans le seul but de l'afficher à deux endroits différents de la grille [Bootstrap] crée du contenu dupliqué au sein d'une même page. Bien entendu, on peut éviter cela en laissant dans le DOM source le code destiné au mobile et en dupliquant en JavaScript celui-ci pour l'afficher sur desktop en sacrifiant un peu de ressource JavaScript, en ajoutant une complexité à la maintenance et en masquant tant bien que mal le phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\n\n\n\n## Pourquoi utiliser Bootstrap alors ? ##\n\n### À utiliser pour : ###\n\n- Développer des « Proof of Concept » ou remplacer la création PSD / XD par une création temps réel de façon rapide. C'est donc un outil formidable pour remplacer Photoshop dans [l'ère Post PSD](http://davidl.fr/blog/fin-psd.html).\n- Faire des sites à la pelle et avec de très petits budgets où le résultat en performance et en qualité reste un problème, mais où l'argent fourni pour la réalisation manque (discutable tout de même).\n- Habiller un back-office personnalisé (ou une application web) qui n'a pas fait l'objet d'une création et que l'on espère « user friendly » rapidement et simplement (une création purement fonctionnelle sans problèmes de performances à grande échelle ou de soucis de SEO).\n- Créer des tutos autours de framework dont l'habillage HTML / CSS n'est pas le centre du sujet pour obtenir un résultat descend visuellement.\n- Permettre aux rédacteurs de contenu web de faire de la mise en forme en exploitant certains modèles forts utiles qui n'ont donc ici pas vocation à faire partie de la structure même de la page. Au préalable il serait intéressant de vider toutes balises inutiles de [Bootstrap], ou de se [créer ses propres modèles](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/).\n\n\n\n### À ne pas utiliser pour : ###\n\n- Des petits sites, car cela augmente bien souvent de 90% le poids du site, il vaut donc mieux ne pas le faire et perdre un peu de temps pour un gain en performance maintenance et sémantique.\n- De grosses structures, car cela leurs font perdre la flexibilité du changement d'UI sans impacter le back-end, impose la formation de toutes les ressources front-end travaillant sur le projet à Bootstrap et il résulte de la construction même des pages un impact SEO non négligeable dû au poids du HTML, sa sémantique limitée et plus globalement au temps de chargement des pages. D'un point de vu conception et maintenance, cela empêche toute [possibilité d'architecture orientée composant réutilisables](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/) que ce soit dans le HTML ou dans la CSS.\n\n\n\n\n\n## Mélanger les deux approches pour en garder les avantages ? ##\n\nSi l'on extrait les problèmes majeurs en considérant que nos ressources seront formées à utiliser [Bootstrap] nous nous retrouvons avec les deux points suivants.\n\n\n\n\n### La lourdeur de la librairie ###\n\nQue ce soit pour [Bootstrap] ou pour une autre librairie, le premier chargement sera laborieux (avant que le fichier n'ai été téléchargé une fois et mis en cache). On peut palier à ce problème en utilisant une version du script hébergé sur des serveurs comme c'est le cas pour jQuery par exemple. Ainsi pour Bootstrap, on peut se faire servir par \u003ca href=\"http://www.bootstrapcdn.com/\" title=\"CDN for Bootstrap\"\u003ehttp://www.bootstrapcdn.com/\u003c/a\u003e. L'avantage est que tous les sites utilisant le chargement par CDN Bootsrap participe à mettre en cache pour vous le fichier. Cela signifie que ce n'est plus nécessairement votre première page ouverte qui ralentira le chargement du visiteur mais peut-être celle d'un autre site.\n\n\n\n\n### Remettre les classes « tout en un » de nouveau dans la CSS ###\n\nFinalement, ce qu'il nous faudrait pour résoudre notre soucis et remettre la sémantique à l'ordre du jour, c'est d'adresser dans la feuille CSS (et non dans la page HTML elle-même) notre suite de classe. Si nous pouvions par exemple transformer ceci :\n\n```html\n\u003cheader class=\"clr\"\u003e\n    \u003cnav class=\"left hidden boxsizing w50\"\u003e\n        Le menu\n    \u003c/nav\u003e\n\u003c/nav\u003e\n```\n\nen ceci\n\n```html\n\u003cheader class=\"header\"\u003e\n    \u003cnav class=\"header--nav\"\u003e\n        Le menu\n    \u003c/nav\u003e\n\u003c/header\u003e\n```\n\n```css\n/* Fichier partiel type Bootstrap uniquement avec ce dont on à besoin. */\n.header {\n\u0009.clr;\n}\n.header--nav {\n\u0009.left;\n\u0009.hidden;\n\u0009.boxsizing;\n\u0009.w50;\n}\n```\n\nle tour serait joué.\n\nC'est exactement ce que permettent des approches comme \u003ca href=\"http://stylus-lang.com/\" title=\"Stylus - EXPRESSIVE, DYNAMIC, ROBUST CSS\"\u003eStylus\u003c/a\u003e ou \u003ca href=\"http://lesscss.org/\" title=\"LESS \u0026laquo; The Dynamic Stylesheet language\"\u003eLess\u003c/a\u003e. Elles permettent d'écrire de manière intuitive et non redondante des suites de sélecteurs CSS pour au final générer le fichier CSS qui va bien. Vous pouvez lire l'article « [Utilisation optimisée de framework CSS comme Bootstrap avec Less](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/) » pour comprendre comment cela fonctionne et de cette manière vous pourrez remplir vos classes HTML de manière sémantique tout en conservant vos habitudes d'intégration avec [Bootstrap] par exemple.\n\n\u003e ### Bonne utilisation de Bootstrap and cie.###\n\u003e **`Best Practice` Vous devriez parvenir à une utilisation de [Bootstrap] vidé de tous les problèmes précédemment cités en vu de maintenir un site orienté composant en lisant les article « [Bootstrap, lisibilité, propreté, performance, optimisation ; c'est possible !](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/) » et « [Conventions HTML et CSS orientés composants](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/) ».**\n\n\n\n\n\n## Mon retour rapide sur l'utilisation Bootstrap ##\n\nJe trouve que les types de sites réalisés avec Bootstrap se ressemble tous et qu'il devient difficile de faire quelque chose s'en éloignant sans finalement perdre du temps. Bootstrap devient ici plus contraignant pour la patte créative également et on en vient parfois même à blâmer les agences de création car leurs créations ne sont pas « compliant » Bootstrap.\n\nPour exemple voici des variations de design pour un HTML identique en CSS-driven :\n\n**[Exemple rapide sur CodePen](http://codepen.io/Haeresis/pen/bdXymY)**\n\n*[Site de Nicolas Hoffmann](http://www.nicolas-hoffmann.net/)*\n\n- [ND Mobi First](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND_mobfirst)\n- [ND New Green](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND_new_green)\n- [ND](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=ND)\n- [Firefox](http://www.nicolas-hoffmann.net/source/changer_skin.php?theme=firefox)\n\net la même chose pour un HTML identique avec Bootstrap\n\n*[Template pour documentation JSDoc](https://github.com/terryweiss/docstrap)*\n\n- [Amelia](http://terryweiss.github.io/docstrap/themes/amelia/)\n- [Cyborg](http://terryweiss.github.io/docstrap/themes/cyborg/)\n- [Readable](http://terryweiss.github.io/docstrap/themes/readable/)\n- [DocStrap](http://terryweiss.github.io/docstrap/themes/superhero/)\n\nC. Q. F. D.\n\n [Bootstrap]: http://getbootstrap.com/ (Le framework de développement Front-end responsive et mobile first le plus populaire du web)","dates":{"published":{"$date":"2014-05-17T17:40:00.000Z"},"updated":[]},"description":"Mon problème ne vient pas tant de sa finalité qui est louable, mais belle et bien de la mise en œuvre technique.","image":"","others":{"markdown":true,"published":true},"script":"","stylesheet":" /* Entrer le padding dans le calcul interne */\n.example-logo,\n.example-menu,\n.example-main,\n.example-aside {\n    box-sizing: border-box;\n}\n\n/* Mettre le titre en gras */\n.example-logo {\n    font-weight: bold;   \n}\n\n/* Centrer les textes du menu */\n.example-menu {\n    text-align: center;\n}\n\n/* Retrait du comportement de liste standard */\n.example-menu ul {\n    padding-left: 0;\n}\n.example-menu li {\n    list-style-type: none;\n}\n\n/* A partir d'une tablette. */\n@media (min-width: 768px) {\n     /* Empècher les écoulements de flottants */\n    .example-header:after,\n    .example-content:after {\n        content: \"\";\n        display: block;\n        clear: both;\n    }   \n\n    /* Flotter à gauche en 50% */\n    .example-menu,\n    .example-aside {\n        float: left;\n        width: 50%;\n    }\n\n    /* Flotter à droite en 50% */\n    .example-logo,\n    .example-main {\n        float: right;\n        width: 50%;\n    }\n\n    /* Remettre les menus en alignement standard */\n    .example-menu {\n        text-align: left;\n    }\n\n    /* Mettre le menu en ligne */\n    .example-menu li {\n        display: inline-block;\n    }\n\n    /* Placer le titre à droite */\n    .example-logo {\n        text-align: right;\n    }\n}","title":"Bootstrap est une régression pour un développement Front-end de qualité","urn":"bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite"}
{"_id":{"$oid":"537b2d0406b95d3a0a73cb01"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"On me demande souvent quelle est la structure JavaScript que j'utilise pour développer mes sites web. C'est une question à laquelle je ne sais jamais si un simple « [jQuery] » suffit ou si l'on s'attend à m'entendre répondre « [Knockout] », « [AngularJS] », « [Vue.js] », « [React] » ou encore, « [RequireJS] » ou je ne sais quelle autre composant/librairie/framework JavaScript Front-end extraordinaire !\n\n [jQuery]: http://jquery.com/ (jQuery JavaScript Library)\n [RequireJS]: http://requirejs.org/ (RequireJS Components Loader)\n [Vue.js]: http://fr.vuejs.org/ (Vue.js JavaScript Framework)\n [Knockout]: http://knockoutjs.com/ (Knockout JavaScript Framework)\n [AngularJs]: http://angularjs.org/ (AngularJs JavaScript Framework)\n [React]: https://reactjs.org/ (React JavaScript Framework)\n\nAu delà du fait que l'utilisation de ses ressources précédemment citées dépend du fait que l'on souhaite réaliser un site web ou un outil web ou une application web etc. je finis toujours par expliquer que j'utilise ma propre architecture JavaScript à travers toutes les différentes pages d'un site web et qu'au cas par cas, je charge les JavasSript dont j'ai besoin (parfois il est plus judicieux de charger de manière asynchrone un [ckeditor] sur l'unique page ou il est utile que de ce le trimbaler partout sur le site !).\n\n [ckeditor]: http://ckeditor.com/ (The best web text editor for everyone)\n\nJe vais donc vous livrer à travers cet article une architecture JavaScript pas à pas, page par page. Il existe également [une approche plutôt orienté composant que j'aborde ici](https://blog.lesieur.name/eviter-les-multiples-jquery-document-ready-dans-vos-pages-web/).\n\nAfin de la comprendre pas à pas, j'utiliserai comme fil conducteur la réalisation d'un site vitrine. Ma façon de structurer le JavaScript client n'est pas absolue mais elle vous permettra de comprendre la logique derrière certains de mes sites dont vous trouverez les sources sur GitHub ([comme pour ce blog](https://github.com/Haeresis/BlogAtlas/blob/master/assets/javascript/common.js)) ou même la logique du moteur de site [Node.js] : [NodeAtlas].\n\n [Node.js]: http://nodejs.org/ (Node.js is a platform built on Chrome's JavaScript runtime for easily building fast, scalable network applications)\n [NodeAtlas]: https://node-atlas.js.org/ (NodeAtlas vous permet de créer et maintenir des Assets HTML ou sites multilingues simplement en Node.js)\n\n\n\n\n\n## Architecture JavaScript d'un site web ##\n\nPour commencer, j'estime qu'il y a quatre zones de JavaScript par page que je nomme **Boot**, **Framework**, **Common** et **Specific**. Aucune ligne JavaScript ne doit se trouver en dehors de ces quatre zones. Ces quatre zones, dans un site en production sont matérialisées par quatre (au maximum) fichiers locaux (hors CDN).\n\nEn voici l'exemple sur une page d'accueil :\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'accueil\u003c/title\u003e\n        \u003c!-- Meta / Feuilles de style --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/boot.min.js\"\u003e\u003c/script\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"home\"\u003e\n        \u003c!-- Contenu de la page --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/framework.min.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/home.min.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.min.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n### La zone de Boot ###\n\nCette zone est facultative. Elle est la seule à ralentir le chargement de la page car les fichiers JavaScript de cette zone sont chargés et exécutés avant le rendu visuel final de la page, avant même que la balise `body` ne soit chargée. C'est pour cela que les bonnes pratiques demandent au maximum de charger les fichiers en pied de page et que ce qui sera chargé dans le `head` fasse un poids minimal en taille de fichier et en temps d'exécution JavaScript. Le type de script qui se trouve ici est celui qui va modifier la structure HTML au dessus du body à savoir sur l'élément `html` ou dans le `head`. Cela en vu d'éviter le phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\nOn retrouve donc ici, avant minification et rassemblement des JavaScript, des scripts comme « [Modernizr] » ou « [HTMLShiv] » qui vont impacter le rendu des balises avec les feuilles CSS. C'est ici qu'on laissera une ligne de code pour injecter par exemple une classe `js` dans la balise `html` afin d'avertir les futurs scripts ou les sélecteurs CSS que JavaScript est activé. Si aucun de ces scripts ne vous intéressent pour votre site, la zone de Boot peut donc être ignorée.\n\n [Modernizr]: \"http://modernizr.com/\" (An indispensable tool)\n [HTMLShiv]: \"https://code.google.com/p/html5shiv/\" (HTML5 IE enabling script)\n\n\n\n\n### La zone de Framework ###\n\nC'est ici que vont se trouver le chargement de toutes vos librairies/frameworks JavaScript utile à l'intégralité du site. Vous chargerez également des plugins pour vos librairies ou même vos propres fonctions JavaScript. Bref, ici c'est tout ce que vous utilisez cross-site.\n\nCela peut ressembler à ça dans un environnement de développement :\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003c!-- Titre / Meta / Feuilles de style --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"home\"\u003e\n        \u003c!-- Contenu de la page --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/jquery/date.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/jquery/string.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/jquery/jquery-2.1.0.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/jquery/jquery.ba-hashchange.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/jquery-ui/jquery-ui-1.10.4.js\"\u003e\u003c/script\u003e\n        \n        \u003cscript type=\"text/javascript\" src=\"javascript/ckeditor/ckeditor.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/ckeditor/config.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/ckeditor/lang/fr.js\"\u003e\u003c/script\u003e\n        \u003c!-- Autres JavaScript --\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n### La zone Common ###\n\nC'est la première des deux zones que nous allons décortiquer plus bas dans cette article (les zones précédentes étant dans 95% des cas du code générique). Ici, tout va être dédié à l'interaction des scripts de la zone Framework avec le DOM du site. Cependant, ce fichier unique en version de développement (dans la majorité des cas) comme en version de production sera chargé sur toutes les pages du site comme les deux premières zones. Ne sera donc déclarées ici que les fonctions qui seront appelées sur plus d'une page.\n\n\n\n\n### La zone Specific ###\n\nCette dernière zone est facultative et _spécifique_ à chaque page. Elle se matérialise par un fichier portant le nom du template de page associé à lui. Sur la page d'accueil ce fichier est donc `home.js` tandis que sur la page de contact il s'appelle `contact-us.js`. Il ne doit contenir **que** du code unique à la page courante.\n\nSi le code de cette zone pour un template spécifique donne un fichier bien trop petit en poids pour qu'il soit négligeable à côté du `common.js`, il peut être intéressant de mettre quelques lignes normalement spécifique dans la partie commune. Nous verrons cela plus loin.\n\n\n\n\n\n## Site web de fil rouge ##\n\nPour commencer, nous allons imaginer un petit site web embarquant diverses zones HTML (des composants) qui auront chacune des fonctions JavaScript propres à travers différentes pages. Voici sans plus attendre les différents types de pages embarquant nos divers composants :\n\n### Liste des templates de page ###\n\n#### La page d'accueil ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des pages_\n- Le composant _Aperçu des produits_\n- Le composant _Formulaire d'inscription à la newsletter_\n- Le composant _Retour en haut de page_\n\n_Contenu de **home.htm**_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'accueil\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"home\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"page-overview\"\u003e\u003c!-- Zone Aperçu des pages --\u003e\u003c/nav\u003e\n        \u003cnav class=\"product-overview\"\u003e\u003c!-- Zone Aperçu des produits --\u003e\u003c/nav\u003e\n        \u003cform class=\"newsletter-form\"\u003e\u003c!-- Zone Formulaire d'inscription à la newsletter --\u003e\u003c/form\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n#### Les pages de produits ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des produits_\n- Le composant _Description d'un produit_\n\n_Contenu de **products/`\u003cname-of-product\u003e`.htm**_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page de produit\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"product\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"product-overview\"\u003e\u003c!-- Zone Aperçu des produits --\u003e\u003c/nav\u003e\n        \u003carticle class=\"product-content\"\u003e\u003c!-- Zone Description d'un produit --\u003e\u003c/article\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n#### Les page d'articles ####\n\n- Le composant _Menu principal_\n- Le composant _Aperçu des articles_\n- Le composant _Contenu d'un article_\n- Le composant _Retour en haut de page_\n\n_Contenu de **articles/`\u003ctitle-of-article\u003e`.htm**_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'article\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"article\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"article-overview\"\u003e\u003c!-- Zone Aperçu des articles --\u003e\u003c/nav\u003e\n        \u003carticle class=\"article-content\"\u003e\u003c!-- Zone Contenu d'un article --\u003e\u003c/article\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n#### La page F.A.Q. ####\n\n- Le composant _Menu principal_\n- Le composant _Liste de Question/Réponse_\n- Le composant _Retour en haut de page_\n\n_Contenu de **faq**.htm_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\" /\u003e\n\u0009\u0009\u003ctitle\u003eLa page de la faq\u003c/title\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody class=\"faq\"\u003e\n\u0009\u0009\u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n\u0009\u0009\u003csection class=\"questions-answers-list\"\u003e\u003c!-- Zone Liste de Question/Réponse --\u003e\u003c/section\u003e\n\u0009\u0009\u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n#### La page de contact ####\n\n- Le composant _Menu principal_\n- Le composant _Formulaire d'envoi d'un email_\n\n_Contenu de **contact-us.htm**_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page de contact\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"contact-us\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cform class=\"contact-us-form\"\u003e\u003c!-- Zone Formulaire d'envoi d'un email --\u003e\u003c/form\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n\n### Liste des composants ###\n\nOn peut donc repérer un certain nombre de composant sur lesquels nous allons appliquer des interactions JavaScript.\n\n#### Le composant _Menu principal_ ####\n\n- Celui-ci à des sous-menus qui ne s'affichent qu'avec des interactions par clique qui vont nécessiter du JavaScript. Il dispose également d'une barre de recherche pour trouver une page dans le site qui nécessitera également du JavaScript.\n\n#### Le composant _Aperçu des pages_ ####\n\nCelui-ci sera un slider complet (flèches, swipe tactile, barre de progression) avec effets de transition qui va nécésiter du JavaScript.\n\n#### Le composant _Aperçu des produits_ ####\n\n- Celui-ci sera un slider affichant une liste d'éléments en ligne qui partent en overflow horizontal. Ceci va nécessiter du JavaScript.\n\n#### Le composant _Formulaire d'inscription à la newsletter_ ####\n\n- Celui-ci collectera les informations du formulaire pour ensuite les envoyer en AJAX si il passe les tests de validation. Ceci va nécessiter du JavaScript.\n\n#### Le composant _Retour en haut de page_ ####\n\n- Celui-ci renverra en haut de page avec un effet de défilement doux qui nécessitera du JavaScript.\n\n#### Le composant _Description d'un produit_ ####\n\n- Celui-ci sera découpé en trois parties, chacune cachées derrière des onglets. Passer d'une partie à l'autre nécessitera du JavaScript.\n\n#### Le composant _Aperçu des articles_ ####\n\n- Même comportement que pour Aperçu des produits.\n\n#### Le composant _Contenu d'un article_ ####\n\n- Pas de JavaScript prévu pour ce composant.\n\n#### Le composant _Liste de Question/Réponse_ ####\n\n- Celui-ci comportera une liste de question/réponse dont la réponse sera initialement cachée. Afficher les réponses nécessitera du JavaScript.\n\n#### Le composant _Formulaire d'envoi d'un email_ ####\n\n- Celui-ci collectera les informations du formulaire pour ensuite les envoyer en AJAX s'il passe les tests de validation. Ceci va nécessiter du JavaScript.\n\n\n\n\n\n## Aménager le fichier Common et les fichiers Specific ##\n\nLe plus simple en terme de structure serait de faire un fichier à plat contenant l'intégralité de notre JavaScript. Il nous faudra de quoi parcourir le DOM aisément aussi j'utiliserai [jQuery] (ce qui pour la structure final n'est pas obligatoire, mais aidera à la compréhension tout au long de l'article).\n\nCette structure ne tiendra pas la route si le site doit grandir, mais c'est une base que je vais vous exposer pour vous expliquer la suite (qui elle tiendra la route !).\n\n_Contenu de **javascript/common.js**_\n\n```js\nvar temp;\nvar timer;\n\nfunction openMenu() { /* Code... */ }\n\nfunction launchSearch() { /* Code... */ }\n\n$(\".main-nav\" /* handler */).bind(/* event */, function () {\n    openMenu();\n    /* ... */\n});\n\n$(\".main-nav\" /* handler */).bind(/* event */, function () { \n    launchSearch();\n    /* ... */\n});\n\n/* ... */\n\n\n/* Aperçu des page */\n\nfunction createSlider() { /* ... */ }\nfunction changeStepSlider() { /* ... */ }\nfunction startAutoSlider() { /* ... */ }\n\ncreateSlider();\nchangeStepSlider();\nstartAutoSlider();\n\n/* ... */\n```\n\nLa plupart des variables se retrouvent dans le contexte d'exécution global ce qui peut faire des conflits. Si vous souhaitez enlever des fonctionnalités, il faut mettre sous commentaire. Segmenter votre code revient à lire entre les lignes etc. Bref ça manque d'une structure.\n\n\n\n\n### Un namespace commun et par page ###\n\nPour commencer, il faut absolument isoler les parties de code pour éviter les conflits, pouvoir utiliser du JavaScript en _Strict Mode_ là où ça nous chante et pouvoir rapidement repérer du code en fonction de sur quelle page il doit intervenir.\n\n\n\n#### Isolation et exécution ####\n\nPour isoler du code en JavaScript, il faut le faire tourner dans des contextes d'exécution différents. Les contextes d'exécution sont créer uniquement à l'intérieur des fonctions. Il va donc falloir créer des fonctions d'isolation mais tout de même organisées à travers un système de namespace de manière à ce que n'importe quelle fonction soit accessible n'importe où dans le code, et sans conflit.\n\n_Contenu de **javascript/common.js** (changement 1)_\n\n```js\n// Création d'un objet unique accessible de partout.\nvar website = website || {}; // Si « website » a déjà été crée dans un précédent fichier on le reprend. Sinon on le créer.\n\n// Création d'un context d'execution isolant.\n// Ce contexte d'exécution représente le code exécuté sur toutes les pages du site.\n(function (publics) { // Tout ce qui devra être accessible en dehors de ce contexte d'execution sera accroché à « publics » et accessible via « website ».\n    \"use strict\"; // Mode Strict pour ce contexte d'execution.\n\n    var privates = {}; // Tout ce qui ne devra pas quitter le contexte d'execution sera accroché à « privates » et accessible uniquement via « privates ».\n\n    /* Attributs / Fonctions privées */\n\n    /* Attributs / Fonctions publiques */\n    \n    publics.init = function () {\n        // Le code ici sera exécutable via « website.init() ».\n    };\n}(website));\n\n// On exécute le code commun sur la page courante.\nwebsite.init();\n```\n\nÀ partir de notre site exemple, créons les fonctionnalités qui seront appelées sur le template home.\n\n\n\n#### Structure publique / privée ####\n\nVoici par exemple ce que pourrait contenir le fichier `common.js` pour notre site s'il n'était composé que de la page au template _home_ et de rien d'autre.\n\n_Contenu de **javascript/common.js** (changement 2)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () {\n        // Permet d'ouvrir les sous menus.\n        // ...\n    };\n    publics.search = function () {\n        // Permet de lancer une recherche.\n        // ...\n    };\n    \n    /* Aperçu des pages */\n    privates.initSlider = function () {\n        // Transforme le DOM pour convenir au mécanirme.\n        // Création de barre de progression, de flèches, etc...\n        // ...\n    };\n    privates.changeSlider = function () {\n        // Permet de changer de slide.\n        // ...\n    };\n    privates.manageSliderArrows = function () {\n        // Permet de gérer les flèches.\n        // ...\n    };\n    privates.manageSliderProgressDot = function () {\n        // Permet de gérer la barre d'état.\n        // ...\n    };\n    privates.startSlider = function () {\n        // Permet de faire tourner le slider.\n        // ...\n        privates.timerSlider = setInterval(/* fonction */, 5000);\n        // ...\n    };\n    privates.stopSlider = function () {\n        // Permet d'arrêter le slider.\n        // ...\n        clearInterval(privates.timerSlider);\n        // ...\n    };\n    publics.slider = function () {\n        // Permet de générer le slider.\n        privates.initSlider();\n        privates.manageSliderArrows();\n        privates.manageSliderProgressDot();\n        privates.startSlider();\n    };\n    \n    /* Aperçu des produits */\n    privates.initOverview = function ($component) {\n        // Transforme le DOM pour convenir au mécanirme.\n        // Création de flèches.\n        // ...\n    };\n    privates.defilOverview = function ($component) {\n        // Permet de faire défiler les items.\n        // ...\n    };\n    privates.manageOverviewArrows = function ($component) {\n        // Permet de gérer les flèches.\n        // ...\n    };\n\n    // Ici on spécifie un paramètre « component » car la fonction « overview » est destinée \n    // à fonctionner avec plusieurs composants à savoir les composants « Aperçu des produits » \n    // et « Aperçu des articles » qui ont le même comportement. C'est à l'appel de la fonction\n    // que l'on passera la bonne structure.\n\n    publics.overview = function ($component) {\n        // Permet de générer le slider.\n        privates.initOverview($component);\n        privates.defilOverview($component);\n        privates.manageOverviewArrows($component);\n    };\n\n    /* Formulaire d'inscription à la newsletter */\n    private.validateForm = function (/* formulaire */, callback) {\n        // Permet de vérifier les erreurs du formulaire.\n        // ...\n        callback();\n    };\n    publics.newsletterRegistration = function () {\n        // Enregistre une nouvelle personne à la newsletter.\n        private.validateForm(/* formulaire */, function () {\n            // ...\n        });\n    };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () {\n        // Retour en haut de page.\n        // ...\n    };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.openMenu();\n        website.search();\n        website.slider();\n        website.overview();\n        publics.newsletterRegistration();\n        website.backToTop();\n    };\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\n\n\n\n#### Segmentation ####\n\nSi votre partie common est trop grande, rien ne vous empêche de la scinder en plusieurs parties. Vous pouvez également décrocher une grosse partie de fonction commune à un mécanisme pour en faire un fichier volant plus facilement réutilisable tel quel dans un autre site.\n\n_Contenu de **javascript/common.js** (changement 3)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n\n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n    \n    /* Formulaire d'inscription à la newsletter */\n    private.validateForm = function (/* formulaire */, callback) { /* ... */ };\n    publics.newsletterRegistration = function () { /* ... */ };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n}(website));\n```\n\n_Contenu de **javascript/slider.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n}(website));\n```\n\n_Contenu de **javascript/run.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.openMenu();\n        website.search();\n        website.slider();\n        website.overview();\n        publics.newsletterRegistration();\n        website.backToTop();\n    }\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\nVous remarquerez par la même occasion que slider.js ressemble étrangement à une sorte de « plugin ». Effectivement il serait possible d'utiliser un plugin [jQuery] à la place de notre propre slider. Bien entendu dans ce cas il serrait rattaché à `$` et non plus à `website`.\n\n\n\n\n### Common vs Specific ###\n\n#### Dans des fichiers séparés ####\n\nNous allons continuer avec un **common** unique et mettre en place le fichier _spécifique_ du template de page `home`.\n\n_Contenu de **javascript/common.js** (changement 4)_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n    \n\n    // Aperçu des pages étant uniquement sur la home, il part dans le fichier spécifique home.js.\n\n\n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n    \n\n    // Le validateur de formulaire va nous resservir pour la page de contact. Il est donc commun à tout le site.\n    // Cependant le JavaScript spécifique à la newsletter est déporté dans « home.js ».\n    // Pour que « validateForm » soit accessible maintenant en dehors de la zone commune, il passe publique.\n    \n    /* Validateur de formulaire */\n    publics.validateForm = function (/* formulaire */, callback) { /* ... */ };\n\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () { \n        website.openMenu();\n        website.search();\n    };\n}(website));\n\n// On execute le code commun sur la page courante.\nwebsite.init();\n```\n\nPour le JavaScript spécifique de **home**, on va déporter l'ensemble des fonction dans `website.home`.\n\n_Contenu de **javascript/home.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.newsletterRegistration = function () {\n        // Enregistre une nouvelle personne à la newsletter.\n        website.validateForm(/* formulaire */, function () {\n            // ...\n        });\n    };\n\n    // On initialise les fonction que l'on souhaite utiliser.\n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.backToTop();\n        website.home.slider();\n        website.home.newsletterRegistration();\n    };\n\n}(website.home = {})); // On accroche le JavaScript de la home dans un namespace (attribut) spécifique.\n\n// On execute le code destiné à la page home.\nwebsite.home.init();\n```\n\nEt la page du template **home** serait alors :\n\n_Contenu de **home.htm** (Changement 1)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'accueil\u003c/title\u003e\n\n        \u003c!-- Script de Boot --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"home\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"page-overview\"\u003e\u003c!-- Zone Aperçu des pages --\u003e\u003c/nav\u003e\n        \u003cnav class=\"product-overview\"\u003e\u003c!-- Zone Aperçu des produits --\u003e\u003c/nav\u003e\n        \u003cform class=\"newsletter-form\"\u003e\u003c!-- Zone Formulaire d'inscription à la newsletter --\u003e\u003c/form\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/home.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nImaginons à présent que nous nous penchions sur le JavaScript spécifique du template des pages article dans le namespace de `website.article`. Nous remarquons vite qu'à part de l'initialisation, cette page ne possède pas de code spécifique pour sa page contrairement à **home**. Voyez plutôt :\n\n_Contenu de **javascript/article.js**_\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    \"use strict\";\n\n    // On initialise les fonctions que l'on souhaite utiliser.\n    publics.init = function () {\n        website.overview($(\".article-overview\"));\n        website.backToTop();\n    };\n\n}(website.article = {})); // On accroche le JavaScript de article dans un namespace (attribut) spécifique.\n\n// On execute le code destiné à la page article.\nwebsite.article.init();\n```\n\nCe template ressemblerait alors à ceci :\n\n_Contenu de **articles/`\u003ctitle-of-article\u003e`.htm** (Changement 1)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'article\u003c/title\u003e\n        \u003e\u003c!-- Script de Boot --\u003e\u003c/nav\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"article\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"article-overview\"\u003e\u003c!-- Zone Aperçu des articles --\u003e\u003c/nav\u003e\n        \u003carticle class=\"article-content\"\u003e\u003c!-- Zone Contenu d'un article --\u003e\u003c/article\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/article.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n#### Dans le fichier common ####\n\nComme vu avec le template **article**, le code est tellement pauvre qu'il peut être placé dans `common.js`, ce qui donnerait quelque chose comme :\n\n_Contenu de **javascript/common.js** (changement 5)_\n\n```js\nvar website = website || {};\n\n// Partie Commune\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* ... */\n\n    /* ... */\n\n    publics.init = function () { /* ... */ };\n}(website));\n\n// Partie article tellement petite qu'il vaut mieux l'inclure dans common.\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () { /* ... */ };\n}(website.article = {}));\n\n// Lancement des deux parties.\nwebsite.init();\nwebsite.article.init();\n```\n\n**Cependant cela signifirait que le code `website.article.init()` serait exécuté sur toutes les pages alors qu'il n'aurait besoin que d'être exécuté sur article. C'est là que nous allons créer un lanceur de init() conditionnel au template de page qui appel les scripts !**\n\n\n\n\n### Exécution conditionnelle au template ###\n\nQuand le contenu des fichiers spécifiques est séparé et appelé uniquement sur le template de page auquel il est destiné, on est sur que l'exécution de code dans ce fichier ne se ferra pas sur d'autres pages (puisqu'il ne seront pas inclus). Hors ce n'est pas le cas, comme vous pouvez le constater, avec le code spécifique de la page article qui a été inclus dans le fichier de code commun (pour des questions de performance). Il suffit simplement de conditionner l'exécution de tous les `init()` des fichiers spécifiques avec la présence ou non d'une classe associée au template sur lequel il sont sensé s'exécuter. `common.js` deviendrait donc :\n\n_Contenu de **javascript/common.js** (changement 6)_\n\n```js\nvar website = website || {};\n\n// Partie Commune\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* ... */\n\n    /* ... */\n\n    publics.init = function () { /* ... */ };\n}(website));\n\n\n// Partie article tellement petite qu'il vaut mieux l'inclure dans common.\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () { /* ... */ };\n}(website.article = {}));\n\n\n// On permet de placer les fichiers dans n'importe qu'elle ordre.\n// Cette zone est l'unique zone ou l'on exécutera l'intégralité du JavaScript de tout le site.\n$(function () {\n    \"use strict\";\n\n    // On vérifie quel est le template courant\n    // en vérifiant le nom de la première classe du body.\n    // Effectivement chaque body de chaque template de page à\n    // sa classe qui lui est propre.\n\n    var specific = $(\"body\") // On réclame le body.\n        .attr(\"class\") // On lit ses classes.\n        .split(\" \")[0] // On récupère la première.\n        .replace(/-/g, \"\"); // On la formate en une chaine identique au namespace !\n\n    // Pour la page home, « var specific = \"home\" » et le namespace est « website.home ».\n    // Pour la page article, « var specific = \"article\" » et le namespace est « website.article ».\n    // Pour la page contact-us, « var specific = \"contactus\" » et le namespace est « website.contactus ».\n    \n    // On lance le code commun quoi qu'il arrive.\n    website.init();\n\n    // Ici on lance le code spécifique si un namespace correspondant existe.\n    if (website[specific] !== undefined) {\n        website[specific].init();\n    }\n});\n```\n\nTous les autres `init()` disparaissent des autres fichiers et seul `common.js` est alors habilité à exécuter du code spécifique en fonction du template ou il est appelé.\n\n\n\n\n\n## Structure JavaScript du fil rouge ##\n\nNous y sommes : voici la structure JavaScript utilisée pour le site fil rouge de la partie **Site web de fil rouge** avec les spécificités évoquées dans la partie **Amennager le fichier Common et les fichiers Specific**. Voici ce que nous imaginons ; tous les scripts sont assez petits pour être dans `common.js` sauf `home.js` et `contact-us.js` qui seront des fichiers séparés.\n\nGardez à l'esprit que vous pouvez toujours très bien garder vos JavaScript dans des fichiers séparés peu importe leurs taille et de les associer dans les mêmes fichiers au besoin uniquement pour les versions minifiées.\n\n\n\n\n### common, product, faq, article, run ###\n\n_Contenu de **javascript/common.js** (changement final)_\n\n```js\nvar website = website || {};\n\n/***********/\n/* website */\n/***********/\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Menu principal */\n    publics.openMenu = function () { /* ... */ };\n    publics.search = function () { /* ... */ };\n    \n    /* Aperçu des produits */\n    privates.initOverview = function ($component) { /* ... */ };\n    privates.defilOverview = function ($component) { /* ... */ };\n    privates.manageOverviewArrows = function ($component) { /* ... */ };\n    publics.overview = function ($component) { /* ... */ };\n\n    /* Validateur de formulaire */\n    publics.validateForm = function (/* formulaire */, callback) { /* ... */ };\n\n    /* Retour en haut de page */\n    publics.backToTop = function () { /* ... */ };\n\n    publics.init = function () { \n        website.openMenu();\n        website.search();\n    };\n}(website));\n\n\n\n/*******************/\n/* website.product */\n/*******************/\n(function (publics) {\n    \"use strict\";\n\n    /* Description d'un produit */\n    publics.switchTab = function () { /* ... */ };\n\n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.product.switchTab();\n    };\n}(website.product = {}));\n\n\n\n/***************/\n/* website.faq */\n/***************/\n(function (publics) {\n    \"use strict\";\n\n    /* Liste de Question/Réponse */\n    publics.slideDown = function () { /* ... */ };\n\n    publics.init = function () {\n        website.faq.slideDown();\n        website.backToTop();\n    };\n}(website.faq = {}));\n\n\n\n/*******************/\n/* website.article */\n/*******************/\n(function (publics) {\n    \"use strict\";\n\n    publics.init = function () {\n        website.overview($(\".article-overview\"));\n        website.backToTop();\n    };\n}(website.article = {}));\n\n\n\n/*******/\n/* Run */\n/*******/\n$(function () {\n    \"use strict\";\n\n    var specific = $(\"body\").attr(\"class\").split(\" \")[0].replace(/-/g, \"\");\n\n    website.init();\n\n    if (website[specific] !== undefined) {\n        website[specific].init();\n    }\n});\n```\n\n_Contenu de **products/`\u003cname-of-product\u003e`.htm** (Changement final)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page de produit\u003c/title\u003e\n\n        \u003c!-- Script de Boot --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"product\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"product-overview\"\u003e\u003c!-- Zone Aperçu des produits --\u003e\u003c/nav\u003e\n        \u003carticle class=\"product-content\"\u003e\u003c!-- Zone Description d'un produit --\u003e\u003c/article\u003e\n\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n_Contenu de **articles/`\u003ctitle-of-article\u003e`.htm** (Changement final)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'article\u003c/title\u003e\n\n        \u003c!-- Script de Boot --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"article\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"article-overview\"\u003e\u003c!-- Zone Aperçu des articles --\u003e\u003c/nav\u003e\n        \u003carticle class=\"article-content\"\u003e\u003c!-- Zone Contenu d'un article --\u003e\u003c/article\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n_Contenu de **faq.htm** (Changement final)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page de la faq\u003c/title\u003e\n\n        \u003c!-- Script de Boot --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"faq\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003csection class=\"questions-answers-list\"\u003e\u003c!-- Zone Liste de Question/Réponse --\u003e\u003c/section\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n### Home ###\n\n_Contenu de **javascript/home.js**_\n\n```js\nvar website = website || {};\n\n/****************/\n/* website.home */\n/****************/\n(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    /* Aperçu des pages */\n    privates.initSlider = function () { /* ... */ };\n    privates.changeSlider = function () { /* ... */ };\n    privates.manageSliderArrows = function () { /* ... */ };\n    privates.manageSliderProgressDot = function () { /* ... */ };\n    privates.startSlider = function () { /* ... */ };\n    privates.stopSlider = function () { /* ... */ };\n    publics.slider = function () { /* ... */ };\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.newsletterRegistration = function () {\n        website.validateForm(/* formulaire */, function () { /* ... */ });\n    };\n    \n    publics.init = function () {\n        website.overview($(\".product-overview\"));\n        website.backToTop();\n        website.home.slider();\n        website.home.newsletterRegistration();\n    };\n}(website.home = {}));\n```\n\n_Contenu de **home.htm** (Changement final)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page d'accueil\u003c/title\u003e\n\n        \u003c!-- Script de Boot --\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"home\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cnav class=\"page-overview\"\u003e\u003c!-- Zone Aperçu des pages --\u003e\u003c/nav\u003e\n        \u003cnav class=\"product-overview\"\u003e\u003c!-- Zone Aperçu des produits --\u003e\u003c/nav\u003e\n        \u003cform class=\"newsletter-form\"\u003e\u003c!-- Zone Formulaire d'inscription à la newsletter --\u003e\u003c/form\u003e\n        \u003cnav class=\"back-to-top\"\u003e\u003c!-- Zone Retour en haut de page --\u003e\u003c/nav\u003e\n        \n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/home.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n### contact-us ###\n\n_Contenu de **javascript/contact-us.js**_\n\n```js\nvar website = website || {};\n\n/*********************/\n/* website.contactus */\n/*********************/\n(function (publics) {\n    \"use strict\";\n\n    /* Formulaire d'inscription à la newsletter */\n    publics.sendAMessage = function () {\n        website.validateForm(/* formulaire */, function () { /* ... */ });\n    };\n    \n    publics.init = function () {\n        website.backToTop();\n        website.contactus.sendAMessage();\n    };\n}(website.contactus = {}));\n```\n\n_Contenu de **contact-us.htm** (Changement final)_\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLa page de contact\u003c/title\u003e\n        \n        \u003e\u003c!-- Script de Boot --\u003e\u003c/nav\u003e\n    \u003c/head\u003e\n    \u003cbody class=\"contact-us\"\u003e\n        \u003cnav class=\"main-nav\"\u003e\u003c!-- Zone Menu principal --\u003e\u003c/nav\u003e\n        \u003cform class=\"contact-us-form\"\u003e\u003c!-- Zone Formulaire d'envoi d'un email --\u003e\u003c/form\u003e\n\n        \u003c!-- Scripts de Framework --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/contact-us.js\"\u003e\u003c/script\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascript/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```","dates":{"published":{"$date":"2014-04-16T15:23:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Structurer le JavaScript de son site avec ou sans Framework","urn":"structurer-le-javascript-de-son-site-avec-ou-sans-framework","description":"Structurer le JavaScript de son site avec ou sans Framework","image":""}
{"_id":{"$oid":"537dc9a011b6ff1424354acd"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"5310456355dfd5f7698d48cf"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"5310456355dfd5f7698d48b7"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48c3"}],"content":"Il y a des solutions simples pour gérer avec une feuille CSS l'affichage de différentes langues. Vous vous êtes peut-être déjà confronté à un problème similaire : votre super menu s'affichant en ligne est parfait dans la langue des Vulcains avec une taille de caractère mais malheureusement ne l'ai plus avec la langue des Na'vis. \n\nQuand votre site sera déployé pour des localisations différentes, les feuilles CSS ne pourront alors pas être les mêmes et vous allez maintenir autant de fichiers différents que de localisation ? C'est ce que vous ferriez en faisant un très mauvais choix. Arrêtons-nous 5 minutes pour explorer une piste bien pratique pour assurer la maintenance d'une feuille CSS et de ces différentes localisations.\n\n\n\n\n\n## Oubliez les multiples variantes d'une même feuille CSS ##\n\nUne idée rapide serait de créer une feuille CSS initiale basée sur le rendu de texte « Lorem Ipsum » et de vérifier que son affichage se passe sans accroche. Il conviendrait ensuite de dupliquer cette CSS de base une fois finie et de modifier toutes les propriétés CSS qui divergent pour une autre langue de manière à ce que tout se passe bien également.\n\nMais QUID de la maintenance ? Si maintenant je dois modifier la feuille CSS de base à partir de laquelle mes 30 variantes par localisations ont été crées : je vais devoir réinjecter localisation par localisation toutes les nouvelles modifications en prenant soin de ne pas écraser dans chacune les lignes qui varies en fonction de la langue. Je ne vous parle même pas des conflits.\n\nIl y a également de fortes chances pour qu'au final, prise par groupe, les variantes pour 30 localisations ne soient qu'au nombre de 3 (petits mots, mots moyens et grands mots). Ça fait beaucoup de fichiers inutiles, car redondant, tout ça.\n\n\n\n\n\n## Une feuille CSS unique pour toutes les localisations ##\n\nEt si plutôt que d'éparpiller le code de manière redondante dans autant de fichier qu'il y a de localisation, nous gérions la localisation dans un seul et unique fichier ? Vous allez me dire que chaque localisation aurait alors des lignes qui ne la concerne pas et souffrirait d'un poids de page inutilement élevé ? Vous avez raison, mais faisons abstraction de ce point pour le moment.\n\n\n\n\n### Création avec comme base l'anglais ###\n\nTout commence de la même manière : on crée sa feuille CSS en se basant sur la langue anglaise qui a été fournie comme référence pour la création. Après plusieurs lignes, notre design est fini et les textes s'affichent comme suit :\n\n**HTML5 en anglais**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en-us\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eLocalisation example\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"logo\"\u003e\n            \u003ch1\u003e\u003ca href=\"javascript:;\" title=\"Return to Home\"\u003eTitle\u003c/a\u003e\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cnav class=\"main-nav\"\u003e\n            \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Home\"\u003eHome\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Products\"\u003eProducts\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Care and Advice\"\u003eCare and Advice\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Fun and Games\"\u003eFun and Games\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"News\"\u003eNews\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/nav\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n**CSS3 sans localisation**\n\n```css\n/* Séparateurs haut et bas de l'exemple */\nbody {\n     border-bottom: 1px solid #aaa;\n     border-top: 1px solid #aaa;\n     padding: 8px 0;\n}\n\n/* Maintenir le titre à gauche */\n.logo {\n    position: absolute;\n    font-size: 1.7em;\n    font-weight: bold;\n    padding: 0 16px;\n}\n\n/* Placer la zone menu à droite */\n.main-nav {\n    float: right;\n}\n\n/* Rendre le ul « transparent » */\n.main-nav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n/* Permettre aux items d'êtres en ligne */\n.main-nav li {\n    display: inline-block;\n    padding-left: 0;\n}\n\n/* Inclure de l'espace à gauche de tous les items sauf le premier */\n.main-nav li + li {\n    padding: 8px 0 8px 11px;\n}\n\n/* Créer un séparateur entre chaque item */\n.main-nav li + li:before {\n    margin-right: 13px;\n    content: \"|\";\n}\n```\n\n**Rendu**\n\n\u003cdiv class=\"example\"\u003e\n\u0009\u003cdiv class=\"elogo\"\u003e\n\u0009\u0009\u003cdiv class=\"h1\"\u003e\u003ca href=\"javascript:;\" title=\"Return to Home\"\u003eTitle\u003c/a\u003e\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u0009\u003cdiv class=\"emain-nav\"\u003e\n\u0009\u0009\u003cul\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Home\"\u003eHome\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Products\"\u003eProducts\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Care and Advice\"\u003eCare and Advice\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Fun and Games\"\u003eFun and Games\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"News\"\u003eNews\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u003c/ul\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n### Localisation en français et problèmes ###\n\nLe marché français souhaite une version du site dans sa langue et fournit donc les traductions pour la localisation. Après injection, notre code HTML ressemble à ça :\n\n**HTML5 en français**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr-fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eExemple de localisation\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"logo\"\u003e\n            \u003ch1\u003e\u003ca href=\"javascript:;\" title=\"Retour à l'accueil\"\u003eTitre\u003c/a\u003e\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cnav class=\"main-nav\"\u003e\n            \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Accueil\"\u003eAccueil\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Produits\"\u003eProduits\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Soins et Conseils\"\u003eSoins et Conseils\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Divertissements et Jeux\"\u003eDivertissements et Jeux\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\" title=\"Actualités\"\u003eActualités\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/nav\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n**et CSS3 identique à la précédente feuille**\n\n**Rendu**\n\n\u003cdiv class=\"example\"\u003e\n\u0009\u003cdiv class=\"elogo\"\u003e\n\u0009\u0009\u003cdiv class=\"h1\"\u003e\u003ca href=\"javascript:;\" title=\"Retour à l'accueil\"\u003eTitre\u003c/a\u003e\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u0009\u003cdiv class=\"emain-nav\"\u003e\n\u0009\u0009\u003cul\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Accueil\"\u003eAccueil\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Produits\"\u003eProduits\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Soins et Conseils\"\u003eSoins et Conseils\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Divertissements et Jeux\"\u003eDivertissements et Jeux\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Actualités\"\u003eActualités\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u003c/ul\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\nEt là votre mise en page est mise à mal. Une première solution serait de forcer la traduction à ne pas avoir de caractères en plus que la version anglaise. Parfois c'est envisageable... et parfois pour certaine langue c'est impossible.\n\n\u003e _Note : j'ai volontairement forcé la largeur du composant à 560px (désactivation de la responsivité) pour que vous puissiez constater le problème quelque soit votre périphérique d'affichage._\n\n\n\n\n### Localisation de la feuille CSS ###\n\nC'est là que vous vous demandez s'il ne va pas falloir maintenir une feuille différente qui sera chargée ou non sur la page en fonction de la localisation. Le problème est que vous allez par exemple faire une feuille différente pour la localisation française et espagnole alors que pour un peu les ajustements seront identiques pour ces deux localisations. Puis, par la suite, le texte va changer et vous ferez la chasse aux ajustements à travers tous vos fichiers.\n\nPour ma part, je vous propose de gérer toutes les localisations dans les CSS initiales ; par exemple tout en bas. Effectivement, quand le site sera affiché dans telle ou telle langue il y aura des instructions chargées inutilement. Mais dans la masse de propriétés « non localisée » la taille devient négligeable.\n\nModifions donc notre feuille CSS initiale :\n\n```css\n/*-------------------*\\\n    $SOMMAIRE\n\\*-------------------*/\n\n/**\n * SOMMAIRE..........c'est moi !\n * STANDARD..........les propriétés CSS de la page.\n * LOCALISATION......les propriétés variants en fonction de la langue.\n */\n\n\n\n\n\n/*-------------------*\\\n    $STANDARD\n\\*-------------------*/\n\n/* Séparateurs haut et bas de l'exemple */\nbody {\n     border-bottom: 1px solid #aaa;\n     border-top: 1px solid #aaa;\n     padding: 8px 0;\n}\n\n/* Maintenir le titre à gauche */\n.logo {\n    position: absolute;\n    font-size: 1.7em;\n    font-weight: bold;\n    padding: 0 16px;\n}\n\n/* Placer la zone menu à droite */\n.main-nav {\n    float: right;\n}\n\n/* Rendre le ul « transparent » */\n.main-nav ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n/* Permettre aux items d'êtres en ligne */\n.main-nav li {\n    display: inline-block;\n    padding-left: 0;\n}\n\n/* Inclure de l'espace à gauche de tous les items sauf le premier */\n.main-nav li + li { /*** localisé ***/\n    padding: 8px 0 8px;\n    padding-left: 11px; /* Propriété sortie pour être surchargée seule plus loin */\n}\n\n/* Créer un séparateur entre chaque item */\n.main-nav li + li:before {\n    margin-right: 13px;\n    content: \"|\";\n}\n\n\n\n\n/*-------------------*\\\n    $LOCALISATION\n\\*-------------------*/\n.main-nav li + li:lang(fr) {\n    padding-left: 4px;\n}\n.main-nav li + li:before:lang(fr) {\n    margin-right: 6px;\n}\n```\n\n**Rendu**\n\n\u003cdiv class=\"example fr\"\u003e\n\u0009\u003cdiv class=\"elogo\"\u003e\n\u0009\u0009\u003cdiv class=\"h1\"\u003e\u003ca href=\"javascript:;\" title=\"Retour à l'accueil\"\u003eTitre\u003c/a\u003e\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u0009\u003cdiv class=\"emain-nav\"\u003e\n\u0009\u0009\u003cul\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Accueil\"\u003eAccueil\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Produits\"\u003eProduits\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Soins et Conseils\"\u003eSoins et Conseils\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Divertissements et Jeux\"\u003eDivertissements et Jeux\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u003cli\u003e\u003ca href=\"javascript:;\" title=\"Actualités\"\u003eActualités\u003c/a\u003e\u003c/li\u003e\n\u0009\u0009\u003c/ul\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n### La pseudo-classe `:lang()` et l'attribut `lang` ###\n\nGrâce à la pseudo-classe `:lang()` vous pouvez conditionnellement appliquer du style à un élément HTML en HTML5 en fonction du contenu de l'attribut `lang` de la balise `\u003chtml\u003e`.\n\nDans le cas de figure ci-dessous :\n\n```html\n\u003chtml lang=\"fr-fr\"\u003e\n    ...\n    \u003cdiv class=\"content\"\u003eTexte\u003c/div\u003e\n    ...\n\u003c/html\u003e\n```\n\nles sélecteurs 1 et 2 ci-après seront appliqués, mais pas le 3 :\n\n```css\n.content:lang(fr-fr) {\n    color: #ccc;\n}\n\n.content:lang(fr) {\n    font-weight: bold;\n}\n\n.content:lang(en-us) {\n    color: #f00;\n}\n```\n\n\n\n## Support xHTML/HTML4 ou CSS 2.1 ##\n\nCette technique peut également être utilisée sans la pseudo-classe `:lang()` qui a l'avantage de matcher avec « fr-fr » si on spécifie simplement « fr » mais de ne pas fonctionner tout cours avec les navigateurs les plus ~~inutiles~~ vieux.\n\n### Seulement avec du CSS 2.1 ###\n\nIl convient de remplacer `:lang(fr-fr)` en fin d'instruction par `[lang=fr-fr]` en début. Ainsi le code précédent devient :\n\n```css\n[lang=fr-fr] .content {\n    color: #ccc;\n}\n\n[lang=fr-fr] .content {\n    font-weight: bold;\n}\n\n[lang=en-us] .content {\n    color: #f00;\n}\n```\n\n\n\n### Sans HTML5 ###\n\nL'idée est ici de remplacer `\u003chtml lang=\"fr-fr\"\u003e` qui n'est pas valide xHTML/HTML4 par `\u003chtml class=\"fr-fr\"\u003e` et de manager côté Back-end la présence ou non de cette classe en fonction de la langue. Le code CSS devient alors :\n\n```css\n.fr-fr .content {\n    color: #ccc;\n}\n\n.fr-fr .content {\n    font-weight: bold;\n}\n\n.en-us .content {\n    color: #f00;\n}\n```\n\n\u003e _Note : n'hésitez pas, même en HTML5, à ajouter cette classe pour améliorer les performances de vos sélecteurs._\n\n\n\n\n\n## Gérer la localisation avec le remplissage de contenu ##\n\nIl est également possible de ne pas piéger les règles dans les fichiers CSS et de laisser vos remplisseurs de contenu se charger de gérer les problèmes CSS liés à la taille du contenu.\n\nDans ce cas il suffit d'ajouter une balise `\u003cstyle\u003e\u003c/style\u003e` en début de contenu et de changer le comportement avec celui-ci, ainsi les modifications de design liée au contenu son attaché à celui-ci.\n\n**Gérer par les Front-end Developper**\n\n```css\np {\n    width: 50%;\n}\n```\n\n**Gérer par les Content Filler**\n\n```html\n\u003cstyle\u003e\n.on-the-fly-behavior {\n    width: 60%;\n}\n\u003c/style\u003e\n\u003cp class=\"on-the-fly-behavior\"\u003eJe suis un peu trop large pour tenir sur une ligne\u003c/p\u003e\n```\n\nQuand le texte est chargés depuis une autre langue, c'est une autre instruction qui vient avec la balise `\u003cstyle\u003e`, il n'est donc même plus nécessaire d'ajouter à ses sélecteurs HTML `:lang()`.\n\n\n\n## Le mot de la fin ##\n\nAu final vous maintiendrez beaucoup moins de fichier et pourrez gérer les différentes tailles de contenu par groupe de pays !\n\n```css\n.header:lang(es),\n.header:lang(de),\n.header:lang(fr) {\n    /* Propriété communes */\n}\n.header:lang(us) {\n    /* Propriété communes */\n}\n.content:lang(de),\n.content:lang(fr) {\n    /* Propriété communes */\n}\n.content:lang(es),\n.content:lang(us) {\n    /* Propriété communes */\n}\n.footer:lang(fr) {\n    /* Propriété communes */\n}\n.footer:lang(de),\n.footer:lang(es),\n.footer:lang(us) {\n    /* Propriété communes */\n}\n```","dates":{"published":{"$date":"2013-10-31T14:47:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".example {\npadding: 8px 0;\nborder-top: 1px solid #aaa;\nborder-bottom: 1px solid #aaa;\nbackground-color: #fff;\n}\n.example .h1 {\nfont-size: 28px;\nfont-size: 2.8rem;\nmargin-top: 8px;\nfont-family: Lato,\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n}\n.dark .example {\nbackground-color: #000;\n}\n.example:after {\nclear: both;\ncontent: \"\";\ndisplay: block;\n}\n.example .elogo {\nposition: absolute;\nfont-size: 1.7em;\nfont-weight: bold;\npadding: 0 16px;\n}\n.example .emain-nav {\nfloat: right;\n}\n.example .emain-nav ul {\nlist-style: none;\nmargin: 0;\npadding: 0;\n}\n.example .emain-nav li {\ndisplay: inline-block;\npadding-left: 0;\n}\n.example .emain-nav li + li {\npadding: 8px 0 8px;\npadding-left: 11px;\n}\n.example .emain-nav li + li:before {\nmargin-right: 13px;\ncontent: \"|\";\n}\n.fr.example .emain-nav li + li:before {\nmargin-right: 6px;\n}\n.fr.example .emain-nav li + li {\npadding-left: 4px;\n}\n\n/*@media (max-width: 950px) {\n\u0009.example .emain-nav li:nth-child(6),\n\u0009.example .emain-nav li:nth-child(5),\n\u0009.example .emain-nav li:nth-child(3) {\n\u0009\u0009display:none;\n\u0009}\n\u0009.example {\n\u0009\u0009width: 360px;\n\u0009}\n}*/\n\n.example {\n\u0009width: 560px;\n}","title":"Bien \u003cspan\u003egérer\u003c/span\u003e la \u003cspan\u003elocalisation\u003c/span\u003e des sites en \u003cspan\u003eCSS3\u003c/span\u003e et \u003cspan\u003eHTML5\u003c/span\u003e","urn":"bien-gerer-la-localisation-des-sites-en-css3-et-html5"}
{"_id":{"$oid":"537f05c76012d1b53d2bdba9"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"530ef6a6789c1a55e4fde0af"}],"content":"Quand une page web est chargée, les éléments externes à celle-ci sont appelés tout au long de son chargement pour permettre au navigateur d'afficher le résultat visuel final. Cela prend du temps, et certains chargements bloquent le rendu alors que d'autres non. D'autres encore sont ignorés tant qu'une action de la part de l'utilisateur n'a pas été effectuée.\n\nPour bien comprendre et manager ses chargements de page, je vous propose de comprendre une liste de comportement au chargement des ressources pour Chrome, Safari, Firefox, IE et Opera.\n\n\n\n\n\n## Les images ##\n\n\u003e Est-ce qu'une image dans la balise `\u003cimg\u003e` qui ne doit pas apparaître au rendu déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003cdiv style=\"display: none\"\u003e\n    \u003cimg src=\"image.png\" alt\"Image\"\u003e\n\u003c/div\u003e\n```\n\n\u003e **`Oui.`** Les navigateurs téléchargent les images indépendamment des styles CSS appliqués, [cela fait parti de la spécification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#the-img-element).\n\u003e \n\u003e Ce comportement est la bête noire de pas mal d'implémentation JavaScript pour adapter les images, car l'image est demandée avant même que le JavaScript n'est le temps d'en appeler une autre via la propriété `src` ou même d'en obtenir sa taille.\n\n\n-----\n\n\n## Les backgrounds ##\n\n### Inclues dans un élément non affiché ###\n\n\u003e Est-ce qu'un élément possédant une image de background et inclus dans un élément invisible déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n\u003cdiv style=\"display: none\"\u003e\n    \u003cdiv style=\"background: url('image.png')\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n```\n\n\u003e *`Non.`* Les images de background en CSS diffèrent des balises `img`, elles ne sont pas réclamées au moment ou le code HTML est analysé.\n\u003e \n\u003e Si un élément est en `display: none`, calculer les styles des éléments enfant est une perte de temps car il n'y aura aucun impact sur le rendu du document, ainsi les images de background pour les éléments enfants cachés ne sont jamais calculées, ni même téléchargées.\n\n\n\n### Sur un élément non affiché ###\n\n\u003e Est-ce qu'un élément possédant une image de background et non visible déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | **Non** | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003cdiv style=\"background: url('image.png'); display: none\"\u003e\u003c/div\u003e\n```\n\n\u003e **`Pas tout le temps.`** Les navigateurs font parfois des choses différentes les un des autres !\n\u003e \n\u003e Donc ici la `\u003cdiv\u003e` n'est pas rendu, mais il est nécessaire que le style soit analysé pour s'en apercevoir. IE, Safari, Opera et Chrome lance la demande en file d'attente aussitôt qu'ils ont analysé les styles CSS.\n\n\n\n### Sur un élément transparent ###\n\n\u003e Est-ce qu'un élément possédant une image de background et transparent déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003cdiv style=\"background: url('image.png'); visibility: hidden\"\u003e\u003c/div\u003e\n```\n\n\u003e **`Oui.`** Les éléments avec un `visibility: hidden` prennent toujours de la place sur la page, pour que cela soit possible, cette place à besoin d'être calculée. Et ce mécanisme lance une requête de chargement.\n\n\n\n### Inclus dans un élément transparent ###\n\n\u003e Est-ce qu'un élément possédant une image de background et inclus dans un élément transparent déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003cdiv style=\"visibility: hidden\"\u003e\n    \u003cdiv style=\"background: url('image.png')\"\u003e\u003c/div\u003e\n\u003c/div\u003e\n```\n\n\u003e **`Oui.`** Même punition que l'élément du dessus.\n\n\n-----\n\n\n## Les images via JavaScript ##\n\n\u003e Créer une balise image et lui affecter une valeur dans sa source déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```javascript\nvar img = document.createElement('img');\nimg.src = 'image.png';\n```\n\n\u003e **`Oui.`** L'élément `img` n'attend tout simplement pas pour faire ses requêtes.\n\u003e \n\u003e La source d'une `img` est [téléchargée aussitôt que l'attribut `src` est (re)défini](http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#the-img-element). Il n'y a pas besoin pour cela que l'image soit insérée dans le document.\n\u003e \n\u003e Si vous avez besoin de déclencher rapidement une requête http et que vous vous moquez de la réponse le plus rapide est de faire `new Image().src = \u003curl\u003e;`.\n\n\n-----\n\n\n## Les backgrounds via JavaScript ##\n\n### Création simple ###\n\n\u003e Créer une balise et lui affecter une valeur de background dans son style déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```javascript\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\n```\n\n\u003e *`Non.`* De la même manière que dans le document HTML, les images de background ne sont pas téléchargées tant que leurs styles ne sont pas résolu. Cela n'arrive pas tant que l'image n'est pas insérée dans le document.\n\n\n\n### Injection puis retrait ###\n\n\u003e Créer une balise et lui affecter une valeur de background dans son style, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```javascript\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n\u003e *`Non.`* En effet, la nature mono-thread de JavaScript et du DOM signifie qu'un élément est ajouté et retiré avant même que le navigateur n'ai besoin de se soucier d'en faire le rendu.\n\u003e \n\u003e *Note : Le code ci-dessous déclenche quand même une requête HTTP sous IE à cause de* `div.innerHTML`*.*\n\u003e \n\u003e ```js\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndiv.innerHTML;\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n\n\n### Injection puis retrait avec certaines fonctions ###\n\n\u003e Créer une balise et lui affecter une valeur de background dans son style, puis l'ajouter au DOM et le retirer tout en demandant entre les deux une information sur la balise, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar div = document.createElement('div');\ndiv.style.background = \"url('image.png')\";\ndocument.body.appendChild(div);\n/* ... du code ... */\ndiv.offsetWidth;\n/* ... du code ... */\ndocument.body.removeChild(div);\n```\n\n\u003e **`Oui.`** Pour récupérer la taille d'un élément dans le navigateur, il faut résoudre ses styles et calculer leurs affichages. Comme vu précédemment, cela induit une requête.\n\n\n-----\n\n\n## Les scripts ##\n\n### Avec un type inconnu ###\n\n\u003e Est-ce qu'un fichier dans la balise `\u003cscript\u003e` avec un type MIME inconnu déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```js\n\u003cscript src=\"script.js\" type=\"foo/bar\"\u003e\u003c/script\u003e\n```\n\n\u003e *`Pas toujours.`* Cela induit une requête dans Firefox et IE. Aucun des navigateurs n'est censé exécuter des scripts dont le type est inconnu, mais Firefox et IE vont télécharger le script indépendamment de son type.\n\u003e \n\u003e [La specification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#script-processing-prepare) dit aux navigateurs d'ignorer les scripts avec un type non supporté.\n\u003e \n\u003e *Note : Bien que le type* `text/html` *soit supporté par les navigateurs, cela n'est pas le cas via la balise* `\u003cscript\u003e`*.*\n\u003e \n\u003e *Note 2 : l'attribut ancien* `language` *suit le même procéder dans les 5 navigateurs.*\n\n\n\n### Sans type ###\n\n\u003e Est-ce qu'un fichier dans la balise `\u003cscript\u003e` sans type MIME déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\n\u003cscript src=\"script.js\"\u003e\u003c/script\u003e\n```\n\n\u003e **`Oui.`** Si un script n'a pas d'attribut `type` ou `language`, `text/javascript` est utilisé. C'est un comportement commun des navigateurs [qui fait parti de la specification HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#script-processing-prepare).\n\n\n-----\n\n\n## Chargement dynamique de scripts ##\n\n### Création simple ###\n\n\u003e Créer un script et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | Non     | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```js\nvar script = document.createElement('script');\nscript.src = 'script.js';\n```\n\n\u003e *`Pas toujours.`* Ce que dit [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#dfnReturnLink-0) :\n\u003e \n\u003e \u003e Quand un élément script... rencontre l'un des événements listés... celui-ci doit être synchronisé quand l'élément sera inséré dans le document...\n\u003e \n\u003e IE ne suit pas les règles en effectuant la requête avant que le script ne soit inséré dans le document, bien que cela permette de télécharger un script et l'analyser de manière séparé.\n\n\n\n### Injection puis retrait ###\n\n\u003e Créer un script et lui affecter un fichier, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar script = document.createElement('script');\nscript.src = 'script.js';\ndocument.body.appendChild(script);\ndocument.body.removeChild(script);\n```\n\n\u003e **`Oui.`** Regardons de nouveau [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#dfnReturnLink-0) :\n\u003e \n\u003e \u003e Quand un élément script... rencontre l'un des événement listé... celui-ci doit être synchronisé quand l'élément sera inséré dans le document...\n\u003e \n\u003e La préparation du script est synchrone, elle n'attend pas la fin de l'exécution du code.\n\n\n-----\n\n\n## Chargement dynamique de fichiers ##\n\n### Création simple ###\n\n\u003e Créer une balise `link` et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\n```\n\n\u003e *`Non.`* Pas de requête cette fois ci, en accord avec [la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/links.html#link-type-stylesheet) :\n\u003e \n\u003e \u003e Le moment approprié pour obtenir une ressource externe via un `link` créé est le moment où celui-ci est inséré dans le document...\n\u003e \n\u003e ...donc on ne s'attend pas à voir partir une requête tant que l'élément n'est pas inséré dans le DOM.\n\n\n\n### Injection puis retrait ###\n\n\u003e Créer une balise `link` et lui affecter un fichier, puis l'ajouter au DOM et le retirer, déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\ndocument.body.appendChild(link);\ndocument.body.removeChild(link);\n```\n\n\u003e **`Oui.`** Le style par défaut donné à une ressource `link` est `text/css` donc ne pas mettre de `type` n’empêche pas la requête d'être faites.\n\u003e \n\u003e Aussi, comme pour les scripts, les stylesheets requièrent une action synchrone. Retirer l'élément juste après n’empêche pas la requête d'être faites.\n\n\n\n### Avec un mauvais type ###\n\n\u003e Créer une balise `link` avec un mauvais type MIME et lui affecter un fichier déclenche une requête HTTP ?\n\n| Chrome  | Firefox | IE  | Safari  | Opera   |\n|:-------:|:-------:|:---:|:-------:|:-------:|\n| **Oui** | Non     | Non | **Oui** | **Oui** |\n\n**Exemple :**\n\n```js\nvar link = document.createElement('link');\nlink.rel = 'stylesheet';\nlink.href = 'style.css';\nlink.type = 'text/javascript';\ndocument.body.appendChild(link);\n```\n\n\u003e *`Pas toujours.`* La spécification ne couvre pas ce qui arrive quand un content-type non supporté par `link` est mentionné. Chrome, Opera et Safari font tout de même la requête ici, bien qu'ils n'analysent même pas le style...\n\n\n-----\n\n\n## Les iframes ##\n\n### Sans rien ###\n\n\u003e Est-ce qu'une balise `\u003ciframe\u003e` déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera   |\n|:------:|:-------:|:---:|:------:|:-------:|\n| Non    | Non     | Non | Non    | **Oui** |\n\n**Exemple :**\n\n```html\n\u003ciframe\u003e\u003c/iframe\u003e\n```\n\n\u003e *`Pas toujours.`* La [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) dit à propos d'une iframe sans `src` :\n\u003e \n\u003e \u003e Si un élément n'a pas d'attribut `src` de spécifié... simplement levé un événement nommé « load » sur l'élément iframe.\n\u003e \n\u003e Seul Opera lance une requête sur la page « about:blank ».\n\n\n\n#### Avec une source vide ####\n\n\u003e Est-ce qu'une balise `\u003ciframe\u003e` avec une source vide déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera   |\n|:------:|:-------:|:---:|:------:|:-------:|\n| Non    | Non     | Non | Non    | **Oui** |\n\n**Exemple :**\n\n```html\n\u003ciframe src=\"\"\u003e\u003c/iframe\u003e\n```\n\n\u003e *`Pas toujours.`* Continuons avec la [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) :\n\u003e \n\u003e \u003e De plus si la valeur de l'attribut est une string vide l'url sera `about:blank`.\n\u003e \n\u003e Aucune requête n'est faites, sauf pour Opera.\n\n\n\n### Avec un identificateur de fragment (hash) ###\n\n\u003e Est-ce qu'une balise `\u003ciframe\u003e` avec un identificateur de fragment déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Oui    | **Non** | **Non** | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003ciframe src=\"#\"\u003e\u003c/iframe\u003e\n```\n\n\u003e **`Pas toujours.`** Lisons encore plus de [specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#process-the-iframe-attributes) :\n\u003e \n\u003e \u003e De plus, résoudre la valeur de la source relativement à la source de l'iframe parent.\n\u003e \n\u003e On s'attend donc à une requête, cependant...\n\u003e \n\u003e \u003e Si il existe un ancêtre dans le contexte du document actif à cette adresse il faut ignorer l'identificateur de fragment.\n\u003e \n\u003e Et donc il ne devrait pas y avoir de requête à cet endroit. Finalement personne ne fait ce qu'il faut sur ce point.\n\n\n\n### Avec une chaîne GET ###\n\n\u003e Est-ce qu'une balise `\u003ciframe\u003e` avec une chaîne GET déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003ciframe src=\"?\"\u003e\u003c/iframe\u003e\n```\n\n\u003e **`Oui.`** `?` est ure url différente aussi cela lève une requête.\n\n\n-----\n\n\n## Changer le DOM avec `document.write` ##\n\n### Commentaires ###\n\n\u003e Ne pas ouvrir un commentaire directement mais l'écrire en script autour d'une balise image déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```html\n\u003cscript\u003edocument.write('\u003c'+'!--')\u003c/script\u003e\n\u003cimg src=\"image.png\"\u003e\n--\u003e\n```\n\n\u003e *`Pas toujours.`* Si un commentaire HTML est écrit, le `img` à l'intérieur n'est jamais analysé et donc il n'y a aucune requête. Cependant, plusieurs navigateurs améliore leur performances en regardant plus en avant. Si ils tombent sur un script inline, au lieu de s'arrêter ils continuent afin de gagner en temps, quitte à faire de l'affichage inutile (car inhibé par le script précédent). On appel cela de l'[analyse spéculative](https://developer.mozilla.org/en-US/docs/HTML/Optimizing_Your_Pages_for_Speculative_Parsing).\n\u003e \n\u003e Firefox et IE continue d'analyser le document pendant que le script est en cours d'exécution. Ils vont donc lancer une requête en rencontrant l'image. Quand le script à fini son analyse il va inhiber la balise `img` car un commentaire HTML se sera inséré entre temps. Malheureusement la requête aura déjà été faites.\n\u003e \n\u003e Chrome fait également de l'analyse spéculative pour les scripts externes mais pas dans le cas de script inline.\n\n\n\n### Commentaires asynchrones ###\n\n\u003e Ne pas ouvrir un commentaire directement mais l'écrire en script asynchrone autour d'une balise image déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE      | Safari | Opera |\n|:------:|:-------:|:-------:|:------:|:-----:|\n| Non    | **Oui** | **Oui** | Non    | Non   |\n\n**Exemple :**\n\n```html\n\u003cscript async\u003edocument.write('\u003c'+'!--')\u003c/script\u003e\n\u003cimg src=\"image.png\"\u003e\n--\u003e\n```\n\n\u003e *`Pas toujours.`* Même en `async` les scripts inline sont bloquant comme je l'ai déjà [expliqué dans un précédent billet](https://blog.lesieur.name/differences-entre-async-et-defer-en-html5/#pour-les-scripts-inline).\n\u003e \n\u003e *Note 2 : cela est la même chose en ce qui concerne l'attribut * `defer`*.*\n\n\n-----\n\n\n## Recalcule d'affichage de page ##\n\n#### Avec un disperseur d’événement ####\n\nRetailler la fenêtre avec une demande de rechargement par dispersement au redimensionnement déclenche une requête HTTP ?\n\n| Chrome  | Firefox | IE      | Safari  | Opera   |\n|:-------:|:-------:|:-------:|:-------:|:-------:|\n| **Oui** | Non     | **Oui** | **Oui** | **Oui** |\n\n**Exemple :**\n\n```javascript\nwindow.onresize = function() {\n  window.location.reload();\n};\nvar event = document.createEvent('Event');\nevent.initEvent('resize', false, false);\nwindow.dispatchEvent(event);\n```\n\n\u003e *`Pas toujours.`* Disperser l’événement `resize` déclenche un rechargement de page ? Non, cela est une [violation de la specification](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#dom-location-reload).\n\u003e \n\u003e \u003e Quand une méthode `reload()` est invoquée... Si l'exécution courante est un événement dispersé de redimensionnement... abandonner cette étape.\n\u003e \n\u003e Tout le monde à faux sauf Firefox cette fois.\n\u003e \n\u003e *Note : Le code ci-dessous déclenche bien une requête chez tout le monde.*\n\u003e \n\u003e ```js\n\u003e window.onresize = function() {\n\u003e   window.location.reload();\n\u003e };\n\u003e window.onresize();\n\u003e ```\n\n\n-----\n\n\n## Chargement de police ##\n\n### Seulement avec `@font-face` ###\n\nLa simple déclaration d'une police déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n\u003cstyle\u003e\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n\u003c/style\u003e\n```\n\n\u003e *`Non.`* Pas de requête si on ne fait que la déclarer.\n\n\n\n### Avec application CSS ###\n\nLa déclaration d'une police appelé depuis un sélecteur CSS déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Non    | Non     | Non | Non    | Non   |\n\n**Exemple :**\n\n```html\n\u003cstyle\u003e\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n  p { font-family: myfont, sans-serif; }\n\u003c/style\u003e\n```\n\n\u003e *`Non.`* Pas de requête si on ne fait que la déclarer et l'associer.\n\n\n\n### Avec présence d'une balise ###\n\nLa déclaration d'une police appelé depuis un sélecteur CSS sur une balise présente déclenche une requête HTTP ?\n\n| Chrome | Firefox | IE  | Safari | Opera |\n|:------:|:-------:|:---:|:------:|:-----:|\n| Oui    | Oui     | Oui | Oui    | Oui   |\n\n**Exemple :**\n\n```html\n\u003cstyle\u003e\n  @font-face {\n    font-family: 'myfont';\n    src: url('font.woff');\n    unicode-range: U+61-7A; /* lowercase a-z */\n  }\n  p { font-family: myfont, sans-serif; }\n\u003c/style\u003e\n\u003cp\u003e\u003c/p\u003e\n```\n\n\u003e **`Oui.`** Effectivement si une balise vide a une police d'appliquée, une requête est lancée même si visuellement elle ne rend rien.\n\n\n-----\n\n\n## Conclusion ##\n\nCe qu'il ressort c'est que l'on ne peut pas se fier aux spécifications pour prévoir avec certitude le comportement de chaque navigateur, mais ça, ça n'étonne personne ! Dans le domaine des requêtes HTTP il n'y a aucun bon élève.","dates":{"published":{"$date":"2014-06-19T11:30:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".text table {\nwidth: 100%\n}","title":"\u003cspan\u003eMaîtriser\u003c/span\u003e les \u003cspan\u003erequêtes\u003c/span\u003e au \u003cspan\u003echargement\u003c/span\u003e d'une page \u003cspan\u003eweb\u003c/span\u003e","urn":"maitriser-les-requetes-au-chargement-d-une-page-web","description":"Maîtriser les requêtes au chargement d'une page web","image":""}
{"_id":{"$oid":"53a44667252cf3af329c2664"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"530cc2f27188099a66e9bcec"}],"content":"Il y a quelque temps, j'expliquais qu'il était difficile d'obtenir [un travail Front-end de qualité avec des Frameworks CSS](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/) HTML-Driven. Le gros reproche que je fais à ces Frameworks est de prendre le contre pied de l'approche du W3C qui met tout en œuvre avec HTML5 et CSS3 pour complètement effacer toute trace de design dans l'architecture HTML et la rendre structurellement sémantique.\n\nUn Framework CSS c'est vraiment pratique pour ne pas trop se mouiller et gagner du temps parait-il. On me dit d'ailleurs souvent que les systèmes de Grid c'est bien pratique. Ce que j'en pense pour ma part c'est qu'on ne peut jamais sortir des chemins battu d'un Framework lourd à moins de parfaitement connaître les mécanismes de celui-ci pour le contrer. Et dès lors qu'on est assez aguerrit pour comprendre des mécanismes menant à des « [abstractions qui fuient](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html) », on est alors assez aguerrit pour s'en passer.\n\n**Sachez que l'on peut facilement se passer de Framework pour gérer une grille Responsive Web Design propre et maintenable en évitant ainsi d'horribles codes comme `\u003cdiv class=\"header col-xs-12 col-sm-6 col-sm-push-6 text-right-sm bg-info\"\u003e` tout en restant maître de ce que l'on fait.** [Cette page CodePen en est un exemple](http://codepen.io/Haeresis/pen/wkIiq).\n\nSuivez-moi, je vais vous montrer !\n\n\n\n\n\n## Création d'une structure HTML ##\n\nEntrons dans le vif du sujet. Pour commencer, nous allons nous attacher à comprendre comment manager facilement notre grille via une feuille CSS, aussi la structure sera pour le moment plate et non sémantique. Là voici :\n\n**HTML**\n\n```html\n\u003chtml\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eResponsive and Semantic CSS Grid CSS-Driven\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"common.css\"\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"page\"\u003e\n            \u003cdiv class=\"brand\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"slogan\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"title\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"main-nav\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"overview\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"anchor-nav\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"main\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"call-to-action\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"secondary-nav\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"utils\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"legals\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n\n\n## Mise en place de la grille CSS ##\n\nComme vous pouvez le constater pour le moment, la structure HTML est vide de contenu. Nous allons l'injecter pendant nos tests unitaires via la CSS.\n\n\n\n### Tests visuels ###\n\nNous allons commencer par habiller l'exemple précédent avec un style de test pour bien vérifier que la construction de la grille se fait sans soucis. C'est une étape non nécessaire mais qui aidera grandement à commenter l'architecture de la page facilement. Injectons ce code voué à être commenté en dernier lieu :\n\n**CSS (dans common.css)**\n\n```css\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n   width: 100%;\n   display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n   background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n   content: \"Slogan\";\n   background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n   content: \"Title\";\n   background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n   content: \"Nav\";\n   background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n   content: \"Overview\";\n   background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n   content: \"Anchor nav\";\n   background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n   content: \"Main\";\n   background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n   content: \"Call to action\";\n   background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n   content: \"Secondary nav\";\n   background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n   content: \"Legals\";\n   background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n   content: \"Utils\";\n   background-color: rgba(150, 0, 150, 0.5);\n}\n```\n\n\n\n### Grille de base ###\n\nC'est ici que nous allons définir notre ensemble de grilles existantes sur le site web. Pour notre exemple nous n'allons créer qu'une grille de 12 colonnes.\n\n\n#### Rappel d'une grille dans un Framework CSS ####\n\nLa grille consiste a diviser l'espace alloué à l'affichage du site en 12 colonnes dans notre exemple. Chaque partie de la grille pourra donc être large de un douzième (1/12) de la taille d'affichage à douze douzième (12/12). Si un composant fait 8 colonnes et que celui qui le suit en fait 4, ils tiendront l'un à côté de l'autre. Par contre, si le second en fais 8 également, il s'affichera à la ligne, car ne pouvant pas rentrer à côté.\n\n#### À vos calculatrices ####\n\nSi on estime qu'une colonne faisant 100% de la ligne vaut 12 unités alors :\n\n- 1 unité = (1 * 100) / 12 = 8.33333333%\n- 2 unités = (2 * 100) / 12 = 16.66666667%\n- 3 unités = (3 * 100) / 12 = 25%\n- 4 unités = (4 * 100) / 12 = 33.33333333%\n- 5 unités = (5 * 100) / 12 = 41.66666667%\n- 6 unités = (6 * 100) / 12 = 50%\n- 7 unités = (7 * 100) / 12 = 58.33333333%\n- 8 unités = (8 * 100) / 12 = 66.66666667%\n- 9 unités = (9 * 100) / 12 = 75%\n- 10 unités = (10 * 100) / 12 = 83.33333333%\n- 11 unités = (11 * 100) / 12 = 91.66666667%\n- 12 unités = (12 * 100) / 12 = 100%\n\nce qui nous donnerais une grille de référence dans un Framework comme celle-ci :\n\n**CSS (dans common.css)**\n\n*Espace pris par les 12 tailles de colonne possible*\n\n```css\n/*\n.span12-12 { width: 100%; }\n.span12-11 { width: 91.66666667%; }\n.span12-10 { width: 83.33333333%; }\n.span12-9 { width: 75%; }\n.span12-8 { width: 66.66666667%; }\n.span12-7 { width: 58.33333333%; }\n.span12-6 { width: 50%; }\n.span12-5 { width: 41.66666667%; }\n.span12-4 { width: 33.33333333%; }\n.span12-3 { width: 25%; }\n.span12-2 { width: 16.66666667%; }\n.span12-1 { width: 8.33333333%; }\n*/\n```\n\n*Espace vers la gauche nécessaire pour générer une colonne vide*\n\n```css\n/*\n.prepend12-12 { margin-left: 100%; }\n.prepend12-11 { margin-left: 91.66666667%; }\n.prepend12-10 { margin-left: 83.33333333%; }\n.prepend12-9 { margin-left: 75%; }\n.prepend12-8 { margin-left: 66.66666667%; }\n.prepend12-7 { margin-left: 58.33333333%; }\n.prepend12-6 { margin-left: 50%; }\n.prepend12-5 { margin-left: 41.66666667%; }\n.prepend12-4 { margin-left: 33.33333333%; }\n.prepend12-3 { margin-left: 25%; }\n.prepend12-2 { margin-left: 16.66666667%; }\n.prepend12-1 { margin-left: 8.33333333%; }\n.prepend12-0 { margin-left: 0; }\n*/\n```\n\n*Espace vers la droite nécessaire pour générer une colonne vide*\n\n```css\n/*\n.append12-12 { margin-right: 100%; }\n.append12-11 { margin-right: 91.66666667%; }\n.append12-10 { margin-right: 83.33333333%; }\n.append12-9 { margin-right: 75%; }\n.append12-8 { margin-right: 66.66666667%; }\n.append12-7 { margin-right: 58.33333333%; }\n.append12-6 { margin-right: 50%; }\n.append12-5 { margin-right: 41.66666667%; }\n.append12-4 { margin-right: 33.33333333%; }\n.append12-3 { margin-right: 25%; }\n.append12-2 { margin-right: 16.66666667%; }\n.append12-1 { margin-right: 8.33333333%; }\n.append12-0 { margin-right: 0; }\n*/\n```\n\n*Décalage vers la gauche nécessaire pour reculer les colonnes dans la grille en vue de les intervertir*\n\n```css\n/*\n.pull12-12 { right: 100%; }\n.pull12-11 { right: 91.66666667%; }\n.pull12-10 { right: 83.33333333%; }\n.pull12-9 { right: 75%; }\n.pull12-8 { right: 66.66666667%; }\n.pull12-7 { right: 58.33333333%; }\n.pull12-6 { right: 50%; }\n.pull12-5 { right: 41.66666667%; }\n.pull12-4 { right: 33.33333333%; }\n.pull12-3 { right: 25%; }\n.pull12-2 { right: 16.66666667%; }\n.pull12-1 { right: 8.33333333%; }\n.pull12-0 { right: 0; }\n*/\n```\n\n*Décalage vers la droite nécessaire pour avancer les colonnes dans la grille en vue de les intervertir*\n\n```css\n/*\n.push12-12 { left: 100%; }\n.push12-11 { left: 91.66666667%; }\n.push12-10 { left: 83.33333333%; }\n.push12-9 { left: 75%; }\n.push12-8 { left: 66.66666667%; }\n.push12-7 { left: 58.33333333%; }\n.push12-6 { left: 50%; }\n.push12-5 { left: 41.66666667%; }\n.push12-4 { left: 33.33333333%; }\n.push12-3 { left: 25%; }\n.push12-2 { left: 16.66666667%; }\n.push12-1 { left: 8.33333333%; }\n.push12-0 { left: 0; }\n*/\n```\n\n*Propriété pour permettre le déplacement de colonne et les gouttières inter colonne (arbitrairement placé à 16px)*\n\n```css\n/*\n.pull-push { position: relative; }\n.gutter { padding-left: 16px; padding-right: 16px; }\n.pull-push-reset { position: static; }\n.gutter-reset { padding-left: 0; padding-right: 0; }\n*/\n```\n\n\n#### La grille et le Responsive Web Design ####\n\nPour commencer nous allons initialiser la grille et les colonnes qui la compose.\n\nNotre site sera habillé en Mobile First, nous allons également définir nos gaps de responsivité. [Vous pouvez lire cet article pour plus de compréhension sur le Responsive Web Design, le Mobile First et les gaps de responsivité](https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/).\n\n**CSS (dans common.css)**\n\n*Propriété pour manager les colonnes*\n\n```css\n    .page:after,\n.grid:after {\n    content: \"\";\n    clear: both;\n    display: block;\n}\n\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .main,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.column {\n    float: left;\n    width: 100%;\n}\n```\n\nPour faire fonctionner ce mécanisme de colonnes côte à côte qui passe à la ligne si elles manquent de place nous utiliserons des balises flottantes. L'idée est de nommer la zone avec la classe « .column » mais ne jamais l'utiliser dans le code HTML. À la place, c'est les éléments HTML de type « column » qui seront empilé au dessus.\n\nDe la même manière vous constaterez que l'élément `.page:after` est référencé comme se comportant comme l'élément `.grid:after`.\n\n*Media Queries pour gérer le comportement de chaque colonne en fonction de la taille d'affichage*\n\n```css\n/* Mobile / Small tablet */\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n}\n\n/* Desktop */\n@media (min-width: 992px) {\n}\n\n/* Large desktop */\n@media (min-width: 1200px) {\n}\n```\n\nAvant de vous expliquer les étapes pour rapidement manager votre grille voici à quoi doit ressembler votre feuille CSS, et ce qu'elle donne appliquée sur notre structure HTML exemple.\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/jtDEm)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/jtDEm)\n\n\n\n\n\n## Manager ses Grilles ##\n\nPour notre exemple nous n'utilisons qu'une grille. Mais il est tout à fait possible d'en avoir plusieurs (12 colonnes, 16 colonnes, etc.) et d'en changer en fonction du template de page (ou pour les grilles imbriquées différentes).\n\n\n\n### Étape 1 : Importer les règles ###\n\nLe rendu ci-dessus étant déjà celui-sur Mobile, nous allons alimenter le rendu pour Tablette et plus.\n\n\u003e À partir de 768px, je souhaite que la partie « Brand » occupe 2 colonnes. Je place donc mon curseur dans mon fichier à cette ligne dans mon exemple de grille mise en commentaire :\n\u003e \n\u003e ```css\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e et avec le raccourci de duplication rapide de ligne (sur Sublim Text celui-ci est `Ctrl + Shift + D`) j'obtiens une duplication de celle-ci :\n\u003e \n\u003e ```css\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e avec mon raccourci d’interversion rapide de ligne, je vais aller placer la propriété dupliquée dans la bonne Media Query (sur Sublim Text celui-ci est `Ctrl + Shift + Flèche du bas` pour descendre une ligne ou Ctrl + Shift + Flèche du haut` pour la monter). Cela nous donne alors :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e     .span12-2 { width: 16.66666667%; }\n\u003e }\n\u003e ```\n\n\n### Étape 2 : Associer la balise ###\n\nContinuons.\n\n\u003e Puisque je souhaite que « Brand » fasse deux colonnes, je place mon curseur sur la ligne ou je l'ai référencé comme étant de type colonne (attaché à « .column »),\n\u003e \n\u003e ```css\n\u003e     .brand,\n\u003e ```\n\u003e \n\u003e je duplique la ligne,\n\u003e \n\u003e ```css\n\u003e     .brand,\n\u003e     .brand,\n\u003e ```\n\u003e \n\u003e et je place le duplicata sur la règle de deux colonnes que j'ai créé plus tôt :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e     .brand,\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e }\n\u003e ```\n\n\n\n### Étape 3 : Recommencer pour toute la grille Tablette ###\n\nIl nous reste à présent à faire de même pour les autres colonnes.\n\n\u003e Je souhaite que Title fasse également 2 colonnes sur 12 :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e   .brand,\n\u003e   .title,\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e }\n\u003e ```\n\u003e \n\u003e Je souhaite que Anchor nav et Utils fasse également 3 colonnes sur 12 :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e   .brand,\n\u003e   .title,\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e   .anchor-nav,\n\u003e   .utils,\n\u003e .span12-3 { width: 25%; }\n\u003e }\n```\n\u003e \n\u003e Je souhaite que les Call to Action fassent 6 colonnes sur 12, que Legals et Main en fassent 9 et que Main nav et Slogan en fasse 10 :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e   .brand,\n\u003e   .title,\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e   .anchor-nav,\n\u003e   .utils,\n\u003e .span12-3 { width: 25%; }\n\u003e   .call-to-action,\n\u003e .span12-6 { width: 50%; }\n\u003e   .legals,\n\u003e   .main,\n\u003e .span12-9 { width: 75%; }\n\u003e   .main-nav,\n\u003e   .slogan,\n\u003e .span12-10 { width: 83.33333333%; }\n\u003e }\n\u003e ```\n\nEt notre grille commence à prendre forme !\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kfdsp)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kfdsp)\n\n_**N'hésitez pas à retailler la fenêtre de votre navigateur pour constater les différences en fonction de votre périphérique d'affichage.**_\n\n\n\n### Étape 4 : Faire de même pour d'autres règles ###\n\nSur le même principe, nous allons ajouter des gouttières à nos colonnes pour les espacer les une des autres.\n\n\u003e Nous allons donc récupérer toutes les colonnes sur lesquels nous souhaitons appliquer des gouttières. Comme nous les voulons pour toutes les différentes tailles nous allons les attacher dans la partie Mobile :\n\u003e \n\u003e ```css\n\u003e /* Mobile / Small tablet */\n\u003e   .brand,\n\u003e   .slogan,\n\u003e   .title,\n\u003e   .main-nav,\n\u003e   .overview,\n\u003e   .anchor-nav,\n\u003e   .main,\n\u003e   .call-to-action,\n\u003e   .secondary-nav,\n\u003e   .utils,\n\u003e   .legals,\n\u003e .gutter { padding-left: 16px; padding-right: 16px; }\n\u003e ```\n\nCe qui donne :\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/dAKch)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/dAKch)\n\u003e \n\u003e Nous allons à présent intervertir à partir de l'affichage mobile les Brand et Slogan.\n\u003e \n\u003e Pour cela nous allons poussez Brand de 10 colonnes et reculer Slogan de 2 colonnes. Nous allons passer les colonnes en relative.\n\u003e \n\u003e Nous allons donc importer les règles,\n\u003e \n\u003e ```css\n\u003e .pull-push { position: relative; }\n\u003e ```\n\u003e \n\u003e ```css\n\u003e .push12-10 { left: 83.33333333%; }\n\u003e ```\n\u003e \n\u003e ```css\n\u003e .pull12-2 { right: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e et attacher\n\u003e \n\u003e ```css\n\u003e   .brand,\n\u003e ```\n\u003e \n\u003e ```css\n\u003e   .slogan,\n\u003e ```\n\u003e \n\u003e dans l'affichage Tablette. Idem pour Legals et Utils avec 9 colonnes en avant et 3 colonnes en arrière :\n\u003e \n\u003e ```css\n\u003e /* Tablet / Small desktop */\n\u003e @media (min-width: 768px) {\n\u003e   .brand,\n\u003e   .title,\n\u003e .span12-2 { width: 16.66666667%; }\n\u003e   .anchor-nav,\n\u003e   .utils,\n\u003e .span12-3 { width: 25%; }  \n\u003e   .call-to-action,\n\u003e .span12-6 { width: 50%; }\n\u003e   .legals,\n\u003e   .main,\n\u003e .span12-9 { width: 75%; }\n\u003e   .main-nav,\n\u003e   .slogan,\n\u003e .span12-10 { width: 83.33333333%; }\n\u003e /**/\n\u003e   .utils,\n\u003e   .legals,\n\u003e   .brand,\n\u003e   .slogan,\n\u003e .pull-push { position: relative; }\n\u003e /**/\n\u003e   .utils,\n\u003e .push12-9 { left: 75%; }\n\u003e   .brand,\n\u003e .push12-10 { left: 83.33333333%; }\n\u003e   .slogan,\n\u003e .pull12-2 { right: 16.66666667%; }\n\u003e   .legals,\n\u003e .pull12-3 { right: 25%; }\n\u003e }\n\u003e ```\n\nCe qui donne :\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/KyGcs)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/KyGcs)\n\n\n\n### Étape 5 : Alimenter toutes les tailles de périphérique ###\n\nIl est à présent temps de faire de même pour Desktop et Large Desktop. Cela va vous faire importer de nouvelles règles ou en écraser des précédentes.\n\n\u003e Par exemple avec cette configuration Desktop : Anchor nav, les Call to Action et Main vont changer de comportement :\n\u003e \n\u003e ```css\n\u003e /* Desktop */\n\u003e @media (min-width: 992px) {\n\u003e   .anchor-nav,  \n\u003e   .call-to-action,\n\u003e .span12-4 { width: 33.33333333%; }\n\u003e   .main,\n\u003e .span12-8 { width: 66.66666667%; }\n\u003e }\n\u003e ```\n\nNous allons en profiter pour introduire les colonnes invisibles avec le Large Desktop :\n\n\u003e Nous allons importer les règles :\n\u003e \n\u003e ```css\n\u003e .prepend12-2 { margin-left: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e et\n\u003e \n\u003e ```css\n\u003e .append12-2 { margin-right: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e Pour créer des colonnes inexistantes de part et d'autres de nos Call to Action. Nous allons les cibler avec la propriété CSS3 `:nth-child()` :\n\u003e \n\u003e ```css\n\u003e /* Large desktop */\n\u003e @media (min-width: 1200px) {\n\u003e   .anchor-nav,\n\u003e .span12-3 { width: 25%; }\n\u003e   .call-to-action\n\u003e .span12-4 { width: 33.33333333%; }\n\u003e   .main,\n\u003e .span12-9 { width: 75%; }\n\u003e /**/\n\u003e   .call-to-action:nth-child(8),\n\u003e   .call-to-action:nth-child(10),\n\u003e   .call-to-action:nth-child(12),\n\u003e .prepend12-2 { margin-left: 16.66666667%; }\n\u003e /**/\n\u003e   .call-to-action:nth-child(9),\n\u003e   .call-to-action:nth-child(11),\n\u003e   .call-to-action:nth-child(13),\n\u003e .append12-2 { margin-right: 16.66666667%; }\n\u003e }\n\u003e ```\n\nCe qui donne :\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kKHuy)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kKHuy)\n\n\n\n\n\n## Grille CSS Sémantique ##\n\nMaintenant que nous avons vu que la grille fonctionne avec un empilement de `div` tout ce qu'il y a de plus classique, offrons à notre structure un petit côté sémantique et observons que cela n'affecte en rien le fonctionnement de la grille. C'est même bien plus pratique dans le cas de composant en liste comme pour les Call to Action !\n\n\n\n### Nouvelle structure ###\n\nVoici une structure HTML fonctionnelle avec nos grilles.\n\n**HTML**\n\n```html\n\u003chtml\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eResponsive and Semantic CSS Grid CSS-Driven\u003c/title\u003e\n        \u003clink rel=\"stylesheet\" href=\"common.css\"\u003e      \n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cheader\u003e\n            \u003cdiv class=\"brand\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"slogan\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"title\"\u003e\u003c/div\u003e\n            \u003cnav class=\"main-nav\"\u003e\u003c/nav\u003e\n        \u003c/header\u003e\n        \u003cdiv class=\"content\"\u003e\n            \u003csection class=\"overview\"\u003e\u003c/section\u003e\n            \u003cnav class=\"anchor-nav\"\u003e\u003c/nav\u003e\n            \u003carticle class=\"main\"\u003e\u003c/article\u003e\n            \u003cul class=\"call-to-action-list\"\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n        \u003cfooter\u003e\n            \u003cnav class=\"secondary-nav\"\u003e\u003c/nav\u003e\n            \u003cdiv class=\"utils\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"legals\"\u003e\u003c/div\u003e\n        \u003c/footer\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\n\n### Ajustement CSS ###\n\nComme la structure a légèrement changé, nous allons également légèrement changer nos associations.\n\n\u003e ```css\n\u003e     .page:after,\n\u003e .grid:after {\n\u003e     content: \"\";\n\u003e     clear: both;\n\u003e     display: block;\n\u003e }\n\u003e ```\n\u003e \n\u003e devient\n\u003e \n\u003e ```css\n\u003e   body \u003e header:after,\n\u003e   body \u003e footer:after,\n\u003e   .content:after,\n\u003e .grid:after {\n\u003e   content: \"\";\n\u003e   clear: both;\n\u003e   display: block;\n\u003e }\n\u003e ```\n\nCréation d'un annulateur de liste dans la grille pour les balises comme `.call-to-action-list`.\n\n\u003e ```css\n\u003e .list-reset { margin: 0;padding: 0;list-style-type: none; }\n\u003e ```\n\u003e \n\u003e Association dans la partie Mobile et plus :\n\u003e \n\u003e ```css\n\u003e   .call-to-action-list,\n\u003e .list-reset { margin: 0;padding: 0;list-style-type: none; }\n\u003e ```\n\nEt facilitation du ciblage des Call to Action devenu des listes :\n\n\u003e ```css\n\u003e   .call-to-action:nth-child(8),\n\u003e   .call-to-action:nth-child(10),\n\u003e   .call-to-action:nth-child(12),\n\u003e .prepend12-2 { margin-left: 16.66666667%; }\n\u003e /**/\n\u003e   .call-to-action:nth-child(9),\n\u003e   .call-to-action:nth-child(11),\n\u003e   .call-to-action:nth-child(13),\n\u003e .append12-2 { margin-right: 16.66666667%; }\n\u003e ```\n\u003e \n\u003e devient\n\u003e \n\u003e ```css\n\u003e   .call-to-action:nth-child(odd),\n\u003e .prepend12-2 { margin-left: 16.66666667%; }\n\u003e /**/\n\u003e   .call-to-action:nth-child(even),\n\u003e .append12-2 { margin-right: 16.66666667%; }\n\u003e ```\n\nCe qui donne :\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/Lshcj)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/Lshcj)\n\n\n\n\n\n## Grille imbriquée ##\n\nLe système de grille peut ensuite s'appliquer à l'intérieur même des colonnes. En fonction de ce que vous souhaitez faire, il peut être intéressant de retirer les gouttières d'un élément parent pour les appliquer à la sous grille.\n\nVoici la zone Main rempli avec une sous grille. Main fait alors office de `.grid`, Article et Steps office de `.column`\n\n**HTML**\n\n```html\n\u003c!-- ... header ... --\u003e\n\n\u003cdiv class=\"content\"\u003e\n  \u003csection class=\"overview\"\u003e\u003c/section\u003e\n  \u003cnav class=\"anchor-nav\"\u003e\u003c/nav\u003e\n\n\n  \u003carticle class=\"main\"\u003e\n    \u003cdiv class=\"article\"\u003e\u003c/div\u003e\n    \u003col class=\"step-list\"\u003e\n      \u003cli class=\"step\"\u003e\u003c/li\u003e\n      \u003cli class=\"step\"\u003e\u003c/li\u003e\n      \u003cli class=\"step\"\u003e\u003c/li\u003e\n    \u003c/ol\u003e\n  \u003c/article\u003e\n\n\n  \u003cul class=\"call-to-action-list\"\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n    \u003cli class=\"call-to-action\"\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e\n\n\u003c!-- ... footer ... --\u003e\n```\n\nNous allons donc améliorer nos CSS de test en rajoutant,\n\n```css\n.main:before {\n  content: none;\n}\n.article:before {\n  content: \"Article\";\n  background-color: rgba(255, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n.step:before {\n  content: \"Steps\";\n  background-color: rgba(0, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n\n```\n\nen rajoutant les listes ordonnées sans style pour la grille,\n\n```css\n    .step-list,\n    .call-to-action-list,\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n```\n\nen retirant les gouttières des « .column » faisant office de « .grid » et\n\n```css\n/* Mobile / Small tablet */\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.gutter { padding-left: 16px; padding-right: 16px; }\n```\n\nen abonnant `.step-list` et `.step` aux `.grid`, `.column` et `gutter`\n\n```css\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .main,\n    .article,\n    .step,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.column {\n    float: left;\n    width: 100%;\n}\n\n/* Mobile / Small tablet */\n    .brand,\n    .slogan,\n    .title,\n    .main-nav,\n    .overview,\n    .anchor-nav,\n    .article,\n    .step,\n    .call-to-action,\n    .secondary-nav,\n    .utils,\n    .legals,\n.gutter { padding-left: 16px; padding-right: 16px; }\n```\n\nIl ne nous reste plus qu'à manager le comportement des colonnes en fonction des périphériques :\n\n```css\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n    .brand,\n    .title,\n.span12-2 { width: 16.66666667%; }\n    .anchor-nav,\n    .utils,\n.span12-3 { width: 25%; }\n    .step,\n.span12-4 { width: 33.33333333%; }    \n    .call-to-action,\n.span12-6 { width: 50%; }\n    .legals,\n    .main,\n.span12-9 { width: 75%; }\n    .main-nav,\n    .slogan,\n.span12-10 { width: 83.33333333%; }\n\n    .utils,\n    .legals,\n    .brand,\n    .slogan,\n.pull-push { position: relative; }\n\n    .utils,\n.push12-9 { left: 75%; }\n    .brand,\n.push12-10 { left: 83.33333333%; }\n    .slogan,\n.pull12-2 { right: 16.66666667%; }\n    .legals,\n.pull12-3 { right: 25%; }\n}\n```\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/hcGib)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/hcGib)\n\n\n\n\n\n## Équivalent d'un clearfix ##\n\nEn remplissant notre architecture avec du contenu on s'aperçoit qu'il y a des problèmes de chevauchement.\n\nC'est le cas avec la zone Title dans l'exemple ci-après :\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/aJKkd)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/aJKkd)\n\nPour résoudre cela, il suffit de créer une règle CSS `clearfix` et d'associer la zone Title.\n\n```css\n    .title,\n.clearfix { clear: both; }\n```\n\n*Note : J'en profite également pour empêcher le site d'être plus large que 1200px*\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/emwIv)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/emwIv)\n\n\n\n\n\n## Pour aller plus loin ##\n\n### Alignement ###\n\nIl est tout à fait possible de reproduire ce type de fonctionnement pour autre chose que la grille. Par exemple pour l'alignement des textes, images, etc.\n\nCréons par exemple les règles exemples suivantes :\n\n```css\n/*------------------------------------*\\\n    $ALIGMENT\n\\*------------------------------------*/\n\n/*\n.text-left { text-align: left; }\n.text-center { text-align: center; }\n.text-right { text-align: right; }\n.text-justify { text-align: justify; }\n*/\n```\n\net appliquons la CSS sur les zones de la manière suivante :\n\n```css\n/* Mobile / Small tablet */\n    .utils,\n.text-center { text-align: center; }\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n     .brand,\n     .utils,\n.text-right { text-align: right; }\n}\n```\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/lyqir)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/lyqir)\n\n\n\n### Afficher / Masquer ###\n\nDe la même manière il est possible d'afficher ou de masquer certaines zones en fonction de la résolution d'affichage.\n\n```css\n/*------------------------------------*\\\n    $VISTIBLE / HIDDEN\n\\*------------------------------------*/\n\n/*\n.display-block, visible { display: block; }\n.display-inline { display: inline-block; }\n.display-inline-block { display: inline-block; }\n...\n.display-none, hidden { display: none; }\n*/\n```\n\nN'affichons que 2 des 3 Call to Action en Tablette et en Large Desktop et les Step seulement à partir de Tablette :\n\n```css\n/* Mobile / Small tablet */\n    .step,\n.display-none, hidden { display: none; }\n\n/* Tablet / Small desktop */\n@media (min-width: 768px) {\n    .step,\n.display-block, visible { display: block; }\n    .call-to-action:nth-child(n + 3),\n.display-none, hidden { display: none; }\n}\n\n/* Desktop */\n@media (min-width: 992px) {\n    .call-to-action:nth-child(n + 3),\n.display-block, visible { display: block; }\n}\n\n/* Large desktop */\n@media (min-width: 1200px) {\n    .call-to-action:nth-child(n + 3),\n.display-none, hidden { display: none; }\n}\n```\n\n\u003e **`L'`** **Exemple :**\n\u003e \n\u003e - [Voir le résultat en plein écran en cliquant ici](http://codepen.io/Haeresis/full/kvcBg)\n\u003e - [Voir le code source en cliquant ici](http://codepen.io/Haeresis/pen/kvcBg)\n\n\n\n\n\n## Pour finir ##\n\nLa rapidité d’adressage et la maintenance du code CSS est tout aussi aisé sinon plus rapide avec un bon éditeur de texte. La perte de temps réside dans la préparation des classes possibles avant affectation mais rien ne vous empêche d'aller les piocher dans les divers Frameworks CSS existant et de faire vos mélanges !","dates":{"published":{"$date":"2014-06-23T13:35:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"\u003cspan\u003eGrille\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e \u003cspan\u003eResponsive\u003c/span\u003e et \u003cspan\u003eSémantique\u003c/span\u003e sans \u003cspan\u003eFramework\u003c/span\u003e","urn":"grille-css-responsive-et-semantique-sans-framework","description":"Grille CSS Responsive et Sémantique sans Framework","image":""}
{"_id":{"$oid":"53ae894483fce724706bdf36"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"53aec7ad17ee9f4db5874c66"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48c9"},{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"5310456355dfd5f7698d48c0"}],"content":"Connaissez vous les langages Markdown ? Mais si, il est probable que vous en connaissiez sans même savoir qu'ils pouvaient être nommés. Vous avez déjà écrit un texte sur un [Wiki](http://www.mediawiki.org/wiki/MediaWiki/fr) ? Rédigé une carte sur [Trello](https://trello.com/) ? Rédigé un Readme sur [GitHub](https://github.com/) ou sur [BitBucket](https://bitbucket.org/) ? Un commentaire sur [CodePen](https://codepen.io/) ? Vous les avez déjà croisés ces `.md` rarement reconnus de base par les bloc-notes.\n\n\u003cfigure\u003e\n\u003cimg width=\"400\" height=\"306\" src=\"media/images/upload/stack-edit.jpg\" alt=\"Responsive Web Design\"\u003e\n\u003cfigcaption\u003eSource : lh4.googleusercontent.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nNon ? Si cela ne vous parle pas, sachez que Markdown pourrait devenir votre meilleur ami pour écrire des spécifications précises ou vagues sur vos projets, seul ou avec vos collègues avec un minimum d'efforts grâce à [StackEdit.io]. Vous pourriez même au final écrire toutes sortes de choses facilement !\n\n\n\n\n\n## Qu'est-ce que le langage Markdown ##\n\nJe me suis peut être emballé en disant « les langages Markdown ». En fait, ce langage n'a jamais été formellement standardisé bien que tous s'accordent à dire qu'il [suit ces règles ci](http://fr.wikipedia.org/wiki/Markdown).\n\n\u003e **Wikipedia** : Markdown est un langage de balisage léger créé par John Gruber et Aaron Swartz en 2004. Son but est d'offrir une syntaxe facile à lire et à écrire. Un document formaté selon Markdown devrait pouvoir être publié comme tel, en texte, sans donner l'impression qu'il a été marqué par des balises ou des instructions de formatage.\n\nC'est à dire que les balises Wikipedia ne sont pas les mêmes que le langage Markdown mais sont un langage de « type Markdown » dans le sens où, hors d'une visionneuse de formatage, le texte reste parfaitement compréhensible de tous (contrairement par exemple au formatage HTML qui en mode source peut sembler compliqué pour qui ne le connaît pas).\n\n\n\n\n\n## StackEdit.io, le super éditeur Markdown en ligne ##\n\n[StackEdit.io] est un logiciel embarqué via navigateur, accessible en ligne et hors ligne ! Il fonctionne parfaitement avec Google Chrome par exemple.\n\nVous gérez vos documents dans l'application, (création / suppression) et vous les enregistrez dans le Cloud de manière définitive via des plateformes de stockage tierces (Google Drive, DropBox, …).\n\nVous pouvez même rédiger vos documents en temps réel à plusieurs.\n\nTout cela dans le but de publier vos documentations dans vos dépôts internes sous forme de Readme, ou de fournir des spécifications fonctionnelles au format PDF / HTML facilement, ou de créer du contenu pour vos cartes Trellos, bref… De rédiger en Markdown.\n\n\n\n\n\n## Testez-le ! ##\n\nPour tester [StackEdit.io], rendez-vous sur [https://stackedit.io/](https://stackedit.io/).\n\n\u003e **`une`** **Note** : [StackEdit.io] est également une très bonne visionneuse Markdown en ligne. Vous pouvez donc lui fournir n'importe qu'elle url de fichier `.md` et envoyer le lien de lecture à quelqu'un ! Par exemple, voici :\n\u003e \n\u003e - ### [La version française du document de bienvenue StackEdit.io](https://stackedit.io/viewer#!provider=gist\u0026gistId=eeb7bdac530e3b4e9502\u0026filename=document-bienvenue-stackedit-fr) ###\n\n  [StackEdit.io]: https://stackedit.io/","dates":{"published":{"$date":"2014-06-28T09:22:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"StackEdit.io, l'éditeur Markdown en ligne par excellence !","urn":"stackeditio-l-editeur-markdown-en-ligne-par-excellence","description":"StackEdit.io vous permet d'écrire des spécifications précises ou vagues pour vos projets, seul ou avec vos collègues avec un minimum d'efforts grâce au Markdown.","image":"https://blog.lesieur.name/media/images/upload/stack-edit.jpg"}
{"_id":{"$oid":"53e38776a8f05c9a1dbb971d"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bf"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48bd"}],"content":"S'il y a bien une action redondante et qui nécessite de passer par la case JavaScript, c'est bien la validation des formulaires ! Mais sachez qu'il est possible de les valider sans utiliser une seule ligne de code ! J'avoue, je triche un peu quand je dis ça. En réalité il n'y a rien de magique et il faudra tout de même inclure trois scripts pour réaliser cela, mais il ne sera pas nécessaire que **vous** écriviez du JavaScript.\n\nVoyons ici quel sont ces scripts et parcourons les différents cas de figure pour valider des champs vides, vérifier qu'un email est bien formé ou encore qu'une confirmation de mot de passe correspond bien au mot de passe initialement tapé. Par exemple, pour vérifier qu'un champ « Pseudo » est bien remplis et indiquer la place de son message d'erreur, il suffirait de le déclarer dans un formulaire comme ceci :\n\n```html\n\u003clabel for=\"pseudo\"\u003ePseudo\u003c/label\u003e\n\u003cinput type=\"text\" name=\"pseudo\" id=\"pseudo\" placeholder=\"Haeresis\"\n       data-rule-required=\"true\"\n       data-msg-required=\"Le champ Pseudo est requis.\" /\u003e\n\u003cspan data-valmsg-for=\"pseudo\" data-valmsg-replace=\"true\"\u003e\u003c/span\u003e\n```\n\nC'est donc parti pour :\n\n1. Trouver votre bonheur dans l'exemple complet suivant : [http://codepen.io/Haeresis/pen/AzJgF/](http://codepen.io/Haeresis/pen/AzJgF/)\n\n2. Ou/Et lire la suite de ce billet pour en apprendre un peu plus sur le jQuery Validation Unobstrusive Plugin.\n\n\n\n\n\n## Les 3 Scripts Magiques ##\n\n### jQuery ###\n\nLe premier des trois scripts est l'incontournable [jQuery](http://jqueryvalidation.org/). Celui-ci va servir aux deux suivants pour cibler les champs à valider de manière simple sur tous les types de navigateur, mais ça, vous le saviez probablement déjà.\n\n\n\n### jQuery Validate Plugin ###\n\nLe deuxième script est le de plus en plus populaire [jQuery Validate Plugin](http://jqueryvalidation.org/) qui avec un ensemble d'instructions JavaScript permet de manager la manière dont le formulaire doit se comporter lors de la validation post soumission. C'est là généralement (même si vous utilisez habituellement un autre script que ce plugin) que vous répéter toujours le même code JavaScript redondant pour assigner vos messages d'erreur à vos inputs.\n\n\n\n### jQuery Validation Unobstrusive Plugin ###\n\nVoici le troisième script magique qui va vous permettre de pré-valider votre formulaire côté client sans utiliser une seule ligne de JavaScript sur votre page ! Si vous n'y connaissez rien, et bien c'est le moment de jouer un peu avec votre DOM... uniquement à la main depuis le code HTML !\n\n\u003e Note : le plus gros défaut de ce plugin est qu'il doit être utilisé dans un cadre de travail Microsoft. Dans tous autres cas, Microsoft ce réserve le droit de vous en interdire l'utilisation. Vous voilà donc prévenu :)\n\n\n\n\n## Mise en place rapide ##\n\nVoici un petit formulaire sans prétention qui va fonctionner...\n\n**Partie utile placée dans Body**\n\n```html\n\u003cform action=\"\" method=\"post\"\u003e\n    \u003cdiv class=\"field\"\u003e\n        \u003clabel for=\"pseudo\"\u003ePseudo\u003c/label\u003e\n\n        \u003c!-- Ajout de data-rule-required et data-msg-required --\u003e\n        \u003cinput type=\"text\" id=\"pseudo\" name=\"pseudo\" placeholder=\"Haeresis\"\n               data-rule-required=\"true\"\n               data-msg-required=\"Le champ Pseudo est requis.\"\n        /\u003e\n\n        \u003c!-- Placement du message d'erreur dédié spécifiquement. --\u003e\n        \u003cspan data-valmsg-for=\"pseudo\" data-valmsg-replace=\"true\"\u003e\u003c/span\u003e\n    \u003c/div\u003e\n\n    \u003c!-- Ajout de la liste total des messages d'erreur pour information. --\u003e\n    \u003cdiv class=\"validation-summary-valid\" data-valmsg-summary=\"true\"\u003e\n        \u003cul\u003e\n            \u003cli style=\"display:none\"\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class=\"submit\"\u003e\n        \u003cinput type=\"submit\" value=\"Valider\" /\u003e\n    \u003c/div\u003e\n\u003c/form\u003e\n```\n\n...une fois nos trois scripts mis en place.\n\n**Appel des trois scripts, de préférence en pied de Body**\n\n```html\n\u003c!-- jQuery --\u003e\n\u003cscript src='//code.jquery.com/jquery-2.1.4.min.js'\u003e\u003c/script\u003e\n\u003c!-- jQuery Validate Plugin --\u003e\n\u003cscript src='//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js'\u003e\u003c/script\u003e\n\u003c!-- jQuery Validation Unobstrusive Plugin --\u003e\n\u003cscript src='//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js'\u003e\u003c/script\u003e\n```\n\nIl ne reste alors plus qu'a styler les messages d'erreur...\n\n**CSS pour styler les messages d'erreur**\n\n```css\n/* Couleur des messages d'erreur totaux */\n.validation-summary-errors,\n/* Couleur des messages d'erreur spécifiques */\n.field-validation-error {\n  color: #f00;\n}\n\n/* Couleur des bord des champs spécifiques */\n.input-validation-error {\n  border: 1px solid #f00;\n}\n```\n\n## Voir tous les types de champs ! ##\n\nVous pouvez consulter ici tous les autres types de champs et fonctionnement custom avec quelques lignes de JavaScript.\n\n\u003cscript async src=\"//codepen.io/assets/embed/ei.js\"\u003e\u003c/script\u003e\n\n\u003cdiv class=\"codepen\"\u003e\u003cp data-height=\"600\" data-theme-id=\"0\" data-slug-hash=\"AzJgF\" data-default-tab=\"html\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/AzJgF/'\u003eValidation de formulaire Inline sans JavaScript\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e","dates":{"published":{"$date":"2014-08-07T15:04:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".codepen {\n    margin-top: 8px;\n}","title":"\u003cspan\u003eValider\u003c/span\u003e les \u003cspan\u003eformulaires\u003c/span\u003e simplement, et sans \u003cspan\u003eJavaScript\u003c/span\u003e","urn":"valider-les-formulaires-simplement-et-sans-javascript"}
{"_id":{"$oid":"54265d082634df6329891daf"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"530cc2f27188099a66e9bcec"}],"content":"## Habiller son interface avec et sans JavaScript ##\n\n## Différencier les types Layout, Component et Pattern ##\n\n## Manager les grilles Responsive Web Design en CSS-Driven ##\n\n\n\n## Images Responsive ##\n\nLe comportement est simple : l'image s'affiche à sa taille standard s'il y a assez de place pour l'afficher sinon elle s'affiche à 100% de la taille de son container.\n\n**Exemple CSS**\n\n```css\nimg.responsive {\n    max-width: 100%;\n    height: auto;\n}\n.text-center {\n    text-align: center;\n}\nimg.center {\n    display: block;\n    margin-left:auto;\n    margin-right:auto;\n}\nimg.left{\n    display: block;\n    margin-right:auto;\n}\nimg.right {\n    display: block;\n    margin-left:auto;\n}\n```\n\n**Exemple HTML**\n\n```html\n\u003cp\u003e\n    \u003cimg class=\"responsive center\" src=\"media/images/upload/tumblr_n3s8i3yPih1s9y3qio2_500.jpg\"\u003e\n\u003c/p\u003e\n\u003cp class=\"text-center\"\u003e\n    \u003cimg class=\"responsive\" src=\"media/images/upload/1008447.jpg\"\u003e\n    \u003cimg class=\"responsive\" src=\"media/images/upload/1008104.jpg\"\u003e\n\u003c/p\n```\n\n**Rendu**\n\n\u003cp\u003e\n    \u003cimg class=\"responsive center\" src=\"media/images/upload/tumblr_n3s8i3yPih1s9y3qio2_500.jpg\"\u003e\n\u003c/p\u003e\n\u003cp class=\"text-center\"\u003e\n    \u003cimg class=\"responsive\" src=\"media/images/upload/1008447.jpg\"\u003e\n    \u003cimg class=\"responsive\" src=\"media/images/upload/1008104.jpg\"\u003e\n\u003c/p\u003e\n\n*Note : retaillez votre fenêtre pour voir les effets de responsivité.*\n\n## Empècher l'écoulement des flottants ##\n\n## Éviter le débordement de marge ##\n\n## Gérer l'overflow horizontal ##\n\n## Before et After pour la décoration ##\n\n## Description par classes Sémantique ##\n\n\n\n\n\n\n\n\n\n\n\nImpossible de mute le son sur iPhone/iPad (impossible donc de pré-loadé le son en le lisant) : http://stackoverflow.com/questions/10214315/htmlaudioelement-wont-mute-properly-in-safari-on-ipod-touch-5-0-1\n- https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Using_HTML5_Audio_Video.pdf\nImpossible de pré-charger le son sir iPhone/iPad (impossible donc de pré-loadé le son à l'ouverture de page) : http://stackoverflow.com/questions/9811429/html5-audio-tag-on-safari-has-a-delay\n- http://developer.apple.com/library/safari/#documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html#//apple_ref/doc/uid/TP40009523-CH5-SW1\n\nhttp://www.ibm.com/developerworks/library/wa-ioshtml5/\n\n\n\n\n\n\n\n\n\n","dates":{"published":{"$date":"2016-11-09T01:45:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"","stylesheet":"img.responsive {\n    max-width: 100%;\n    height: auto;\n}\n.text-center {\n    text-align: center;\n}\nimg.center {\n    display: block;\n    margin-left:auto;\n    margin-right:auto;\n}\nimg.left{\n    display: block;\n    margin-right:auto;\n}\nimg.right {\n    display: block;\n    margin-left:auto;\n}","title":"1 \u003cspan\u003eastuces\u003c/span\u003e avec les \u003cspan\u003eclasses\u003c/span\u003e \u003cspan\u003eCSS\u003c/span\u003e et \u003cspan\u003eJS\u003c/span\u003e","urn":"astuces-avec-les-classes-css-et-js"}
{"_id":{"$oid":"542bc5069fe4c08c340c83e7"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48c3"}],"content":"Une solution rapide et qui fonctionne sur tous les navigateurs à partir de IE9 est le centrage vertical avec la valeur CSS3 `translateY` de la propriété `transform`.\n\nPour mettre cela en place, trois simples propriétés :\n\n1. On place l'élément en relatif pour le repositionner par rapport à son élément parent avec `position: relative;`.\n\n2. On déplace l'élément de la moitié de la hauteur de l'élément parent avec `top: 50%;`, la référence de déplacement étant actuellement son bord haut.\n\n3. On re-centre l'élément non plus à partir de son bord haut mais de son centre vertical avec `transform: translateY(-50%);`\n\nEt voilà !\n\n\n\n\n\n\n## Exemple de code minimal ##\n\nVoici ce que cela donne avec les préfixes propriétaires :\n\n```css\n.vertical-align {\n    position: relative;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n```\n\n*Note : si votre élément est de type inline, il faudra ajouter la propriété `display: inline-block;` pour que la transformation soit valide dans tous les cas de figures sur tous les navigateurs supportant `translateY` :*\n\n```css\n.inline-block {\n    display: inline-block\n}\n```\n\n*Note : si le centrage affiche l'élément sur un demi-pixel, celui-ci peut paraître flou. Pour empêcher cela, il suffit de munir un élément parent de `transform-style: preserve-3d;` :*\n\n```css\n.preserve-3d {\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n```\n\n\n\n\n\n## Exemple concret d'utilisation ##\n\n### Texte en Hover sur image ###\n\n_Passez votre souris sur l'image :_\n\n\u003cdiv class=\"example\"\u003e\n\u0009\u003cimg src=\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\" alt=\"The Moment by Dzsurnik\"\u003e\n\u0009\u003ca href=\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\" target=\"_blank\"\u003e\n\u0009\u0009\u003cspan\u003eVoir l'image en grand format\u003c/span\u003e\n\u0009\u003c/a\u003e\n\u003c/div\u003e\n\n*Note : Vous pouvez retailler la fenêtre pour voir le résultat en Responsive Web Design*\n\n-----\n\n__HTML__\n\n```html\n\u003cdiv class=\"example\"\u003e\n\u0009\u003cimg src=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\" alt=\"The Moment by Dzsurnik\"\u003e\n\u0009\u003ca href=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\" target=\"_blank\"\u003e\n\u0009\u0009\u003cspan\u003eVoir l'image en grand format\u003c/span\u003e\n\u0009\u003c/a\u003e\n\u003c/div\u003e\n```\n\n__CSS__\n```css\n.example {\n    /* Permettre à `a` d'être bien placer en absolue */\n    position: relative;\n    /* Éviter les rendus flous */\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n.example img {\n    /* Rendre l'image Responsive */\n    display: block;\n    max-width: 100%;\n    /* Centrer l'image */\n    margin-left: auto;\n    margin-right: auto;\n}\n.example a {\n    /* Cacher le lien si la zone n'est pas survolée */\n    display: none;\n    /* Couvrir l'intégralité de `.example` */\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    /* Être transparent pour voir l'image */\n    background-color: rgba(255, 255, 255, 0.8);\n    /* Centrer horizontalement le texte */\u0009\n    text-align: center;\n    /* Styler le texte */\n    font-weight: bold;\n    font-size: 1.6em;\n    line-height: 1.3;\n}\n.example a:hover {\n    /* Désactiver visuellement le comportement `:hover` sur le lien */\n    color: #48739E;\n    text-decoration: none;\n}\n.example:hover a {\n    /* Afficher `a` au survole de `.example` */\n    display: block;\n}\n.example span {\n    /* Centrage vertical automatique pour le texte */\n    position: relative;\n    display: inline-block;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n```\n\n### Centrer une Popup ###\n\n\u003ca class=\"example-link\" href=\"javascript:;\"\u003eCliquez sur ce lien pour ouvrir une popup\u003c/a\u003e\n\u003cdiv class=\"example-2\"\u003e\n    \u003cfigure\u003e\n        \u003cimg src=\"http://blog.haeresis.fr/upload/image/devon_jade_dubstep_themed_edit_2_by_matthewjendrasiak.jpg\" alt=\"Devon Jade Dubstep Themed Edit 2 by Matthew Jendrasiak\"\u003e\n        \u003cfigcaption\u003eCliquez n'importe où pour fermer\u003c/figcaption\u003e\n    \u003c/figure\u003e\n\u003c/div\u003e\n\n-----\n\n__HTML__\n\n```html\n\u003ca class=\"example-link\" href=\"javascript:;\"\u003eCliquez sur ce lien pour ouvrir une popup\u003c/a\u003e\n\u003cdiv class=\"example-2\"\u003e\n    \u003cfigure\u003e\n        \u003cimg src=\"http://fc07.deviantart.net/fs71/i/2013/265/1/9/devon_jade__dubstep_themed_edit__2_by_matthewjendrasiak-d6ngt26.jpg\" alt=\"Devon Jade Dubstep Themed Edit 2 by Matthew Jendrasiak\"\u003e\n        \u003cfigcaption\u003eCliquez n'importe où pour fermer\u003c/figcaption\u003e\n    \u003c/figure\u003e\n\u003c/div\u003e\n```\n\n__CSS__\n```css\n.example-2 {\n    /* Par défaut notre popup est fermée */\n    display: none;\n    /* Zone de popup prenant toute la place */\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n.example-2.opened {\n    /* Avec la classe opened, la popup est visible */\n    display: block;\n}\n.example-2:before {\n    /* Rendre visible le background */\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.8);\n    width: 100%;\n    height: 100%;\n}\n.example-2 figure {\n    /* Mise en forme du contenu */\n    background-color: #FFF;\n    margin: 0;\n    /* Le contenu prend de base toute la largeur */\n    width: 100%;\n    /* Popup par dessus le background */\n    z-index: 2;\n    /* Centrage vertical automatique pour le contenu */\n    position: absolute;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n@media (min-width: 768px) {\n    .example-2 figure {\n        /* Taille fixe pour la popup à partir de 768px... */\n        width: 764px;\n        /* ...et centrage vertical et horizontal automatique pour le contenu */\n        top: 50%;\n        left: 50%;\n        -webkit-transform: translateX(-50%) translateY(-50%);\n           -moz-transform: translateX(-50%) translateY(-50%);\n            -ms-transform: translateX(-50%) translateY(-50%);\n             -o-transform: translateX(-50%) translateY(-50%);\n                transform: translateX(-50%) translateY(-50%);\n    }\n}\n.example-2 figcaption {\n    /* Mise en forme figcaption */\n    text-align: center;\n    padding: 16px;\n}\n.example-2 img {\n    /* Image responsive */\n    max-width: 100%;\n}\n```\n\n__JS__\n```javascript\n// Ouverture et fermeture de popup.\n$(\".example-link, .example-2\").click(function () {\n    $(\".example-2\").toggleClass(\"opened\");\n});\n```\n*Note : `$` est une instance de la librairie [jQuery](http://jquery.com/).*","dates":{"published":{"$date":"2014-10-14T10:00:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"$(\".example-link, .example-2\").click(function () {\n    $(\".example-2\").toggleClass(\"opened\");\n});","stylesheet":".example {\n    position: relative;\n    -webkit-transform-style: preserve-3d;\n       -moz-transform-style: preserve-3d;\n            transform-style: preserve-3d;\n}\n.example img {\n    display: block;\n    max-width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n}\n.example a {\n    display: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(255, 255, 255, 0.8);\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.6em;\n    line-height: 1.3;\n}\n.example a:hover {\n    color: #48739E;\n    text-decoration: none;\n}\n.example:hover a {\n    display: block;\n}\n.example span {\n    position: relative;\n    display: inline-block;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n\n.example-2 {\n    display: none;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n}\n.example-2 img {\n    margin-top: 0;\n    max-width: 100%;\n}\n.example-2.opened {\n    display: block;\n}\n.example-2:before {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    background-color: rgba(0, 0, 0, 0.8);\n    width: 100%;\n    height: 100%;\n}\n.example-2 figure {\n    background-color: #FFF;\n    position: absolute;\n    z-index: 2;\n    margin: 0;\n    width: 100%;\n    top: 50%;\n    -webkit-transform: translateY(-50%);\n       -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n         -o-transform: translateY(-50%);\n            transform: translateY(-50%);\n}\n\n@media (min-width: 768px) {\n    .example-2 figure {\n        top: 50%;\n        left: 50%;\n    width: 764px;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n       -moz-transform: translateX(-50%) translateY(-50%);\n        -ms-transform: translateX(-50%) translateY(-50%);\n         -o-transform: translateX(-50%) translateY(-50%);\n            transform: translateX(-50%) translateY(-50%);\n    }\n}\n.example-2 figcaption {\n    /* Mise en forme figcaption */\n    text-align: center;\n    padding: 16px;\n    margin-top: -5px;\n}\n\n\n.article {\n    position: relative;\n    z-index: 4;\n}\n.example-link {\n    font-weight: bold;\n    font-size: 1.6em;\n    display: block;\n    text-align: center;\n    margin-top: 32px;\n    margin-bottom: 32px;\n}","title":"\u003cspan\u003eCentrer\u003c/span\u003e \u003cspan\u003everticalement\u003c/span\u003e n'importe quel élément en quelques lignes \u003cspan\u003eCSS\u003c/span\u003e","urn":"centrer-verticalement-n-importe-quel-element-en-quelques-lignes-css"}
{"_id":{"$oid":"542c24e6ac53204337fa2e08"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Une chose qui me gène avec la `$(document).ready()` de la librairie [jQuery], c'est que c'est une magnifique porte ouverte aux mauvaises pratiques JavaScript. Elle empèche les développeurs web en herbe de se pauser les bonnes questions et pire encore, comme j'ai pu le constater récemment, aux développeurs à priori chevronnés d'en faire de même...\n\nOui, le `$(document).ready()` *peut* être utilisé plus d'une fois dans un ensemble de fichier et oui, il *peut* être placé n'importe où dans une page HTML __mais non, ce n'est absolument pas vous rendre service que de faire cela !__ Ce n'est pas parce que l'on peut, que l'on doit.\n\nMettre ces déclarations un peu partout rend plus difficile la relecture et le debug du code en empêchant de savoir qui s'exécute avant qui sans regarder l'ordre d'appel des fichiers. Effectivement, si cela semble simple et pratique quand 3 fichiers se battent en duel, cela peut rapidement devenir complexe. De plus, si une exception est levé dans l'un des `$(document).ready()`, aucun des autres n’exécutera plus rien du tout. Pour finir, le code est ralenti lors de l'appel de plusieurs `$(document).ready()` contre un seul, ou contre aucun d'ailleurs.\n\n\u003cfigure\u003e\n\u003cimg width=\"490\" height=\"550\" src=\"media/images/upload/jquery-document-ready-zzzz.jpg\" alt=\"$(document).ready() ZzzZz\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://encosia.com/dont-let-jquerys-document-ready-slow-you-down/\" title=\"Don’t let jQuery’s $(document).ready() slow you down\"\u003eDon’t let jQuery’s $(document).ready() slow you down\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans cet article nous allons voir l'une des dizaines de façon de vous passer de `$(document).ready()` dans vos pages web. Le maître mot ? Un seul point d'entré pour l'ensemble du code exécuté sur une page. [Vous trouverez également un exemple de la méthode décrite dans cet article dans ce repository GitHub](https://github.com/Haeresis/SimpleAtlas).\n\n  [jQuery]: http://jquery.com/\n\n\n\n\n\n## Être composant orienté avec jQuery ##\n\n### JavaScript en vrac ###\n\nAdmettons que dans une page on trouve deux composants de Carrousel avec en pied de page un appel à la libraire [jQuery], à l'extension jQuery [OWL Carousel](http://owlgraphic.com/owlcarousel/) pour gérer des carrousels, et un fichier pour écrire notre code JavaScript.\n\n```html\n\u003c!-- Ici une image pleine, slidable --\u003e\n\u003cdiv class=\"one-item-carousel\"\u003e\n    \u003cdiv class=\"carousel\"\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage1.jpg\" alt=\"The Last of us\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage2.jpg\" alt=\"GTA V\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage3.jpg\" alt=\"Mirror Edge\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- Ici plusieurs petites images qui défilent --\u003e\n\u003cdiv class=\"multiple-item-carousel\"\u003e\n    \u003cdiv class=\"carousel\"\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage1.jpg\" alt=\"The Last of us\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage2.jpg\" alt=\"GTA V\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"item\"\u003e\u003cimg src=\"assets/fullimage3.jpg\" alt=\"Mirror Edge\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\u003c!-- ... --\u003e\n\n\u003c!-- En pied de page, l'appel aux scripts --\u003e\n\u003cscript src=\"jquery.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"owl.carousel.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"common.js\"\u003e\u003c/script\u003e\n```\n\nLe fichier `common.js` pourrait alors ressembler à cela :\n\n```js\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\net une découpe en composant des fichiers pourrait être celle-ci :\n\n*component.one-item-carousel.js*\n\n```js\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\n*component.multiple-item-carousel.js*\n\n```\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n```\n\n\n\n### Exécution en retour AJAX après que le document soit `ready` impossible ###\n\nQue ce passerait t-il si `.one-item-carousel` était déjà dans le code source HTML de la page mais que `.multiple-item-carousel` était rapatrié par chargement AJAX ou Websocket ?\n\n```js\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n    });\n});\n\n$(document).ready(function() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n});\n\n$(document).ready(function() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n});\n```\n\nEt bien `.one-item-carousel .carousel` serait bien exécuté mais pas `.multiple-item-carousel .carousel` car aucun élément ne serait ciblé quand le « document serait ready ». Et selon la rapidité de votre machine ou du réseau, peut-être que finalement ça passerait... Pire, votre seul moyen de ré-exécuter le code dans vos `$(document).ready()` est de supprimer et ré-injecter le script dans le HTML. \n\n\n\n### Appels de fonctions ###\n\n« Mais c'est très simple ! Il suffit alors de déporter les appels dans des fonctions et d'en exécuter une en retour d'AJAX ! »\n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction loadMultipleItemCarousel();() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel();\n    });\n});\n\n$(document).ready(function() {\n    loadOneItemCarousel();\n});\n\n$(document).ready(function() {\n    loadMultipleItemCarousel();\n});\n```\n\n\n\n### Inutilité de plusieurs `$(document).ready()` ###\n\nOn peut alors aisément transformer le code précédent en celui-ci et par la même occasion se débarrasser des multiples `$(document).ready()` :\n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction loadMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel(); \n    });\n\n    loadOneItemCarousel();\n    loadMultipleItemCarousel();\n});\n```\n\n\n\n### Namespace pour ses fonctions ###\n\nC'est un bon début mais que va t'il se passer s'il y a des milliers de fonctions et de composants ? \n\n```js\nfunction loadOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n}\n\nfunction playOneItemCarousel() {\n    $(\".one-item-carousel .carousel\").trigger('owl.play', 1000);\n}\n\nfunction loadMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n\nfunction playMultipleItemCarousel() {\n    $(\".multiple-item-carousel .carousel\").trigger('owl.play', 1000);\n}\n\n$(document).ready(function() {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        // Rapatriement du code HTML de `.multiple-item-carousel` et injection dans la page.\n        // Après rapatriement, on exécute le code JavaScript.\n        loadMultipleItemCarousel(); \n    });\n\n    loadOneItemCarousel();\n    loadMultipleItemCarousel();\n});\n```\n\nVos nom de fonction vont se télescoper ou alors ils vont être très long. C'est le moment de les rassembler dans les mêmes objets.\n\n\n```js\nvar website = {},\n    website.components = {};\n\n\n\n// Composant one-item-carousel.\nwebsite.components[\"one-item-carousel\"] = {};\nwebsite.components[\"one-item-carousel\"].load = function () {\n    $(\".one-item-carousel .carousel\").owlCarousel({\n        navigation : true,\n        slideSpeed : 300,\n        paginationSpeed : 400,\n        singleItem:true \n    });\n};\nwebsite.components[\"one-item-carousel\"].play = function () {\n    $(\".one-item-carousel .carousel\").trigger('owl.play', 1000);\n};\nwebsite.components[\"one-item-carousel\"] = function () {\n    website.components[\"one-item-carousel\"].load();\n    website.components[\"one-item-carousel\"].play();\n};\n\n\n\n// Composant multiple-item-carousel.\nwebsite.components[\"multiple-item-carousel\"] = {};\nwebsite.components[\"multiple-item-carousel\"].load = function () {\n    $(\".multiple-item-carousel .carousel\").owlCarousel({\n        items : 10,\n        itemsDesktop : [1000,5],\n        itemsDesktopSmall : [900,3],\n        itemsTablet: [600,2],\n        itemsMobile : false\n    });\n}\n};\nwebsite.components[\"multiple-item-carousel\"].play = function () {\n    $(\".multiple-item-carousel .carousel\").trigger('owl.play', 1000);\n};\nwebsite.components[\"multiple-item-carousel\"] = function () {\n    website.components[\"multiple-item-carousel\"].load();\n    website.components[\"multiple-item-carousel\"].play();\n};\n\n\n\n// Controller de page.\nwebsite.ajax = function () {\n    $.ajax(\"multiple-item-carousel.html\", function() {\n        website.components[\"multiple-item-carousel\"]();\n    });\n};\nwebsite = function () {\n    // Lancement Controller.\n    website.ajax();\n\n    // Lancement Composant.\n    website.components[\"one-item-carousel\"]();\n    website.components[\"multiple-item-carousel\"](); \n};\n\n\n\n// Le fameux Document Ready.\n$(document).ready(function() {\n    website.init();\n});\n```\n\n\n\n### Du code moins verbeux, du cloisonnement ###\n\nOn voit facilement qu'il y a redondance d'appel et que le code est toujours alimenter depuis le champ lexical global contrairement à un appel dans `$(document).ready()` qui à le mérite de cloisonner l'exécution de code. Allégeons tout ça, et créons de vrai cloisons sans `$(document).ready()`. \n\n```js\nvar website = {};\n\n\n\n// Composant one-item-carousel.\n(function (publics) {\n    var name = \"one-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            navigation : true,\n            slideSpeed : 300,\n            paginationSpeed : 400,\n            singleItem:true \n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n\n\n\n// Composant multiple-item-carousel.\n(function (publics) {\n    var name = \"multiple-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            items : 10,\n            itemsDesktop : [1000,5],\n            itemsDesktopSmall : [900,3],\n            itemsTablet: [600,2],\n            itemsMobile : false\n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n\n\n\n// Controller de page.\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        publics.components[\"one-item-carousel\"]();\n        publics.components[\"multiple-item-carousel\"]();\n    };\n}(website));\n\n\n\n// Le fameux Document Ready.\n$(document).ready(function() {\n    website.init();\n});\n```\n\nNote : Vous pourrez mieux comprendre cet exemple, notamment la différence entre `publics` et `privates` avec l'article [Structurer le JavaScript de son site avec ou sans Framework](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/)\n\n\n\n## Composant orienté, sans $(document).ready() ##\n\nIl est aisé à présent de découper notre code dans ces trois fichiers par exemple :\n\n```html\n        \u003c!-- ... --\u003e\n\n        \u003cscript src=\"component.one-item-carousel.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"component.multiple-item-carousel.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n*component.one-item-carousel.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var name = \"one-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            navigation : true,\n            slideSpeed : 300,\n            paginationSpeed : 400,\n            singleItem:true \n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n```\n\n*component.multiple-item-carousel.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var name = \"multiple-item-carousel\",\n        privates = {};\n\n    publics.components = publics.components || {};\n\n    privates.load = function () {\n        $(\".\" + name + \" .carousel\").owlCarousel({\n            items : 10,\n            itemsDesktop : [1000,5],\n            itemsDesktopSmall : [900,3],\n            itemsTablet: [600,2],\n            itemsMobile : false\n        });\n    };\n    privates.play = function () {\n        $(\".\" + name + \" .carousel\").trigger('owl.play', 1000);\n    };\n    privates = function () {\n        privates.load();\n        privates.play();\n    };\n\n    publics.components[name] = function () {\n        privates();\n    };\n}(website));\n```\n\nEt de faire sauter le dernier `$(document).ready()` qui ne sert à rien puisque `common.js` est le dernier fichier appelé sur la page.\n\n*common.js*\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        publics.components[\"one-item-carousel\"]();\n        publics.components[\"multiple-item-carousel\"]();\n    };\n}(website));\n\n\n\n// Le fameux Document Ready disparait.\n//$(document).ready(function() {\n    website.init();\n//});\n```\n\n\n\n## Charger automatiquement les composants présent dans la page ##\n\nC'est vrai que notre petit exercice nous permet de moduler l'appel des fonctions indépendamment de l'état du DOM mais elles ne se chargent plus automatiquement au chargement...\n\nCe petit ajustement de `common.js` répondra à cette problématique\n\n```js\nvar website = website || {};\n\n(function (publics) {\n    var privates = {};\n\n    privates.ajax = function () {\n        $.ajax(\"multiple-item-carousel.html\", function() {\n            publics.components[\"multiple-item-carousel\"]();\n        });\n    };\n\n    // Chargement automatique des composants présent dans la page.\n    privates.loadComponents = function () {\n        for (var i in publics.components) {\n            // Sont t-il bien présent ?\n            if ($(\".\" + i).length \u003e 0) {\n                publics.components[i]();\n            }\n        }\n    };\n\n    publics.init = function () {\n        privates.ajax();\n\n        // Lancement Composant.\n        privates.loadComponents();\n    };\n}(website));\n\nwebsite.init();\n```\n\n\n\n### Déjà exécuté ? ###\n\nAvec une petite classe, il est même possible de taguer les composants comme déjà exécutés pour ne pas les ré-exécuter une autre fois lors d'un rapatriement via AJAX ou Websocket.\n\n\n\n### Arrêter le cas par cas ###\n\nVous pouvez également en retour d'AJAX ou Websocket exécuté `website.loadComponents()` au lieu de `website.components[\"multiple-item-carousel\"]()` par exemple (à condition d'accrocher `loadComponents()` à `publics`) pour ne plus vous préoccuper des composants renvoyé par les sources AJAX.\n\n\n\n## Exemple complet sur GitHub ##\n\n[Vous pouvez tester un exemple similaire à ce petit exercice dans le projet GitHub « ComponentAutoLoadTemplate »](https://github.com/Haeresis/SimpleAtlas).","dates":{"published":{"$date":"2014-10-22T15:40:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Éviter les multiples $(document).ready() dans vos pages web","urn":"eviter-les-multiples-jquery-document-ready-dans-vos-pages-web"}
{"_id":{"$oid":"5434dd2bac53204337fa2e0a"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"530ef6a6789c1a55e4fde0af"}],"content":"Depuis que le [Responsive Web Design] a commencé son invasion, beaucoup de site ne possède plus qu'une unique version qui gère :\n- un affichage complet pour écrans larges de type écran d'ordinateur (Desktop) et\n- un affichage léger et partiellement complet pour les écrans de type mobiles/tablettes.\n\nCela revient souvent à inhiber des fonctionnements jugés peu utiles par les développeurs ou ergonomiquement trop instables pour être présentés sur les petits appareils et empêche alors : \n- d'afficher la version Desktop sur les mobiles/tablettes ou \n- d'afficher la version Desktop dans une fenêtre de navigateur rétréci.\n\nJe vous propose, à travers des exemples [CSS-Driven](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/), de vous expliquer comment gérer deux versions d'affichage de vos pages avec comme toujours [une seule structure HTML sémantique](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/).\n\n\n\n\n\n## En [Desktop First] ##\n\nLe [Desktop First] consiste à penser en priorité l'affichage maximal pour grand écran d'un site web puis ensuite d'ajouter des instructions pour des versions plus petites. En générale ce n'est pas une approche choisi consciemment mais utilisée sur des sites déjà existant qui n'ont pas initialement fait l'objet d'une version Mobile.\n\nVoici donc un site créer pour un affichage fixe :\n\n**CSS du site version Desktop**\n\n```css\nbody {\n    /* Le site est taillé pour un affichage 1024px */\n    width: 1024px;\n}\n\n```\n\nUne fois la version Mobile ajouté au code existant, le site s'affiche en version [Responsive Web Design] sur tous les petits périphériques ou dans les fenêtres de navigateurs rétrécis :\n\n**CSS addon pour version Mobile**\n\n```css\nbody {\n    width: 1024px;\n}\n@media (max-width: 1023px) {\n    /* Cependant, si l'écran est inférieur à 1024px... */\n    /* ...alors on applique la propriété suivante */\n    body {\n        width: auto;\n    }\n}\n\n```\n\nAvec cette modification, il n'est plus possible d'afficher la version Desktop sur mobiles/tablettes ou fenêtre rétrécis.\n\nVoici une manière simple d'ajouter un affichage [Responsive Web Design] (version Mobile) tout en conservant l'affichage, si souhaité, de la version Desktop pour mobiles/tablettes en [Desktop First]. Il faut pour cela :\n\n1. Se servir d'une classe conditionnelle `.rwd` (pour « Responsive Web Design ») que l'on va placer dans `\u003chtml class=\"rwd\"\u003e` pour rendre notre site [Responsive Web Design].\n\n2. Préfixer tous les sélecteurs CSS destinés à habiller des affichages inférieurs à la version Desktop (la plus large) par `.rwd` :\n\n    **Ajout de .rwd**\n\n    ```css\nbody {\n    /* Le site est taillé pour un affichage 1024px */\n    width: 1024px;\n}\n@media (max-width: 1023px) {\n    /* Cependant, si l'écran est inférieur à 1024px... */\n    /* ...et uniquement si le site est en mode RWD (c'est le cas par defaut)... */\n    /* ...alors on applique la propriété suivante */\n    .rwd body {\n        width: auto;\n    }\n}\n```\n\n3. Ajouter un lien *Version Desktop* qui ne s'affiche que si le site possède la classe `.rwd` et n'est pas dans sa taille maximale et ajouter un lien *Version Mobile* qui ne s'affiche que si la classe `.rwd` n'est pas là.\n\n   **Ajout de liens de switch**\n\n   ```css\n/* On force à ne pas proposer l'affichage Desktop... */\na.ask-for-display-desktop {\n    display: none;\n}\n@media (max-width: 1023px) {\n    /* ...sauf si le site est en RWD et est... */\n    /* ...en version inférieur à la version maximale */\n    .rwd a.ask-for-display-desktop {\n        display: inline;\n    }\n}\n/* Par défaut la demande de passer en version RWD est là... */\n/* ...et si on est déjà en RWD on ne l'affiche pas */\n.rwd a.ask-for-display-responsive {\n    display: none;\n}\n```\n\nÀ présent il suffit du côté Back-end :\n\n- d'injecter la classe `.rwd` ainsi que la meta `name=\"viewport\"` pour la version [Responsive Web Design] dans la page délivrée.\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\" class=\"rwd\"\u003e\n    \u003chead\u003e\n        \u003c!-- Title, Meta, etc. --\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"\u003e\n    \u003c/head\u003e\n    \u003c!-- Body --\u003e\n\u003c/html\u003e\n```\n\n- de ne pas le faire pour la version Desktop\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003c!-- Title, Meta, etc. --\u003e\n    \u003c/head\u003e\n    \u003c!-- Body --\u003e\n\u003c/html\u003e\n```\n\n\n\n### Exemple live ###\n\n\u003e **\u003ca href=\"http://blog.haeresis.fr/examples/desktop-support/desktop-first_mobile-and-desktop-version.html\" target=\"_blank\"\u003eVous pouvez tester ici un exemple de site inter-changeable entre version Desktop et version Mobile (Responsive) avec la technique Desktop First.\u003c/a\u003e**\n\u003e \n\u003e - Si vous venez d'un grand écran, pensez à rétrécir la fenêtre de votre navigateur pour faire apparaître en pied de page le lien de la version non Responsive.\n\u003e - Si vous venez d'un(e) mobile/tablette, cliquez juste sur le lien de pied de page.\n\u003e \n\u003e [Le code source est là](http://codepen.io/Haeresis/pen/aBmIj)\n\n\n\n### Recharger la meta viewport sans recharger la page ##\n\nComme votre structure HTML et CSS est identique quelque soit la version, vous n'êtes pas obligé de rafraîchir le navigateur pour passer d'une version à l'autre. L'astuce pour forcer les appareils à prendre en compte les modifications de la `\u003cmeta name=\"viewport\"\u003e` est, plutôt que de la mettre et la retirer, de la laisser en permanence et simplement remplir (ou non) son attribut `content`. Voici un exemple de code jQuery :\n\n```js\n$(\"a.ask-for-display-desktop\").click(function (e) {\n    e.preventDefault();\n    $(\"html\")\n        .removeClass(\"rwd\");\n    $(\"meta[name=viewport]\").attr('content','');\n    $.ajax(/* prévenez le Back-end que le site sera dorénavant affiché en Desktop */);\n});\n$(\"a.ask-for-display-responsive\").click(function (e) {\n    e.preventDefault();\n    $(\"html\")\n        .addClass(\"rwd\");\n    $(\"meta[name=viewport]\").attr('content','width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no');\n    $.ajax(/* prévenez le Back-end que le site sera dorénavant affiché en Mobile */);\n});\n```\n\navec dans votre fichier html :\n\n```html\n\u003c!-- ... --\u003e\n\u003ca class=\"display-desktop\" href=\"desktop-first_desktop-version.html\"\u003eAfficher version Bureau\u003c/a\u003e\n\u003c!-- ... --\u003e\n\u003ca class=\"display-responsive\" href=\"desktop-first_mobile-version.html\"\u003eAfficher version Mobile/Tablette\u003c/a\u003e\n\u003c!-- ... --\u003e\n```\n\n\n\n\n\n## En [Mobile First] ##\n\nSi en [Desktop First] cela se révèle être un jeu d'enfant, il en est tout autrement pour le [Mobile First]. Effectivement, cette aproche fait qu'en réalité, notre site ne possède pas « réellement » de version Desktop mais seulement un affichage le plus large possible. Il n'a donc initialement pas été convenu d'une version Desktop dont l'utilité est cette fois plus discutable qu'en [Desktop First].\n\nVoyons en quoi cela pause problème avec ces 4 fichiers :\n\n**Fichier common-xs.css**\n\n```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n```\n\n**Fichier common-sm.css**\n\n```css\n/* Fichier pour grand mobile ou petite tablette */\n@media (min-width: 768px) {\n    body {\n        width: 768px;\n    }\n}\n```\n\n**Fichier common-md.css**\n\n```css\n/* Fichier pour grande tablette ou petit écran */\n@media (min-width: 992px) {\n    body {\n        width: 992px;\n    }\n}\n```\n\n**Fichier common-lg.css**\n\n```css\n/* Fichier pour grand écrann */\n@media (min-width: 1200px) {\n    body {\n        width: 1200px;\n    }\n}\n```\n\nComprenez bien que si en [Desktop First], ce qui se trouve dans la partie `@media (max-width: 1023px)` est interprété sur écran mobiles/tablettes (et inhibé sans `.rwd` pour afficher la version Desktop) ; ici jamais les instructions du fichier `common-lg.css` censés s'occuper de l'affichage Desktop ne seront interprétés sur un périphérique plus petit que 1200px. Donc quoi qu'il arrive : il ne peut exister de version Desktop affichable sur mobile/tablette.\n\nVoyons tout de même deux types d'implémentations [Mobile First] qui pallie à ce problème.\n\n\n\n### Implémentation en plusieurs fichiers ###\n\nLes 4 fichiers précédents peuvent être appelés de manière minifiés par 4 balises comme suit :\n\n```html\n\u003c!-- ... --\u003e\n\u003chead\u003e\n    \u003c!-- ... --\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-xs.css\" media=\"screen\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-sm.css\" media=\"screen and (min-width: 768px)\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-md.css\" media=\"screen and (min-width: 992px)\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-lg.css\" media=\"screen and (min-width: 1200px)\"\u003e\n    \u003c!-- ... --\u003e\n\u003c/head\u003e\n\u003c!-- ... --\u003e\n```\n\n- _Avantage_ : chargement priorisé,\n\n  - si je réclame la page sur grand écran, on arrête le traitement de la page HTML le temps de charger les 4 fichiers mais,\n  - si je réclame la page sur mobile, on arrête le traitement de la page HTML le temps de charger le premier fichier, la page est alors rendu complètement, puis les 3 autres fichiers sont chargés à la fin. Si l'écran est un peu plus grand que 768px alors ce seront les 2 premiers fichiers puis les deux autres à la fin, etc.\n\n- _Inconvénient_ : plus de requêtes HTTP.\n\nPour que cette configuration fonctionne, il faut dans un premier temps retirer les Media Queries des fichiers CSS eux-mêmes. Cela n'impacte en rien le rendu puisque les Media Queries sont gérées au niveau de la page HTML dans la propriété `media` :\n\n```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n```\n\n**Fichier common-sm.css**\n\n```css\n/* Fichier pour grand mobile ou petite tablette */\nbody {\n    width: 768px;\n}\n```\n\n**Fichier common-md.css**\n\n```css\n/* Fichier pour grande tablette ou petit écran */\nbody {\n    width: 992px;\n}\n```\n\n**Fichier common-lg.css**\n\n```css\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\nÀ présent quand le site est réclamé en version Desktop via un lien spécifique il faut : \n\n- ne pas injecter les Media Queries dans l'attribut `media` des balises `link` de la page délivrée et de retirer la `\u003cmeta name=\"viewport\"\u003e`\n\n   ```html\n\u003c!-- ... --\u003e\n\u003chead\u003e\n    \u003c!-- ... --\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-xs.css\" media=\"screen\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-sm.css\" media=\"screen\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-md.css\" media=\"screen\"\u003e\n    \u003clink rel=\"stylesheet\" href=\"common-lg.css\" media=\"screen\"\u003e\n    \u003c!-- ... --\u003e\n\u003c/head\u003e\n\u003c!-- ... --\u003e\n```\n\n\n\n### Implémentation en un seul fichier ###\n\nPour reproduire une équivalence du [Mobile First] en respectant l'ordre d'appel des propriétés CSS (de l'affichage le plus petit au plus grand) tout en permettant un fonctionnement comme dans la partie [Desktop First] de cet article il va falloir :\n\n1. Rassembler les éléments en un seul fichier.\n\n   ```css\n/* Fichier pour mobile */\nbody {\n    width: auto;\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (min-width: 768px) {\n    body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (min-width: 992px) {\n    body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\n@media (min-width: 1200px) {\n    body {\n        width: 1200px;\n    }\n}\n```\n\n2. Empiler les sections par pallier maximal avec Media Queries et traiter les propriétés de la partie large Desktop sans Media Queries :\n\n   ```css\n/* Fichier pour mobile */\n@media (max-width: 767px) {\n    body {\n        width: auto;\n    }\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (max-width: 991px) {\n    body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (max-width: 1199px) {\n    body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\n3. Et intégrer une classe `.rwd` que l'on va placer dans `\u003chtml class=\"rwd\"\u003e` sur chacune des propriétés dans les Media Queries :\n\n   ```css\n/* Fichier pour mobile */\n@media (max-width: 767px) {\n    .rwd body {\n        width: auto;\n    }\n}\n/* Fichier pour grand mobile ou petite tablette */\n@media (max-width: 991px) {\n    .rwd body {\n        width: 768px;\n    }\n}\n/* Fichier pour grande tablette ou petit écran */\n@media (max-width: 1199px) {\n    .rwd body {\n        width: 992px;\n    }\n}\n/* Fichier pour grand écrann */\nbody {\n    width: 1200px;\n}\n```\n\nÀ présent il suffit du côté Back-end :\n\n- d'injecter la classe `.rwd` ainsi que la meta `name=\"viewport\"` pour la version [Responsive Web Design] dans la page délivrée.\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\" class=\"rwd\"\u003e\n    \u003chead\u003e\n        \u003c!-- Title, Meta, etc. --\u003e\n        \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"\u003e\n    \u003c/head\u003e\n    \u003c!-- Body --\u003e\n\u003c/html\u003e\n```\n\n- de ne pas le faire pour la version Desktop\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003c!-- Title, Meta, etc. --\u003e\n    \u003c/head\u003e\n    \u003c!-- Body --\u003e\n\u003c/html\u003e\n```\n\n\n\n\n\n## Scénario de cas d'utilisation ##\n\n**[Dans cet exemple](http://blog.haeresis.fr/examples/desktop-support/desktop-first_mobile-and-desktop-version.html)**, l'utilisateur n'a pas accès aux trois zones vertes « Step » en pied de la zone « Article » s'il visite le site sur mobile.\n\nC'est un utilisateur qui va quasiment toujours sur le site sur son PC de bureau. Cependant, quand il se rend sur son site préféré depuis son mobile afin justement d'aller consulter les informations dans ces zones « Step », il ne les trouve pas. Il aurait juré qu'elles étaient là sur son PC, mais là, il ne voit rien. De plus, avant la version mobile n'existait pas.\n\nC'est ennuyant car sont mobile à un très bon écran et gère le zoom à merveille. Alors il va cocher le paramètre proposé par son navigateur mobile qui s'appelle « Voir version ordinateur » mais rien... toujours pas de « Step », pourquoi diable ne peut-il pas afficher cette @!#$? de version Desktop !\n\n**Le problème de notre utilisateur est résolu grâce a cet article car, comme bon nombre de sites qui on une version Desktop et une version Mobile dédiée, il y a heureusement un lien « Afficher version bureau » ! Ce que notre utilisateur ne sait pas, c'est que ça version Desktop est au « .rwd » prêt la même page !**\n\n  [Responsive Web Design]: ./les-concepts-autour-du-responsive-web-design/\n  [Mobile First]: ./les-concepts-autour-du-responsive-web-design/#mobile-first\n  [Desktop First]: ./les-concepts-autour-du-responsive-web-design/#desktop-first\n\n\n\n\n\n## Et côté serveur ? ##\n\nNous avons vu comment gérer côté client l'affichage « Responsive Web Design » ou « Desktop ». Nous allons voir un exemple permettant côté serveur de maintenir la version que le client réclame. Pour cela nous allons faire appel à un cookie de session. En PHP par exemple, cela reviendrait à stocker la version d'affichage dans la variable `$_SESSION` afin de connaître la version d'affichage demandé par l'utilisateur. Il nous reste ensuite a :\n- Tester la valeur de la session pour savoir s'il faut mettre la classe `rwd` sur la balise `html` et\n- Créer une méthode AJAX permettant de mettre à jour la valeur de la session auprès du serveur si l'utilisateur demande un changement.\n\n### Exemple Node.js avec NodeAtlas ###\n\nIci, nous traitons exclusivement du HTML, CSS ou JavaScript, aussi je vous propose un petit exemple en [Node.js](https://nodejs.org/en/) avec le framework [NodeAtlas](https://node-atlas.js.org/).\n\nNous allons donc utiliser la valeur `request.session` qui représente le cookie de session et faire des échanges client-serveur avec des Websockets.\n\n\u003e La source de cette exemple est [disponible sur ce dépôt Github](https://github.com/NodeAtlas/TestAtlas/tree/master/session).\n\n**Installer NodeAtlas**\n\n```bash\nnpm install -g node-atlas\n```\n\n**Créer l'arborescence**\n\n```\n├─ controllers/\n│ └─ index.htm\n├─ views/\n│ └─ index.htm\n└─ webconfig.json\n```\n\n**Contenu des fichiers**\n\n*views/index.htm*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u0009\u003chtml lang=\"en\"\u003c?- (designVersion) ? ' class=\"' + designVersion + '\"': \"\" ?\u003e\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n\u0009\u0009\u003ctitle\u003eVersion Mobile/Desktop\u003c/title\u003e\n\u0009\u0009\u003cstyle\u003e\n\u0009\u0009\u0009/* Je suis la version desktop */\n\u0009\u0009\u0009body {\n\u0009\u0009\u0009\u0009background-color: red;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.responsive {\n\u0009\u0009\u0009\u0009display: none;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.desktop {\n\u0009\u0009\u0009\u0009display: block;\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009/* Je suis la version responsive web design */\n\u0009\u0009\u0009.rwd body {\n\u0009\u0009\u0009\u0009background-color: blue;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.rwd .responsive {\n\u0009\u0009\u0009\u0009display: block;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.rwd .desktop {\n\u0009\u0009\u0009\u0009display: none;\n\u0009\u0009\u0009}\n\u0009\u0009\u003c/style\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003cp\u003eJe suis la version \n\u0009\u0009\u003cspan class=\"responsive\"\u003eResponsive Web Design\u003c/span\u003e\n\u0009\u0009\u003cspan class=\"desktop\"\u003eDesktop\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cbutton\u003eChanger de version\u003c/button\u003e\n\u0009\u003c/body\u003e\n\u0009\u003cscript src=\"socket.io/socket.io.js\"\u003e\u003c/script\u003e\n\u0009\u003cscript src=\"node-atlas/socket.io.js\"\u003e\u003c/script\u003e\n\u0009\u003cscript\u003e\n\u0009\u0009/* Si on clique sur le bouton. */\n\u0009\u0009document.getElementsByTagName(\"button\")[0].addEventListener(\"click\", function () {\n\u0009\u0009\u0009var html = document.getElementsByTagName(\"html\")[0];\n\n\u0009\u0009\u0009/* on prévient le serveur pour « maintenir » cet état pour toutes les pages. */\n\u0009\u0009\u0009NA.socket.emit(\"change-version\", {\n\u0009\u0009\u0009\u0009designVersion: html.getAttribute(\"class\")\n\u0009\u0009\u0009});\n\n\u0009\u0009\u0009/* et on change la version de la page courante. */\n\u0009\u0009\u0009html.classList.toggle(\"rwd\");\n\u0009\u0009});\n\u0009\u003c/script\u003e\n\u003c/html\u003e\n```\n\n*controllers/index.htm*\n\n```js\nexports.changeVariations = function (next, locals, request) {\n\n\u0009// On affecte au valeur utilisable dans la view `designVersion`.\n\u0009// Par défaut on est en RWD.\n\u0009locals.designVersion = (request.session.designVersion !== undefined) ? request.session.designVersion : \"rwd\";\n\n    next();\n};\n\nexports.setSockets = function () {\n\u0009var NA = this,\n\u0009\u0009io = NA.io;\n\n\u0009// Dès qu'on a un lien valide entre le client et notre serveur...\n    io.sockets.on(\"connection\", function (socket) {\n\n        // ...rester à l'écoute de la demande « change-version »...\n        socket.on(\"change-version\", function (data) {\n            var session = socket.request.session;\n\n            // Si data vaut \"rwd\" (existe)...\n            if (data.designVersion) {\n            \u0009// on le passe à rien\n            \u0009session.designVersion = \"\";\n            } else {\n            \u0009// sinon on le passe à \"rwd\"\n            \u0009session.designVersion = \"rwd\";\n            }\n\n            // On sauvegarde le nouvel état de session.\n            session.touch().save();\n        });\n    });\n};\n```\n\n*webconfig.json*\n\n```json\n{\n\u0009\"routes\": {\n\u0009\u0009\"/\": {\n\u0009\u0009\u0009\"view\": \"index.htm\",\n\u0009\u0009\u0009\"controller\": \"index.js\"\n\u0009\u0009}\n\u0009}\n}\n```\n\n**Lancer le site**\n\n```bash\nnode-atlas --browse\n```","dates":{"published":{"$date":"2014-10-08T10:43:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Conserver un affichage Desktop sur mobile avec une version Responsive Web Design","urn":"conserver-une-version-desktop-avec-une-version-mobile-sur-le-meme-site-web","description":"Conserver un affichage Desktop sur mobile avec une version Responsive Web Design","image":""}
{"_id":{"$oid":"54369e88ac53204337fa2e0c"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"Afin d'apporter un cadre à l'équipe et parce que créer nos propres UI Kit n'est pas à l'ordre du jour, nous avons pris le partie d'utiliser Bootstrap 3 [non sans chagrin](./bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/).\n\nL'idée finale derrière cette utilisation est de pouvoir créer facilement des composants et de pouvoir les déplacer n'importe ou dans un layout ou dans un composant lui-même.\n\n[Après avoir défendu l'idée que je n'avais pas besoin d'un quelconque Framework pour réaliser cela](./grille-css-responsive-et-semantique-sans-framework/), je me suis atteler à Bootstrap.\n\nLes remarques n'ont pas tardées à tomber sur la manière d'intégrer tout cela :\n\n- « Ça ne sert à rien de mettre un “.col-xs-12” ici, ça revient au même de ne rien mettre »,\n- « Pourquoi il n'y a pas un seul “.container” pour gérer toute la page comme dans [la source de cette page](http://getbootstrap.com/examples/offcanvas/) »,\n- « Il ne faut pas mettre les “.container”  dans les composants mais à l'extérieur sinon en mettant les composants dans des petites colonnes on va dépasser la largeur de la grille. Regarde [la source de cette page](http://getbootstrap.com/examples/offcanvas/) »,\n- « T'as pas besoin de “.container” pour utiliser des “.row” », etc.\n\nLe constat est clair, l'utilisation de Bootstrap pour réaliser des pages en imbriquant des composants est une chose, mais le faire correctement en est une autre !\n\nSuivez le guide pour comprendre les guidelines que doivent suivre tout composant pour être « Drag and Droppable » n'importe où !\n\n\n\n\n\n## Repérer des équivalences ##\n\nLa première chose va être de lister ce que représente réellement chaque classe :\n\n- `\u003cdiv\u003e` =\u003e 100% de la largeur\n- `\u003cdiv class=\"container-fluid\"\u003e` =\u003e 100% de la largeur + paddings positifs (+15)\n- `\u003cdiv class=\"container\"\u003e` =\u003e largeur de grille + paddings positifs (+15)\n- `\u003cdiv class=\"row\"\u003e` =\u003e 100% de la largeur + margins négatives (-15)\n- `\u003cdiv class=\"col-xs-12\"\u003e` =\u003e 100% de la largeur + paddings positifs (+15)\n- `\u003cdiv class=\"col-xx-YY\"\u003e` =\u003e ZZ% de la largeur + paddings positifs (+15)\n\nOn s'aperçoit alors très vite que :\n\n1. `\u003cdiv\u003e` et `\u003cdiv class=\"col-xs-12\"\u003e`, ce n'est pas pareil.\n2. `.container-fluid` et `.col-xs-12` sont la même chose.\n3. `.container` et `.col-xs-12` sont la même chose à la seule différence que .container à une largeur fixée.\n4. `.row` a forcément besoin d'un `.container`, c'est juste que si vous n'en voyez pas au dessus, c'est peut-être parce que celui-ci s'appelle `.col-xs-12` (ou n'importe quelle déclinaison `\u003cdiv class=\"col-xx-YY\"\u003e`).\n5. `.container-fluid/.container/.col-xs-12/.col-xx-YY` sont l’opposé de `.row` (paddings positifs est annulé par margins négatifs).\n\n[On peut également aller plus loin en permettant à `.container` d'avoir une taille maximale fixée plutôt qu'une taille fixée](./gerer-sa-cascade-de-grille-et-de-composant-avec-bootstrap/#grille-bootstrap-non-fixe-mais-limite-max).\n\n\n\n\n\n## Être composant orienté ##\n\n### Plusieurs Container ###\n\nSi je sais d'avance ce qui va composer ma grille principale et ce qui va composer mes sous-grilles alors effectivement, je n'ai besoin que d'un seul `.container` pour englober ma page.\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eStatic\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"jumbotron\"\u003e\n                \u003ch1\u003eTitle\u003c/h1\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"panel\"\u003e\n                \u003ch1\u003eCarousel\u003c/h1\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-sm-8\"\u003e\n                    \u003cdiv class=\"row\"\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple A\u003c/h2\u003e\n                                \u003cp\u003eExemple A\u003c/p\u003e\n                                \u003cp\u003eExemple A\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple B\u003c/h2\u003e\n                                \u003cp\u003eExemple B\u003c/p\u003e\n                                \u003cp\u003eExemple B\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple C\u003c/h2\u003e\n                                \u003cp\u003eExemple C\u003c/p\u003e\n                                \u003cp\u003eExemple C\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple D\u003c/h2\u003e\n                                \u003cp\u003eExemple D\u003c/p\u003e\n                                \u003cp\u003eExemple D\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple E\u003c/h2\u003e\n                                \u003cp\u003eExemple E\u003c/p\u003e\n                                \u003cp\u003eExemple E\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple F\u003c/h2\u003e\n                                \u003cp\u003eExemple F\u003c/p\u003e\n                                \u003cp\u003eExemple F\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple G\u003c/h2\u003e\n                                \u003cp\u003eExemple G\u003c/p\u003e\n                                \u003cp\u003eExemple G\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-sm-4\"\u003e\n                    \u003cnav class=\"panel\"\u003e\n                        \u003cul\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink A\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink B\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink C\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink D\u003c/a\u003e\u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/nav\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e [Voir le rendu ici](http://codepen.io/Haeresis/pen/Cxhkb)\n\n**Problème**\n\n- Si je souhaite que mon carrousel prenne toute la largeur de la page, je suis bloqué dans mon `.container`. Résolvons ça dans le point suivant.\n\n**Solution**\n\nPour permettre à mon carrousel de prendre toute la largeur, je vais donc éviter le `.container` global mais plutôt utiliser un `.container` ou un `.container-fluid` en fonction de mes besoins.\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eMultiple container\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"jumbotron\"\u003e\n                \u003ch1\u003eTitle\u003c/h1\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container-fluid\"\u003e\n            \u003cdiv class=\"panel\"\u003e\n                \u003ch1\u003eCarousel\u003c/h1\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-sm-8\"\u003e\n                    \u003cdiv class=\"row\"\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple A\u003c/h2\u003e\n                                \u003cp\u003eExemple A\u003c/p\u003e\n                                \u003cp\u003eExemple A\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple B\u003c/h2\u003e\n                                \u003cp\u003eExemple B\u003c/p\u003e\n                                \u003cp\u003eExemple B\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"component-text panel\"\u003e\n                                \u003ch2\u003eExemple C\u003c/h2\u003e\n                                \u003cp\u003eExemple C\u003c/p\u003e\n                                \u003cp\u003eExemple C\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple D\u003c/h2\u003e\n                                \u003cp\u003eExemple D\u003c/p\u003e\n                                \u003cp\u003eExemple D\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple E\u003c/h2\u003e\n                                \u003cp\u003eExemple E\u003c/p\u003e\n                                \u003cp\u003eExemple E\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple F\u003c/h2\u003e\n                                \u003cp\u003eExemple F\u003c/p\u003e\n                                \u003cp\u003eExemple F\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003cdiv class=\"panel\"\u003e\n                                \u003ch2\u003eExemple G\u003c/h2\u003e\n                                \u003cp\u003eExemple G\u003c/p\u003e\n                                \u003cp\u003eExemple G\u003c/p\u003e\n                            \u003c/div\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-sm-4\"\u003e\n                    \u003cnav class=\"panel\"\u003e\n                        \u003cul\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink A\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink B\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink C\u003c/a\u003e\u003c/li\u003e\n                            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink D\u003c/a\u003e\u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/nav\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e [Voir le rendu ici](http://codepen.io/Haeresis/pen/yIgib)\n\n\n\n### Approche « Layouts / Components » ###\n\nPour permettre l'interversion de tous les composants dans toutes les zones de la page il va toujours falloir les plugger dans des zones d’atterrissage identique.\n\nComme `.container-fluid/.container/.col-xs-12/.col-xx-YY` sont la même chose au niveau des paddings positif, il faut découper les composants entre ces zones pour les rendre interchangeable.\n\nPar conséquent un **composant** atterrira toujours dans une zones à paddings positif et donc ne contiendra jamais en premier lieu une balise enfant avec un `.container-fluid/.container/.col-xs-12/.col-xx-YY`.\n\n*Composant Jumbotron*\n\n```html\n\u003cdiv class=\"component jumbotron\"\u003e\n    \u003cdiv class=\"jumbotron\"\u003e\n        \u003ch1\u003eTitle\u003c/h1\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Carousel*\n\n```html\n\u003cdiv class=\"component carousel\"\u003e\n    \u003cdiv class=\"panel\"\u003e\n        \u003ch1\u003eCarousel\u003c/h1\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Menu*\n\n```html\n\u003cnav class=\"component menu\"\u003e\n    \u003cdiv class=\"panel\"\u003e\n        \u003cul\u003e\n            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink A\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink B\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink C\u003c/a\u003e\u003c/li\u003e\n            \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink D\u003c/a\u003e\u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n\u003c/nav\u003e\n```\n\n*Composant Texte*\n\n```html\n\u003cdiv class=\"component text\"\u003e\n    \u003cdiv class=\"panel\"\u003e\n        \u003ch2\u003eExemple A\u003c/h2\u003e\n        \u003cp\u003eExemple A\u003c/p\u003e\n        \u003cp\u003eExemple A\u003c/p\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nCependant un **composant** peut commencer par une `.row` pour annuler le padding de sa zone d'arrivée, en vu d'injecter plusieurs `.col-xx-YY`.\n\n*Composant Texte et Image à Droite*\n\n```html\n\u003cdiv class=\"component text right image\"\u003e\n    \u003cdiv class=\"panel\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-xs-8\"\u003e\n                \u003ch2\u003eExemple B\u003c/h2\u003e\n                \u003cp\u003eExemple B\u003c/p\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-xs-4\"\u003e\n                \u003cimg class=\"img-responsive\" src=\"\" alt=\"\"\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nAprès le découpage précédent qui a donné naissance à des composants, où est passé la carcasse et les zones d'atterrissage ? C'est ce qui constitue le **layout**. Nos composants précédents peuvent être indépendamment placer dans ce layout : \n\n*Layout A*\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eLayout A\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003c!-- include component --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container-fluid\"\u003e\n            \u003c!-- include component --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-sm-8\"\u003e\n                    \u003cdiv class=\"row\"\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class=\"col-sm-4\"\u003e\n                            \u003c!-- include component --\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-sm-4\"\u003e\n                    \u003c!-- include component --\u003e    \n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nou pourquoi pas celui là :\n\n*Layout B*\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eLayout B\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003c!-- include component --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-sm-6\"\u003e\n                    \u003c!-- include component --\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-sm-6\"\u003e\n                    \u003c!-- include component --\u003e    \n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"container\"\u003e\n            \u003c!-- include component --\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e [Voir le rendu B ici](http://codepen.io/Haeresis/pen/clifo)\n\nou n'importe quel autre layout !\n\n\n\n### Approche « Full Components » ###\n\nCette approche part du postulat que vous n'avez aucun layout et que tout n'est que composant de composant ! Dans cette approche le découpage va être sensiblement différent et c'est bien les composants eux-mêmes qui vont embarquer les `.container` en tout premier lieux.\n\nÀ noter également que les zones d’atterrissage de composant ne devrons cette fois jamais avoir de padding et donc toujours être précédé d'un `.row`.\n\nIl y a également 2 composants spéciaux qui sont le header et le footer qui contiennent les injections CSS et JavaScript ainsi que les meta données.\n\n#### Grille Bootstrap non fixe mais à limite max ####\n\nAvant tout, pour que cela fonctionne il va falloir transformer les tailles fixes des `.containers` de Bootstrap en tailles maximales.\n\nAjoutez soit cela à la suite de l'appel du fichier Bootstrap :\n\n```css\n@media (min-width: 768px) {\n  .container {\n    width: auto;\n    max-width: 750px;\n  }\n}\n@media (min-width: 992px) {\n  .container {\n    width: auto;\n    max-width: 970px;\n  }\n}\n@media (min-width: 1200px) {\n  .container {\n    width: auto;\n    max-width: 1170px;\n  }\n}\n```\n\nou remplacez dans le fichier d'origine Bootstrap les 3 `width` précédentes en `max-width`.\n\nCela fera que `.container` deviendra :\n\n- ~~`\u003cdiv class=\"container\"\u003e` =\u003e largeur de grille + paddings positifs (+15)~~\n- `\u003cdiv class=\"container\"\u003e` =\u003e 100% de la largeur + paddings positifs (+15) + limite max de grille\n\net pourra être inclus lui-même dans un `.container` sans poser de problème.\n\n#### Composants ####\n\nRevoyons le découpage de nos précédents composants :\n\n*Composant Jumbotron*\n\n```html\n\u003cdiv class=\"component jumbotron\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"jumbotron\"\u003e\n            \u003ch1\u003eTitle\u003c/h1\u003e\n        \u003c/div\u003e   \n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Carousel*\n\n```html\n\u003cdiv class=\"component carousel\"\u003e\n    \u003cdiv class=\"container-fluid\"\u003e\n        \u003cdiv class=\"panel\"\u003e\n            \u003ch1\u003eCarousel\u003c/h1\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Menu*\n\n```html\n\u003cnav class=\"component menu\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"panel\"\u003e\n            \u003cul\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink A\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink B\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink C\u003c/a\u003e\u003c/li\u003e\n                \u003cli\u003e\u003ca href=\"javascript:;\"\u003eLink D\u003c/a\u003e\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/nav\u003e\n```\n\n*Composant Texte*\n\n```html\n\u003cdiv class=\"component text\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"panel\"\u003e\n            \u003ch2\u003eExemple A\u003c/h2\u003e\n            \u003cp\u003eExemple A\u003c/p\u003e\n            \u003cp\u003eExemple A\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Texte et Image à Droite*\n\n```html\n\u003cdiv class=\"component text right image\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"panel\"\u003e\n            \u003cdiv class=\"row\"\u003e\n                \u003cdiv class=\"col-xs-8\"\u003e\n                    \u003ch2\u003eExemple B\u003c/h2\u003e\n                    \u003cp\u003eExemple B\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"col-xs-4\"\u003e\n                    \u003cimg class=\"img-responsive\" src=\"\" alt=\"\"\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nNous voyons qu'a présent se sont les composants eux-mêmes qui embarquent leur comportement maximum. Ajoutons maintenant un composant embarquant des composants.\n\n*Composant Liste à 3 Colonnes*\n\n```html\n\u003cdiv class=\"component list three colums\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003c!-- start for --\u003e\n            \u003cdiv class=\"col-sm-4\"\u003e\n                \u003cdiv class=\"row\"\u003e\n                    \u003c!-- include component[i] --\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003c!-- end for --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant 2 Tiers 1 Tiers*\n\n```html\n\u003cdiv class=\"component grid2-1\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-sm-8\"\u003e\n                \u003cdiv class=\"row\"\u003e\n                    \u003c!-- include component[0] --\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-sm-4\"\u003e\n                \u003cdiv class=\"row\"\u003e\n                    \u003c!-- include component[1] --\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n*Composant Liste à 2 Colonnes*\n\n```html\n\u003cdiv class=\"component list two colums\"\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003c!-- start for --\u003e\n            \u003cdiv class=\"col-sm-6\"\u003e\n                \u003cdiv class=\"row\"\u003e\n                    \u003c!-- include component[i] --\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003c!-- end for --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nFinissons avec nos 2 composants spéciaux.\n\n*Composant Header*\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003ctitle\u003eMultiple container\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n```\n\n*Composant Footer*\n\n```html\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n#### Pages ####\n\nIl ne nous reste plus, avec un unique moteur comme par exemple [NodeAtlas](https://www.lesieur.name/node-atlas/), à appeler à chaque affichage de page avec une configuration `.json` par exemple.\n\n*Moteur Lamba*\n\n```html\n\u003c!-- start for --\u003e\n\u003c!-- include component[i] --\u003e\n\u003c!-- end for --\u003e\n```\n\n*Équivalent Layout A*\n\n```javascript\n[\n    { \"header\": [] },\n    { \"jumbotron\": [] },\n    { \"carousel\": [] },\n    { \"grid2-1\": [\n        { \"list-three-columns\": [\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] },\n            { \"text\": [] }\n        ] },\n        { \"menu\": [] }\n    ] },\n    { \"footer\" }\n]\n```\n\n*Équivalent Layout B*\n\n```javascript\n[\n    { \"header\": [] },\n    { \"jumbotron\": [] },\n    { \"list-two-columns\": [\n        { \"menu\": [] },\n    \u0009{ \"text-image-right\": [] }\n    ] },\n    { \"carousel\": [] },\n    { \"footer\" }\n]\n```\n\n\u003e [Voir le rendu B ici](http://codepen.io/Haeresis/pen/FlDip)\n\n## Pour aller plus loin ##\n\nEnfin qui dit découpe par composant dans le HTML dit découpe des CSS et JS dans le même sens. Vous pouvez par exemple enregistrer tout ce qui à trait au composant `carousel` dans `component.carousel.js` et `component.carousel.css` et l'injecter dans un bundle spécifique à la page avec les autres composants qui ne sont appelés qu'ici ou dans un bundle commun à toutes les pages. Des Framework comme [NodeAtlas s'occupe pour vous comme des grands de vos bundles](http://haeresis.github.io/NodeAtlas/#minifier-les-cssjs).\n\nVous pouvez également [organiser votre découpe du JavaScript par composant en vous inspirant de ces exemples](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/#segmentation).\n\nEt pour finir, même si je n'en ai pas parlé ici, il est évident que le contenu des composants doit être mappé à une source transversale de données indépendamment du composant en lui-même en fonction de la page ou du layout [comme peut le faire NodeAtlas](http://haeresis.github.io/NodeAtlas/#g%C3%A9rer-des-variations-au-sein-dun-m%C3%AAme-template).","dates":{"published":{"$date":"2014-10-10T14:37:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Gérer sa cascade de grille et de composant avec Bootstrap","urn":"gerer-sa-cascade-de-grille-et-de-composant-avec-bootstrap"}
{"_id":{"$oid":"544017beac53204337fa2e0d"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48bd"}],"content":"Voilà les petites bases qu'il faut rapidement se mettre en tête à propos de la différence entre les marges externes ou margins et marges internes ou paddings :\n\n- Les margins d'un élément HTML se superposent avec les margins de leur voisin, avec les margins de leur parents, avec les margins des enfants des voisins, etc. Puisqu'elles se trouvent à l'extérieur des borders, elles ne sont pas affectées par les backgrounds.\n\n- Les paddings d'un élément HTML s'additionnent ou se cumulent avec les paddings de leur voisins, avec les paddings de leur parents, avec les paddings des enfants des voisins etc. Puisqu'elles se trouvent à l'intérieur de border, elles sont affectées par les backgrounds.\n\nDeux trois autres chose rapide sont à savoir : comme le fait qu'un élément inline ne gère pas les paddings ou qu'un margin négatif déplace les éléments contrairement au padding négatif qui ne fait rien, etc.\n\nMais saviez-vous que : **Si les éléments deviennent flottants en continuant de prendre toute la largeur... les marges externes se comportent comme les marges internes !**\n\n\n\n\n\n## Guide pour constater le problème ##\n\n### Petite architecture de test ###\n\nNous allons tester ce HTML :\n\n```html\n\u003cp\u003e1. p voisin haut\u003c/p\u003e\n\u003cp\u003e1. p voisin bas\u003c/p\u003e\n\u003cp\u003e2. p voisin de div haut\u003c/p\u003e\n\u003cdiv\u003e\n  \u003cp\u003e2. p haut enfant de div et entre deux p\u003c/p\u003e\n  \u003cp\u003e2. p bas enfant de div et entre deux p\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003e2. p voisin de div bas\u003c/p\u003e\n\u003cdiv\u003e\n  \u003cp\u003e3. p enfant de div qui est voisin haut\u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv\u003e\n  \u003cp\u003e3. p enfant de div qui est voisin bas\u003c/p\u003e\n\u003c/div\u003e\n```\n\navec des marges externes ou margins :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  margin: 10px 0;\n}\ndiv {\n  margin: 10px 0;\n  background-color: #d9d9ff;\n}\n```\n\navec des marges internes ou paddings :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  padding: 10px 0;\n}\ndiv {\n  padding: 10px 0;\n  background-color: #d9d9ff;\n}\n```\n\net avec des margins et des floats :\n\n```css\n* {\n  margin: 0;\n  padding: 0;\n}\np {\n  margin: 10px 0;\n  width: 100%;\n  float: left;\n}\ndiv {\n  margin: 10px 0;\n  background-color: #d9d9ff;\n  width: 100%;\n  float: left;\n}\n```\n\n\n\n### Test live ! ###\n\nPar défaut dans notre exemple, tous les div et p ont les margings et paddings à 0. Vous êtes en mode margin par défaut sans que rien ne flotte. Les p ont un fond transparent mais les div ont un fond violet. Vous pouvez appréhender l'architecture HTML de cette exemple juste au dessus.\n\n#### Constater la superposition des Margins ###\n\nEn passant votre souris sur les éléments, vous pouvez constater la superposition des margins (marges externes). Les p sont oranges, les div sont violettes foncées, et la superposition fait apparaître du marron. Si vous cochez les checkboxs, vous maintiendrez l'effet même en enlevant votre souris. La première case représente le p, la seconde la div.\n\n\u003cdiv class=\"example\"\u003e\n\u003cp data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/jKvmh/'\u003eBehavior of Margin is equals to behavior of Padding with Float\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\n\n#### Constater l'addition des Paddings ###\n\nAvec le menu en haut à droite, « Basculer en mode padding » en cliquant, et constatez que les marges internes s'additionnent. N'hésitez pas à cocher les cases pour maintenir l'effet.\n\n\u003cdiv class=\"example\"\u003e\n\u003cp data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/jKvmh/'\u003eBehavior of Margin is equals to behavior of Padding with Float\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\n\n#### Les Margins se comportent comme des Paddings sur les éléments en Float ###\n\nMaintenant « Activez les flottants » tout en restant en « Mode Margin » et, ô surprise, nos margins se comportent maintenant comme des paddings ! Les margins ne se superpose plus mais s'additionne. Et pourtant bien des marges externes.\n\n\u003cdiv class=\"example\"\u003e\n\u003cp data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/jKvmh/'\u003eBehavior of Margin is equals to behavior of Padding with Float\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\n\n#### Les Backgrounds ne sont pas affectés ###\n\nAvec les flottants actif, et avec le menu en haut à gauche, alternativement, « Basculer en mode padding » et « Basculez en mode margin » pour remarquer que le background rouge associé aux div borde les enfants dans un cas, et englobe le padding dans l'autre.\n\n\u003cdiv class=\"example\"\u003e\n\u003cp data-height=\"300\" data-theme-id=\"0\" data-slug-hash=\"jKvmh\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/jKvmh/'\u003eBehavior of Margin is equals to behavior of Padding with Float\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n## Petite discussion Bootstrap ##\n\nPour en venir à Bootstrap et sa grille, vous vous êtes peut-être déjà fait la réflexion suivante ou quelqu'un vous la faites :\n\n« Il ne sert à rien d'écrire : » \n\n```html\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-xs-12\"\u003e\n            \u003ch1\u003eCeci est le titre\u003c/h1\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"col-xs-12\"\u003e\n            \u003ch2\u003eCeci est le sous-titre\u003c/h2\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n« il faut plutôt écrire : » \n\n```html\n\u003cdiv class=\"container\"\u003e\n    \u003ch1\u003eCeci est le titre\u003c/h1\u003e\n    \u003ch2\u003eCeci est le sous-titre\u003c/h2\u003e\n\u003c/div\u003e\n```\n\n« C'est là même chose. »\n\nEt bien avec ce billet, sachez que, puisque `.col-xs-12` et toutes ses déclinaisons sont des flottants, dans le premier cas les marges externes vont se superposer, alors que dans le second cas elles vont s'additionner.\n\nAinsi si sur certaine page censée être identique vous devez juste ajouter en regard du titre un lien pour filtrer les résultats de page :\n\n ```html\n\u003cdiv class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n        \u003cdiv class=\"col-sm-6\"\u003e\n            \u003ch1\u003eCeci est le titre\u003c/h1\u003e\n        \u003c/div\u003e\n       \u003cdiv class=\"col-sm-6 text-right\"\u003e\n            \u003ca href=\"\"\u003eFiltrer les résultats\u003c/a\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"col-xs-12\"\u003e\n            \u003ch2\u003eCeci est le sous-titre\u003c/h2\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\navec le premier cas cité il n'y aura aucun changement si ce n'est l'ajout du lien alors qu'avec le second cas cité, le titre sera plus espacé du sous-titre sur les pages avec filtre et moins espacé sur les pages sans filtre.\n\nLa praticité de Bootstrap nous met malheureusement face à [une abstraction qui fuie](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html) !\n\n\u003cscript async src=\"//codepen.io/assets/embed/ei.js\"\u003e\u003c/script\u003e\n\n\n\n\n\n\n","dates":{"published":{"$date":"2014-10-17T10:36:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".example {\n   margin: 10px 0;\n}","title":"Les Margins se comportent comme des Paddings avec les grilles Bootstrap","urn":"les-margins-se-comportent-comme-des-paddings-avec-bootstrap"}
{"_id":{"$oid":"544a4724ac53204337fa2e0e"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5810c7ceac1a7558f33a3acc"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"582b22f1fa290e086423e837"}],"content":"_[NodeAtlas]_ est une application multi-os écrite en [Node.js] qui va vous permettre de créer, modifier et maintenir tout un ensemble de maquette HTML. Ces maquettes HTML pourront ensuite être validées par le client, et ré-utilisées totalement ou en partie par les développeurs Back-end quelque soit leurs technologies. Ces maquettes HTML pourront également servir de site stand-alone fonctionnant sans serveur ou avec un simple serveur HTTP pour créer des documentations [JSDoc](http://usejsdoc.org/) ou autre comme pour [GitHub] par exemple. C'est ce que nous allons voir dans cet article.\n\nMais _[NodeAtlas]_ permet également de faire tourner des sites web complet, performant et rapide tel que le site sur lequel vous être entrain de lire cet article.\n\n\u003e _[NodeAtlas]_ est designé pour :\n- [Les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/).\n- **Les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité**.\n- Les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs.\n\n[NodeAtlas]: https://www.npmjs.com/package/node-atlas/ \"Create MVC2 or Front-end-based websites easily.\"\n[Node.js]: http://nodejs.org/ \"Node.js is a platform built on Chrome's JavaScript runtime easily building fast, scalable network applications.\"\n[GitHub]: https://github.com/ \"GitHub is where people build software. More than 15 million people use GitHub to discover, fork, and contribute to over 38 million projects.\"\n\n\n\n\n\n## Pourquoi ? ##\n\n1. Remplacer le travail initialement fait avec des wireframes par une création en HTML avec l'aide de CSS de wireframing ou de bootstraping. Plus besoin de créer un ama de documents de wireframe, et le travail est directement prêt pour l'étape de design. Vous pouvez ensuite soumettre vos « Wireframes Live » au client.\n2. Remplacer le travail initialement fait avec Photoshop directement à partir de l'étape de wireframing avec des CSS pour le design et diverses images. Plus besoin de transférer des amas de PSD ; tout est mutualisé et la moindre partie n'est pas dupliquée. Vous pouvez ensuite soumettre vos maquettes au client. Le design est intégrable pour l'étape suivante puisqu'il tourne déjà.\n3. Pouvoir fournir à des Intégrateurs, qu'ils travail avec PHP, Java, .NET, Ruby, Node.js etc. des assets HTML directement exploitables et intégrables. Ils pourront ré-utiliser des morceaux de code, voir la totalité des maquettes dans le site qui va être créé.\n4. Transformer ces maquettes HTML à destination des Back-end directement en site web qui tournera avec [Node.js] sous le module _[NodeAtlas]_ qui, en plus de créer des maquettes, fait tourner des sites web.\n\n\n\n\n\n## Installer et prendre en main NodeAtlas ##\n\nVous pouvez vous familiariser avec les bases de la création de *Vue* et de *Route* grâce à l'article « [Des sites web Node.js pour les débutants en JavaScript avec NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) » afin de mieux appréhender cet article.\n\nPour la suite de ce billet, nous allons travailler sur un exemple concret : le site de présentation de _[NodeAtlas]_ ! Ce site est hébergé sur un espace mis en place par [GitHub] capable de faire tourner des pages HTML simples. Nous allons donc ici voir :\n\n- comment maintenir plusieurs pages HTML de documentation sans redondance de code et générer son site « serverless »,\n- comment créer ses pages avec comme source d'origine le [README.md](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/v1.x/README.fr.md) du projet,\n- comment créer une architecture HTML/CSS/JS Vanilla en s'appuyant sur [des conventions de nommage établies](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/),\n- comment compresser la totalité du contenu pour des performances optimales côté client.\n\n\n\n\n\n## Générer des maquettes à partir de pages lives ##\n\nLe but de la manœuvre va être le suivant : nous allons créer un site web qui tourne en `localhost` le temps du développement. Une fois que celui-ci nous conviendra, nous utiliserons la commande `--generate` du CLI _[NodeAtlas]_ afin de créer tout le panel de page HTML correspondant initialement au site que nous avons développé. Ses pages seront consultables sans serveur ou avec n'importe quel serveur HTTP simple (Pas de node.exe, pas de php.exe, etc.).\n\n### Structure initiale du site ###\n\nComme toujours, tout débute avec le fichier `webconfig.json` dans votre projet de travail que nous allons ici nommer `nodeatlas-website`.\n\nCe fichier va donc être ajouté avec d'autres fichiers de démarrage à l'architecture suivante :\n\n```\ndist/\nnodeatlas-website/\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n└─ webconfig.json\n```\n\nVous remarquerez également la présence du dossier `dist` pour « distribution » au même niveau. C'est là que nos maquettes seront générées.\n\nNous allons exposer ci-après le contenu du site avec la configuration suivante :\n\n**webconfig.json**\n\n```json\n{\n    \"languageCode\": \"fr\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"htmlGenerationBeforeResponse\": true,\n    \"routes\": {\n        \"/index.html\": \"content.htm\"\n    }\n}\n```\n\net les vues suivantes :\n\n**views/partials/head.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003c!-- `languageCode` renvoi \"fr\" dans notre cas. --\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eNodeAtlas\u003c/title\u003e\n\n        \u003c!-- `urlBasePath` renvoi \"http://localhost\" dans notre cas quand un serveur tourne. --\u003e\n        \u003c!-- `urlBasePath` renvoi `` dans une page générée à la racine, il renvoit `..` pour un fichier généré dans un sous, `../..` pour un sous-sous-dossier, etc. --\u003e\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\" /\u003e\n\n        \u003cmeta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" /\u003e\n        \u003cmeta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" /\u003e\n\n        \u003cmeta name=\"robots\" content=\"index, follow\" /\u003e\n\n        \u003c!--[if IE]\u003e\u003cmeta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /\u003e\u003c![endif]--\u003e\n        \u003c!--[if !IE]\u003e\u003c!--\u003e\u003cmeta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /\u003e\u003c!--\u003c![endif]--\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"layout\"\u003e\n            \u003cnoscript class=\"no-js cmpt\"\u003e\n                \u003cdiv class=\"no-js--inner\"\u003e\n                    \u003cp\u003eLe JavaScript n'est pas activé.\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/noscript\u003e\n```\n\n**views/partials/header.htm**\n\n```html\n            \u003cheader class=\"header cmpt\"\u003e\n                \u003cdiv class=\"header--inner\"\u003e\n                    \u003cdiv class=\"header--title\"\u003e\n                        \u003ch1\u003eNodeAtlas\u003c/h1\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/header\u003e\n```\n\n**views/partials/content.htm**\n\n```html\n            \u003carticle class=\"content cmpt\"\u003e\n                \u003cdiv class=\"content--inner\"\u003e\n                    \u003c?- common.content ?\u003e\n                \u003c/div\u003e\n            \u003c/article\u003e\n```\n\n**views/partials/foot.htm**\n\n```html\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n**views/content.htm**\n\n```html\n\u003c?- include(\"partials/head.htm\") ?\u003e\n\u003c?- include(\"partials/header.htm\") ?\u003e\n\u003c?- include(\"partials/content.htm\") ?\u003e\n\u003c?- include(\"partials/foot.htm\") ?\u003e\n```\n\nalimentés par le fichier de variation commun suivant :\n\n**variations/common.json**\n\n```js\n{\n    \"content\": \"Contenu pour la documentation.\"\n}\n```\n\nEn installant _[NodeAtlas]_ en mode global avec la commande `npm install -g node-atlas`, nous pouvons l'utiliser en temps que CLI à la ligne de commande. C'est ce que nous allons faire dans cet article.\n\nLançons donc notre site qui pour le moment ne contient qu'une page à l'adresse : `http://localhost/index.html`. En ouvrant un invité de commande depuis le dossier `nodeatlas-website` (Ctrl + Shitf + Clique droit dans une zone vide de l'explorateur), tapez la commande suivante :\n\n```\n\u003e node-atlas --browse index.html\n```\n\nNotre page affiche donc « Contenu pour la documentation. » à l'adresse `http://localhost/index.html`.\n\n\n\n### Génération de maquettes ###\n\nVous remarquerez dans votre console que le message « HTML : The file « \u003clocation-of-project\u003e\\dist\\index.html » was generated ! ». Si vous vous rendez dans le dossier `dist`, vous remarquerez qu'un fichier `index.html` vous y attend. Si vous l'ouvrez depuis votre gestionnaire de fichier, vous remarquerez que le fichier tourne sans serveur web (dans mon cas avec Chrome, et mon OS, l'adresse est `file:///C:/nodejs/example/dist/index.html`).\n\nCela est possible grâce aux paramètres de webconfig `serverlessRelativePath` avec `../dist/` pour informer _[NodeAtlas]_ de l'endroit où les maquettes seront générées et `htmlGenerationBeforeResponse` pour que la génération se fasse après chaque consultation de page sur `localhost`.\n\nIl est possible de ne pas générer la « distribution » page par page après chaque consultation mais en une seule fois avec une seule commande. Commencez par couper votre instance en coupant le site (Ctrl + C dans l'invité de commande) puis supprimez l'intégralité du contenu de `dist`.\n\nLancez alors la commande :\n\n```\n\u003e node-atlas --generate\n```\n\net vous pourrez de nouveau consulter une page `index.html` dans le dossier `dist`.\n\n\n\n### Alimenter dynamiquement le webconfig ###\n\nEn fait, _[NodeAtlas]_ n'utilise pas les valeurs de route du `webconfig.json` tel quel mais construit une copie de celui-ci pour tourner. Cela signifie que l'on peut ajouter dynamiquement des routes depuis la partie contrôleur avant le lancement du serveur. Nous allons donc dans un premier temps, ajouter un contrôleur commun `common.json` à notre configuration et en profiter pour mettre en place « l'index des maquettes » ; très utile quand on créé des maquettes avec _[NodeAtlas]_,\n\n```\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"htmlGenerationBeforeResponse\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\"\n        }\n    }\n}\n```\n\net ajouter ce fichier à notre arborescence :\n\n```\n...\nnodeatlas-website/\n┊┉\n├─ controllers/\n│  └─ common.js\n┊┉\n```\n\navec le contenu suivant :\n\n```js\n// On se connecte a NodeAtlas au moment ou celui-ci configure les routes.\nexports.setRoutes = function (next) {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this,\n\n        // Et nous récupérons les routes en provenance du webconfig...\n        route = NA.webconfig.routes;\n\n    // ...pour ajouter la route \"/content.html\" à la liste de nos routes.\n    route[\"/content.html\"] = \"content.htm\";\n\n    // On redonne la main à NodeAtlas pour la suite.\n    next();\n};\n```\n\nIl ne nous reste plus qu'à tester cela avec la commande suivante :\n\n```\n\u003e node-atlas --browse\n```\n\nVous arriverez sur la page « Index of Webconfig's Routes » mise en place. Vous pourrez accéder d'ici aux pages `http://localhost/index.html` ou `http://localhost/content.html` avec le contenu « Contenu pour la documentation. ». Vous constaterez également leurs présence dans le dossier `dist`, toujours grâce à `htmlGenerationBeforeResponse`.\n\n\n\n### Injecter le contenu d'un fichier externe ###\n\nNous allons à présent injecter le contenu du [README.md](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/v1.x/README.fr.md) de _[NodeAtlas]_ que vous [pouvez télécharger ici](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md). Ce contenu est initialement rédigé en *[Markdown](https://fr.wikipedia.org/wiki/Markdown)* or nous le voulons en « Hyper-Text **Markup** Language ». Nous allons donc utiliser également un module npm additionel, le module `marked` pour transformer le contenu du [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) en HTML.\n\nNous obtenons donc le nouveau fichier dans l'arborescence :\n\n```\n...\nnode-atlas-website/\n┊┉\n├─ README.md\n┊┉\n```\n\nPour ajouter `marked` à notre environnement, utilisez un invité de commande et lancez la commande :\n\n```\n\u003e npm install -g marked\n```\n\ncela nous permet de ne pas piéger le module dans le projet. Une autre solution serait de créer un `package.json` et de lister tous les modules utilisés par ce projet, mais nous verrons cela dans le prochain billet.\n\nModifions à présent le fichier `controllers/common.js` comme suit :\n\n**controllers/common.js**\n\n```js\n// On se place au niveau du chargement des modules NodeAtlas, et on ajoute le notre.\nexports.setModules = function () {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this;\n\n    // On ajoute le module `marked`. Il va être cherché\n    // dans le dossier `node_modules` local (qui n'existe pas)\n    // puis finalement cherché dans les modules installés de manière\n    // globale (-g) et le trouver. Il va être chargé.\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        route = NA.webconfig.routes;\n\n    route[\"/content.html\"] = \"content.htm\";\n\n    next();\n};\n\n// On se place au niveau de la création de la Response HTTP suite à la Request HTTP d'une route.\n// Cette partie sera exécutée quelque soit la route demandée car elle est dans le fichier commun.\nexports.changeVariations = function (next, locals) {\n\n    // On récupère l'instance de NodeAtlas en cours.\n    var NA = this,\n\n        // On récupère le module interne `fs` qui va nous permettre de lire des fichiers.\n        fs = NA.modules.fs,\n\n        // On récupère le module externe `marked` que l'on va utiliser depuis le moteur NodeAtlas.\n        marked = NA.modules.marked;\n\n    // On récupère le contenu de `README.md` en `utf-8`.\n    // Celui-ci sera dans la variable `content`.\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        // En cas d'erreur...\n        if (err) {\n            // ...on passe tout de suite au chargement de la page,\n            // sans le contenu du fichier.\n            return next();\n        }\n\n        // On récupère les variations compilées spécifiquement pour une route,\n        // demandée par une requête. C'est pour cela qu'elles proviennent du\n        // paramètre `locals` et non de l'objet `NA`.\n        locals\n\n            // On surcharge la valeur de `content` en provenance du fichier `variations/common.json`\n            // par celle de la variable `content` en retour de la lecture du fichier. On transforme\n            // son contenu de `Markdown` à `HTML`.\n            .common.content = marked(content);\n\n        // On redonne la main à NodeAtlas pour la suite en passant les modifications.\n        next();\n    });\n};\n```\n\nEn coupant le site (Ctrl + C dans l'invité de commande) et en le lançant de nouveau avec :\n\n```\n\u003e node-atlas --browse\n```\n\n*Note : si le message `Error: Cannot find module 'marked'` apparaît, c'est que la variable `NODE_PATH` n'est pas configurée sur votre environnement. C'est elle qui explique où trouver les modules globaux. Dans ce cas, sur Windows, faites un clique droit sur « Ce PC » ou (« Ordinateur ») dans l'Explorateur de fichier et allez dans « Propriétés » puis dans « Paramètres système avancés » puis dans « Variables d'environnement... » puis dans « Variable utilisateur pour... » puis cliquez sur « Nouvelle... ». Ajoutez `NODE_PATH` dans « Nom de la variable » et `%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules` dans « Valeur de la variable ». Cliquez sur « Ok » pour fermer chaque fenêtre. Fermez votre invité de commande et r'ouvrez s'en un. Tout devrait être en ordre.*\n\nVous serez à même de lire le README.md à l'adresse `http://localhost/index.html` ou à l'adresse `http://localhost/content.html` (et dans le dossier `dist`).\n\n\u003e `setModules`, `setRoutes` et `changeVariations`\n\u003e \n\u003e Vous aurez remarqué que ces trois fonctions ne fonctionnent pas exactement de la même manière. La première est simple, la seconde nécéssite l'appel de la callback `next` et la dernière en plus, doit passer à cette callback la variable `variations`. Nous allons expliquer trois concepts associés à leurs utilisation :\n\u003e \n\u003e - `setModules` intervient au niveau du chargement des modules de NodeAtlas. Le module NodeAtlas est récupérable via `this` dans cette fonction. `this` est lié au moteur et toute modification de celui-ci dans un `exports` est répercuté dans le moteur. Cela signifie qu'en ajoutant des modules, ils se retrouvent utilisable aux autres endroit à travers tout le moteur. Puisque cette zone est dédiée uniquement à charger les `require`, et que les `require` se chargent de manière **synchrone**, on sait que le moteur ne reprend pas la main avant que tout soit chargé. Il n'y a pas de nécéssité de callback donc.\n\u003e \n\u003e - `setRoutes` intervient juste avant le chargement des routes, mais quand le moteur est complètement opérationnel. La nature de ce qu'on va faire ici fait que les actions peuvent être **asynchrone**s. Il est donc important d'attendre le retour des fonctions asynchrones avant de rendre la main au moteur et démarrer le serveur. Pour être sur que, par exemple, toutes les routes ont bien finies d'être chargées avant la suite du processus, on glisse la fonction `next` dans le retour de la fonction asynchrone.\n\u003e \n\u003e - `changeVariations` intervient à chaque fois que le client fait une requête au serveur NodeAtlas, durant la création de la réponse juste avant la phase de compilation des vues. Comme le contenu de `params` (et donc `params.variations`) est unique à chaque réponse, il ne peut pas être placé dans le `this` (qui représente ici, toujours le moteur NodeAtlas global) sinon les valeurs s'écraseraient les unes les autres à chaque requête concurrante : c'est pour cela qu'il est passé en premier paramètre. Une fois les modifications faites, il est nécessaire de les ré-injecter dans le moteur en premier paramètre de la callback `next`.\n\u003e \n\u003e *Note : en réalité, le premier paramètre de la callback `next` est optionnel pour `changeVariations` car `params.variations` est un objet passé par référence mais obligatoire pour `changeDom` car `params.dom` est une string passé en tant que variable.*\n\n\n\n### Créer des fragments de contenu à partir du README.md ###\n\nBien sur, il n'y a pas d'utilité à ajouter la page `http://localhost/content.html` car elle est actuellement identique à la `http://localhost/index.html`.\n\nCe que nous allons faire : c'est créer un ensemble de pages générées à partir du [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) directement dans des fichiers accessibles côté Front et côté Back. Nous allons décider que chaque `\u003ch2\u003e` et ce qui le suit sera le contenu d'un fichier. Et chaque fichier sera injecté dans la vue `views/content.htm` pour créer une page derrière une route dynamiquement. Voyons plutôt.\n\nLes fragments HTML seront donc créer dans `assets/content/`.\n\n```\n...\nnodeatlas-website/\n┊┉\n├─ assets/\n│  └─ content/\n┊┉\n```\n\nDans un premier temps, nous allons lire le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md) avant que le serveur soit lancé pour créer les fichiers nécessaires puis les ajouter à la liste des routes.\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n\n        // On utilise de quoi manipuler le DOM côté serveur.\n        jsdom =  NA.modules.jsdom,\n\n        // On permet de gérer une callback synchrone à la fin de\n        // plusieurs appels asynchrones (en parallèle).\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        // On récupère la version HTML du README.md.\n        var html = marked(content),\n\n            // On transforme la string Response en DOM.\n            dom = new jsdom.JSDOM(html),\n\n            // On prépare la liste des actions asynchrones dans un tableau.\n            allRoutes = [];\n\n        // Pour chaque H2 dans la sortie du README.md.\n        Array.prototype.forEach.call(dom.window.document.getElementsByTagName('h2'), function (title) {\n\n            // On ajoute au tableau les instructions...\n            allRoutes.push(function (nextRoute) {\n\n                // ...de créer un fichier, dont le nom est l'id généré par `marked`\n                // à partir du H2 et dont le contenu\n                // est les autres balises jusqu'au H2 suivant.\n                fs.writeFile(\n                    \"assets/\" + NA.webconfig._content + encodeURIComponent(title.getAttribute(\"id\")) + \".htm\",\n                    title.outerHTML + content.map(function (element) { return element.outerHTML; }).join(''),\n                function () {\n\n                    // On ajoute la route qui correspondra au chargement du fichier généré.\n                    route[\"/\" + title.getAttribute(\"id\") + \".html\"] = \"content.htm\";\n\n                    // Et on passe à la suite.\n                    nextRoute();\n                });\n            });\n        });\n\n        // On utilise async pour créer les fichiers de manière\n        // asynchrone, peu importe l'ordre de création. Mais quand\n        // tout est créé...\n        async.parallel(allRoutes, function() {\n\n            // ...on rend la main à NodeAtlas.\n            next();\n        });\n    });\n};\n\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // Pour chaque route créée, on lit le fichier HTML généré correspondant...\n    fs.readFile(\"assets/content/\" + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        // ... et on met son contenu dans la variable\n        // utilisée dans la vue.\n        locals.common.content = content;\n\n        next();\n    });\n};\n```\n\nEn coupant le site et en le lançant de nouveau avec :\n\n```\n\u003e node-atlas --browse\n```\n\nVous pourrez voir la liste complète des pages sur l'index `http://localhost/` et constater qu'au fur et à mesure que vous consultez les autres pages, celles-ci apparaissent dans `dist`. Vous pourrez également remarquer que nos fragments sont bien tous présent dans le dossier `nodeatlas-website/assets/content/`.\n\nEn coupant le site et en lançant la commande :\n\n```\n\u003e node-atlas --generate\n```\n\nvous remarquerez que non seulement la totalité des pages se retrouve dans le dossier `dist`, mais que en plus le dossier `content/` et tout son contenu a été copié également. Ce mécanisme permet d'automatiquement rapatrier les futurs fichiers publiques dans la « distribution » lors de la génération, en conservant la même arborescence de fichier.\n\n\n\n### Utilisation de contrôleurs spécifiques ###\n\nNous allons ensuite récupérer la table des matières pour la placer derrière le chemin `http://localhost/index.html`. Nous allons toujours travailler dans `changeVariations`, cependant le mécanisme de chargement sera différent en fonction qu'il soit injecté dans `views/index.htm` ou dans `views/content.htm`. C'est pourquoi nous allons créer deux contrôleurs spécifiques pour ses deux fichiers, et déplacer le contenu de `changeVariations` en provenance de `controllers/common.js` vers ces deux fichiers.\n\nNotre nouvelles arborescences est donc :\n\n```\ndist/\nnodeatlas-website/\n├─ assets/\n│  └─ content/\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n├─ webconfig.json\n└─ README.md\n```\n\navec le webconfig suivant :\n\n```\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    }\n}\n```\n\net avec les trois nouveaux fichiers suivant :\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n        jsdom =  NA.modules.jsdom,\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    // On va ré-aligner la manière dont les ids sont générés.\n    // Cela va nous servir d'ancre/lien unique pour le nom des fichiers, des urls et des ids,\n    // ainsi il n'y aura pas de lien mort.\n    function toUrl(text) {\n        return text.toLowerCase().replace(/'| |\\(|\\)|\\/|\\!|\\?|,|\\\u0026|\\;|\\[|\\]|\\%/g, \"-\").replace(/-+/g, \"-\").replace(/^-/g, \"\").replace(/-$/g, \"\");\n    }\n\n    fs.readFile(\"README.md\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        var html = marked(content),\n            dom = new jsdom.JSDOM(html),\n            allRoutes = [],\n\n            // On déclare la futur fonction de création du menu.\n            menu,\n\n            // On choisit la partie du `README.md` que l'on va utiliser comme page d'index.\n            key = \"table-des-matières\";\n\n        // On coordonnonne la manière dont les titres sont transformé en id...\n        Array.prototype.forEach.call(dom.window.document.querySelectorAll('h2, h3'), function (title) {\n            title.setAttribute(\"id\", toUrl(title.textContent));\n        });\n\n        // On récupère la table des matières,\n        // et on l'enregistre à part dans un autre fichier.\n        Array.prototype.forEach.call(dom.window.document.querySelectorAll('h3[id=\"' + key + '\"]'), function (title) {\n            var toc = title.nextElementSibling;\n\n            // On transforme toutes les ancres H2 du menu...\n            Array.prototype.forEach.call(toc.children, function (sublink) {\n                var subtitle = sublink.children[0],\n\n                    // On transforme tous les titres...\n                    url = encodeURIComponent(toUrl(subtitle.textContent)) + \".html\";\n\n                // ...en liens correctes.\n                subtitle.setAttribute(\"href\", url);\n\n                // Et on réoriente toutes les ancres H3 du menu...\n                Array.prototype.forEach.call(sublink.querySelectorAll('li'), function (sublink) {\n                    var subtitle = sublink.children[0];\n\n                    // ...vers les bonnes adresses avec une bonne ancre.\n                    subtitle.setAttribute(\"href\", url + \"#\" + encodeURIComponent(toUrl(subtitle.textContent)));\n\n                    // On efface l'entrée `table des matières` de la table des matières.\n                    if (toUrl(subtitle.textContent) === key) {\n                        sublink.parentNode.removeChild(sublink);\n                    }\n                });\n            });\n\n            // On créer une fonction pour créer le fichier à part qui servira pour le menu global.\n            menu = function (next) {\n                fs.writeFile(\"assets/content/index.htm\", title.outerHTML + toc.outerHTML, function () {\n\n                    // On retire le menu de la source pour l'enregistrement ultérieur.\n                    toc.parentNode.removeChild(toc);\n                    title.parentNode.removeChild(title);\n\n                    // On passera à la suite.\n                    next();\n                });\n            };\n\n        });\n\n        // On se créer une fonction utilitaire pour simuler le comportement de `nextUntil` de jQuery\n        function nextUntil(title, selector) {\n            var htmlElement = title,\n                nextUntil = [],\n                until = true;\n            while (htmlElement = htmlElement.nextElementSibling) {\n                (until \u0026\u0026 htmlElement \u0026\u0026 !htmlElement.matches(selector)) ? nextUntil.push(htmlElement) : until = false;\n            }\n            return nextUntil;\n        }\n\n        Array.prototype.forEach.call(dom.window.document.getElementsByTagName('h2'), function (title) {\n            allRoutes.push(function (nextRoute) {\n                fs.writeFile(\n                    \"assets/content/\" + encodeURIComponent(title.getAttribute(\"id\")) + \".htm\",\n                    title.outerHTML + content.map(function (element) { return element.outerHTML; }).join(''),\n                function () {\n                    // On ajoute le contrôleur pour les pages dynamiques.\n                    route[\"/\" + encodeURIComponent(title.getAttribute(\"id\")) + \".html\"] = {\n                        \"view\": \"content.htm\",\n                        \"controller\": \"content.js\"\n                    };\n\n                    nextRoute();\n                });\n            });\n        });\n\n        // On créer le fichier du menu...\n        menu(function () {\n\n            // ...puis tous les autres fichiers dans le désordre...\n            async.parallel(allRoutes, function() {\n\n                // ... puis on rend la main à NodeAtlas.\n                next();\n            });\n        });\n    });\n};\n```\n\n**controllers/content.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    fs.readFile(\"assets/content/\" + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\n**controllers/index.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // Avec pour le moment la différence que le fichier choisit\n    // est le fichier `index.htm`.\n    fs.readFile(\"assets/content/index.htm\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\nVous constaterez alors après avoir complètement effacé le contenu de `dist` qu'avec l'utilisation, depuis `nodeatlas-website`, de :\n\n```\n\u003e node-atlas --browse\n```\n\nNous retrouverons à l'index la totalité de la table des matières. Nous pourrons constater que la page qui contenait la table des matières (actuellement `http://localhost/avant-propos.html`) en est maintenant dépourvu.\n\nEn ce qui concerne le dossier `dist`, vous aurez peut-être remarqué que nous avons retiré du webconfig le paramètre `htmlGenerationBeforeResponse` ? C'est pourquoi plus rien n'y est généré. Cependant, avec l'ajout des paramètres `output` et `assetsCopy`, vous pouvez toujours couper le serveur web, lancer la commande,\n\n```\n\u003e node-atlas --generate\n```\n\net constater que tous nos fichiers sont de retour !\n\n\n\n### Changer de page, sans rechargement ###\n\nVous vous êtes peut-être demandé pourquoi nous avons créé des fragments HTML dans des fichiers accessibles côté client (dossier `content/`) ? C'est pour pouvoir en injecter le contenu dynamiquement côté client avec des requêtes AJAX ! Grâce à la fonction `history.pushState`, nous allons changer l'url de la page courante et injecter son nouveau contenu sans rafraîchir la page. Cela signifie donc que :\n\n- Si un robot réclame une page, comme il ne navigue pas par l'interface du site et donc sans JavaScript, il la réclamera toujours avec une requête HTTP et recevra donc une réponse complète avec du HTML prêt à être indexé.\n- Si un visiteur réclame la page, le JavaScript prendra la main et les liens deviendront des actions permettant de rapatrier les fragments correspondant et de mettre à jour la page sans la recharger.\n\nBien sur qui dit demande AJAX dit qu'un simple serveur web devra héberger votre maquette (comme c'est le cas pour [GitHub]). Quand le site sera seulement consulté par le système de fichier, les pages se rechargeront simplement comme c'est le cas actuellement.\n\nPour réaliser cela nous allons ajouter un fichier JavaScript commun côté client :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  ├─ javascripts/\n│  │  └─ common.js\n│  ┊┉\n┊┉\n```\n\npuis l'ajouter dans le pied de page de nos vues :\n\n**views/partials/foot.htm**\n\n```html\n            \u003c!-- Injection du fichier en provenance de `assets/javascripts/common.js` --\u003e\n            \u003cscript src=\"javascripts/common.js\"\u003e\u003c/script\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nNous allons également créer un menu global dans lequel nous allons catégoriser les pages crées depuis le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.fr.md).\n\n**views/partials/navigation.htm**\n\n```html\n            \u003cnav class=\"navigation cmpt\"\u003e\n                \u003cdiv class=\"navigation--inner\"\u003e\n                    \u003cdiv class=\"navigation--home\"\u003e\n                        \u003ca href=\"index.html\" title=\"Accueil\"\u003eAccueil\u003c/a\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"navigation--menu\"\u003e\n                        \u003cul\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"avant-propos.html\"\u003ePrésentation\u003c/a\u003e\n                                \u003cul\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"installation.html\"\u003eInstallation\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"commencer-avec-nodeatlas.html\"\u003eDémarrage rapide\u003c/a\u003e\n                                    \u003c/li\u003e\n                                \u003c/ul\u003e\n                            \u003c/li\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"partie-view-et-template.html\"\u003eView et Template\u003c/a\u003e\n                            \u003c/li\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"partie-controller-et-model.html\"\u003eController et Model\u003c/a\u003e\n                            \u003c/li\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"pour-aller-plus-loin.html\"\u003eRoute et Plus\u003c/a\u003e\n                                \u003cul\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"api-nodeatlas-comme-module-npm.html\"\u003eAPI\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"cli-commandes-de-lancement.html\"\u003eCLI\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"nodeatlas-comme-simple-serveur-web.html\"\u003eSimple Serveur\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"environnement-de-d%C3%A9veloppement.html\"\u003eDéveloppement\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"environnement-de-production.html\"\u003eProduction\u003c/a\u003e\n                                    \u003c/li\u003e\n                                \u003c/ul\u003e\n                            \u003c/li\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"plus-sur-nodeatlas.html\"\u003eEt les autres ?\u003c/a\u003e\n                            \u003c/li\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n```\n\n**views/content.htm**\n\n```html\n\u003c?- include(\"partials/head.htm\") ?\u003e\n\u003c?- include(\"partials/header.htm\") ?\u003e\n\n\u003c!-- Ajout de la navigation globale. --\u003e\n\u003c?- include(\"partials/navigation.htm\") ?\u003e\n\u003c?- include(\"partials/content.htm\") ?\u003e\n\u003c?- include(\"partials/foot.htm\") ?\u003e\n```\n\nNous allons enfin ajouter le contenu du fichier JavaScript commun :\n\n**assets/javascripts/common.js**\n\n```js\n// On récupère tous les liens du menu.\nvar links = document.querySelectorAll(\".navigation a\"),\n\n    // On se créer une fonction « type » pour faire des appels AJAX\n    xhrRequest = function(url, next) {\n\n        // Création d'un objet d'appel AJAX.\n        var request = new XMLHttpRequest();\n\n        // Pour un appel en GET à l'url \u003curl\u003e.\n        request.open(\"GET\", url, true);\n\n        // Envoi de la requête\n        request.send();\n\n        // Si la requête atteind sa cible.\n        request.addEventListener(\"load\", function () {\n\n            // Si la réponse fournit est invalide...\n            if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n\n                // ...on retourne une erreur.\n                return next(new Error(\"We reached our target server, but it returned an error.\"));\n            }\n\n            // Sinon on renvoi la réponse à la callback.\n            next(null, request.responseText);\n        });\n\n        // Si la requête n'obtient pas de réponse ou une mauvaise réponse.\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"There was a connection error of some sort.\"));\n        });\n    };\n\n// Au chargement de la page, tous les liens du menu...\n[].forEach.call(links, function (link) {\n\n    // ...deviennent cliquable...\n    link.addEventListener(\"click\", function (e) {\n\n        // et basé sul l'adresse du lien, on récupère le nom du fichier.\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n\n        // On empèche la page de suivre le lien initial.\n        e.preventDefault();\n\n        // On réclame le fragment nécéssaire à l'affichage de notre nouvelle page.\n        xhrRequest(\"content/\" + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n              return err;\n            }\n\n            // On ajoute une nouvelle page dans l'historique,\n            // et on s'y déplace (paramètre trois)\n            // en laissant l'urn comme information (premier paramètre)\n            // utilisable pour le retour en arrière.\n            history.pushState(urn, null, \"/\" + urn + \".html\");\n\n            // Et on injecte la response dans la page principale.\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\n// À chaque fois que l'on réclamera un retour en arrière (comme le bouton back du navigateur)\nwindow.addEventListener(\"popstate\", function (e) {\n\n    // On consultera l'url passée comme référence pour ramener ce contenu...\n    if (e.state) {\n\n        // ... en AJAX...\n        xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n              return err;\n            }\n\n            // et l'injecter dans la page principale.\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n\n    // Cependant s'il n'y a pas d'état,\n    // c'est que nous somme arrivé à la page\n    // d'origine et que l'on souhaite retourner sur le site\n    // qui avait précédé notre arrivé sur le site.\n    } else {\n        history.back();\n    }\n});\n```\n\nLancez le serveur :\n\n```\n\u003e node-atlas --browse\n```\n\nVous constaterez alors en vous rendant à l'adresse `http://localhost/index.html` que naviguer à travers les pages via votre menu ne recharge plus la page et que, après avoir navigué à travers plusieurs page, le bouton « retour » vous ramène également aux pages précédentes sans rechargement. Vous pourrez réellement vous en assurez dans le panneau « Network » (F12) de votre navigateur en voyant que ce sont bien des requêtes « xhr ».\n\nNous allons maintenant générer la maquette :\n\n```\n\u003e node-atlas --generate\n```\n\nEt en ouvrant le fichier `dist\\index.html` par votre système de fichier, vous vous rendrez compte que les pages ne changent plus. Dans votre console (F12) vous pourrez voir l'erreur suivante (sous Chrome) : « XMLHttpRequest cannot load \u003cfilepath\u003e. ». Cela est normal car il faut un serveur web pour répondre aux requêtes AJAX.\n\nNous allons donc modifier le script pour qu'il ne génère pas d'erreur et aille sur la page souhaitée normalement (en rechargeant la page) si l'AJAX n'est pas géré.\n\n**assets/javascripts/common.js**\n\n```js\nvar links = document.querySelectorAll(\".navigation a\"),\n    xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        // Vérifier que l'objet request peut envoyer une requête AJAX.\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible to use AJAX in file system mode.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n                return next(new Error(\"The server was reached, but with no correct response.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"The server is unreachable.\"));\n        });\n    },\n\n    // Fonction utilisée si les requêtes AJAX ne fonctionnent pas.\n    xhrFallback = function (url) {\n        // On atteint l'url normalement.\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n\n[].forEach.call(links, function (link) {\n    link.addEventListener(\"click\", function (e) {\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n        e.preventDefault();\n        xhrRequest(\"content/\" + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n\n                // On stop la fonction.\n                return xhrFallback(urn);\n            }\n\n            history.pushState(urn, null, \"/\" + urn + \".html\");\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\nwindow.addEventListener(\"popstate\", function (e) {\n    if (e.state) {\n        xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n\n                // On stop la fonction.\n                return xhrFallback(e.state);\n            }\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    } else {\n        history.back();\n    }\n});\n```\n\nÀ présent, en relançant la génération de la maquette, vous pourrez, même par le système de fichier, naviguer entre vos pages qui cette fois se chargeront totalement.\n\n\n\n### Simple Serveur Web ###\n\nSachez que _[NodeAtlas]_ aussi sait faire tourner un simple serveur web pour tester vos maquettes en local tel qu'elles seront lues une fois sur un serveur (dans notre exemple, sur [GitHub]). Il vous suffit de vous positionner dans le dossier `dist/` et de lancer la commande :\n\n```\n\u003e node-atlas --browse index.html\n```\n\nou (si le port 80 est déjà utilisé)\n\n\n```\n\u003e node-atlas --browse index.html --httpPort 3000\n```\n\n\n\n### Génération multilingue ###\n\nNous allons à présent créer la version « internationale » de la documentation. Pour cela nous allons suivre les étapes suivantes :\n\n- Créer un webconfig spécifique à la version internationale.\n- Ramener le [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md) international.\n- Mettre l'accès au [README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md)) dans une variable de webconfig.\n- Mettre les textes de l'applications dans le fichier de variation commun.\n\nIl va être question d'obtenir la version française du site dans `dist` et la version internationale dans le sous-répertoire `dist\\english` ce qui nécessite l'utilisation de la propriété de webconfig `urlRelativeSubPath`.\n\nNotre nouvelle arborescence va donc être la suivante pour `dist` :\n\n```\ndist/\n└─ english/\n```\n\net pour `nodeatlas-website`\n\n```\nnodeatlas-website/\n├─ assets/\n│  ├─ content/\n│  │  └─ english/\n│  └─ javascripts/\n│     └─ common.js\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ navigation.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  ├─ common.json\n│  └─ en\n│     └─ common.json\n├─ webconfig.json\n├─ webconfig.en.json\n├─ README.md\n└─ README.en.md\n```\n\nCréez donc le nouveau dossier `assets/content/english/` pour accueillir les fragments AJAX de la version internationale.\n\nAvec notre nouveau `nodeatlas-website\\README.en.md` [récupérrable ici]([README.md](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/v1.x/README.en.md)) (changez le nom du fichier).\n\nNos deux webconfigs vont être les suivants,\n\npour la version française :\n\n**webconfig.json**\n\n```json\n{\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\net la version internationale :\n\n**webconfig.en.json**\n\n```json\n{\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nNous allons nous servir de `_readme`, `_toc`, et de `_content` dans le code, dans les fichiers suivant :\n\n**controllers/common.js**\n\n```js\nexports.setModules = function () {\n    var NA = this;\n\n    NA.modules.marked = require(\"marked\");\n};\n\nexports.setRoutes = function (next) {\n    var NA = this,\n        fs = NA.modules.fs,\n        jsdom =  NA.modules.jsdom,\n        async = NA.modules.async,\n        marked = NA.modules.marked,\n        route = NA.webconfig.routes;\n\n    function toUrl(text) {\n        return text.toLowerCase().replace(/'| |\\(|\\)|\\/|\\!|\\?|,|\\\u0026|\\;|\\[|\\]|\\%/g, \"-\").replace(/-+/g, \"-\").replace(/^-/g, \"\").replace(/-$/g, \"\");\n    }\n\n    // On remplace le « README.md » par sa valeur dans le webconfig.\n    fs.readFile(NA.webconfig._readme, \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        var html = marked(content),\n            dom = new jsdom.JSDOM(html),\n            allRoutes = [],\n            menu,\n\n            // On remplace « table des matières » par sa valeur dans le webconfig.\n            key = NA.webconfig._toc;\n\n        Array.prototype.forEach.call(dom.window.document.querySelectorAll('h2, h3'), function (title) {\n            title.setAttribute(\"id\", toUrl(title.textContent));\n        });\n\n        Array.prototype.forEach.call(dom.window.document.querySelectorAll('h3[id=\"' + key + '\"]'), function (title) {\n            var toc = title.nextElementSibling;\n\n            Array.prototype.forEach.call(toc.children, function (sublink) {\n                var subtitle = sublink.children[0],\n                    url = encodeURIComponent(toUrl(subtitle.textContent)) + \".html\";\n\n                subtitle.setAttribute(\"href\", url);\n\n                Array.prototype.forEach.call(sublink.querySelectorAll('li'), function (sublink) {\n                    var subtitle = sublink.children[0];\n\n                    subtitle.setAttribute(\"href\", url + \"#\" + encodeURIComponent(toUrl(subtitle.textContent)));\n\n                    if (toUrl(subtitle.textContent) === key) {\n                        sublink.parentNode.removeChild(sublink);\n                    }\n                });\n            });\n\n            menu = function (next) {\n\n                // On remplace « assets/content/ » par sa valeur dans le webconfig.\n                fs.writeFile(\"assets/\" + NA.webconfig._content + \"index.htm\", title.outerHTML + toc.outerHTML, function () {\n                    toc.parentNode.removeChild(toc);\n                    title.parentNode.removeChild(title);\n\n                    next();\n                });\n            };\n        });\n\n        function nextUntil(title, selector) {\n            var htmlElement = title,\n                nextUntil = [],\n                until = true;\n            while (htmlElement = htmlElement.nextElementSibling) {\n                (until \u0026\u0026 htmlElement \u0026\u0026 !htmlElement.matches(selector)) ? nextUntil.push(htmlElement) : until = false;\n            }\n            return nextUntil;\n        }\n\n        Array.prototype.forEach.call(dom.window.document.getElementsByTagName('h2'), function (title) {\n            allRoutes.push(function (nextRoute) {\n                var content = nextUntil(title, \"h2\");\n\n                // On remplace « assets/content/ » par sa valeur dans le webconfig.\n                fs.writeFile(\"assets/\" + NA.webconfig._content + encodeURIComponent(title.getAttribute(\"id\")) + \".htm\", title.outerHTML + content.map(function (element) { return element.outerHTML; }).join(''), function () {\n                    route[\"/\" + encodeURIComponent(title.getAttribute(\"id\")) + \".html\"] = {\n                        \"view\": \"content.htm\",\n                        \"controller\": \"content.js\"\n                    };\n\n                    nextRoute();\n                });\n            });\n        });\n\n        menu(function () {\n            async.parallel(allRoutes, function() {\n                next();\n            });\n        });\n    });\n};\n```\n\n**controllers/content.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // On remplace « assets/content/ » par sa valeur dans le webconfig.\n    fs.readFile(\"assets/\" + NA.webconfig._content + locals.route.replace(\".html\", \".htm\"), \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\n**controllers/index.js**\n\n```js\nexports.changeVariations = function (next, locals) {\n    var NA = this,\n        fs = NA.modules.fs;\n\n    // On remplace « assets/content/ » par sa valeur dans le webconfig.\n    fs.readFile(\"assets/\" + NA.webconfig._content + \"index.htm\", \"utf-8\", function (err, content) {\n        if (err) {\n            return next();\n        }\n\n        locals.common.content = content;\n        next();\n    });\n};\n```\n\npuis nous allons augmenter le fichier de variation original :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": \"NodeAtlas\",\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\net créer sa version internationale :\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": \"NodeAtlas\",\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\npour pouvoir changer les fichiers de vue partielle suivants :\n\n**views/partials/head.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eNodeAtlas\u003c/title\u003e\n\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\" /\u003e\n\n        \u003cmeta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" /\u003e\n        \u003cmeta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" /\u003e\n\n        \u003cmeta name=\"robots\" content=\"index, follow\" /\u003e\n\n        \u003c!--[if IE]\u003e\u003cmeta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /\u003e\u003c![endif]--\u003e\n        \u003c!--[if !IE]\u003e\u003c!--\u003e\u003cmeta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /\u003e\u003c!--\u003c![endif]--\u003e\n    \u003c/head\u003e\n\n    \u003c!-- On place dans `data-content` le chemin vers les fragments HTML. --\u003e\n    \u003c!-- On place dans `data-subpath` le chemin vers le sous répertoire de la version internationale. --\u003e\n    \u003cbody data-content=\"\u003c?= webconfig._content ?\u003e\" data-subpath=\"\u003c?= webconfig.urlRelativeSubPath ?\u003e\"\u003e\n        \u003cdiv class=\"layout\"\u003e\n            \u003cnoscript class=\"no-js cmpt\"\u003e\n                \u003cdiv class=\"no-js--inner\"\u003e\n\n                    \u003c!-- Le message annonçant l'activation du JS est multilangue. --\u003e\n                    \u003cp\u003e\u003c?- common.noJs ?\u003e\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/noscript\u003e\n```\n\n**views/partials/header.htm**\n\n```html\n            \u003cheader class=\"header cmpt\"\u003e\n                \u003cdiv class=\"header--inner\"\u003e\n                    \u003cdiv class=\"header--title\"\u003e\n\n                        \u003c!-- Le titre du site. --\u003e\n                        \u003ch1\u003e\u003c?- common.title ?\u003e\u003c/h1\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/header\u003e\n```\n\n**views/partials/navigation.htm**\n\n```html\n            \u003cnav class=\"navigation cmpt\"\u003e\n                \u003cdiv class=\"navigation--inner\"\u003e\n                    \u003cdiv class=\"navigation--lang\"\u003e\n                        \u003ca href=\"\u003c?= common.lang.url ?\u003e\" title=\"\u003c?= common.lang.title ?\u003e\"\u003e\u003c?- common.lang.title ?\u003e\u003c/a\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"navigation--home\"\u003e\n                        \u003ca href=\"\u003c?= common.home.url ?\u003e\" title=\"\u003c?= common.home.title ?\u003e\"\u003e\u003c?- common.home.title ?\u003e\u003c/a\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"navigation--menu\"\u003e\n                        \u003cul\u003e\n                            \u003c? for (var i = 0; i \u003c common.menu.length; i++) { ?\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"\u003c?= common.menu[i].url ?\u003e\" title=\"\u003c?= common.menu[i].title ?\u003e\"\u003e\u003c?- common.menu[i].title ?\u003e\u003c/a\u003e\n                                \u003c? if (common.menu[i].menu) { ?\u003e\n                                \u003cul\u003e\n                                    \u003c? for (var j = 0; j \u003c common.menu[i].menu.length; j++) { ?\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"\u003c?= common.menu[i].menu[j].url ?\u003e\" title=\"\u003c?= common.menu[i].menu[j].title ?\u003e\"\u003e\u003c?- common.menu[i].menu[j].title ?\u003e\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003c? } ?\u003e\n                                \u003c/ul\u003e\n                                \u003c? } ?\u003e\n                            \u003c/li\u003e\n                            \u003c? } ?\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n```\n\nNous pouvons à présent grâce à `data-content` dans le `\u003cbody\u003e` choisir les fragments français ou internationaux dans le JavaScript client grâce à la modification suivante :\n\n**assets/javascripts/common.js**\n\n```javascript\n// On retire le lien pour changer de version (.navigation--lang)\n// En sélectionnant que la home et le menu.\nvar links = document.querySelectorAll(\".navigation--home a, .navigation--menu a\"),\n\n    // On va chercher le chemin correcte jusqu'au fichier.\n    fragmentPath = document.body.getAttribute(\"data-content\"),\n\n    // On récupère le sous répertoire si celui-ci existe (version anglaise).\n    urlRelativeSubPath = document.body.getAttribute(\"data-subpath\"),\n    xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible d'utiliser AJAX par simple ouverture de fichier.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n                return next(new Error(\"Le serveur a été atteind mais à renvoyé une erreur.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"Le serveur n'a pas pu être atteind.\"));\n        });\n    },\n    xhrFallback = function (url) {\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n\n[].forEach.call(links, function (link) {\n    link.addEventListener(\"click\", function (e) {\n        var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n        e.preventDefault();\n\n        // Et on injecte le chemin pour les liens.\n        xhrRequest(fragmentPath + encodeURIComponent(urn) + \".htm\", function (err, response) {\n            if (err) {\n                return xhrFallback(urn);\n            }\n\n            // Et on injecte le sous répertoire pour les liens.\n            history.pushState(urn, null, urlRelativeSubPath + \"/\" + urn + \".html\");\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    });\n});\n\nwindow.addEventListener(\"popstate\", function (e) {\n    if (e.state) {\n\n        // Et on injecte le chemin pour les liens.\n        xhrRequest(fragmentPath + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n            if (err) {\n                return xhrFallback(e.state);\n            }\n\n            document.getElementsByClassName(\"content--inner\")[0].innerHTML = response;\n        });\n    } else {\n        history.back();\n    }\n});\n```\n\nNous pouvons à présent faire tourner la version française avec la commande :\n\n```\n\u003e node-atlas --browse\n```\n\nou la version internationale avec la commande :\n\n```\n\u003e node-atlas --browse --webconfig webconfig.en.json\n```\n\nVous constaterez que le lien pour changer de version pointe sur des pages inexistantes puisque chaque version ne fait tourner que sa langue. Cependant, en générant les fichiers français avec :\n\n```\n\u003e node-atlas --generate\n```\n\npuis les fichiers anglais avec :\n\n```\n\u003e node-atlas --generate --webconfig webconfig.en.json\n```\n\nvous pourrez, en vous rendant dans `dist` simuler un serveur web avec\n\n```\n\u003e node-atlas --browse index.html\n```\n\net constater que toutes les versions sont accessibles derrière tous les liens.\n\nAprès avoir mis en place de quoi maintenir et générer notre documentation à partir du README.md du projet, il est temps de nous attaquer à la partie visuelle de ce site. Mais arrêtons nous un instant pour automatiser le processus de génération des sites !\n\n\n\n### Génération avec l'API NodeAtlas ###\n\nNous venons de voir qu'il y a plusieurs étapes pour générer notre documentation. Il faut :\n\n- Générer la version française.\n- Générer la version internationale.\n- Lancer le site généré en localhost pour vérification.\n\nNous allons créer un fichier JavaScript dans le dossier `nodeatlas-website` qui va nous permettre de faire les trois en une seule fois. Le voici :\n\n**generate-website.js**\n\n```js\n// On récupère l'API NodeAtlas.\nvar nodeAtlas = require(\"node-atlas\"),\n\n    // On créé une instance pour générer la version française.\n    versionFrench = new nodeAtlas(),\n\n    // On créé une instance pour générer la version internationale.\n    versionEnglish = new nodeAtlas(),\n\n    // On créé une instance pour faire tourner le site générer.\n    versionTest = new nodeAtlas();\n\n// On paramètre la version française.\nversionFrench.init({\n    \"generate\": true\n\n// On explique ce qu'il ce passe après la création de la version française.\n}).generated(function() {\n\n    // On paramètre la version internationale.\n    versionEnglish.init({\n        \"generate\": true,\n        \"webconfig\": \"webconfig.en.json\"\n\n    // On explique ce qu'il ce passe après la création de la version internationale.\n    }).generated(function() {\n\n        // On paramètre la version de test.\n        versionTest.init({\n            \"browse\": \"index.html\",\n            \"directory\": \"../dist/\"\n\n        // On lance le site de Test.\n        }).start();\n\n    // On lance la génération internationale.\n    }).start();\n\n// On lance la génération française.\n}).start();\n```\n\nEt nous lançons la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n\u003e node generate-website.js\n```\n\nNous faisons tourner la version serverless de nos fichiers avec un simple serveur web équivalent de ce que donnera le site une fois sur [GitHub].\n\n*Note : sous Windows, en renommant `generate-website.js` en `generate-website.na` et en expliquant que les fichiers `.na` s'ouvrent avec `node.exe` on peut se passer de la commande précédente et simplement double cliquer sur `generate-website.na` pour lancer la procédure !*\n\n\n\n## Travailler avec des fichiers Less et Stylus ##\n\nNous allons à présent mettre en place tous les fichiers client qui vont permettre d'habiller notre documentation et de permettre à l'utilisateur d'intéragir avec. Nous allons suivre l'[architecture et les normes indiqués ici](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/) pour cela. Nous parlons donc ici des fichiers CSS ainsi que des fichiers JavaScript.\n\n\n\n### Mise en place des CSS et des JS ###\n\nJusqu'à présent, nous avons travaillé avec le fichier `javascripts/common.js`. Nous allons ajouter à cela, un fichier JavaScript par composant effectif dans le HTML. Nous allons également créer un équivalent de chaque composant en CSS et un fichier commun `stylesheets/common.css`. Nous obtenons donc la nouvelle arborescence suivante :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  ├─ cmpt.header.js\n│  │  ├─ cmpt.navigation.js\n│  │  └─ cmpt.content.js\n│  └─ stylesheets/\n│     ├─ common.css\n│     ├─ cmpt.header.css\n│     ├─ cmpt.navigation.css\n│     └─ cmpt.content.css\n┊┉\n```\n\nNous allons inclure ces fichiers en pied de la balise `head` pour les CSS et en pied de `body` pour les JS.\n\n**views/partials/head.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eNodeAtlas\u003c/title\u003e\n\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\" /\u003e\n\n        \u003cmeta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" /\u003e\n        \u003cmeta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" /\u003e\n\n        \u003cmeta name=\"robots\" content=\"index, follow\" /\u003e\n\n        \u003c!--[if IE]\u003e\u003cmeta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /\u003e\u003c![endif]--\u003e\n        \u003c!--[if !IE]\u003e\u003c!--\u003e\u003cmeta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /\u003e\u003c!--\u003c![endif]--\u003e\n\n        \u003c!-- Inclusion des fichiers CSS --\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/common.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.header.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.navigation.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.content.css\"\u003e\n    \u003c/head\u003e\n    \u003cbody data-content=\"\u003c?= webconfig._content ?\u003e\" data-subpath=\"\u003c?= webconfig.urlRelativeSubPath ?\u003e\"\u003e\n        \u003cdiv class=\"layout\"\u003e\n            \u003cnoscript class=\"no-js cmpt\"\u003e\n                \u003cdiv class=\"no-js--inner\"\u003e\n                    \u003cp\u003e\u003c?- common.noJs ?\u003e\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/noscript\u003e\n```\n\n**views/partials/foot.htm**\n\n```html\n            \u003c!-- Inclusion des fichiers JS --\u003e\n            \u003cscript src=\"javascripts/cmpt.header.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/cmpt.navigation.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/cmpt.content.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/common.js\"\u003e\u003c/script\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nVoici un contenu provisoire que nous allons attribuer à chacun des fichiers CSS :\n\n**assets/stylesheets/common.css**\n\n```css\n* {\n    font-weight: bold;\n}\n```\n\n**assets/stylesheets/cmpt.header.css**\n\n```css\n.header {\n    color: red;\n}\n```\n\n**assets/stylesheets/cmpt.navigation.css**\n\n```css\n.navigation,\n.navigation a {\n    color: green;\n}\n```\n\n**assets/stylesheets/cmpt.content.css**\n\n```css\n.content,\n.content a {\n    color: orange;\n}\n```\n\nainsi que le contenu des fichiers JavaScript suivant :\n\n**assets/javascripts/common.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\n// Un namespace globale au site que l'on nomme `website`.\nvar website = window.website || {};\n\n// Un namespace réservé aux composants que l'on nomme `website.component`.\nwebsite.component = website.component || {};\n\n// On encapsule les mécanismes des fonctions globales\n// pour éviter la collision de variable.\n// `publics` est ici l'équivalent de `website`.\n(function (publics) {\n\n    // On fait de `xhrRequest` une fonction globale `website.xhrRequest`.\n    publics.xhrRequest = function(url, next) {\n        var request = new XMLHttpRequest();\n\n        if (location.protocol !== \"file:\") {\n            request.open(\"GET\", url, true);\n            request.send();\n        } else {\n            return next(new Error(\"Impossible to use AJAX in file system mode.\"));\n        }\n\n        request.addEventListener(\"load\", function () {\n            if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n                return next(new Error(\"The server was reached, but with no correct response.\"));\n            }\n            next(null, request.responseText);\n        });\n\n        request.addEventListener(\"error\", function () {\n            return next(new Error(\"The server is unreachable.\"));\n        });\n    };\n\n    // On fait de `xhrFallback` une fonction globale `website.xhrFallback`.\n    publics.xhrFallback = function (url) {\n        location.href = encodeURIComponent(url) + \".html\";\n    };\n\n    // On créer une fonction d'initialisation pour tout le site.\n    // Qui va charger tous les composants.\n    publics.init = function () {\n        var links = document.querySelectorAll(\".navigation--home a, .navigation--menu a\"),\n            fragmentPath = document.body.getAttribute(\"data-content\"),\n            urlRelativeSubPath = document.body.getAttribute(\"data-subpath\");\n\n        // On charge chaque comportement de composant.\n        (new website.component.Header()).init();\n        (new website.component.Navigation()).init();\n        (new website.component.Content()).init(links, fragmentPath, urlRelativeSubPath);\n    };\n\n// On passe l'objet website pour l'alimenter avec des fonctions globales.\n}(website));\n\nwebsite.init();\n```\n\n**assets/javascripts/cmpt.header.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Header pour les composants `.header`.\nwebsite.component.Header = function () {\n    var publics = this;\n\n    publics.name = \"header\";\n\n    publics.init = function () {};\n};\n```\n\n**assets/javascripts/cmpt.navigation.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Navigation pour les composants `.navigation`.\nwebsite.component.Navigation = function () {\n    var publics = this;\n\n    publics.name = \"navigation\";\n\n    publics.init = function () {};\n};\n```\n\n**assets/javascripts/cmpt.content.js**\n\n```js\n// On se créer (ou surcharge) les namespaces (existant ou non).\nvar website = window.website || {};\nwebsite.component = website.component || {};\n\n// On créer un constructeur Content pour les composants `.content`.\nwebsite.component.Content = function () {\n    var publics = this;\n\n    publics.name = \"content\";\n\n    // On créer une fonction d'instance `updateContentByClick`\n    // en passant en paramètre le nécessaire pour qu'elle fonctionne.\n    publics.updateContentByClick = function (links, fragmentPath, urlRelativeSubPath) {\n        [].forEach.call(links, function (link) {\n            link.addEventListener(\"click\", function (e) {\n                var urn = link.getAttribute(\"href\").replace(\".html\", \"\");\n                e.preventDefault();\n\n                website.xhrRequest(fragmentPath + encodeURIComponent(urn) + \".htm\", function (err, response) {\n                    if (err) {\n                        return website.xhrFallback(urn);\n                    }\n\n                    history.pushState(urn, null, urlRelativeSubPath + \"/\" + urn + \".html\");\n\n                    // On se sert d'un nom de classe dynamique et publique pour le changer en cas de besoin.\n                    document.getElementsByClassName(publics.name + \"--inner\")[0].innerHTML = response;\n                });\n            });\n        });\n    };\n\n    // On créer une fonction d'instance `updateContentByHistoryBack`.\n    publics.updateContentByHistoryBack = function () {\n        window.addEventListener(\"popstate\", function (e) {\n            if (e.state) {\n                website.xhrRequest(\"content/\" + encodeURIComponent(e.state) + \".htm\", function (err, response) {\n                    if (err) {\n                        return website.xhrFallback(e.state);\n                    }\n\n                    // On se sert d'un nom de classe dynamique et publique pour le changer en cas de besoin.\n                    document.getElementsByClassName(publics.name + \"--inner\")[0].innerHTML = response;\n                });\n            } else {\n                history.back();\n            }\n        });\n    };\n\n    // On créer une fonction d'initialisation pour la classe, un raccourci.\n    // Et on l'alimente et execute toutes les fonctions utiles.\n    publics.init = function (links, fragmentPath, urlRelativeSubPath) {\n        publics.updateContentByClick(links, fragmentPath, urlRelativeSubPath);\n        publics.updateContentByHistoryBack();\n    };\n};\n```\n\nPuis, en faisant tourner le projet français depuis `nodeatlas-website` :\n\n```\n\u003e node-atlas --browse index.html\n```\n\nNous constatons dans l'onglet « Network » (F12) que les fichiers en questions sont bien chargés (8 requêtes plus celle de la page en elle-même).\n\n![Tous les fichiers chargés](media/images/upload/network-files.jpg)\n\n\n\n### Preprocesseur CSS Stylus transparent ###\n\nNous allons à présent expliquer comment utiliser les préprocesseurs avec _[NodeAtlas]_. Le fonctionnement avec [Less](http://lesscss.org/) est exactement le même mais nous allons ici voir cela avec [Stylus](http://stylus-lang.com/).\n\nIl va être question ici d'activer Stylus dans nos webconfigs comme ceci :\n\n**webconfig.json**\n\n```json\n{\n    \"stylus\": true,\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\net comme cela :\n\n**webconfig.en.json**\n\n```json\n{\n    \"stylus\": true,\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEn fait avec _[NodeAtlas]_, l'utilisation de Less ou Stylus est totalement transparente pendant la phase de développement. Il suffit de renommer tous vos `.css` en `.styl` (ou `.less` pour Less) et le moteur se chargera, à chaque fois qu'un fichier `.css` sera demander, de compiler sa version `.styl` en CSS et d'en renvoyer son résultat `.css`. Cela signifie que du point de vu de vos fichiers HTML, c'est toujours des `.css` que vous réclamez.\n\nNous allons changer tous nos fichiers CSS en fichier Stylus (avec la syntaxe qui va bien). Nous allons également pour l'occasion créer un fichier de variables que nous allons pouvoir inclure dans chaque fichier pour profiter de fonctions communes. Cela nous donne maintenant :\n\n```\nnodeatlas-website/\n┊┉\n├─ assets/\n│  ┊┉\n│  └─ stylesheets/\n│     ├─ variables.styl\n│     ├─ common.styl\n│     ├─ cmpt.header.styl\n│     ├─ cmpt.navigation.styl\n│     └─ cmpt.content.styl\n┊┉\n```\n\navec les contenus provisoires suivants :\n\n**assets/stylesheets/variables.styl**\n\n```css\nmake-color(my-color)\n    color my-color;\n    border 1px solid my-color\n    padding: 10px;\n    margin: 10px\n    -webkit-border-radius 4px\n            border-radius 4px\n```\n\n**assets/stylesheets/common.styl**\n\n```css\n@import \"variables\"\n\n*\n    font-weight bold\n```\n\n**assets/stylesheets/cmpt.header.styl**\n\n```css\n@import \"variables\"\n\n.header\n    make-color red\n```\n\n**assets/stylesheets/cmpt.navigation.styl**\n\n```css\n@import \"variables\"\n\n.navigation\n    make-color green\n\n    a\n        color green\n```\n\n**assets/stylesheets/cmpt.content.styl**\n\n```css\n@import \"variables\"\n\n.content\n    make-color orange\n\n    a\n        color orange\n```\n\nPuis, en faisant tourner le projet français depuis `nodeatlas-website` :\n\n```\n\u003e node-atlas --browse index.html\n```\n\nvous pourrez ainsi constater les CSS générés dans votre dossier `assets/stylesheets/`.\n\n\n\n### Preprocesseur CSS Stylus à la Génération ###\n\nLa transparence nécessite que le fichier `.css` soit réclamé en HTTP pour que le serveur le transforme. Cependant, pour mettre à jour vos fichiers Stylus lors de l'appel de `--generate` (sans donc faire démarrer le serveur), il va falloir référencer les fichiers que vous souhaitez compiler en CSS dans le webconfig.\n\nAinsi en changeant nos deux webconfigs comme suit, cela sera possible lors de l'appel de notre fichier `generate-website.js` par exemple.\n\n**webconfig.json**\n\n```json\n{\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEffacer vos fichiers `.css` de `assets/stylesheets/` et lancez la commande :\n\n```\n\u003e node generate-website.js\n```\n\nVous verrez que les fichiers de travail dans `nodeatlas-website` contiennent bien les fichiers `.css` compilés à partir des `.styl` et que dans `dist` les fichiers CSS sont également bien présent. Un jeu d'enfant !\n\n\n\n### Et Less ? ###\n\nVous pouvez faire exactement la même chose avec Less. Il vous suffit de changer toutes les appelations `.styl` en `.less` et `stylus` en `less`. Bien entendu, la syntaxe des fichiers sera donc celle de Less.\n\nEt en bonus, les deux peuvent fonctionner ensemble ! Le moteur cherche des `.styl` et des `.less` en même temps.\n\n\n\n\n\n## Minifier, Obfusquer et Optimiser les CSS, JS et Images ##\n\nPour des soucis de performance, bien que nous allions travailler dans la version originale de chaque fichier, la sortie produite devra être optimisée et par conséquent illisible. Tout ce processus habituellement fait à la main avec divers outils ou encore automatisé avec un coup de pousse, par exemple, de [gulp](http://gulpjs.com/) est automatique dans _[NodeAtlas]_ avec l'aide du webconfig.\n\n\n\n### Minifier les fichiers CSS ###\n\nDans un premier temps, nous allons minifier et placer dans un seul fichier le contenu CSS de notre site. Nous allons donc créer un Bundle spécifique aux Stylesheets en donnant à une clé un tableau d'élément. La clé représente le chemin de sortie et chaque élément représente un fichier d'entré :\n\n**webconfig.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nEnfin, grâce à `cssBundlingBeforeResponse`, nous allons obtenir des fichiers CSS à jour et compilé après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version minifiée des CSS plutôt que les fichiers d'origines :\n\n**views/partials/head.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eNodeAtlas\u003c/title\u003e\n\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\" /\u003e\n\n        \u003cmeta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" /\u003e\n        \u003cmeta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" /\u003e\n\n        \u003cmeta name=\"robots\" content=\"index, follow\" /\u003e\n\n        \u003c!--[if IE]\u003e\u003cmeta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /\u003e\u003c![endif]--\u003e\n        \u003c!--[if !IE]\u003e\u003c!--\u003e\u003cmeta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /\u003e\u003c!--\u003c![endif]--\u003e\n\n        \u003c!-- Inclusion du fichiers minifié de tous les CSS. --\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/common.min.css\"\u003e\n    \u003c/head\u003e\n    \u003cbody data-content=\"\u003c?= webconfig._content ?\u003e\" data-subpath=\"\u003c?= webconfig.urlRelativeSubPath ?\u003e\"\u003e\n        \u003cdiv class=\"layout\"\u003e\n            \u003cnoscript class=\"no-js cmpt\"\u003e\n                \u003cdiv class=\"no-js--inner\"\u003e\n                    \u003cp\u003e\u003c?- common.noJs ?\u003e\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/noscript\u003e\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n\u003e node-atlas --browse index.html\n```\n\net constatons que tout est en order : compilation des Stylus vers les CSS, minification des `.css` vers le `.min.css` avant chaque affichage de page.\n\nLa génération avec\n\n```\n\u003e node generate-website.js\n```\n\nfonctionne également.\n\n\n\n### Offusquer les JavaScript ###\n\nAttardons nous à présent sur les JavaScript. Nous allons offusquer et placer dans un seul fichier le contenu JavaScript de notre site. Nous allons donc ajouter un Bundle spécifique aux JavaScript en donnant à une clé un tableau d'élément. La clé représente le chemin de sortie et chaque élément représente un fichier d'entré :\n\n**webconfig.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nComme précédemment, grâce à `jsBundlingBeforeResponse`, nous allons obtenir des fichiers JavaScript à jour et compilés après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version minifiée des JavaScript plutôt que les fichiers d'origines :\n\n**views/partials/foot.htm**\n\n```html\n            \u003c!-- Inclusion du fichiers minifié de tous les JavaScript. --\u003e\n            \u003cscript src=\"javascripts/common.min.js\"\u003e\u003c/script\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n\u003e node-atlas --browse index.html\n```\n\net constatons que l'offuscation des `.js` vers le `.min.js` avant chaque affichage de page.\n\nLa génération avec\n\n```\n\u003e node generate-website.js\n```\n\nfonctionne tout autant.\n\n\n\n### Optimiser vos Images ###\n\nPassons maintenant à l'optimisation d'image. _[NodeAtlas]_ propose une optimisation sans perte pour obtenir les images les moins lourdes en conservant une qualité égale. Vous pourrez à souhait utiliser d'autre module npm pour faire bien plus.\n\nDans un premier temps, nous allons [ajouter l'image suivante au projet](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/media/images/ex-logo-node-atlas.png) et vous pourrez [la télécharger ici](https://raw.githubusercontent.com/Haeresis/NodeAtlas/gh-pages/media/images/ex-logo-node-atlas.png).\n\nCe qui nous donne la nouvelle arborescence complète suivante :\n\n```\ndist/\n└─ english/\nnodeatlas-website/\n├─ assets/\n│  ├─ media/\n│  │  └─ images/\n│  │     └─ ex-logo-node-atlas.png\n│  ├─ content/\n│  │  └─ english/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  ├─ cmpt.header.js\n│  │  ├─ cmpt.navigation.js\n│  │  └─ cmpt.content.js\n│  └─ stylesheets/\n│     ├─ common.css\n│     ├─ cmpt.header.css\n│     ├─ cmpt.navigation.css\n│     └─ cmpt.content.css\n├─ controllers/\n│  ├─ common.js\n│  ├─ content.js\n│  └─ index.js\n├─ views/\n│  ├─ content.htm\n│  └─ partials/\n│     ├─ content.htm\n│     ├─ head.htm\n│     ├─ navigation.htm\n│     ├─ header.htm\n│     └─ foot.htm\n├─ variations/\n│  └─ common.json\n│     └─ en\n│        └─ common.json\n├─ webconfig.json\n├─ webconfig.en.json\n├─ README.md\n└─ README.en.md\n```\n\net les nouveaux fichiers de variations et vues suivants :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\n**views/partials/header.htm**\n\n```html\n            \u003cheader class=\"header cmpt\"\u003e\n                \u003cdiv class=\"header--inner\"\u003e\n                    \u003cdiv class=\"header--title\"\u003e\n\n                        \u003c!-- Remplacement du texte par l'image. --\u003e\n                        \u003ch1\u003e\u003cimg src=\"\u003c?= common.title.src ?\u003e\" alt=\"\u003c?= common.title.alt ?\u003e\"\u003e\u003c/h1\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/header\u003e\n```\n\nOptimisons à présent notre image `media/images/ex-logo-node-atlas.png` :\n\n**webconfig.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": {\n        \"images\": {\n            \"media/images/ex-logo-node-atlas.png\": \"media/images/min/\"\n        }\n    },\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": {\n        \"images\": {\n            \"media/images/ex-logo-node-atlas.png\": \"media/images/min/\"\n        }\n    },\n    \"bundles\": {\n        \"stylesheets\": {\n            \"stylesheets/common.min.css\": [\n                \"stylesheets/common.css\",\n                \"stylesheets/cmpt.header.css\",\n                \"stylesheets/cmpt.navigation.css\",\n                \"stylesheets/cmpt.content.css\"\n            ]\n        },\n        \"javascripts\": {\n            \"javascripts/common.min.js\": [\n                \"javascripts/cmpt.header.js\",\n                \"javascripts/cmpt.navigation.js\",\n                \"javascripts/cmpt.content.js\",\n                \"javascripts/common.js\"\n            ]\n        }\n    },\n    \"stylus\": {\n        \"files\": [\n            \"stylesheets/common.styl\",\n            \"stylesheets/cmpt.header.styl\",\n            \"stylesheets/cmpt.navigation.styl\",\n            \"stylesheets/cmpt.content.styl\"\n        ]\n    },\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": {\n        \"/index.html\": {\n            \"view\": \"content.htm\",\n            \"controller\": \"index.js\"\n        }\n    },\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nComme précédemment, grâce à `imgOptimizationsBeforeResponse`, nous allons obtenir des images optimisées après chaque chargement de page. Il ne nous reste donc plus qu'à demander la version optimisées des images plutôt que les images d'origines :\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/min/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Contenu pour la documentation.\",\n    \"noJs\": \"Le JavaScript n'est pas activé.\",\n    \"home\": {\n        \"title\": \"Accueil\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"English\",\n        \"url\": \"english/index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Présentation\",\n        \"url\": \"avant-propos.html\",\n        \"menu\": [{\n            \"title\": \"Installation\",\n            \"url\": \"installation.html\"\n        }, {\n            \"title\": \"Démarrage rapide\",\n            \"url\": \"commencer-avec-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View et Template\",\n        \"url\": \"partie-view-et-template.html\"\n    }, {\n        \"title\": \"Controller et Model\",\n        \"url\": \"partie-controller-et-model.html\"\n    }, {\n        \"title\": \"Route et Plus\",\n        \"url\": \"pour-aller-plus-loin.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-comme-module-npm.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-commandes-de-lancement.html\"\n        }, {\n            \"title\": \"Simple Serveur\",\n            \"url\": \"nodeatlas-comme-simple-serveur-web.html\"\n        }, {\n            \"title\": \"Développement\",\n            \"url\": \"environnement-de-d%C3%A9veloppement.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"environnement-de-production.html\"\n        }]\n    }, {\n        \"title\": \"Et les autres ?\",\n        \"url\": \"plus-sur-nodeatlas.html\"\n    }]\n}\n```\n\n**variations/en/common.json**\n\n```json\n{\n    \"title\": {\n        \"alt\": \"NodeAtlas\",\n        \"src\": \"media/images/min/ex-logo-node-atlas.png\"\n    },\n    \"content\": \"Content for documentation.\",\n    \"noJs\": \"No JavaScript enabled.\",\n    \"home\": {\n        \"title\": \"Home\",\n        \"url\": \"index.html\"\n    },\n    \"lang\": {\n        \"title\": \"Français\",\n        \"url\": \"../index.html\"\n    },\n    \"menu\": [{\n        \"title\": \"Overview\",\n        \"url\": \"overview.html\",\n        \"menu\": [{\n            \"title\": \"Installing\",\n            \"url\": \"installing.html\"\n        }, {\n            \"title\": \"Get Started\",\n            \"url\": \"start-with-nodeatlas.html\"\n        }]\n    }, {\n        \"title\": \"View and Template\",\n        \"url\": \"view-and-template-part.html\"\n    }, {\n        \"title\": \"Controller and Model\",\n        \"url\": \"controller-and-model-part.html\"\n    }, {\n        \"title\": \"Route and More\",\n        \"url\": \"more-features.html\",\n        \"menu\": [{\n            \"title\": \"API\",\n            \"url\": \"api-nodeatlas-as-npm-module.html\"\n        }, {\n            \"title\": \"CLI\",\n            \"url\": \"cli-running-commands.html\"\n        }, {\n            \"title\": \"Simple Server\",\n            \"url\": \"nodeatlas-as-a-simple-web-server.html\"\n        }, {\n            \"title\": \"Development\",\n            \"url\": \"development-environment.html\"\n        }, {\n            \"title\": \"Production\",\n            \"url\": \"production-environment.html\"\n        }]\n    }, {\n        \"title\": \"And others?\",\n        \"url\": \"more-about-nodeatlas.html\"\n    }]\n}\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n\u003e node-atlas --browse index.html\n```\n\net constatons que l'optimisation des `media/images` vers le `media/images/min/` avant chaque affichage de page.\n\nLa génération avec\n\n```\n\u003e node generate-website.js\n```\n\nfonctionne tout autant.\n\n\n\n### Webconfig avec fichiers partagés ###\n\nCe qui est génant avec nos précédents exemples, c'est que pour quelques valeurs différentes, nous devons maintenir deux webconfigs avec énormément d'options. Nous allons voir ici comment simplement déporter les configurations dans des fichiers différents afin de ne pas avoir de redondance de configuration. Ainsi nos deux webconfigs `webconfig.json` et `webconfig.en.json` deviennent :\n\n**webconfig.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"imgOptimizationsBeforeResponse\": true,\n    \"cssBundlingBeforeResponse\": true,\n    \"jsBundlingBeforeResponse\": true,\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\"\n}\n```\n\nAvec les nouveaux fichiers suivants :\n\n**optimizations.json**\n\n```\n{\n    \"images\": {\n        \"media/images/logo-node-atlas.png\": \"media/images/min/\"\n    }\n}\n```\n\n**bundles.json**\n\n```\n{\n    \"stylesheets\": {\n        \"stylesheets/common.min.css\": [\n            \"stylesheets/common.css\",\n            \"stylesheets/cmpt.header.css\",\n            \"stylesheets/cmpt.navigation.css\",\n            \"stylesheets/cmpt.content.css\"\n        ]\n    },\n    \"javascripts\": {\n        \"javascripts/common.min.js\": [\n            \"javascripts/cmpt.header.js\",\n            \"javascripts/cmpt.navigation.js\",\n            \"javascripts/cmpt.content.js\",\n            \"javascripts/common.js\"\n        ]\n    }\n}\n```\n\n**stylus.json**\n\n```\n{\n    \"files\": [\n        \"stylesheets/common.styl\",\n        \"stylesheets/cmpt.header.styl\",\n        \"stylesheets/cmpt.navigation.styl\",\n        \"stylesheets/cmpt.content.styl\"\n    ]\n}\n```\n\n**routes.json**\n\n```\n{\n    \"/index.html\": {\n        \"view\": \"content.htm\",\n        \"controller\": \"index.js\"\n    }\n}\n```\n\ndonnant donc le nouvel ensemble de fichier suivant :\n\n```\nnodeatlas-website/\n┊┉\n├─ webconfig.json\n├─ webconfig.en.json\n├─ optimizations.json\n├─ bundles.json\n├─ stylus.json\n├─ routes.json\n├─ README.md\n├─ README.en.md\n┊┉\n```\n\nLançons donc depuis le dossier `nodeatlas-website` la commande :\n\n```\n\u003e node-atlas --browse index.html\n```\n\net constatons que la génération avec\n\n```\n\u003e node generate-website.js\n```\n\nfonctionne toujours.\n\n\n\n### Webconfig différent en développement et production ###\n\nVous aurez probablement remarqué que depuis les ajouts des mécanismes pour optimiser le code, les temps de réponse sont devenus plus lent. C'est parceque toutes l'optimisation se refait au chargement de chaque page. Nous allons voir ici comment :\n\n- Développer avec les fichiers originaux sans mécanisme d'optimisation.\n- Générer une version finale des fichiers optimisés.\n\nPour cela nous allons utiliser différents webconfigs.\n\n#### Version Développement ####\n\nTout d'abord arrêtons d'utiliser l'optimisation après chaque chargement de page et n'utilisons pas d'instruction pour la minification et l'optimisation. Nous allons créer une variable pour indiquer que la version actuelle n'utilisera pas les fichiers minifiés.\n\nEnsuite, nous allons également utiliser la propritété `httpPort` pour faire tourner nos deux versions côte à côte. Nous allons aussi utiliser une variable pour indiquer derrière quel port va tourner l'autre langue pour chaque webconfig.\n\n**webconfig.json**\n\n```json\n{\n    \"httpPort\": 7777,\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\",\n    \"_otherPort\": 7778,\n    \"_min\": \"\"\n}\n```\n\n**webconfig.en.json**\n\n```json\n{\n    \"httpPort\": 7778,\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\",\n    \"_otherPort\": 7777,\n    \"_min\": \"\"\n}\n```\n\nNous allons également modifier conditionnellement les vues suivantes pour qu'elles affichent les fichiers de travail avec ses webconfigs et les fichiers de productions avec les webconfigs de génération que nous allons créer plus loin.\n\n**views/partials/head.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\" /\u003e\n        \u003ctitle\u003eNodeAtlas\u003c/title\u003e\n\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\" /\u003e\n\n        \u003cmeta name=\"description\" content=\"NodeAtlas est un Framework JavaScript MVC(2) côté serveur.\" /\u003e\n        \u003cmeta name=\"geo.placename\" content=\"Annecy, Haute-Savoie, France\" /\u003e\n\n        \u003cmeta name=\"robots\" content=\"index, follow\" /\u003e\n\n        \u003c!--[if IE]\u003e\u003cmeta name=\"viewport\" content=\"width=device-width, user-scalable=no\" /\u003e\u003c![endif]--\u003e\n        \u003c!--[if !IE]\u003e\u003c!--\u003e\u003cmeta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" /\u003e\u003c!--\u003c![endif]--\u003e\n\n        \u003c!-- Inclusion du fichiers minifié après génération. --\u003e\n        \u003c? if (webconfig._min) { ?\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/common.min.css\"\u003e\n\n        \u003c!-- Inclusion du fichiers standar pendant le développement. --\u003e\n        \u003c? } else { ?\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/common.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.header.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.navigation.css\"\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/cmpt.content.css\"\u003e\n        \u003c? }  ?\u003e\n    \u003c/head\u003e\n    \u003cbody data-content=\"\u003c?= webconfig._content ?\u003e\" data-subpath=\"\u003c?= webconfig.urlRelativeSubPath ?\u003e\"\u003e\n        \u003cdiv class=\"layout\"\u003e\n            \u003cnoscript class=\"no-js cmpt\"\u003e\n                \u003cdiv class=\"no-js--inner\"\u003e\n                    \u003cp\u003e\u003c?- common.noJs ?\u003e\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/noscript\u003e\n```\n\n**views/partials/foot.htm**\n\n```html\n            \u003c!-- Inclusion du fichiers minifié après génération. --\u003e\n            \u003c? if (webconfig._min) { ?\u003e\n            \u003cscript src=\"javascripts/common.min.js\"\u003e\u003c/script\u003e\n\n            \u003c!-- Inclusion du fichiers standar pendant le développement. --\u003e\n            \u003c? } else { ?\u003e\n            \u003cscript src=\"javascripts/cmpt.header.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/cmpt.navigation.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/cmpt.content.js\"\u003e\u003c/script\u003e\n            \u003cscript src=\"javascripts/common.js\"\u003e\u003c/script\u003e\n            \u003c? }  ?\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n**views/partials/header.htm**\n\n```html\n            \u003cheader class=\"header cmpt\"\u003e\n                \u003cdiv class=\"header--inner\"\u003e\n                    \u003cdiv class=\"header--title\"\u003e\n\n                        \u003c!-- On utilise la version non minifiée en local. --\u003e\n                        \u003ch1\u003e\u003cimg src=\"\u003c?= (!webconfig._min) ? common.title.src.replace(webconfig._min, \"\") : common.title.src ?\u003e\" alt=\"\u003c?= common.title.alt ?\u003e\"\u003e\u003c/h1\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/header\u003e\n```\n\n**views/partials/navigation.htm**\n\n```html\n            \u003cnav class=\"navigation cmpt\"\u003e\n                \u003cdiv class=\"navigation--inner\"\u003e\n                    \u003cdiv class=\"navigation--lang\"\u003e\n\n                        \u003c!-- On ajoute la base si le site est en développement, en attribuant le port de l'autre version. --\u003e\n                        \u003ca href=\"\u003c?= (!webconfig._min) ? urlBasePath.replace(webconfig.httpPort, webconfig._otherPort) : '' ?\u003e/\u003c?= common.lang.url ?\u003e\" title=\"\u003c?= common.lang.title ?\u003e\"\u003e\u003c?- common.lang.title ?\u003e\u003c/a\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"navigation--home\"\u003e\n                        \u003ca href=\"\u003c?= common.home.url ?\u003e\" title=\"\u003c?= common.home.title ?\u003e\"\u003e\u003c?- common.home.title ?\u003e\u003c/a\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"navigation--menu\"\u003e\n                        \u003cul\u003e\n                            \u003c? for (var i = 0; i \u003c common.menu.length; i++) { ?\u003e\n                            \u003cli\u003e\n                                \u003ca href=\"\u003c?= common.menu[i].url ?\u003e\" title=\"\u003c?= common.menu[i].title ?\u003e\"\u003e\u003c?- common.menu[i].title ?\u003e\u003c/a\u003e\n                                \u003c? if (common.menu[i].menu) { ?\u003e\n                                \u003cul\u003e\n                                    \u003c? for (var j = 0; j \u003c common.menu[i].menu.length; j++) { ?\u003e\n                                    \u003cli\u003e\n                                        \u003ca href=\"\u003c?= common.menu[i].menu[j].url ?\u003e\" title=\"\u003c?= common.menu[i].menu[j].title ?\u003e\"\u003e\u003c?- common.menu[i].menu[j].title ?\u003e\u003c/a\u003e\n                                    \u003c/li\u003e\n                                    \u003c? } ?\u003e\n                                \u003c/ul\u003e\n                                \u003c? } ?\u003e\n                            \u003c/li\u003e\n                            \u003c? } ?\u003e\n                        \u003c/ul\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/nav\u003e\n```\n\nEt pour lancer les deux versions en même temps, nous allons créer un fichier `develop-website.js` :\n\n**develop-website.js**\n\n```js\n// On récupère l'API NodeAtlas.\nvar nodeAtlas = require(\"node-atlas\"),\n\n    // On créé une instance pour générer la version française.\n    versionFrench = new nodeAtlas(),\n\n    // On créé une instance pour générer la version internationale.\n    versionEnglish = new nodeAtlas();\n\n// On paramètre la version française et on la lance.\nversionFrench.run({\n    \"browse\": true\n});\n\n// On paramètre la version internationale et on la lance.\nversionEnglish.run({\n    \"webconfig\": \"webconfig.en.json\"\n});\n```\n\nEt nous lançons la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n\u003e node develop-website.js\n```\n\nNous faisons tourner la version française et internationale de développement de nos fichiers aux adresses `http://localhost:7777/` et `http://localhost:7778/english/`.\n\n*Note : sous Windows, en renommant `develop-website.js` en `develop-website.na` et en expliquant que les fichiers `.na` s'ouvrent avec `node.exe` on peut se passer de la commande précédente et simplement double cliquer sur `develop-website.na` pour lancer la procédure !*\n\n#### Version Production ####\n\nNous allons maintenant créer les webconfigs de génération qui eux vont bien avoir les Bundles et les Optimizations, qui utiliseront la variable `_min` du webconfig à `true` et qui seront derrière un unique site. Voyez plutôt :\n\n**webconfig.generate.json**\n\n```json\n{\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"fr\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.md\",\n    \"_content\": \"content/\",\n    \"_toc\": \"table-des-matières\",\n    \"_min\": true\n}\n```\n\n**webconfig.generate.en.json**\n\n```json\n{\n    \"optimizations\": \"optimizations.json\",\n    \"bundles\": \"bundles.json\",\n    \"stylus\": \"stylus.json\",\n    \"index\": true,\n    \"languageCode\": \"en\",\n    \"controller\": \"common.js\",\n    \"variation\": \"common.json\",\n    \"serverlessRelativePath\": \"../dist/english/\",\n    \"assetsCopy\": true,\n    \"output\": true,\n    \"urlRelativeSubPath\": \"english\",\n    \"routes\": \"routes.json\",\n    \"_readme\": \"README.en.md\",\n    \"_content\": \"content/english/\",\n    \"_toc\": \"table-of-contents\",\n    \"_min\": true\n}\n```\n\nNous allons à présent modifier le fichier `generate-website.js` pour qu'ils utilisent ces nouveaux webconfigs :\n\n**generate-website.js**\n\n```js\nvar nodeAtlas = require(\"node-atlas\"),\n    versionFrench = new nodeAtlas(),\n    versionEnglish = new nodeAtlas(),\n    versionTest = new nodeAtlas();\n\nversionFrench.init({\n    \"generate\": true,\n\n    // Nouveau webconfig français pour la génération.\n    \"webconfig\": \"webconfig.generate.json\"\n}).generated(function() {\n    versionEnglish.init({\n        \"generate\": true,\n\n        // Nouveau webconfig international pour la génération.\n        \"webconfig\": \"webconfig.generate.en.json\"\n    }).generated(function() {\n        versionTest.init({\n            \"browse\": \"index.html\",\n            \"directory\": \"../dist/\"\n        }).start();\n    }).start();\n}).start();\n```\n\nFinissons par lancer la commande suivante depuis le dossier `nodeatlas-website` :\n\n```\n\u003e node generate-website.js\n```\n\nEt profitons de notre site complet, prêt à être placé sur [Github] depuis le dossier `dist`. Il suffit maintenant de faire du dossier `dist` un dépôt local de `https://github.com/Haeresis/NodeAtlas/tree/gh-pages` de [Github] et le tour est joué !\n\n\n\n### Processus de mise en production ###\n\nPour résumer nous utilisons donc :\n\n- Pour développer (depuis `nodeatlas-website`),\n\n```\n\u003e node develop-website.js\n```\n\n- Pour tester la version de production en local (depuis `nodeatlas-website`),\n\n```\n\u003e node generate-website.js\n```\n\n- Pour monter le site sur [GitHub] (depuis `dist/`),\n\n*Ensemble de commande GIT.*\n\n**[Vous pouvez récupérer l'intégralité du code de cet article dans cette archive pour tester](https://blog.lesieur.name/media/scripts/upload/nodeatlas-website-dist.zip).**\n\n\n\n\n\n## D'autres bonnes pratiques ##\n\nVous trouverez d'autres fonctionnalités de _[NodeAtlas]_ sur [le site officiel de NodeAtlas](https://node-atlas.js.org/) en attendant la rédaction du dernier article dédié :\n\n- aux développeur Back-end ou JavaScript en étendant le fonctionnement de _[NodeAtlas]_ aux parties *Contrôleur* et *Modèle* avec une utilisations des *Websockets* pour les actions en temps réel ainsi qu'un tour des accès aux diverses bases de données.","dates":{"published":{"$date":"2016-10-31T12:33:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".article img {\nmax-width: 100%;\nborder: 1px solid rgba(39,41,43,.15);\n}","title":"Créer et maintenir des maquettes HTML avec NodeAtlas","urn":"creer-et-maintenir-des-maquettes-html-avec-node-atlas","description":"Créer et maintenir des maquettes HTML avec NodeAtlas","image":""}
{"_id":{"$oid":"549993c07d7ac1495000ea7b"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5499b03566bb5aeedaafd8b6"},{"$oid":"5310456355dfd5f7698d48bd"}],"content":"J'ai déjà abordé le sujet des Frameworks CSS qui surchargeaient le DOM HTML inutilement et allait à l'encontre de la philosophie du [W3C](http://www.w3.org/) (séparation du fond et de la forme) dans un précédent article où j'expliquais pourquoi, par exemple, [Bootstrap est une régression pour un développement Front-end de qualité](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/).\n\nJ'ai également expliqué comment reproduire l'équivalent de fonctionnalités utiles dans un Framework en respectant l'approche CSS-driven dans [Grille CSS Responsive et Sémantique sans Framework](https://blog.lesieur.name/grille-css-responsive-et-semantique-sans-framework/).\n\n**Je vais ici vous démontrer que cette méthode CSS-driven peut non seulement être grandement simplifiée avec l'utilisation des préprocesseurs CSS comme [Less](http://lesscss.org/), [Sass](http://sass-lang.com/) ou [Stylus](http://stylus-lang.com/), mais qu'elle permet également d'exploiter les Frameworks tel que [Bootstrap](http://getbootstrap.com/) de manière propre et conforme à la philosophie de séparation de la sémantique et du design.**\n\n\n\n\n\n## Les approches HTML-driven et CSS-driven pour habiller une page Web ##\n\nLa différence est simple :\n\n### HTML-driven où l'habillage rapide et désolant ###\n\n- Les Frameworks CSS imposent une utilisation HTML-driven des sélecteurs CSS en demandant aux développeurs d'habiller une page web en la surchargeant de `div` et de `class` représentant l'habillage et la disposition graphique de la page.\n\n**HTML**\n\n```html\n\u003cfooter class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n\u0009    \u003cdiv class=\"col-sm-4 col-sm-push-8\"\u003e\n\u0009\u0009    \u003cdiv class=\"text-right hidden-xs\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009\u0009    \u003cdiv class=\"text-center visible-xs\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009    \u003c/div\u003e\n\u0009    \u003cdiv class=\"col-sm-8 col-sm-pull-4\"\u003e\n\u0009\u0009    All rights not reserved.\n\u0009    \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/footer\u003e\n```\n\n**CSS**\n\n```css\n/* Appel d'un Framework CSS. Lourd en poids et état de boite noire si on ne le connait pas. */\n```\n\n*C'est malheureusement ce que l'on voit de plus en plus souvent sur les sites Internet et qui est selon moi « LA » régression pour un travail Front-end de qualité.*\n\n### CSS-driven où le travail effectué avec l'évolution du HTML par le W3C ###\n\n- L'habillage CSS tel que défini par le W3C est lui CSS-driven. Il y a séparation du fond (la sémantique) et de la forme (la feuille de style) et rien de la disposition ou du design graphique ne doit transparaître dans le DOM HTML.\n \n**HTML**\n\n```html\n\u003cfooter\u003e\n\u0009    \u003cdiv class=\"share\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eFollow us on Google+ !\u003c/a\u003e\n\u0009    \u003c/div\u003e\n\u0009    \u003cdiv class=\"copyright\"\u003e\n\u0009\u0009    All rights not reserved.\n\u0009    \u003c/div\u003e\n\u003c/footer\u003e\n```\n\n**CSS**\n\n```css\n    .footer,\n.container {\n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 15px;\n    padding-right: 15px;\n}\n    .footer\n.no-gutter {\n    padding-left: -15px;\n    padding-right: -15px;\n}\n    .share,\n    .copyright,\n.col {\n    float: left;\n    width: 100%;\n    padding-left: 15px;\n    padding-right: 15px;\n}\n    .share,\n    .copyright,\n.relative { padding: relative; }\n    .share,\n.text-center { text-align: center; }\n\n@media (min-width: 768px) {\n    .copyright,\n.col12-8 { width: 66.66666667%; }\n    .share,\n.col12-4 { width: 33.33333333%; }\n\n    .copyright,\n.push12-8 { left: 66.66666667%; }\n    .share,\n.pull12-4 { right: 33.33333333%; }\n\n    .share,\n.text-right { text-align: right; }\n}\n```\n\n*Et effectivement cela nécessite de savoir utiliser le CSS.*\n\n### Pourquoi être HTML-driven est un réel problème ? ###\n\nPrenons un exemple concret ; le « Footer » utilisé dans notre exemple précédent à les caractéristiques suivantes :\n- Sur mobile la partie de partage à son texte centré. Il en va de même pour la partie copyright.\n- Sur grand écran le copyright se trouve à gauche et prend 8/12ème de la place en largeur tandis que la partie de partage se trouve à droite et en prend 4/12ème. La partie de gauche a son texte aligné à gauche et la partie de droite a son texte aligné à droite. \n\n\u003e Cependant les designers pensent que pour **des raisons d'ergonomie** il est préférable que sur la page d'accueil le bouton Facebook soit à gauche et prenne la moitié de la place et que le copyright soit à droite en prenant l'autre moitié. C'est donc à présent le copyright qui est aligné à droite sur grand écran.\n\n#### Les trois choix aberrant faisable avec du développement HTML-driven ####\n\nC'est là que l'utilisation d'un Framework va forcer les développeurs à faire de mauvais choix de développement puisque cette modification **ne devrait impacter que les intégrateurs Front-end**, cependant...\n\n1. Le plus simple sera de **dire aux designers ou au client** que cette modification n'est pas possible. Le « Footer » **doit rester consistant** et étant utilisé sur toutes les pages du site **il n'est pas possible d'avoir un « Footer »** spécifique. Des raisons techniques seront avancées comme **des contraintes Bootstrap**, etc.\n2. Un composant alternatif va être **crée part les développeur Back-end** afin de répondre à cette demande. Une **condition sera mise en place** pour que le composant du **Footer alternatif soit injecté sur l'accueil** et uniquement sur l'accueil.  Cela forcera également de dupliquer du code qu'il faudra maintenir en double en cas de changement.\n\n    ```html\n\u003cfooter class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n\u0009    \u003cdiv class=\"col-sm-6\"\u003e\n\u0009\u0009    \u003cdiv class=\"hidden-xs\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009\u0009    \u003cdiv class=\"text-center visible-xs\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009    \u003c/div\u003e\n\u0009    \u003cdiv class=\"col-sm-6\"\u003e\n\u0009\u0009    \u003cdiv class=\"text-right hidden-xs\"\u003e\n\u0009\u0009        All rights not reserved.\n\u0009\u0009    \u003c/div\u003e\n\u0009\u0009    \u003cdiv class=\"visible-xs\"\u003e\n\u0009\u0009        All rights not reserved.\n\u0009\u0009    \u003c/div\u003e\n\u0009    \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/footer\u003e\n```\n\n3. Dans un cas extrême il serait même envisagé de faire **travailler les Content Filler** en plaçant les classes dans des variations de contenu par page de manière à **ne pas injecter les mêmes classes en fonction de la page appelée** avec un code comme celui ci-dessous... le summum de l'aberrance.\n\n    ```html\n\u003cfooter class=\"container\"\u003e\n    \u003cdiv class=\"row\"\u003e\n\u0009    \u003cdiv class=\"\u003ccolumn-left\u003e\"\u003e\n\u0009\u0009    \u003cdiv class=\"\u003cmobile\u003e\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009\u0009    \u003cdiv class=\"\u003cdesktop\u003e\"\u003e\n\u0009\u0009        \u003ca href=\"\"\u003eJoin us on Facebook !\u003c/a\u003e\n\u0009\u0009    \u003c/div\u003e\n\u0009    \u003c/div\u003e\n\u0009    \u003cdiv class=\"\u003ccolumn-right\u003e\"\u003e\n\u0009\u0009    \u003cdiv class=\"\u003cmobile\u003e\"\u003e\n\u0009\u0009        All rights not reserved.\n\u0009\u0009    \u003c/div\u003e\n\u0009\u0009    \u003cdiv class=\"\u003cdesktop\u003e\"\u003e\n\u0009\u0009        All rights not reserved.\n\u0009\u0009    \u003c/div\u003e\n\u0009    \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/footer\u003e\n```\n\n#### La solution logique de l'approche CSS-driven ####\n\nLe HTML n'aurait absolument pas besoin de changer puisque **la demande concerne le design**. C'est donc bien **le développeur Front-end qui doit s'occuper de cette tâche** et en assurer l'évolution et la maintenance. Cela signifie simplement que si le « Footer » est injecté sur un layout comportant la classe `.home` en amont (sur le `\u003cbody\u003e` par exemple). Il suffit alors d'**ajouter à la fin de la feuille CSS les règles suivantes** :\n\n```css\n@media (min-width: 768px) {\n    .home .copyright,\n    .home .share,\n.col12-6 { width: 50%; }\n\n    .home .copyright,\n    .home .share,\n.push-pull-reset { left: 0; right: 0; }\n\n    .home .share,\n.text-left { text-align: left; }\n\n    .home .copyright,\n.text-right { text-align: right; }\n}\n```\n\n\n## Profiter des avantages d'un Framework CSS tout en respectant les bonnes pratiques ##\n\nC'est ici qu'intervient le préprocesseur [Less](http://lesscss.org/). Sans être un grand expert dans ce languages on peut très facilement tirer parti des avantages d'un Framework CSS comme Bootstrap sans surcharger d'une seule ligne son DOM.\n\n[Less](http://lesscss.org/) vous permet d'utiliser des variables dans votre CSS ainsi que des raccourcis de classe à la place de retaper toutes vos propriétés CSS. En sortie, c'est bien un fichier CSS qui est généré mais, vous n'avez pas besoin de vous en pré-occuper :\n- Vous n'avez qu'à maintenir le `.less` dans vos fichiers et le `.css` est automatiquement généré. Un fichier `.css.map` permet également à votre navigateur de vous indiquer pour un élément HTML ciblé dans votre débogueur F12 quelles lignes du fichier `.less` sont utilisées (C'est le cas pour Google Chrome sans aucune intervention de votre part).\n- Pour maintenir non plus un fichier `.css`, mais un fichier `.less`, il va vous falloir un logiciel qui va exécuter pour vous votre fichier `test.less` avant le renvoi de la réponse au client quand le fichier `test.css` est demandé.\n- Une fois en environnement de production on active aucunement Less et c'est bien `test.css` qui sera renvoyé sans calcule supplémentaire quand une requête pour `test.css` sera effectuée par le client.\n\n\u003e **Pour ma part, j'utilise le moteur de sites web [Node.js](http://nodejs.org/) : [NodeAtlas](http://haeresis.github.io/NodeAtlas/)**. [Il permet d'activer Less facilement](https://github.com/Haeresis/NodeAtlas#g%C3%A9n%C3%A9rer-les-css-avec-less) dans un environnement de développement pour travailler dans les règles de l'art avec les versions Less de vos Frameworks préférés !\n\n\n### Étude d'un exemple avec Bootstrap ###\n\nIl vous faudra :\n- La [version Less de Bootstrap](http://getbootstrap.com/getting-started/), \n- un navigateur déboguant facilement Less avec des fichiers `.css.map` comme [Google Chrome et son débogueur](https://www.google.com/chrome/browser/desktop/index.html) et,\n- un interpréteur de `.less` pour générer vos `.css` comme [NodeAtlas](http://haeresis.github.io/NodeAtlas/) si vous faites du [Node.js](http://nodejs.org/).\n\n\n\n#### Sources ####\n- Une implémentation de cet exemple pour [NodeAtlas](https://github.com/Haeresis/NodeAtlas) se trouve sur [le repository PreprocessorAtlas](https://github.com/Haeresis/PreprocessorAtlas) à l'url : http://localhost:7777/bootstrap/ une fois le site lancé.\n- [Un exemple Codepen live se trouve derrière ce lien](http://codepen.io/Haeresis/pen/dPpMNv) !\n\n#### Explications ####\n\nNous allons habiller la structure HTML suivante avec Bootstrap ; notez qu'aucune classe Bootstrap ne vient polluer le DOM HTML :\n\n**HTML**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n        \u003ctitle\u003eLess Example with Bootstrap\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cheader\u003e\n            \u003cdiv class=\"brand\"\u003e\n                \n                \u003cdiv class=\"logo component\"\u003e\n                    \u003ch3\u003eBruno Lesieur\u003c/h3\u003e\n                \u003c/div\u003e\n\n            \u003c/div\u003e\n            \u003cdiv class=\"slogan\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003eSome #ID with lot of .CLASS\u003c/p\u003e\n                \u003c/div\u003e\n\n            \u003c/div\u003e\n            \u003cdiv class=\"title\"\u003e\n                \n                \u003cdiv class=\"logo component\"\u003e\n                    \u003ch1\u003eQuelque #ID et beaucoup de .CLASS\u003c/h1\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n            \u003cnav class=\"main-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eHome\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection A\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection B\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection C\u003c/a\u003e\u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e      \n\n            \u003c/nav\u003e\n        \u003c/header\u003e\n        \u003cdiv class=\"content\"\u003e\n            \u003csection class=\"overview\"\u003e\n                \n                \u003cdiv class=\"carousel component\"\u003e\n                    \u003ch1\u003eSlide 1\u003c/h1\u003e\n                    \u003cp\u003eBla bla bla\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/section\u003e\n            \u003cnav class=\"anchor-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003ch2\u003eSummary\u003c/h2\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\n                            \u003ca href=\"#h1-title\"\u003eH1 Title\u003c/a\u003e\n                            \u003cul\u003e\n                                \u003cli\u003e\n                                    \u003ca href=\"#h2-title\"\u003eH2 Title\u003c/a\u003e\n                                    \u003cul\u003e\n                                        \u003cli\u003e\u003ca href=\"#h3-title-1\"\u003eH3 Title 1\u003c/a\u003e\u003c/li\u003e\n                                        \u003cli\u003e\u003ca href=\"#h3-title-2\"\u003eH3 Title 1\u003c/a\u003e\u003c/li\u003e\n                                    \u003c/ul\u003e\n                                \u003c/li\u003e\n                            \u003c/ul\u003e\n                        \u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e\n\n            \u003c/nav\u003e\n            \u003carticle class=\"main\"\u003e\n                \u003cdiv class=\"article\"\u003e\n\n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003cheader\u003e\n                            \u003ch1 id=\"h1-title\"\u003eH1 Title\u003c/h1\u003e\n                            \u003cp\u003eThis is a leading text for my article\u003c/p\u003e\n                        \u003c/header\u003e\n\n                        \u003ch2 id=\"h2-title\"\u003eH2 Title\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003ch3 id=\"h3-title-1\"\u003eH3 Title 1\u003c/h3\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003ch3 id=\"h3-title-2\"\u003eH3 Title 2\u003c/h3\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003cheader\u003e\n                            \u003cfooter\u003e\n                                \u003cp\u003eby \u003ca href=\"\"\u003eHaeresis\u003c/a\u003e\u003c/p\u003e\n                                \u003cp\u003edate, etc\u003c/a\u003e\u003c/p\u003e\n                            \u003c/footer\u003e\n                        \u003c/header\u003e\n                    \u003c/div\u003e\n\n                \u003c/div\u003e\n                \u003cul class=\"step-list\"\u003e\n                    \u003cli class=\"step\"\u003e\n\n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                    \u003cli class=\"step\"\u003e\n                        \n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                    \u003cli class=\"step\"\u003e\n                        \n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/article\u003e\n            \u003cul class=\"call-to-action-list\"\u003e\n                \u003cli class=\"call-to-action\"\u003e\n                    \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e\n\n                \u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\n        \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e          \n\n                \u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\n        \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e          \n\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n        \u003cfooter\u003e\n            \u003cnav class=\"secondary-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\n                            \u003ca href=\"\"\u003eContact us\u003c/a\u003e\n                        \u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e\n\n            \u003c/nav\u003e\n            \u003cdiv class=\"utils\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003eJoin us on Google+\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n            \u003cdiv class=\"legals\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003e©All Right not reserved at all\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n        \u003c/footer\u003e\n    \u003cbody\u003e\n\u003c/html\u003e\n```\n\nEt voici le fichier Less expliqué :\n\n**Less**\n\n```css\n/*------------------------------------*\\\n    $SUMMARY\n\\*------------------------------------*/\n\n/**\n * SUMMARY.................C'est moi !\n * RESET...................Même rendu pour tous les navigateurs.\n * IMPORT..................Les fichiers Less nécessaire de Bootstrap.\n * TESTS...................Des règles CSS activables et désactivables pour les tests.\n * GRID....................Habillage de la grille.\n */\n\n\n\n\n\n/*------------------------------------*\\\n    $RESET\n\\*------------------------------------*/\n\n/* On inclut le padding à la taille. */\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n/* On évite les marges. */\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n\n\n\n\n/*------------------------------------*\\\n    $IMPORT\n\\*------------------------------------*/\n\n/* On importe les variables du Framework. */\n@import 'bootstrap/variables';\n\n/* On importe le système de grille. */\n@import 'bootstrap/grid';\n@import 'bootstrap/mixins/grid';\n@import 'bootstrap/mixins/grid-framework';\n\n/* On importe le système de responsivité. */\n@import 'bootstrap/responsive-utilities';\n@import 'bootstrap/mixins/responsive-visibility';\n\n/* À titre d'exemple, voici tout ce qu'il faudrait importer pour utiliser `.text-center` et `.text-right`. Il n'est parfois pas toujours judicieux d'importer des parties de Framework quand on a besoin que d'une classe. Nous créerons notre propre alignement plus bas. */\n/*\n@import 'bootstrap/type';\n@import 'bootstrap/mixins/text-overflow.less';\n@import 'bootstrap/mixins/text-emphasis.less';\n@import 'bootstrap/mixins/background-variant.less';\n*/\n\n\n\n\n\n/*------------------------------------*\\\n    $TESTS\n\\*------------------------------------*/\n\n/* Afficher les zones plus facilement dans la page HTML pour déboguer l'affichage. */\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n   width: 100%;\n   display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n   background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n   content: \"Slogan\";\n   background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n   content: \"Title\";\n   background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n   content: \"Nav\";\n   background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n   content: \"Overview\";\n   background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n   content: \"Anchor nav\";\n   background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n   content: \"Main\";\n   background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n   content: \"Call to action\";\n   background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n   content: \"Secondary nav\";\n   background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n   content: \"Legals\";\n   background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n   content: \"Utils\";\n   background-color: rgba(150, 0, 150, 0.5);\n}\n.main:before {\n  content: none;\n}\n.article:before {\n  content: \"Article\";\n  background-color: rgba(255, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n.step:before {\n  content: \"Step\";\n  background-color: rgba(0, 255, 0, 0.2);\n  width: 100%;\n  display: inline-block;\n}\n\n\n\n\n/*------------------------------------*\\\n    $GRID\n\\*------------------------------------*/\n\n/* Normalement, Bootsrap utilise la classe `.row` sur un élément enfant pour annuler le padding inutile en vu d'injecter des colonnes. Nous n'allons pas surcharger le DOM pour cela aussi nous créons une nouvelle classe qui s'applique directement sur le `.container` et qui à la même fonction. */\n.padding-reset {\n\u0009margin-left: auto;\n\u0009margin-right: auto;\n\u0009padding-left: 0;\n\u0009padding-right: 0;\n}\n\n/* Nous allons manager nous même les `.row` sans nécessairement ajouter des éléments dans le DOM. */\n.clear-left {\n\u0009clear: left;\u0009\n}\n\n/* Nous allons utiliser les listes pour définir des éléments de liste et non des `div` comme Bootstrap le fait habituellement. */\n.ul-reset {\n\u0009padding: 0;\n\u0009margin: 0;\n\u0009list-style: none;\n}\n\n/* Affin de ne pas importer du code inutile, nous allons nous même recréer les trois classes nécessaire pour l'alignement des textes. */\n.text-right {\n  text-align: right;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n\n\n\n\n\n/* À partir d'ici, on habille notre grille avec les raccourcis propre à Less.\n- `\u0026:extend(\u003cclass\u003e);` rajoute la classe courante à la liste des classes du sélecteur `\u003cclass\u003e` à la ligne ou elle est définie.\n- `\u003cclass\u003e;` ajoute l'intégralité des sélecteurs de la classe \u003cclass\u003e à ceux de la classe courante. */\n\n/* Ainsi on ajoute\n- `body \u003e header, .content, body \u003e footer` aux classes `.container` et `.padding-reset`\nce qui donnera en sortie\n- `body \u003e header, .content, body \u003e footer, .container {}` et \n- `body \u003e header, .content, body \u003e footer, .padding-reset {}` */\nbody \u003e header,\n.content,\nbody \u003e footer {\n\u0009\u0026:extend(.container, .padding-reset);\n}\n\n/* Ici on ajoute les mécanismes des colonnes Bootstrap. */\n.brand {\n\u0009.make-sm-column(2);\n\u0009.make-sm-column-push(10);\n}\n.slogan {\n\u0009.make-sm-column(10);\n\u0009.make-sm-column-pull(2);\n}\n/* On créer manuellement un retour à la ligne sous cette colonne, peut importe son contenu. */\n.title {\n\u0009\u0026:extend(.clear-left);\n\u0009.make-sm-column(2);\n}\n.main-nav {\n\u0009.make-sm-column(10);\n}\n.overview {\n\u0009.make-sm-column(12);\n}\n.anchor-nav {\n\u0009.make-sm-column(3);\u0009\n}\n.main {\n\u0009.make-sm-column(9);\u0009\n}\n.call-to-action-list {\n\u0009\u0026:extend(.ul-reset);\n}\n.call-to-action {\n\u0009.make-sm-column(6);\n\u0009.make-md-column(4);\n}\n.call-to-action:nth-child(1) {\n\u0009.make-lg-column-offset(2);\n}\n\n/* On cache le troisième élément `.call-to-action` en fonction de la taille de l'écran représenté par les variables : `@screen-sm-min`, `@screen-md-min` et `@screen-lg-min`. */\n@media (min-width: @screen-sm-min) {\n\u0009.call-to-action:nth-child(n+3) {\n\u0009\u0009display: none;\n\u0009}\n}\n@media (min-width: @screen-md-min) {\n\u0009.call-to-action:nth-child(n+3) {\n\u0009\u0009display: block;\n\u0009}\n}\n@media (min-width: @screen-lg-min) {\n\u0009.call-to-action:nth-child(n+3) {\n\u0009\u0009display: none;\n\u0009}\n}\n.secondary-nav {\n\u0009.make-sm-column(12);\n}\n.utils {\n\u0009.make-sm-column(3);\n\u0009.make-sm-column-push(9);\n}\n.legals {\n\u0009.make-sm-column(9);\n\u0009.make-sm-column-pull(3);\n}\n/* Cette fois on utilise bien `.row` pour annuler le padding de l'élément englobant afin de ré-aligner la grille interne. */\n.step-list {\n\u0009\u0026:extend(.ul-reset);\n\u0009.row;\n}\n.step {\n\u0009.hidden-xs;\n\u0009.make-sm-column(4);\n}\n.legals,\n.brand {\n  .text-left;\n}\n.utils {\n  .text-center;\n}\n@media (min-width: @screen-sm-min) {\n  .utils,\n  .brand {\n    .text-right;\n  }\n  .legals {\n    .text-left\n  }\n}\n```\n\n\n\n### Étude d'un exemple sans Framework ###\n\nIl vous faudra :\n- Un navigateur déboguant facilement Less avec des fichiers `.css.map` comme [Google Chrome et son débogueur](https://www.google.com/chrome/browser/desktop/index.html) et,\n- un interpréteur de `.less` pour générer vos `.css` comme [NodeAtlas](http://haeresis.github.io/NodeAtlas/) si vous faites du [Node.js](http://nodejs.org/).\n\n\n\n#### Sources ####\n\n- Une implémentation de cet exemple pour [NodeAtlas](https://github.com/Haeresis/NodeAtlas) se trouve sur [le repository LessAtlas](https://github.com/Haeresis/LessAtlas) à l'url : http://localhost:7777/no-framework/ une fois le site lancé.\n- [Un exemple Codepen live se trouve derrière ce lien](http://codepen.io/Haeresis/pen/KwgzmE)  !\n\n#### Explications ####\n\nNous allons habiller la même structure HTML que précédemment mais à la main sans aucun Framework :\n\n**HTML**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n        \u003ctitle\u003eLess Example with Bootstrap\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cheader\u003e\n            \u003cdiv class=\"brand\"\u003e\n                \n                \u003cdiv class=\"logo component\"\u003e\n                    \u003ch3\u003eBruno Lesieur\u003c/h3\u003e\n                \u003c/div\u003e\n\n            \u003c/div\u003e\n            \u003cdiv class=\"slogan\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003eSome #ID with lot of .CLASS\u003c/p\u003e\n                \u003c/div\u003e\n\n            \u003c/div\u003e\n            \u003cdiv class=\"title\"\u003e\n                \n                \u003cdiv class=\"logo component\"\u003e\n                    \u003ch1\u003eQuelque #ID et beaucoup de .CLASS\u003c/h1\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n            \u003cnav class=\"main-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eHome\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection A\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection B\u003c/a\u003e\u003c/li\u003e\n                        \u003cli\u003e\u003ca href=\"\"\u003eSection C\u003c/a\u003e\u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e      \n\n            \u003c/nav\u003e\n        \u003c/header\u003e\n        \u003cdiv class=\"content\"\u003e\n            \u003csection class=\"overview\"\u003e\n                \n                \u003cdiv class=\"carousel component\"\u003e\n                    \u003ch1\u003eSlide 1\u003c/h1\u003e\n                    \u003cp\u003eBla bla bla\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/section\u003e\n            \u003cnav class=\"anchor-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003ch2\u003eSummary\u003c/h2\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\n                            \u003ca href=\"#h1-title\"\u003eH1 Title\u003c/a\u003e\n                            \u003cul\u003e\n                                \u003cli\u003e\n                                    \u003ca href=\"#h2-title\"\u003eH2 Title\u003c/a\u003e\n                                    \u003cul\u003e\n                                        \u003cli\u003e\u003ca href=\"#h3-title-1\"\u003eH3 Title 1\u003c/a\u003e\u003c/li\u003e\n                                        \u003cli\u003e\u003ca href=\"#h3-title-2\"\u003eH3 Title 1\u003c/a\u003e\u003c/li\u003e\n                                    \u003c/ul\u003e\n                                \u003c/li\u003e\n                            \u003c/ul\u003e\n                        \u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e\n\n            \u003c/nav\u003e\n            \u003carticle class=\"main\"\u003e\n                \u003cdiv class=\"article\"\u003e\n\n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003cheader\u003e\n                            \u003ch1 id=\"h1-title\"\u003eH1 Title\u003c/h1\u003e\n                            \u003cp\u003eThis is a leading text for my article\u003c/p\u003e\n                        \u003c/header\u003e\n\n                        \u003ch2 id=\"h2-title\"\u003eH2 Title\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003ch3 id=\"h3-title-1\"\u003eH3 Title 1\u003c/h3\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003ch3 id=\"h3-title-2\"\u003eH3 Title 2\u003c/h3\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n\n                        \u003cheader\u003e\n                            \u003cfooter\u003e\n                                \u003cp\u003eby \u003ca href=\"\"\u003eHaeresis\u003c/a\u003e\u003c/p\u003e\n                                \u003cp\u003edate, etc\u003c/a\u003e\u003c/p\u003e\n                            \u003c/footer\u003e\n                        \u003c/header\u003e\n                    \u003c/div\u003e\n\n                \u003c/div\u003e\n                \u003cul class=\"step-list\"\u003e\n                    \u003cli class=\"step\"\u003e\n\n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                    \u003cli class=\"step\"\u003e\n                        \n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                    \u003cli class=\"step\"\u003e\n                        \n                        \u003cdiv class=\"markdown component\"\u003e\n                            \u003ch3\u003eH3 Step\u003c/h3\u003e\n                            \u003cp\u003eBla bla bla\u003c/p\u003e\n                        \u003c/div\u003e\n\n                    \u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/article\u003e\n            \u003cul class=\"call-to-action-list\"\u003e\n                \u003cli class=\"call-to-action\"\u003e\n                    \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e\n\n                \u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\n        \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e          \n\n                \u003c/li\u003e\n                \u003cli class=\"call-to-action\"\u003e\n        \n                    \u003cdiv class=\"markdown component\"\u003e\n                        \u003ch2\u003eH2 Action\u003c/h2\u003e\n                        \u003cp\u003eBla bla bla\u003c/p\u003e\n                    \u003c/div\u003e          \n\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n        \u003cfooter\u003e\n            \u003cnav class=\"secondary-nav\"\u003e\n                \n                \u003cdiv class=\"navigation component\"\u003e\n                    \u003cul\u003e\n                        \u003cli\u003e\n                            \u003ca href=\"\"\u003eContact us\u003c/a\u003e\n                        \u003c/li\u003e\n                    \u003c/ul\u003e\n                \u003c/div\u003e\n\n            \u003c/nav\u003e\n            \u003cdiv class=\"utils\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003eJoin us on Google+\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n            \u003cdiv class=\"legals\"\u003e\n                \n                \u003cdiv class=\"markdown component\"\u003e\n                    \u003cp\u003e©All Right not reserved at all\u003c/p\u003e\n                \u003c/div\u003e  \n\n            \u003c/div\u003e\n        \u003c/footer\u003e\n    \u003cbody\u003e\n\u003c/html\u003e\n```\n\nEt voici le fichier Less expliqué :\n\n**Less**\n\n```css\n/*------------------------------------*\\\n\u0009\u0009$SUMMARY\n\\*------------------------------------*/\n\n/**\n * SUMMARY.................C'est moi !\n * VARIABLES...............Valeurs réutilisables.\n * RESET...................Même rendu pour tous les navigateurs.\n * TESTS...................Des règles CSS activables et désactivables pour les tests.\n * GRID....................Grille de base à 12 colonnes.\n * ALIGNMENT...............Alignement du contenu des colonnes.\n * VISTIBLE / HIDDEN.......Cacher / Afficher les colonnes.\n * UI......................Appliquer la CSS sur les éléments.\n */\n\n\n\n\n\n/*------------------------------------*\\\n    $VARIABLES\n\\*------------------------------------*/\n\n/* Les valeurs qui vont nous servir de gap pour l'affichage responsive des éléments. */\n@screen-xs-max: 763px;\n@screen-sm-min: 764px;\n@screen-sm-max: 991px;\n@screen-md-min: 992px;\n@screen-md-max: 1199px;\n@screen-lg-min: 1200px;\n\n\n\n\n\n/*------------------------------------*\\\n\u0009$RESET\n\\*------------------------------------*/\n\n/* On inclut le padding à la taille. */\n* {\n\u0009-webkit-box-sizing: border-box;\n\u0009   -moz-box-sizing: border-box;\n\u0009\u0009\u0009box-sizing: border-box;\n}\n\n/* On évite les marges. */\nbody {\n\u0009margin: 0;\n\u0009padding: 0;\n}\n\n\n\n\n\n/*------------------------------------*\\\n\u0009$TESTS\n\\*------------------------------------*/\n\n/* Afficher les zones plus facilement dans la page HTML pour déboguer l'affichage. */\n.brand:before,\n.slogan:before,\n.title:before,\n.main-nav:before,\n.overview:before,\n.anchor-nav:before,\n.main:before,\n.call-to-action:before,\n.secondary-nav:before,\n.legals:before,\n.utils:before {\n    width: 100%;\n    display: inline-block;\n}\n\n.brand:before {\n    content: \"Brand\";\n    background-color: rgba(0, 0, 150, 0.5);\n}\n.slogan:before {\n    content: \"Slogan\";\n    background-color: rgba(150, 150, 0, 0.5);\n}\n.title:before {\n    content: \"Title\";\n    background-color: rgba(255, 0, 0, 0.2);\n}\n.main-nav:before {\n    content: \"Nav\";\n    background-color: rgba(0, 255, 0, 0.2);\n}\n.overview:before {\n    content: \"Overview\";\n    background-color: rgba(150, 0, 0, 0.5);\n}\n.anchor-nav:before {\n    content: \"Anchor nav\";\n    background-color: rgba(0, 0, 255, 0.2);\n}\n.main:before {\n    content: \"Main\";\n    background-color: rgba(255, 255, 0, 0.2);\n}\n.call-to-action:before {\n    content: \"Call to action\";\n    background-color: rgba(255, 0, 255, 0.2);\n}\n.secondary-nav:before {\n    content: \"Secondary nav\";\n    background-color: rgba(0, 150, 0, 0.5);\n}\n.legals:before {\n    content: \"Legals\";\n    background-color: rgba(0, 255, 255, 0.2);\n}\n.utils:before {\n    content: \"Utils\";\n    background-color: rgba(150, 0, 150, 0.5);\n}\n.main:before {\n\u0009content: none;\n}\n.article:before {\n\u0009content: \"Article\";\n\u0009background-color: rgba(255, 255, 0, 0.2);\n\u0009width: 100%;\n\u0009display: inline-block;\n}\n.step:before {\n\u0009content: \"Step\";\n\u0009background-color: rgba(0, 255, 0, 0.2);\n\u0009width: 100%;\n\u0009display: inline-block;\n}\n\n\n\n\n\n/*------------------------------------*\\\n    $GRID\n\\*------------------------------------*/\n\n/* On crée une grille sur 12 colonnes en affectant les valeurs. */\n.span12-12 { width: 100%; }\n.span12-11 { width: 91.66666667%; }\n.span12-10 { width: 83.33333333%; }\n.span12-9 { width: 75%; }\n.span12-8 { width: 66.66666667%; }\n.span12-7 { width: 58.33333333%; }\n.span12-6 { width: 50%; }\n.span12-5 { width: 41.66666667%; }\n.span12-4 { width: 33.33333333%; }\n.span12-3 { width: 25%; }\n.span12-2 { width: 16.66666667%; }\n.span12-1 { width: 8.33333333%; }\n\n/* On crée de quoi déplacer les colonnes vers la droite. */\n.pull12-12 { right: 100%; }\n.pull12-11 { right: 91.66666667%; }\n.pull12-10 { right: 83.33333333%; }\n.pull12-9 { right: 75%; }\n.pull12-8 { right: 66.66666667%; }\n.pull12-7 { right: 58.33333333%; }\n.pull12-6 { right: 50%; }\n.pull12-5 { right: 41.66666667%; }\n.pull12-4 { right: 33.33333333%; }\n.pull12-3 { right: 25%; }\n.pull12-2 { right: 16.66666667%; }\n.pull12-1 { right: 8.33333333%; }\n.pull12-0 { right: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la gauche. */\n.push12-12 { left: 100%; }\n.push12-11 { left: 91.66666667%; }\n.push12-10 { left: 83.33333333%; }\n.push12-9 { left: 75%; }\n.push12-8 { left: 66.66666667%; }\n.push12-7 { left: 58.33333333%; }\n.push12-6 { left: 50%; }\n.push12-5 { left: 41.66666667%; }\n.push12-4 { left: 33.33333333%; }\n.push12-3 { left: 25%; }\n.push12-2 { left: 16.66666667%; }\n.push12-1 { left: 8.33333333%; }\n.push12-0 { left: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la gauche en créant des espaces vides. */\n.prepend12-12 { margin-left: 100%; }\n.prepend12-11 { margin-left: 91.66666667%; }\n.prepend12-10 { margin-left: 83.33333333%; }\n.prepend12-9 { margin-left: 75%; }\n.prepend12-8 { margin-left: 66.66666667%; }\n.prepend12-7 { margin-left: 58.33333333%; }\n.prepend12-6 { margin-left: 50%; }\n.prepend12-5 { margin-left: 41.66666667%; }\n.prepend12-4 { margin-left: 33.33333333%; }\n.prepend12-3 { margin-left: 25%; }\n.prepend12-2 { margin-left: 16.66666667%; }\n.prepend12-1 { margin-left: 8.33333333%; }\n.prepend12-0 { margin-left: 0; }\n\n/* On crée de quoi déplacer les colonnes vers la droite en créant des espaces vides. */\n.append12-12 { margin-right: 100%; }\n.append12-11 { margin-right: 91.66666667%; }\n.append12-10 { margin-right: 83.33333333%; }\n.append12-9 { margin-right: 75%; }\n.append12-8 { margin-right: 66.66666667%; }\n.append12-7 { margin-right: 58.33333333%; }\n.append12-6 { margin-right: 50%; }\n.append12-5 { margin-right: 41.66666667%; }\n.append12-4 { margin-right: 33.33333333%; }\n.append12-3 { margin-right: 25%; }\n.append12-2 { margin-right: 16.66666667%; }\n.append12-1 { margin-right: 8.33333333%; }\n.append12-0 { margin-right: 0; }\n\n/* On crée de quoi appliquer les états définis au dessus sur nos colonnes. */\n.pull-push { position: relative; }\n.pull-push-reset { position: static; }\n\n/* On crée de quoi gérer les paddings. */\n.gutter { padding-left: 16px; padding-right: 16px; }\n.gutter-reset { padding-left: 0; padding-right: 0; }\n\n/* On crée de quoi gérer les listes et les retours à la ligne. */\n.list-reset { margin: 0;padding: 0;list-style-type: none; }\n.clearfix { clear: both; }\n\n/* On crée nos éléments unitaires. */\n.grid { max-width: 1200px; margin-left:auto; margin-right:auto; }\n.grid:after { content: \"\"; clear: both; display: block; }\n.column { float: left; width: 100%; }\n\n\n\n\n\n/*------------------------------------*\\\n\u0009\u0009$ALIGMENT\n\\*------------------------------------*/\n\n/* Gestion de l'alignement du contenu. */\n.text-left { text-align: left; }\n.text-center { text-align: center; }\n.text-right { text-align: right; }\n.text-justify { text-align: justify; }\n\n\n\n\n\u0009\n/*------------------------------------*\\\n\u0009\u0009$VISTIBLE / HIDDEN\n\\*------------------------------------*/\n\n/* Gestion de la visibilité du contenu. */\n.display-block { display: block; }\n.display-inline { display: inline-block; }\n.display-inline-block { display: inline-block; }\n.display-none { display: none; }\n\n\n\n\n\n/*------------------------------------*\\\n    $UI\n\\*------------------------------------*/\n\n/* Habillage Mobile et Petite Tablette. */\n/* Comme on n'utilise pas de Media Queries dans les prochaines définitions, on peut utiliser `\u0026:extend` qui va ajouter la classe courante au sélecteur dans `\u0026:extend` au niveau de la définition du sélecteur plus haut, cela pour alléger la feuille CSS qui sera générées. */\nbody \u003e header,\nbody \u003e footer,\n.content {\n    \u0026:extend(.grid);\n}\n\nbody \u003e header:after,\nbody \u003e footer:after,\n.content:after {\n    \u0026:extend(.grid:after);  \n}\n\n.brand,\n.slogan,\n.title,\n.main-nav,\n.overview,\n.anchor-nav,\n.main,\n.article,\n.step,\n.call-to-action,\n.secondary-nav,\n.utils,\n.legals {\n    \u0026:extend(.column);   \n}\n\n.brand,\n.slogan,\n.title,\n.main-nav,\n.overview,\n.anchor-nav,\n .article,\n.step,\n.call-to-action,\n.secondary-nav,\n.utils,\n.legals {\n    \u0026:extend(.gutter);\n}\n\n.step-list,\n.call-to-action-list {\n    \u0026:extend(.list-reset);\n}\n\n.title {\n    \u0026:extend(.clearfix);\n}\n\n.legals,\n.utils {\n    \u0026:extend(.text-center);  \n}\n\n.step {\n    \u0026:extend(.display-none);    \n}\n\n/* Tablette / Petit Écran \nOn utilise nos variables `@screen-sm-min`, `@screen-md-min` et `@screen-lg-min`  pour garder toujours la même valeur dans la zone de @media.\n*/\n\n@media (min-width: @screen-sm-min) {\n\n/* En ce qui concerne les classes dans des zones de Media Queries, il ne faut pas utiliser `\u0026:extend` mais simplement le nom des classes de manière à dupliquer les sélecteurs de ces classes à l'intérieur de la classe que vous venez de déclarer et donc à l'intérieur des Media Queries. */\n    .brand,\n    .title {\n        .span12-2;\n    }\n    .anchor-nav,\n    .utils {\n        .span12-3;\n    }\n    .step {\n        .span12-4;\n    }\n    .call-to-action {\n        .span12-6;\n    }\n    .legals,\n    .main {\n        .span12-9;\n    }\n    .main-nav,\n    .slogan {\n        .span12-10;\n    }\n\n    .utils,\n    .legals,\n    .brand,\n    .slogan {\n        .pull-push;\n    }\n\n    .utils {\n        .push12-9;\n    }\n    .brand {\n        .push12-10;\n    }\n    .slogan {\n        .pull12-2;\n    }\n    .legals {\n        .pull12-3;\n    }\n    .legals {\n        .text-left;\n    }\n    .brand,\n    .utils {\n        .text-right;\n    }\n    .step {\n        .display-block;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-none;\n    }\n}\n\n/* Écran Standard */\n@media (min-width: @screen-md-min) {\n    .anchor-nav,  \n    .call-to-action {\n        .span12-4;\n    }\n    .main {\n        .span12-8;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-block;\n    }\n}\n\n/* Grand Écran */\n@media (min-width: @screen-lg-min) {\n    .anchor-nav {\n        .span12-3;\n    }\n    .call-to-action {\n        .span12-4;\n    }\n    .main {\n        .span12-9;\n    }\n    .call-to-action:nth-child(odd) {\n        .prepend12-2;\n    }\n    .call-to-action:nth-child(even) {\n        .append12-2;\n    }\n    .call-to-action:nth-child(n + 3) {\n        .display-none;\n    }\n}\n```\n\n\n\n\n\n## De l'utilité d'un Framework ##\n\nCe que l'on peut constater facilement en étudiant les deux exemples précédents c'est que la connaissance du Framework, afin de l'utiliser judicieusement, n'est pas bien plus utile/difficile à appliquer que de créer son propre jeu de classe CSS. Les Frameworks CSS sont donc de très bonnes sources d'inspiration et l'étude de leurs mécanismes améliorera grandement vos aptitudes en CSS mais leur utilisation [ne vous dispense pas de réfléchir](http://blog.goetter.fr/2013/08/23/un-framework-css-ne-dispense-pas-de-reflechir/).","dates":{"published":{"$date":"2014-12-23T13:09:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Utilisation optimisée de Framework CSS comme Bootstrap avec Less","urn":"utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less"}
{"_id":{"$oid":"54aa5e637d7ac1495000ea7c"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"582b22f1fa290e086423e837"},{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"5310456355dfd5f7698d48c8"}],"content":"Je vous propose de créer vos propres sites [Node.js] armés pour un rendu de qualité côté client et avec très peu de JavaScript. Vous pourrez ensuite, petit à petit et à votre rythme, vous plonger dans la partie Back-end JavaScript offerte par [Node.js]. Tout ceci est possible grâce au module [npm] (node.js package manager) _[NodeAtlas]_.\n\n_[NodeAtlas]_ est un Framework JavaScript côté serveur orienté Front-end, c'est-à-dire qu'il permet de faire tourner des sites multilingues complets uniquement avec les parties *Vue* et *Route* d'activées le reste étant fait par le framework. Bien évidemment, en activant la partie *Contrôleur* et *Modèle* vous prendrez la main sur le JavaScript serveur et vous pourrez créer de grands sites de qualités avec tout ce que l'on est en droit d'attendre : compte utilisateur, envoi de message, chat en direct... ou de solides applications web couplées à des Frameworks Javascript Frontaux comme [Vue] ou même [simplement du code maison](https://blog.lesieur.name/structurer-le-javascript-de-son-site-avec-ou-sans-framework/) ! Mais commençons par le commencement.\n\nSachez que le blog sur lequel vous lisez cet article est fait avec _[NodeAtlas]_ ([obtenir les sources](https://github.com/NodeAtlas/BlogAtlas/)), ce qui lui permet de respecter facilement les standards [HTML](http://validator.w3.org/check?uri=http%3A%2F%2Fblog.lesieur.name%2Fdes-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas%2F\u0026charset=%28detect+automatically%29\u0026doctype=Inline\u0026group=0\u0026user-agent=W3C_Validator%2F1.3+http%3A%2F%2Fvalidator.w3.org%2Fservices)/[CSS](http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fblog.lesieur.name%2Fdes-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas%2F\u0026profile=css3\u0026usermedium=all\u0026warning=1\u0026vextwarning=\u0026lang=fr) et de [fournir sans efforts de hautes performances](./media/documents/GTmetrix-report-blog.lesieur.name-20161207T045101-DgGwcfC5.pdf).\n\n\u003e _[NodeAtlas]_ est designé pour :\n- **Les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement**.\n- [Les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).\n- Les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs.\n\n[npm]: https://www.npmjs.com/ \"npm is the package manager for node.\"\n[NodeAtlas]: https://www.npmjs.com/package/node-atlas/ \"Create MVC2 or Front-end-based websites easily.\"\n[Node.js]: http://nodejs.org/ \"Node.js is a platform built on Chrome's JavaScript runtime easily building fast, scalable network applications.\"\n[Vue]: https://vuejs.org/ \"The Progressive JavaScript Framework\"\n\n\n\n\n\n## Créer un projet et lancer son Hello World ##\n\nIl existe bien des manières d'utiliser le module _[NodeAtlas]_. Nous allons ici l'utiliser avec le `require` de [Node.js].\n\n### Installer le module NodeAtlas ###\n\nNous allons prendre en considération que vous [avez déjà installé Node.js et npm sur votre machine](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/).\n\n1. Créez vous n'importe où sur votre machine l'arborescences suivante :\n\n   ```\nproject-directory/\n└─ server.js\n```\n\n2. et remplissez le contenu de `server.js` avec le code suivant :\n\n   ```js\nrequire('node-atlas')().run({\n    browse: true\n});\n```\n\n   *Note: `browse` ouvrira votre navigateur.*\n\n3. puis placez-vous ensuite dans votre répertoire `project-directory` et ouvrez un invité de commande (sous Windows, dans l'explorer de dossier, maintenez la touche `shift` enfoncée et faites un clique droit ; sélectionnez ensuite l'option « Ouvrir une fenêtre de commandes ici »).\n\n4. Entrez la commande `npm install node-atlas` pour installer le module _[NodeAtlas]_ localement, dans votre dossier projet. Une fois installé, votre contenu de répertoire projet devrait ressembler à ceci :\n\n   ```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n└─ server.js\n```\n\n5. Enfin, testez le tout en tapant dans votre console `node server.js --lang fr-fr` pour obtenir le message « NodeAtlas est maintenant en français ! » suivit de « NodeAtlas c'est lancé en mode « Simple Serveur Web » car aucun « \u003cpath\\to\\\u003eproject-directory\\webconfig.json » n'a été trouvé. » ou de « NodeAtlas c'est arrêté car le port 80 est déjà écouté par une autre application. ». Une page web devrait également s'ouvrir à l'adresse « http://localhost/ » avec le message « Cannot GET / ».\n\n   *Note: `--lang` est ce qui a mis _[NodeAtlas]_ en français. Il n'est plus nécéssaire pour la suite.*\n\n\n\n### Le Hello World ###\n\nAffichons notre première page web ! Nous allons ajouter à la structure initiale un `webconfig.json` et une page `index.htm` dans le dossier des vues `views/` afin de créer une route.\n\n1. Nous créons donc le fichier `webconfig.json` que nous allons alimenter comme suit :\n\n   ```json\n{\n    \"routes\": {\n        \"/hello-world/\": \"index.htm\"\n    }\n}\n```\n\n   Nous venons donc de dire qu'à l'adresse « http://localhost/hello-world/ » nous afficherons le contenu de `index.htm`.\n\n   \u003e Si vous aviez eu le message « NodeAtlas c'est arrêté car le port 80 est déjà écouté par une autre application. », changez alors le port d'écoute de votre application avec le `webconfig.json` suivant :\n\n   \u003e ```json\n{\n    \"httpPort\": 7777,\n    \"routes\": {\n        \"/hello-world/\": \"index.htm\"\n    }\n}\n```\n\n  \u003e Cette fois, c'est l'adresse « http://localhost:7777/hello-world/ » qu'il faudra afficher pour avoir le contenu de `index.htm`.\n\n2. Nous créons ensuite le fameux fichier de contenu `index.htm` pour obtenir l'arborescence suivante :\n\n   ```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n├─ views/\n│  └─ index.htm\n└─ server.js\n```\n\n   et le remplissons de ce contenu :\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eThe Hello World Page !\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cp\u003eHello World !\u003c/p\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n3. Relançons la commande précédente :\n 1. En retournant dans votre invité de commande.\n 2. En tapant `Ctrl + C` pour couper l'instance en cours\n 3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js --lang fr-fr` (vous pouvez à présent seulement conserver `node server.js` car la langue restera en `fr-fr`).\n\n   Cela ouvre votre navigateur à l'adresse « http://localhost/ » (ou « http://localhost:7777/ ») avec un joli : « Cannot GET / ». Allez donc à l'addresse « /hello-world/ » comme celà : « http://localhost/hello-world/ » pour afficher votre « Hello World ! ».\n\n   [\u003cimg alt=\"Votre premier Hello World avec NodeAtlas\" src=\"./media/images/upload/nodeatlas-hello-world-mini.jpg\" width=\"560\" height=\"313\"\u003e](https://blog.haeresis.fr/upload/image/nodeatlas-hello-world.jpg)\n\n   \u003e Il est possible, si votre page d'atterissage est « /hello-world/ », de changer votre fichier `server.js` comme suit :\n   \u003e\n   \u003e ```js\n   \u003e require('node-atlas')().run({\n   \u003e     browse: \"/hello-world/\"\n   \u003e });\n   \u003e ```\n\n\n\n\n\n## Architecture HTML multilingue ##\n\n### Gestion des vues et inclusions ###\n\n#### La structure de l'exemple ####\n\nLa structure et le découpage que je vais vous proposer est arbitraire. _[NodeAtlas]_ vous laisse la totale liberté quand à la structure et au découpage de votre rendu. Pas d'id imposé, pas de classe... rien.\n\nVoici celle que je vous propose pour notre exemple :\n\n1. Le dossier du projet qui contient tous les fichiers.\n\n   ```\nproject-directory/\n```\n\n2. Le dossier contenant tous les modules npm de votre site.\n\n   ```\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n```\n\n3. Le dossier contenant tous les fichiers disponibles par demande HTTP sans nécésiter de référence de route dans le `webconfig.json`. Le dossier `assets/`.\n\n   ```\n├─ assets/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  └─ home.js\n│  ├─ stylesheets/\n│  │  ├─ common.css\n│  │  └─ home.css\n│  └─ media/\n│     └─ images/\n```\n\n4. Le dossier contenant chaque vue d'affichage différent pour votre site.\n\n   ```\n├─ views/\n│  ├─ home.htm\n│  ├─ default.htm\n```\n\n5. Le dossier contenant les composants HTML répétable sur plus d'une vue et ajouté via des `include`.\n\n   ```\n│  └─ partials/\n│     ├─ head.htm\n│     ├─ header.htm\n│     ├─ footer.htm\n│     └─ foot.htm\n```\n\n6. Les fichiers de la racines du projet. S'ajouterons à termes un `README.md` et un `package.json`.\n\n   ```\n├─ server.js\n└─ webconfig.json\n```\n\nCe qui nous donne en totalité :\n\n```\nproject-directory/\n├─ node_modules/\n│  ├─ node-atlas/\n│  ┊┉\n│\n├─ assets/\n│  ├─ javascripts/\n│  │  ├─ common.js\n│  │  └─ home.js\n│  ├─ stylesheets/\n│  │  ├─ common.css\n│  │  └─ home.css\n│  └─ media/\n│     └─ images/\n├─ views/\n│  ├─ home.htm\n│  ├─ default.htm\n│  └─ partials/\n│     ├─ head.htm\n│     ├─ header.htm\n│     ├─ footer.htm\n│     └─ foot.htm\n├─ server.js\n└─ webconfig.json\n```\n\nNous allons remplir ces fichiers, avant d'exécuter la suite. [Vous pouvez télécharger cette arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-assets-views.zip).\n\n#### Liste des routes ####\n\nVoici le fichier `webconfig.json` que nous allons alimenter :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": \"home.htm\",\n        \"/presentation/\": \"default.htm\",\n        \"/contact-us/\": \"default.htm\",\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\nDe manière à obtenir (pour le moment) :\n\n- Une page d'accueil derrière « `http://localhost/` »,\n- Une page de présentation derrière « `http://localhost/presentation/` »,\n- Une page de contact derrière « `http://localhost/contact-us/` »,\n- Et une page d'erreur derrière toutes les urls ne pointant pas vers un fichier du dossier `assets/`.\n\n_Note : si la route —initialement une `string`— se transforme en `Object`, alors la propriété dans cet objet (représentant la `string` initiale) est `view`._\n\n#### Structure des vues Home et Default ####\n\nPour commencer, nous n'aurons que deux vues différentes. Une vue présentant une liste d'éléments important à consulter et une vue permettant d'afficher *un titre* et *du texte*.\n\nVoici donc nos deux vues :\n\n**views/default.htm**\n\n```html\n\u003c!-- Sections communes stockées dans le dossier `views/partials/` et inclues dans notre vue. Ici la balise \u003chead\u003e avec les feuilles de style communes ainsi que le header. --\u003e\n\u003c?- include('partials/head.htm') ?\u003e\n\u003c?- include('partials/header.htm') ?\u003e\n\n        \u003csection class=\"overview\"\u003e\n            \u003ch1\u003ePresentation\u003c/h1\u003e\n\n            \u003cp\u003eThis is a presentation about subject of the website !\u003c/p\u003e\n        \u003c/section\u003e\n\n\u003c!-- Sections communes stockées dans le dossier `views/partials/` et inclues dans notre vue. Ici les scripts JavaScript communs et le footer. --\u003e\n\u003c?- include('partials/footer.htm') ?\u003e\n\u003c?- include('partials/foot.htm') ?\u003e\n```\n\n**views/home.htm**\n\n```html\n\u003c?- include('partials/head.htm') ?\u003e\n\n        \u003c!-- Liste des styles CSS disponibles pour la vue courante. --\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/home.css\"\u003e\n\n\u003c?- include('partials/header.htm') ?\u003e\n\n        \u003csection class=\"must-see\"\u003e\n            \u003ch1\u003eNot to be missed\u003c/h1\u003e\n\n            \u003cul\u003e\n                \u003cli\u003e\n                    \u003ch2\u003eWhat is our subject ?\u003c/h2\u003e\n                    \u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit.\u003c/p\u003e\n                    \u003cp\u003e\u003ca href=\"./presentation/\"\u003eGo to Presentation\u003c/a\u003e\u003c/p\u003e\n                \u003c/li\u003e\n                \u003cli\u003e\n                    \u003ch2\u003eContact us !\u003c/h2\u003e\n                    \u003cp\u003eQuibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.\u003c/p\u003e\n                    \u003cp\u003e\u003ca href=\"./contact-us/\"\u003eGo to Contact Information\u003c/a\u003e\u003c/p\u003e\n                \u003c/li\u003e\n                \u003cli\u003e\n                    \u003ch2\u003eWelcome !\u003c/h2\u003e\n                    \u003cp\u003eVero aliquam debitis, similique rerum hic asperiores.\u003c/p\u003e\n                    \u003cp\u003e\u003ca href=\"./\"\u003eGo to Home\u003c/a\u003e\u003c/p\u003e\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/section\u003e\n\n\u003c?- include('partials/footer.htm') ?\u003e\n\n        \u003c!-- Liste des controllers JavaScript client spécifiques à la vue courante. --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascripts/home.js\"\u003e\u003c/script\n\n\u003c?- include('partials/foot.htm') ?\u003e\n```\n\net voici les 4 vue partielles communes incluse dans ces deux vues :\n\n1. **views/partials/head.htm**\n\n   ```html\n\u003c!DOCTYPE html\u003e\n\u003c!-- Injection dynamique de la langue pour la route courante via `languageCode`. --\u003e\n\u003chtml lang=\"\u003c?= languageCode ?\u003e\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eTitle of the page\u003c/title\u003e\n\n        \u003c!-- Injection dynamique de l'url absolue du site jusqu'à sa racine. --\u003e\n        \u003cbase href=\"\u003c?= urlBasePath ?\u003e/\"\u003e\n\n        \u003c!-- Liste des Frameworks CSS disponibles pour toutes les pages. --\u003e\n        \u003clink rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\"\u003e\n\n        \u003c!-- Liste des styles CSS disponibles pour toutes les pages. --\u003e\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/common.css\"\u003e\n```\n\n2. **views/partials/header.htm**\n\n   ```html\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003c!-- Classe spécifique à chaque layout. --\u003e\n        \u003cdiv class=\"home layout\"\u003e\n            \u003cheader\u003e\n                \u003ch1\u003eWebsite main title\u003c/h1\u003e\n            \u003c/header\u003e\n```\n\n   *Note : nous verrons dans la partie suivante comment injecter une classe de layout différente en fonction du template qui injecte le composant.*\n\n3. **views/partials/footer.htm**\n\n   ```html\n            \u003cfooter\u003e\n                \u003cp\u003e©All rights not reserved at all !\u003c/p\u003e\n            \u003c/footer\u003e\n        \u003c/div\u003e\n\n        \u003c!-- Liste des librairies JavaScript disponibles pour toutes les vues. --\u003e\n        \u003cscript type=\"text/javascript\" src=\"//code.jquery.com/jquery-3.1.1.min.js\"\u003e\u003c/script\u003e\n```\n\n4. **views/partials/foot.htm**\n\n   ```html\n        \u003c!-- Liste des controllers JavaScript client qui affectent toutes les vues. --\u003e\n        \u003cscript type=\"text/javascript\" src=\"javascripts/common.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n   \u003e N'oubliez pas de remettre votre page de lancement à la racine :\n   \u003e \n   \u003e **server.js**\n   \u003e \n   \u003e ```js\n   \u003e require('node-atlas')().run({\n   \u003e     browse: \"/\" // ou true\n   \u003e });\n   \u003e ```\n\nÀ présent, ré-exécutez `node server.js` rapidement :\n1. En retournant dans votre invité de commande.\n2. En tapant `Ctrl + C` pour couper l'instance en cours\n3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js`.\n\n*Note : à notre niveau d'utilisation de _[NodeAtlas]_, seul un changement dans le `webconfig.json` nécessite un redémarrage du moteur*.\n\nComme vous pouvez le constater, toutes vos pages ont le même titre, la même classe de layout et même pire, les pages « /presentation/ », « /contact-us/ » ou les pages d'erreurs (comme « /a-non-existing-page/ ») sont identiques... pas très pratique tout cela. Bien qu'il soit possible d'étendre la configuration dédiée de chaque page dans le `webconfig` lui-même comme vous allez le voir ci-dessous, la section « Gestion des variations et du multilingue » de cet article sera dédiée à cette tâche.\n\n#### Étendre les routes du webconfig.json ####\n\nPour le petit exemple, si vous ne souhaitez pas activer les variations (voir plus loin dans cet article) pour quelques delta entre chaque page vous pouvez procéder comme suit :\n\n**webconfig.json**\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"_layout\": \"home\",\n            \"_title\": \"Home Page\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"_layout\": \"default\",\n            \"_title\": \"Presentation\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"_layout\": \"default\",\n            \"_title\": \"Contact Us\"\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n        \"statusCode\": 404,\n            \"_layout\": \"default\",\n            \"_title\": \"Page 404\"\n        }\n    }\n}\n```\n\n*Note : les noms de propriété pour étendre vos routes commence par des « _ » (cela est totalement arbitraire pour l'exemple) pour éviter qu'elles n'entrent en conflit avec de futures propriétées réservées par [NodeAtlas].*\n\n**views/partials/header.htm**\n\n```html\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003c!-- Utilisation de la valeur « home » ou « default » en fonction de la route. --\u003e\n        \u003cdiv class=\"\u003c?- routeParameters._layout ?\u003e layout\"\u003e\n            \u003cheader\u003e\n                \u003c!-- Utilisation de la valeur « Home Page », « Presentation », « Contact Us » ou « Page 404 » en fonction de la route. --\u003e\n                \u003ch1\u003e\u003c?- routeParameters._title ?\u003e\u003c/h1\u003e\n            \u003c/header\u003e\n```\n\nDe cette manière, la classe layout et le titre seront différent en fonction de la page.\n\n\n\n\n### Gestion des variations et du multilingue ###\n\nÉtendre les routes avec vos propres variables de webconfig est plus une rustine qu'une véritable bonne pratique. Cela peut faire l'affaire pour une ou deux variables cependant le but d'une vue est d'être alimenté par des données transversales et différentes en fonction de la route : ces données sont les variations !\n\n#### Mettre en place des fichiers de variations pour une même vue ####\n\nNotre nouveau `webconfig.json` est le suivant :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net nous avons donc dans notre structure le nouveau dossier :\n\n```\n├─ variations/\n│  ├─ home.json\n│  ├─ presentation.json\n│  ├─ contact-us.json\n│  └─ page-404.json\n```\n\n[Vous pouvez télécharger ce complément d'arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-variations.zip).\n\nCela fait que nous avons à présent des variables utilisables pour chaque vue via la propriété `variation`. C'est vous qui décidez quelles sont les variables que vous souhaitez vous créer pour pouvoir par la suite les utiliser dans vos vues. Voyons de plus prèt tous ses fichiers.\n\nAvec les 3 fichiers de variations suivant :\n\n**variations/presentation.json**\n\n```json\n{\n    \"layout\": \"default presentation\",\n    \"title\": \"Presentation\",\n    \"content\": \"\u003cp\u003eThis is a presentation about subject of the website !\u003c/p\u003e\"\n}\n```\n\n**variations/contact-us.json**\n\n```json\n{\n    \"layout\": \"default contact-us\",\n    \"title\": \"Contact Us\",\n    \"content\": \"\u003cp\u003ePlease contact us to fake@email.here.\u003c/p\u003e\"\n}\n```\n\n**variations/page-404.json**\n\n```json\n{\n    \"layout\": \"default page-404\",\n    \"title\": \"Page 404\",\n    \"content\": \"\u003cp\u003eThis page do not exist !\u003c/p\u003e\"\n}\n```\n\non peut alimenter la vue suivante :\n\n**views/default.html**\n\n```html\n\u003c?- include('partials/head.htm') ?\u003e\n\u003c?- include('partials/header.htm') ?\u003e\n\n        \u003csection class=\"overview\"\u003e\n            \u003c!-- Retourne la valeur `title` du fichier json référencé dans la propriété `variation` de la route. --\u003e\n            \u003ch1\u003e\u003c?- specific.title ?\u003e\u003c/h1\u003e\n\n            \u003c!-- Retourne la valeur `content` du fichier json référencé dans la propriété `variation` de la route. --\u003e\n            \u003c?- specific.content ?\u003e\n        \u003c/section\u003e\n\n\u003c?- include('partials/footer.htm') ?\u003e\n\u003c?- include('partials/foot.htm') ?\u003e\n```\n\nainsi le contenu des pages est différent en fonction de si l'on appel :\n\n- « `http://localhost/presentation/` »,\n- « `http://localhost/contact-us/` » ou\n- Une page qui n'existe pas « `http://localhost/a-non-existing-page/` ».\n\nDe la même manière le fichier de variation :\n\n**variations/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Home Page\",\n    \"overview\": [{\n        \"title\": \"What is our subject ?\",\n        \"content\": \"\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit.\u003c/p\u003e\",\n        \"link\": {\n            \"href\": \"./presentation/\",\n            \"content\": \"Go to Presentation\"\n        }\n    }, {\n        \"title\": \"Contact us !\",\n        \"content\": \"\u003cp\u003eQuibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.\u003c/p\u003e\",\n        \"link\": {\n            \"href\": \"./contact-us/\",\n            \"content\": \"Go to Contact Information\"\n        }\n    }, {\n        \"title\": \"Welcome !\",\n        \"content\": \"\u003cp\u003eVero aliquam debitis, similique rerum hic asperiores.\u003c/p\u003e\",\n        \"link\": {\n            \"href\": \"./\",\n            \"content\": \"Go to Home\"\n        }\n    }]\n}\n```\n\nalimente le template :\n\n**views/home.html**\n\n```html\n\u003c?- include('partials/head.htm') ?\u003e\n\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/home.css\"\u003e\n\n\u003c?- include('partials/header.htm') ?\u003e\n\n        \u003csection class=\"must-see\"\u003e\n\n            \u003c!-- Le tiret indique que l'on veut afficher la valeur et interpréter les éventuels éléments HTML qu'elle contient. --\u003e\n            \u003ch1\u003e\u003c?- specific.title ?\u003e\u003c/h1\u003e\n\n            \u003cul\u003e\n\n                \u003c!-- Voici comment boucler sur le tableau `specific.overview` du fichier de variation. --\u003e\n                \u003c? for (var i = 0, l = specific.overview.length; i \u003c l; i++) { ?\u003e\n                \u003cli\u003e\n                    \u003ch2\u003e\u003c?- specific.overview[i].title ?\u003e\u003c/h2\u003e\n                    \u003c?- specific.overview[i].content ?\u003e\n\n                    \u003c!-- L'égale indique que l'on veut afficher la valeur sans interpréter les éventuels éléments HTML qu'elle contient. --\u003e\n                    \u003cp\u003e\u003ca href=\".\u003c?= specific.overview[i].link.href ?\u003e\"\u003e\u003c?- specific.overview[i].link.content ?\u003e\u003c/a\u003e\u003c/p\u003e\n                \u003c/li\u003e\n                \u003c? } ?\u003e\n            \u003c/ul\u003e\n        \u003c/section\u003e\n\n\u003c?- include('partials/footer.htm') ?\u003e\n\n        \u003cscript type=\"text/javascript\" src=\"javascripts/home.js\"\u003e\u003c/script\n\n\u003c?- include('partials/foot.htm') ?\u003e\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n1. En retournant dans votre invité de commande.\n2. En tapant `Ctrl + C` pour couper l'instance en cours\n3. En appuyant sur la touche « haut » pour ré-afficher la commande `node server.js`.\n\n#### Gestion de sites multilingues avec les variations ####\n\nAvec cette mécanique, nous pouvons facilement gérer des sites en plusieurs langues. Pour cela nous allons activer deux mécanismes :\n\n- La possibilité d'avoir un fichier de variation commun à l'ensemble des pages.\n- La possiblilité d'indiquer un `languageCode` différent en fonction de la route utilisée.\n\nVoyons cela avec le fichier `webconfig.json` suivant :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"/page-404/\",\n    \"variation\": \"common.json\",\n    \"routes\": {\n        \"/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"/contact-us/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"/francais/\": {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/presentation/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/contactez-nous/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"/francais/*\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"languageCode\": \"fr-fr\",\n        \"statusCode\": 404\n        },\n        \"/page-404/\": {\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net le nouveau dossier de variation suivant :\n\n```\n├─ variations/\n│  ├─ common.json\n│  ├─ home.json\n│  ├─ presentation.json\n│  ├─ contact-us.json\n│  ├─ page-404.json\n│  └─ fr-fr/\n│     ├─ common.json\n│     ├─ home.json\n│     ├─ presentation.json\n│     ├─ contact-us.json\n│     └─ page-404.json\n```\n\n[Vous pouvez télécharger ce complément d'arborescence à vide ici pour gagner du temps](https://blog.lesieur.name/media/scripts/upload/project-directory-variations-fr-fr.zip).\n\navec le nouveau fichier `en-gb` :\n\n**variations/common.json**\n\n```json\n{\n    \"title\": \"My first Website !\",\n    \"copyright\": \"©All rights not reserved at all !\"\n}\n```\n\net son équivalent `fr-fr` :\n\n**variations/fr-fr/common.json**\n\n```json\n{\n    \"title\": \"Mon premier site web !\",\n    \"copyright\": \"©Tous les droits ne sont pas réservés du tout !\"\n}\n```\n\net les versions complètes en français de :\n\n**variations/fr-fr/presentation.json**\n\n```json\n{\n    \"layout\": \"default presentation\",\n    \"title\": \"Présentation\",\n    \"content\": \"\u003cp\u003eVoici une présentation à propos du site de notre projet.\u003c/p\u003e\"\n}\n```\n\n**variations/fr-fr/contact-us.json**\n\n```json\n{\n    \"layout\": \"default contact-us\",\n    \"title\": \"Contactez-nous\",\n    \"content\": \"\u003cp\u003eMerci de nous contacter à l'adresse fake@email.here.\u003c/p\u003e\"\n}\n```\n\n**variations/fr-fr/page-404.json**\n\n```json\n{\n    \"layout\": \"default page-404\",\n    \"title\": \"Page 404\",\n    \"content\": \"\u003cp\u003eCette page n'existe pas !\u003c/p\u003e\"\n}\n```\n\n**variations/fr-fr/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Page d'accueil\",\n    \"overview\": [{\n        \"title\": \"Qu'est-ce que notre projet ?\",\n        \"link\": {\n            \"href\": \"./francais/presentation/\",\n            \"content\": \"Allez à la présentation\"\n        }\n    }, {\n        \"title\": \"Contactez-nous !\",\n        \"link\": {\n            \"href\": \"./francais/contactez-nous/\",\n            \"content\": \"Aller aux informations de contact\"\n        }\n    }, {\n        \"title\": \"Bienvenue !\",\n        \"link\": {\n            \"href\": \"./francais/\",\n            \"content\": \"Aller à l'accueil\"\n        }\n    }]\n}\n```\n\n*Note : vous remarquerez que les valeurs de `specific.overview[i].content` n'ont pas été traduites. Dans ce cas là, c'est la valeur du dossier parent qui sera prise en compte, dans notre cas la version `en-gb`.*\n\nEn ce qui concerne les vues, pas de changement puisqu'ils avaient déjà été effectués. Cependant, nous allons rendre dynamique les valeurs dans nos vues partielles `partials/header.htm` et `partials/footer.htm` à partir de notre fichier de vartiation `common.json`.\n\n**views/partials/header.htm**\n\n```html\n    \u003c/head\u003e\n    \u003cbody\u003e\n\n        \u003c!-- Cette valeur sera différente en fonction de la route car elle provient d'un fichier spécifique. --\u003e\n        \u003cdiv class=\"\u003c?= specific.layout ?\u003e layout\"\u003e\n            \u003cheader\u003e\n\n                \u003c!-- Cette valeur sera identique pour toutes les routes car elle provient d'un fichier commun. --\u003e\n                \u003ch1\u003e\u003c?- common.title ?\u003e\u003c/h1\u003e\n            \u003c/header\u003e\n```\n\n**views/partials/footer.htm**\n\n```html\n            \u003c!-- Cette valeur sera identique pour toutes les routes car elle provient d'un fichier commun. --\u003e\n            \u003cfooter\u003e\n                \u003cp\u003e\u003c?- common.copyright ?\u003e\u003c/p\u003e\n            \u003c/footer\u003e\n        \u003c/div\u003e\n        \u003cscript type=\"text/javascript\" src=\"//code.jquery.com/jquery-3.1.1.min.js\"\u003e\u003c/script\u003e\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n\n- La page d'accueil `en-gb` derrière « http://localhost/ »,\n- La page de présentation `en-gb` derrière « http://localhost/presentation/ »,\n- La page de contact `en-gb` derrière « http://localhost/contact-us/ »,\n- Les page d'erreur `en-gb` derrière toutes les urls ne pointant pas vers un fichier du dossier `assets/` et n'étant pas dans `francais/`.\n- La page d'accueil `fr-fr` derrière « http://localhost/francais/ »,\n- La page de présentation `fr-fr` derrière « http://localhost/francais/presentation/ »,\n- La page de contact `fr-fr` derrière « http://localhost/francais/contactez-nous/ »,\n- Les page d'erreur `fr-fr` derrière toutes les urls pointant vers un chemin de `francais/` non listé avant.\n\n\n\n\n\n## Pour aller plus loin ##\n\n### Des urls dynamiques ###\n\nIl ne vous aura peut-être pas échappé que si vous changez l'intégralité de vos urls dans le fichier `webconfig.json`, tous vos liens ne seront plus valides à travers tous vos fichiers de variations. Voici la marche à suivre pour rendre tous vos liens dynamiques !\n\nChangeons notre `webconfig.json` comme suit (`pageNotFound` et chaque clé dans `routes`) :\n\n```json\n{\n    \"languageCode\": \"en-gb\",\n    \"pageNotFound\": \"error\",\n    \"variation\": \"common.json\",\n    \"routes\": {\n        \"home\": {\n            \"url\": \"/\",\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        },\n        \"presentation\": {\n            \"url\": \"/presentation/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\"\n        },\n        \"contact-us\": {\n            \"url\": \"/contact-us/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\"\n        },\n        \"home-fr-fr\": {\n            \"url\": \"/francais/\",\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"presentation-fr-fr\": {\n            \"url\": \"/francais/presentation/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"presentation.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"contact-us-fr-fr\": {\n            \"url\": \"/francais/contactez-nous/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"contact-us.json\",\n            \"languageCode\": \"fr-fr\"\n        },\n        \"error-fr-fr\": {\n            \"url\": \"/francais/*\",\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"languageCode\": \"fr-fr\",\n            \"statusCode\": 404\n        },\n        \"error\": {\n            \"url\": \"/page-404/\",\n            \"view\": \"default.htm\",\n            \"variation\": \"page-404.json\",\n            \"statusCode\": 404\n        }\n    }\n}\n```\n\net voyons les modifications d'appel pour les liens dans la vue `home.htm` :\n\n**views/home.html**\n\n```html\n\u003c?- include('partials/head.htm') ?\u003e\n\n        \u003clink rel=\"stylesheet\" href=\"stylesheets/home.css\"\u003e\n\n\u003c?- include('partials/header.htm') ?\u003e\n\n        \u003csection class=\"must-see\"\u003e\n\n            \u003ch1\u003e\u003c?- specific.title ?\u003e\u003c/h1\u003e\n\n            \u003cul\u003e\n                \u003c? for (var i = 0, l = specific.overview.length; i \u003c l; i++) { ?\u003e\n                \u003cli\u003e\n                    \u003ch2\u003e\u003c?- specific.overview[i].title ?\u003e\u003c/h2\u003e\n                    \u003c?- specific.overview[i].content ?\u003e\n\n                    \u003c!-- On réclame la clé `specific.overview[i].link.href` dans la liste des routes `webconfig.routes` pour en afficher son `url`. --\u003e\n                    \u003cp\u003e\u003ca href=\".\u003c?= webconfig.routes[specific.overview[i].link.href].url ?\u003e\"\u003e\u003c?- specific.overview[i].link.content ?\u003e\u003c/a\u003e\u003c/p\u003e\n                \u003c/li\u003e\n                \u003c? } ?\u003e\n            \u003c/ul\u003e\n        \u003c/section\u003e\n\n\u003c?- include('partials/footer.htm') ?\u003e\n\n        \u003cscript type=\"text/javascript\" src=\"javascripts/home.js\"\u003e\u003c/script\n\n\u003c?- include('partials/foot.htm') ?\u003e\n```\n\nIl faudra ensuite placer les bonnes clés dans les propriétés `overview[i].link.href` de vos fichiers `common.js` :\n\n**variations/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Home Page\",\n    \"overview\": [{\n        \"title\": \"What is our subject ?\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\",\n        \"link\": {\n            \"href\": \"presentation\",\n            \"content\": \"Go to Presentation\"\n        }\n    }, {\n        \"title\": \"Contact us !\",\n        \"content\": \"Quibusdam eaque nemo dolorum labore dolor repellendus minus, magnam asperiores, nostrum, nisi porro, molestiae ipsa.\",\n        \"link\": {\n            \"href\": \"contact-us\",\n            \"content\": \"Go to Contact Information\"\n        }\n    }, {\n        \"title\": \"Welcome !\",\n        \"content\": \"Vero aliquam debitis, similique rerum hic asperiores.\",\n        \"link\": {\n            \"href\": \"home\",\n            \"content\": \"Go to Home\"\n        }\n    }]\n}\n```\n\n**variations/fr-fr/home.json**\n\n```json\n{\n    \"layout\": \"home\",\n    \"title\": \"Page d'accueil\",\n    \"overview\": [{\n        \"title\": \"Qu'est-ce que notre projet ?\",\n        \"link\": {\n            \"href\": \"presentation-fr-fr\",\n            \"content\": \"Allez à la présentation\"\n        }\n    }, {\n        \"title\": \"Contactez-nous !\",\n        \"link\": {\n            \"href\": \"contact-us-fr-fr\",\n            \"content\": \"Aller aux informations de contact\"\n        }\n    }, {\n        \"title\": \"Bienvenue !\",\n        \"link\": {\n            \"href\": \"home-fr-fr\",\n            \"content\": \"Aller à l'accueil\"\n        }\n    }]\n}\n```\n\nÀ présent, ré-exécutez `node server.js` pour tester.\n\n**[Vous pouvez récupérer l'intégralité du code de cet article dans cette archive pour tester](https://blog.lesieur.name/media/scripts/upload/project-directory.zip).**\n\n### D'autres bonnes pratiques ###\n\nVous trouverez d'autres fonctionnalités de _[NodeAtlas]_ sur le site officiel de [NodeAtlas](https://node-atlas.js.org/).\n\nÀ présent passons à notre second article pour bien débuter avec _[NodeAtlas]_ et dédiés :\n\n- [aux développeur Front-end, en expliquant comment générer des maquettes HTML à partir d'un site *NodeAtlas* ou comment rendre automatique les tâches liées à la performance côté client](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).","dates":{"published":{"$date":"2015-01-09T07:50:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".text p img {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 100%;\n}","title":"Des sites web Node.js pour débuter en JavaScript serveur avec NodeAtlas","urn":"des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas","description":"Je vous propose de créer vos propres sites Node.js armés pour un rendu de qualité côté client et avec très peu de JavaScript.","image":"https://blog.lesieur.name/media/images/upload/nodeatlas-hello-world-mini.jpg"}
{"_id":{"$oid":"54bcdc3c1bee52d944ae9aac"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48cc"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"582b22f1fa290e086423e837"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48c0"}],"content":"\u003cfigure\u003e\n    \u003cimg width=\"305\" height=\"163\" style=\"max-width: 305px; height: auto\"src=\"https://www.lesieur.name/media/images/node-atlas.png\" alt=\"NodeAtlas\"\u003e\n\u003c/figure\u003e\n\n\u003e *NodeAtlas* est un framework JavaScript MVC(2) côté serveur vous permettant de créer des sites évolutifs, performants et conformes au W3C. C'est-à-dire qu'il permet de faire tourner des sites multilingues indexables ou de créer des maquettes HTML passant la validation W3C uniquement avec des vues mais également de créer de gros sites et apps web orientés composants et / ou orientés services en respectant les nouveaux standards avec son système de point d'ancrage.\n\n\n\n\n\n## NodeAtlas c'est : ##\n\n- La porte d'entrée aux développeurs front-end dans le monde de [Node.js](https://nodejs.org/en/).\n- Du tout JavaScript ; pour les débutants venant des mondes PHP (Laravel) / Ruby (Rails) / Python (Django) / .NET / Java ou pour les experts JS.\n- De l'évolutivité avec :\n   - des vues sans se préoccuper des contrôleurs,\n   - la prise en main progressive de contrôleurs et points d'ancrage,\n   - de l'internationalisation (i18n) et de la localisations (l10n) rapide,\n   - la puissance d'Express (serveur web) et Socket.IO (échange client-serveur temps réel) pré-configuré, simple et ajustable,\n   - les préprocesseurs EJS, Pug, Less et Stylus embarqués et prêt à l'emploi,\n   - des outils interne de génération HTML sans serveur ou d'empaquetage, minifications, offuscations, optimisations de CSS, JS et images,\n   - des parties cliente/serveur adaptables pour de l'isomorphisme et du rendu côté serveur avec des outils de votre choix comme Vue ou React,\n   - ou encore ; de la manipulation de DOM côté serveur, du debug serveur dans le navigateur, de l'HTTPs facile à mettre en place.\n- De la combinaison d'instance NodeAtlas pour des architectures basés sur le service comme l'utilisation sous forme d'API REST,\n- Tous les modules npm, middleware Express/Socket.IO, des plugins utilisables (sessions, bases de données SQL/NoSQL, répartition de charge, proxy, développement à chaud).\n- [Un guide pas à pas français et international](https://node-atlas.js.org/), avec un support communautaire sur [Gitter](https://gitter.im/NodeAtlas) (Chat) [FR](https://gitter.im/NodeAtlas/Aide)/[EN](https://gitter.im/NodeAtlas/Help).\n- Des passionnés de web et de JavaScript !\n- Et peut-être bientôt vous ?\n\n\n\n\n\n## Site officiel de NodeAtlas ##\n\n\u003e **[Pour une documentation complète, vous pouvez vous rendre sur le site officiel de NodeAtlas](https://node-atlas.js.org/)**.\n\n\n\n\n\n## Documentation ##\n\n### À propos de NodeAtlas ##\n\n- [README.md complet et détaillé sur GitHub](https://github.com/Haeresis/NodeAtlas/blob/gh-pages/README.fr.md)\n- [Pour maintenir et développer node-atlas.js](http://node-atlas.js.org/doc/index.html)\n- [Discuter sur le chat ou demander de l'aide pour NodeAtlas](https://gitter.im/NodeAtlas/Aide)\n\n\n\n### Exemple de sites ##\n\n- [Génération et maintenance de maquette HTML](https://github.com/NodeAtlas/ResumeAtlas/).\n- [Test et Documentation d'Interface Ulilisateur](https://github.com/NodeAtlas/DocAtlas/).\n- [Site Node.js avec Websocket et PopState](https://github.com/NodeAtlas/BookAtlas/).\n- [Site Node.js avec base MongoDB et Redis](https://github.com/NodeAtlas/BlogAtlas/).\n- [Exemple d'API REST](https://github.com/NodeAtlas/ApiAtlas/).\n- [Et encore plus sur la page Github de la communauté NodeAtlas](https://github.com/NodeAtlas/) !\n\n\n\n### Articles ###\n\n- [Article pour les débutants en JavaScript qui souhaitent se mettre au Node.js rapidement](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/).\n- [Article pour les experts Front-end, en leur permettant de créer des sites web ou des maquettes HTML de qualité](https://blog.lesieur.name/creer-et-maintenir-des-maquettes-html-avec-node-atlas/).\n- Article pour les experts en développement web et/ou JavaScript en leur permettant de créer des sites web et applications JavaScript à hautes performances serveurs (prochainement...).","dates":{"published":{"$date":"2015-01-18T14:28:00.000Z"},"updated":[]},"description":"NodeAtlas permet de faire tourner des sites multilingues indexables ou de créer des maquettes HTML passant la validation W3C.","image":"https://www.lesieur.name/media/images/node-atlas.png","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"NodeAtlas, le Framework JavaScript MVC(2), SEO et W3C compliant.","urn":"nodeatlas-le-framework-nodejs-mvc2-oriente-front-end"}
{"_id":{"$oid":"54cc92c2a36eedac79a3a599"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bc"}],"content":"Nous allons voir dans cet article comment créer rapidement un système permettant de surveiller si une touche du clavier est enfoncée lors de l'exécution d'une action dans votre navigateur ou mieux, si une série de touche est enfoncée pour autoriser / lancer l'exécution d'une action lors de la pression, par exemple, sur « Ctrl + Alt + E ».\n\n\u003cfigure\u003e\n    \u003cimg width=\"560\" height=\"458\" src=\"media/images/upload/ctrlalte.jpg\" alt=\"Ctrl + Alt + E\" style=\"max-width: 100%;height: auto\"\u003e\n    \u003cfigcaption\u003e\u003ca href=\"https://s-media-cache-ak0.pinimg.com/736x/5e/11/0f/5e110f0cda1acb3fdba06b38aab93586.jpg\"\u003eImage originale ici\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nEt comme toujours, on va devoir jouer avec un peu de JavaScript ! Si vous n'avez pas trop le temps de jouer, [le code qui vous intéresse probablement se trouve ici](https://blog.lesieur.name/comment-gerer-les-raccourcis-clavier-en-javascript/#avec-jquery)\n\n\n\n\n\n## Détecter qu'une ou plusieurs touches sont enfoncées ##\n\nNous allons implémenter dans cette partie la fonctionnalité tant convoitée, mais de différentes manières. Cela vous ferra un exercice JavaScript intéressant. Par exemple sur cette page, appuyez sur « Ctrl + Alt + E ».\n\n\n\n### Avec les méthodes JavaScript en ligne `onkeydown` et `onkeyup` ###\n\nPour les anciens, vous les connaissez peut-être pour les avoir croisées au détour d'un attribut HTML comme ici : `\u003cinput type=\"text\" onkeydown=\"doSomething()\" /\u003e`. Ce qu'il faut retenir de la méthode en ligne pour les évènements, c'est qu'elle ne garde que la dernière affectation de code, et qu'elle écrase toutes celles associées précédemment. Voyons plus bas cette implémentation.\n\n\u003e [Tester cet exemple de code en live sur cette page](https://codepen.io/Haeresis/pen/KwvOPB).\n\n```js\n/*\n * Nous sommes dans le scope global,\n * aussi l'objet `keys` est accessible partout\n * dans le code à travers tous les fichiers JavaScript.\n*/\nvar keys = {};\n\n/*\n * Étant dans le code global,\n * `window.onkeydown` est identique à `this.onkeydown`\n * lui même identique à `onkeydown`.\n * On associe ci-dessous la même fonction lorsqu'une\n * touche est appuyée, et lorsqu'une touche est relachée.\n*/\nonkeydown = onkeyup = function (e) {\n\n    /*\n     * Si `e` n'existe pas,\n     * nous somme probablement dans un vieux IE.\n     * On affecte alors `event` à `e`.\n     */\n    e = e || event;\n\n    /*\n     * Si `e.which` n'existe pas,\n     * On affecte alors l'alternative `e.keyCode` à `e.which`.\n     */\n    e.which = e.which || e.keyCode;\n\n    /*\n     * Si la fonction courante est executée,\n     * quand une touche est enfoncée,\n     * `e.type === 'keydown'` renverra `true`\n     * sinon elle renverra `false`.\n     * Il suffit alors d'assigner chaque état\n     * dans le tableau `keys` pour chaque\n     * touche `e.keyCode`.\n     */\n    keys[e.which] = e.type === 'keydown';\n\n    /*\n     * Cette zone sera exécutée lorsque les touches\n     * Ctrl (17), Alt (18) et E (69)\n     * seront enfoncée en même temps\n     * car l'objet `keys` vaudra alors :\n     * {\n     *  17: true,\n     *  18: true,\n     *  69: true\n     * }\n     */\n    if (keys[17] \u0026\u0026 keys[18] \u0026\u0026 keys[69]) {\n\n      /*\n       * Affichera dans la console (F12, onglet console)\n       * le texte « Ctrl + Alt + E ».\n       */\n      console.log('Ctrl + Alt + E');\n    }\n}\n\n/*\n * Si l'on clique dans le navigateur...\n */\nonclick = function () {\n\n    /*\n     * ...alors que les touches\n     * Ctrl (17), Alt (16) et E (69)\n     * sont appuyées...\n     */\n    if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n\n        /*\n         * ...on affichera dans la console\n         * le texte « Ctrl + Alt + E ».\n         */\n        console.log('Ctrl + Shift + E');\n    }\n}\n```\n\n\n\n### Avec les écouteurs d'évènement JavaScript ###\n\nÉtant donné que nous accrochons nos évènements à l'objet global `window`, le mieux est d'abonner les évènements à des écouteurs plutôt que d'utiliser les méthodes en ligne, comme cela, nous pourrons par la suite abonner d'autres fonctions.\n\nCela se fait avec `addEventListener` (ou `attachEvent` sur les anciens IE).\n\n\u003e [Tester cet exemple de code en live sur cette page](https://codepen.io/Haeresis/pen/LEjwWN).\n\n```js\nvar keys = {};\n\n/*\n * Mise du code appelé en commun dans une\n * fonction que nous allons\n * abonnée à un écouteur d'évènement.\n */\nfunction trackMultipleKeyStroke (e) {\n    e = e || event;\n    e.which = e.which || e.keyCode;\n\n    keys[e.which] = e.type === 'keydown';\n\n    /*\n     * Cette partie constitue le code exécuté quand\n     * Ctrl (17), Alt (18) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] \u0026\u0026 keys[18] \u0026\u0026 keys[69]) {\n        console.log('Ctrl + Alt + E');\n    }\n}\n\n/*\n * Fonction de rétro-compatibilité pour\n * les navigateurs Internet Explorer.\n * Elle marchera dans tous les navigateurs\n * et demandera qui s'abonne, à quel évènement\n * et ce qu'il se passe quand l'évènement est\n * appelé / levé.\n */\nfunction addEvent(element, event, func) {\n\n    /*\n     * Avons nous à faire à un vieil Internet Explorer ?\n     */\n    if (element.attachEvent) {\n\n        /*\n         * Abonnons nous alors comme Internet Explorer le propose.\n         */\n        return element.attachEvent('on' + event, func);\n    } else {\n\n        /*\n         * Nous nous abonnons comme la spécification ECMAScript le propose.\n         */\n        return element.addEventListener(event, func, false);\n    }\n}\n\n/*\n * Appel de la fonction de rétro-compatibilité\n * que nous venons de créer pour abonner `window`\n * au évènement `keydown` et `keyup`\n */\naddEvent(window, \"keydown\", trackMultipleKeyStroke);\naddEvent(window, \"keyup\", trackMultipleKeyStroke);\n\n/*\n * Cette partie constitue le code exécuté quand\n * on clique dans la page...\n */\naddEvent(window, \"click\", function () {\n\n    /*\n     * ...si Ctrl (17), Shift (16) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n        console.log('Ctrl + Shift + E');\n    }\n});\n```\n\n\n\n### Avec jQuery ###\n\nComme toujours, pour ne pas vous soucier de la compatibilité et écrire moins de code, vous pouvez faire appel à la bibliothèque [jQuery](https://jquery.com/). Comme le code proposé ci-dessous.\n\n\u003e [Tester cet exemple de code en live sur cette page](https://codepen.io/Haeresis/pen/XJavgr).\n\n```js\nvar keys = {};\n\n$(window).on(\"keyup keydown\", function (e) {\n    keys[e.which] = e.type === 'keydown';\n\n    /*\n     * Cette partie constitue le code exécuté quand\n     * Ctrl (17), Alt (18) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] \u0026\u0026 keys[18] \u0026\u0026 keys[69]) {\n        console.log('Ctrl + Alt + E');\n    }\n\n    /*\n     * Cette partie constitue le code exécuté quand\n     * on clique dans la page...\n     */\n}).click(function () {\n\n    /*\n     * ...si Ctrl (17), Shift (16) et E (69)\n     * sont enfoncées.\n     */\n    if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n        console.log('Ctrl + Shift + E');\n    }\n});\n```\n\n\n\n\n\n## 4 points à savoir ##\n\nIl y a quelques points à savoir pour ensuite utiliser ces raccourcis clavier en toutes circonstances.\n\n\n\n1. ### Perte de focus ###\n\n   Quand vous levez une popup via `alert` ou plus globalement que vous perdez le focus, l'évènement `keyup` n'est pas levé ce qui laisse penser au navigateur que vous maintenez encore les touches alors que ce n'est peut-être plus le cas. Pour remédier à cela, l'astuce est de remettre à vide l'objet global `keys`.\n\n   \u003e Ainsi le code ci-dessous produit le bug : *`voyez-plutôt`*\n   \u003e \n   \u003e ```js\n   \u003e var keys = {};\n   \u003e $(window).on(\"keyup keydown\", function (e) {\n   \u003e     e = e || event;\n   \u003e     keys[e.keyCode] = e.type === 'keydown';\n   \u003e }).click(function () {\n   \u003e     /*\n   \u003e      * Quand vous ré-appuierez sur une des trois touches de la combinaison,\n   \u003e      * même sans appuyer sur les autres touches,\n   \u003e      * l'alerte se relancera car elle empêche les valeurs de l'objet\n   \u003e      * contenant les touches de repasser à `false` quand vous les relâchés.\n   \u003e      */\n   \u003e     if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n   \u003e         alert('Ctrl + Shift + E');\n   \u003e     }\n   \u003e });\n   \u003e ```\n\n   La solution est donc de vider toutes les valeurs pour qu'elles soient interprétées comme\n`false` après l'appel de la fonction faisant perdre le focus.\n\n   \u003e Ainsi le code ci-dessous résout le bug : **`voyez-plutôt`**\n   \u003e \n   \u003e ```js\n   \u003e var keys = {};\n   \u003e $(window).on(\"keyup keydown\", function (e) {\n   \u003e     e = e || event;\n   \u003e     keys[e.keyCode] = e.type === 'keydown';\n   \u003e }).click(function () {\n   \u003e     if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n   \u003e         alert('Ctrl + Shift + E');\n   \u003e \n   \u003e         /*\n   \u003e          * Remet les valeurs des touches à `false` en les vidants.\n   \u003e          */\n   \u003e         keys = {};\n   \u003e     }\n   \u003e });\n   \u003e ```\n\n2. ### Plusieurs écoutes, bon ordre ###\n\n   Si vous souhaiter lister vos raccourcis clavier, il faut lister vos combinaisons de touches de la séquence la plus longue à la séquence la plus courte avec des `else if` sinon vous n’arriverez jamais à faire fonctionner les combinaisons les plus longues.\n\n   \u003e Ci-dessous la seconde combinaison ne sera jamais appelée : *`voyez-plutôt`*\n   \u003e \n   \u003e ```js\n   \u003e if (keys[17] \u0026\u0026 keys[69]) {\n   \u003e     console.log('Ctrl + E');\n   \u003e } else if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n   \u003e     console.log('Ctrl + Shift + E');\n   \u003e }\n   \u003e ```\n\n   La bonne pratique est donc la suivante.\n\n   \u003e Ci-dessous la seconde combinaison fonctionnera : **`voyez-plutôt`**\n   \u003e \n   \u003e ```js\n   \u003e if (keys[17] \u0026\u0026 keys[16] \u0026\u0026 keys[69]) {\n   \u003e     console.log('Ctrl + Shift + E');\n   \u003e } else if (keys[17] \u0026\u0026 keys[69]) {\n   \u003e     console.log('Ctrl + E');\n   \u003e }\n   \u003e ```\n\n3. ### Prendre la main sur les raccourcis du navigateur ###\n\n   Parfois, votre combinaison de touche ouvre une action par défaut programmée par le navigateur. Si vous souhaitez l'annuler, faites comme suit :\n\n   ```js\nvar keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    keys[e.keyCode] = e.type === 'keydown';\n\n    if (keys[18] \u0026\u0026 keys[78]) {\n\n        /*\n         * Normalement, une barre s'ouvre sur Firefox,\n         * car « Alt + N » est le raccourci utilisé pour cela.\n         * Mais en ajoutant `e.preventDefault()` c'est bon !\n         */\n        e.preventDefault();\n        console.log('Alt + N');\n    }\n});\n```\n\n4. ### Certains raccourcis bloqués ###\n\n   Parfois, votre combinaison de touche est impossible à suchargée. C'est le cas par exemple pour la combinaisons « Ctrl + N », « Ctrl + W » ou encore « Ctrl + T » :\n\n   ```js\nvar keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    keys[e.keyCode] = e.type === 'keydown';\n\n    if (keys[17] \u0026\u0026 keys[84]) {\n\n        e.preventDefault();\n        /*\n         * Normalement, `e.preventDefault()` empèche le comportement standard, mais pas pour « Ctrl + T » qui ouvrira un nouvel onglet.\n         */\n        console.log('Ctrl + T'); // Ne marchera pas, et un nouvel onglet s'ouvrira.\n    }\n});\n```\n\n\n\n\n\n## Les Char Codes ou Key Codes ##\n\nVous trouverez [la liste des clés](http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes) à mettre dans votre objet `keys` sur [la page suivante](http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes).","dates":{"published":{"$date":"2017-11-06T14:30:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"var keys = {};\n$(window).on(\"keyup keydown\", function (e) {\n    e = e || event;\n    keys[e.keyCode] = e.type === 'keydown';\n    if (keys[17] \u0026\u0026 keys[18] \u0026\u0026 keys[69]) {\n        alert('Ctrl + Alt + E');\n        keys = {};\n        return false;\n    }\n});","stylesheet":"","title":"Comment gérer les raccourcis clavier en JavaScript","urn":"comment-gerer-les-raccourcis-clavier-en-javascript","description":"Comment créer rapidement un système permettant de surveiller si une touche du clavier est enfoncée lors de l'exécution d'une action.","image":"https://blog.lesieur.name/media/images/upload/ctrlalte.jpg"}
{"_id":{"$oid":"54d0dd87a36eedac79a3a59d"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"Pour les personnes en charge de l'édition de contenu, remplir des liens est souvent source de problème car, là où la page des termes et conditions avaient toujours été une page interne au site, la voilà devenu un fichier PDF ou une page plus globale hébergée sur un autre site web ; ce qui demande l'ouverture d'un nouvel onglet pour s'afficher. Et le pire dans tout cela, c'est que c'est juste pour la version du site en Vulcain ! Il va donc falloir laisser ces mêmes personnes gérer eux-mêmes la propriété `target` ou...\n\n...**utiliser un script intelligent qui va ajouter les `target=\"_blank\"` là ou ils sont nécessaires !**\n\nCela est également très pratique quand on rédige ses pages en Markdown.\n\n\n\n\n\n## Un peu d'histoire ##\n\nLe fameux attribut `target=\"_blank\"` que l'on utilise pour ouvrir une fenêtre dans un nouvel onglet à toujours été une petite source de conflit. Très utilisé lors de l'époque du HTML4, il a été boudée un certain temps durant la période xHTML car non valide. La bataille a donc fait rage entre :\n\n- ceux ne faisant que peu de cas des standards,\n- ceux affirmant que c'était à l'utilisateur de décider dans quel onglet ouvrir le lien (sans que ce même utilisateur ne sache comment faire),\net \n- ceux faisant appel au JavaScript pour passer les validations...\n\nAujourd'hui de l'eau a été mis dans le vin puisque à l'heure du HTML5, la balise `target` est de nouveau autorisée.\n\n\n\n\n\n## Smart Target Injection ##\n\n### Explication ###\n\n*Voilà les règles établies pour savoir si un lien doit être ouvert dans un nouvel onglet, ou dans l'onglet courant :*\n*Si le lien a déjà l'attribut `target` de défini (à `_blank`, `_self` ou autre), on ne touche à rien, mais si cet attribut est absent alors :*\n - *si le lien pointe sur un nom de domaine différent, on ouvre la page dans un nouvel onglet*\n - *si le lien pointe sur notre site web, deux cas :*\n   - *si c'est une page web on l'ouvre dans le même onglet,*\n   - *si c'est un média/fichier (.pdf, .jpg, .png, .js, .mp4, etc.) on l'ouvre dans un nouvel onglet.*\n\n### Code jQuery ###\n\nVoici le petit code [jQuery](http://jquery.com/) qui va faire cela. Si vous n'aimez pas [jQuery](http://jquery.com/), je vous propose [une version de ce code en JavaScript natif plus bas](https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/#code-purement-javascript) et si vous voulez que vos `target` ne soient pas ajoutées côté client en JavaScript, [vous pouvez toujours utiliser NodeAtlas](https://blog.lesieur.name/nodeatlas-le-framework-nodejs-mvc2-oriente-front-end/) !\n\n```js\n/*\n * Pour tous les liens de la page courante...\n */\n$(document.links).filter(function() {\n    /*\n     * ...garder ceux qui n'on pas déjà une `target` dans les attributs...\n     */\n    return !this.target;\n}).filter(function() {\n    /*\n     * ...et garder les pages qui ne sont pas sur le nom de domaine courant...\n     */\n    return this.hostname !== window.location.hostname ||\n        /*\n         * ...ou qui ne sont pas des pages web (.pdf, .jpg, .png, .js, .mp4, etc.).\n         */\n        /\\.(?!html?)([a-z]{0,3}|[a-zt]{0,4})$/.test(this.pathname);\n/*\n * Pour toutes les pages conservées, ajouter l'attribut `target=\"_blank\"`. \n */\n}).attr('target', '_blank');\n```\n\n### À propos de la RegExp ###\n\nVous pouvez comprendre la RegExp utilisée ligne 17 sur [cette page explicative](https://regex101.com/r/sE6gT9/3).\n\nIl est également bon de noter que dans ce code, seules les extensions `.html` et `.htm` s'ouvre dans l'onglet courant. Vous pouvez ajouter des extensions comme cela :\n\n```js\n\\.(?!html?|aspx?|php3?)([a-z]{0,3}|[a-zt]{0,4})$\n```\n\nici les pages de type `.htm`, `.html`, `.php`, `.php3`, `.asp` et `.aspx` s'ouvrirons dans le même onglet.\n\n\n\n\n\n## Petit jeu de test ##\n\nVoici une liste de lien à tester. Sachez que de mon côté, je les ai écris en Markdown (`[Accueil relative « ./ »](./)`) et que je ne me suis absolument pas soucié de la `target` (devinez comment ?!).\n\n- [Accueil relative « ./ »](./) (page courante)\n- [Page actuelle relative « ./ne-vous-souciez-plus-de-la-target-dans-vos-liens/ »](./ne-vous-souciez-plus-de-la-target-dans-vos-liens/) (page courante)\n- [Une image du site relative « ./media/images/bw-author.png »](./media/images/bw-author.png) (nouvel onglet)\n- [Le flux RSS du site relatif « ./feeds/articles.xml »](./feeds/articles.xml) (nouvel onglet)\n- [Un lien relatif sans extension « ./non-exsitante-page »](./non-exsitante-page) (page courante)\n- [Un lien relatif avec .htm « ./non-exsitante-page.htm »](./non-exsitante-page.htm) (page courante)\n- [Un lien relatif avec .html « ./non-exsitante-page.html »](./non-exsitante-page.html) (page courante)\n- [Accueil absolue « https://blog.lesieur.name/ »](https://blog.lesieur.name/) (page courante)\n- [Page actuelle absolue « https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/ »](https://blog.lesieur.name/ne-vous-souciez-plus-de-la-target-dans-vos-liens/) (page courante)\n- [Une image du site absolue « https://blog.lesieur.name/media/images/bw-author.png »](https://blog.lesieur.name/media/images/bw-author.png) (nouvel onglet)\n- [Le flux RSS du site absolue « https://blog.lesieur.name/feeds/articles.xml »](https://blog.lesieur.name/feeds/articles.xml) (nouvel onglet)\n- [Page nouvel onglet « https://www.lesieur.name »](https://www.lesieur.name) (nouvel onglet)\n- [Image nouvel onglet « http://fc08.dev{...}d5k2le2.jpg »](http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg) (nouvel onglet)\n- \u003ca target=\"_self\" href=\"http://fc08.deviantart.net/fs70/i/2012/309/9/1/the_moment_by_dzsurnik-d5k2le2.jpg\"\u003eImage manuellement définie à target=\"_self\" « http://fc08.dev{...}d5k2le2.jpg »\u003c/a\u003e (page courante)\n- \u003ca target=\"_blank\" href=\"./\"\u003eAccueil manuellement définie à target=\"_blank\" « ./ »\u003c/a\u003e (nouvel onglet)\n\n\n\n\n\n## Code purement JavaScript ##\n\nSi vous n'utilisez pas [jQuery](http://jquery.com/), voici le code :\n\n```js\nvar links = document.links;\n\nfor (var i = 0, linksLength = links.length; i \u003c linksLength; i++) {\n    if (!links[i].target) {\n        if (\n            links[i].hostname !== window.location.hostname || \n            /\\.(?!html?)([a-z]{0,3}|[a-zt]{0,4})$/.test(links[i].pathname)\n        ) {\n            links[i].target = '_blank';\n        } \n    }\n}\n```","dates":{"published":{"$date":"2015-02-03T12:39:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"website.script = function () {\n    $(document.links).filter(function() {\n       return /\\.(html?)$/.test(this.pathname);\n    }).removeAttr('target');\n};","stylesheet":"","title":"Ne vous souciez plus de la target dans vos liens","urn":"ne-vous-souciez-plus-de-la-target-dans-vos-liens"}
{"_id":{"$oid":"54e5ff40a36eedac79a3a59e"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"54f042102ae5a068f260dae2"}],"content":"Autant vous annoncer la mauvaise nouvelle tout de suite, il n'est pas possible d'utiliser les Media Queries dans l'attribut des balises HTML `style`. Ainsi le code suivant ne fonctionnera pas...\n\n```html\n\u003cdiv\u003e\n    \u003cimg \n        src=\"image/que/je/veux/decaller/seulement/quand/elle/flotte.png\" \n        style=\"@media(min-width: 768px){float:left margin:-4px 16px 8px -24px;}\"\u003e\n    \u003cp\u003eJ'aimerai faire flotter à gauche l'image ci-dessus uniquement sur \n    les grands écrans. Comme les valeurs de `margin` sont ajustées uniquement \n    aux propriétés de cette image (-4px 16px 8px -24px), il n'existe pas de\n    classe  HTML-driven comme créer un `.float-left` (à l'avance) qui répondrait \n    exactement à mon besoin.\u003c/p\u003e\n\u003c/div\u003e\n```\n\n...c'est comme ça !\n\nDans ce cas, *comment faire pour gérer des propriétés CSS ponctuellement en utilisant les Media Queries ?* Cela est très utile pour le remplissage de contenu pour ajuster des images ou encore manager des `background-image`.\n\nLa solution n'est pas l'attribut `style` des balises HTML **mais la balise `\u003cstyle\u003e` elle même** !\n\n\n\n\n## La balise style ##\n\nLa solution simple en HTML5 est donc d'utiliser la balise `\u003cstyle scoped\u003e` dans la balise `\u003cbody\u003e` d'un document HTML :\n\n```html\n\u003c!DOCTYPE html\u003e\u003c!-- On travail en HTML5 --\u003e\n...\n\u003cbody\u003e\n\u0009...\n\u0009\u003cdiv\u003e\n\u0009\u0009\u003cstyle scoped\u003e\n\u0009\u0009\u0009@media (min-width: 768px) {\n\u0009\u0009\u0009\u0009.on-the-fly-class-example { \n\u0009\u0009\u0009\u0009\u0009float: left; \n\u0009\u0009\u0009\u0009\u0009margin: -4px 16px 8px -24px;\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009}\n\u0009\u0009\u003c/style\u003e\n\u0009\u0009\u003cimg class=\"on-the-fly-class-example\" src=\"image/que/je/veux/decaller/seulement/quand/elle/flotte.png\"\u003e\n\u0009\u0009J'aimerai faire flotter à gauche l'image ci-dessus uniquement sur les grands écrans. Comme les valeurs de `margin` sont ajusté uniquement aux propriété de cette image (-4px 16px 8px -24px), il n'existe pas de classe HTML-driven comme `.float-left` (à l'avance) qui répondrait exactement à mon besoin.\n\u0009\u003c/div\u003e\n\u0009...\n\u003c/body\u003e\n```\n\n\u003e [Tester le rendu de ce code](http://codepen.io/Haeresis/pen/KwooLd)\n\nNote : Il est important que la balise `\u003cstyle\u003e` soit déclarée avant son utilisation pour éviter que le navigateur ne pose un problème de [FOUC](http://fr.wikipedia.org/wiki/FOUC).\n\n\n\n### Pourquoi ajouter l'attribut scoped ? ###\n\nEn HTML5, il n'est pas valide de placer la balise `\u003cstyle\u003e` en dehors de la balise `\u003chead\u003e`. Oui, mais ce n'est pas tout à fait exacte... En réalité, il n'est pas valide de la placer dans `\u003cbody\u003e` uniquement si on ne mentionne pas qu'elle est `scoped`, ce qui signifie que notre exemple est parfaitement valide.\n\nOui, mais pourquoi est-il nécessaire cet attribut ? `scoped` signifie que le style ne s'appliquera que sur la balise parente imédiate (ici `\u003cdiv\u003e`) et la totalité de ses balises enfants (ici `\u003cimg\u003e`). Cependant dans les faits, aucun navigateur ne l'implémente encore et il ne limite donc pas du tout sa portée.\n\nVous pouvez tout à fait vous en passer donc mais cela ne sera pas valide W3C.\n\n\n\n### Je ne travail pas en HTML5 ###\n\nCela signifie donc que l'attribut `scoped` ne peut pas être utilisé et qu'il faut lui préférer `\u003cstyle type=\"text/css\"\u003e`. Cependant, même avec toute votre bonne volonté en plus, l'attribut `style` est invalide en dehors de la balise `\u003chead\u003e`.\n\nActuellement, même si vous ne passerez pas la validation la quasi totalité des navigateurs qui savent lire les Média Queries sauront exécuter le `style` dans le `body`. Mais parceque les standards ne sont pas fait pour les chiens, vous pouvez soit :\n\n- Migrer votre site en HTML5 pour utiliser ce type de fonctionnalité.\n- Faire comme ce blog : proposer un chanp textarea pour entrer toutes les instructions CSS souhaitées lors de la rédaction d'un article, et injecter son contenu dans une balise `\u003cstyle\u003e` située après les balises `\u003clink\u003e` de la balise `\u003chead\u003e` lors de son rendu côté serveur.\n- Ne pas l'utiliser :)\n\n\n\n### Un petit mot sur les performances ###\n\nN'ayez point peur, du fait que les instructions CSS (même si elles sont dans une feuille CSS à part) bloquent le rendu de votre page le temps qu'elles soient analysées, cela revient donc au même de placer vos instructions dans la page en amont des balises à habiller.\n\nÇa allégera vos feuilles CSS qui n'ont pas besoin de déclarations spécifiques pour des éléments affichés uniquement sur la page courante.","dates":{"published":{"$date":"2015-02-19T15:40:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Utiliser les Media Queries CSS3 dans l'attribut style","urn":"utiliser-les-media-queries-css3-dans-l-attribut-style"}
{"_id":{"$oid":"54f02a0e8abb243843ee1e75"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"54f0408e2ae5a068f260dae1"},{"$oid":"54f042102ae5a068f260dae2"}],"content":"Par convention, on a toujours utilisé la balise `\u003clink\u003e` dans la balise `\u003chead\u003e`. Cette balise est utilisée —entre autre— pour permettre aux navigateurs de lire et d'appliquer les instructions CSS depuis une feuille CSS. \n\nPar convention dis-je ? Pas réellement car :\n\n- Côté W3C, la balise `\u003clink\u003e` telle qu'elle a été créée n'est valide W3C en HTML4, xHTML ou HTML5 uniquement si elle est appelé dans la balise `\u003chead\u003e`.\n- Côté technique, une propriété CSS est appliquée sur un élément du DOM quand il est rendu sur la page uniquement si elle a été interprétée avant de rencontrer cet élément. Si une feuille CSS est lu en pied de page donc, c'est-à-dire après le rendu d'un élément, il y aura un phénomène de [FOUC](http://fr.wikipedia.org/wiki/FOUC) très dérangeant si la page est demandée depuis un réseau bas débit.\n\n\u003e **`Exemple :`** Ainsi le code suivant est valide :\n\u003e \n\u003e ```html\n\u003e \u003chead\u003e\n\u003e   ...\n\u003e   \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/head\u003e\n\u003e ```\n\nmais\n\n\u003e *`Exemple :`* le code suivant est invalide :\n\u003e \n\u003e ```html\n\u003e \u003cbody\u003e\n\u003e   ...\n\u003e   \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/body\u003e\n\u003e ```\n\nCependant, puisque l'affichage du contenu de la page est mis en attente tant que les fichiers `href` des `\u003clink\u003e` ne sont pas téléchargés et analysés par le navigateur, cela participe à ralentir l'affichage du contenu des pages aux yeux de l'utilisateur ce qui mène parfois les outils comme [PageSpeed](https://developers.google.com/speed/pagespeed/) ou [GTmetrix](http://gtmetrix.com/) a demander de placer les feuilles CSS très lourdes après l'analyse du DOM.\n\nMais puisque cela n'est pas valide, comment faire pour placer la balise `\u003clink\u003e` en pied de balise `\u003cbody\u003e` ?\n\n\n\n\n\n## Link dans le Body autorisé par HTML5.1 ##\n\nPour répondre à la demande des outils de rapidité web, il est parfois nécessaire de lier sa feuille en pied de page pour être sur que le contenu soit déjà lisible avant même qu'il ne soit habillé par la CSS.\n\nCela est totalement valide grâce à la norme HTML5.1 ou [HTML+RDFa 1.1](http://www.w3.org/TR/html-rdfa/) (signifiant également que cela est valide en HTML4 également).\n\n[RDFa](http://fr.wikipedia.org/wiki/RDFa) introduit des attributs permettant de décrire des éléments HTML à l'instar des [Microdatas](http://en.wikipedia.org/wiki/Microdata_%28HTML%29). Parmi ces attributs, il y a `property`. Et c'est justement ce qui va nous permettre de rendre valide `\u003clink\u003e` dans le `body`.\n\n\n\n### Valide dans Head ou Body ? ###\n\nLes trois codes ci-dessous font la même chose ; permettre a une page HTML d'être habillée par le contenu d'une feuille CSS.\n\n#### Standard ####\n\nLe code ci-dessous n'est pas valide dans le `\u003cbody\u003e` mais est valide dans le `\u003chead\u003e`.\n\n\u003e ```html\n\u003e \u003chtml ...\u003e\n\u003e   ...\n\u003e   \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/html\u003e\n\u003e ```\n\n#### Microdatas ####\n\nLe code ci-dessous est valide dans le `\u003chead\u003e` ainsi que dans le `\u003cbody\u003e`.\n\n\u003e ```html\n\u003e \u003chtml ... itemscope itemtype=\"http://schema.org/Thing\"\u003e\n\u003e   ...\n\u003e   \u003clink itemprop=\"url\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/html\u003e\n\u003e ```\n\n#### RDFa ####\n\nLe code ci-dessous est valide dans le `\u003chead\u003e` ainsi que dans le `\u003cbody\u003e`.\n\n\u003e ```html\n\u003e \u003chtml ... typeof=\"schema:Thing\"\u003e\n\u003e   ...\n\u003e   \u003clink property=\"schema:name\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/html\u003e\n\u003e ```\n\u003e \n\u003e Note : `rel` ne doit pas être présent si `itemprop` est en place alors qu'il n'est pas gênant (juste redondant) si `property` est en place.\n\n\n\n\n\n## Support des navigateurs ##\n\nLà ou le bat blesse c'est que tous les navigateurs ne supportent pas l'inclusion de feuille de style si la propriété `rel` n'est pas présente en dépit des recommandations du W3C. Que peut-on faire ?\n\n\n\n### itemprop n'autorise pas rel ###\n\n\u003e *`Ceci`* Ne marche pas, le style n'est pas appliqué\n\u003e \n\u003e ```html\n\u003e \u003chtml ... itemscope itemtype=\"http://schema.org/Thing\"\u003e\n\u003e   ...\n\u003e   \u003clink itemprop=\"link\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/html\u003e\n\u003e ```\n\nCeci ne fonctionne pas, s'il n'y a pas de propriété `rel` la feuille n'est pas chargée sur tous les navigateurs. Il suffit de la rajouté alors ? Pas si simple car `rel` ne doit pas être présent si `itemprop` est en place.\n\n\n\n### property seul ne marche pas ###\n\n\u003e *`Ceci`* Ne marche pas\n\u003e \n\u003e ```html\n\u003e \u003cbody ... typeof=\"schema:Thing\"\u003e\n\u003e   ...\n\u003e   \u003clink property=\"schema:url\" type=\"text/css\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/body\u003e\n\u003e ```\n\nCeci ne fonctionne pas, ici aussi, sans la propriété `rel` la feuille n'est pas chargée sur tous les navigateurs. Cependant cette fois, l'attribut `rel` ne serait pas gênant.\n\n\n\n### La solution valide ###\n\n\u003e **`Ceci`** Marche\n\u003e ```html\n\u003e \u003chtml ...\u003e\n\u003e   ...\n\u003e   \u003clink property rel=\"stylesheet\" href=\"example/css.css\" media=\"screen\" /\u003e\n\u003e   ...\n\u003e \u003c/html\u003e\n\u003e ```\n\nCe cas de figure est valide car `typeof` n'est pas obligatoire et `property` n'a pas besoin de valeur pour la validation.\n\n**On peut conclure qu'ajouter la propriété `property` en supplément de la propriété `rel` est une pratique assurant la parfaite validité W3C pour l'usage du chargement de fichier CSS dans la balise `\u003cbody\u003e` via la balise `\u003clink\u003e`.**\n\n\n\n\n\n## Phénomène de FOUC VS accès rapide au contenu important de la page ##\n\nEt quid du phénomène de FOUC si je mets les CSS en pied de page ? Sans trop entrer dans la technique, des pistes à étudier seraient :\n\n- De charger avant dans le `\u003chead\u003e` les fichiers CSS les plus léger ne contenant que des instructions de disposition, de visibilité, d'habillage des textes etc. dans l'optique de présenter le plus rapidement possible du texte lisible et mis en forme mais surtout qu'il n'y ai aucun déplacement d’élément ou changement de taille d'élément quand les feuilles CSS de pied de `\u003cbody\u003e` (les plus lourdes) seront chargées.\n\n- D'uniquement habiller les éléments au-dessus de la ligne de flottaison avec des feuilles dans le `\u003chead\u003e` (toujours de manière légère) et d'apporter la couche lourde en pied de page.\n\n- D'utiliser l'un des deux mécanismes précédents pour la première visite de l'internaute, puis de placer par la suite l'intégralité dans le `\u003chead\u003e` (même les feuilles lourdes) pour éviter aux navigateurs de faire son rendu deux fois (il n'y aura plus de problème de temps de chargement lié aux feuilles lourdes puisqu'elles auront été mises en cache lors de la première visite).\n\n\u003e Dans le cas d'une app web, on peut également imaginer uniquement cacher tout le contenu et habiller dans le `\u003chead\u003e` un encart dédié à couvrir la page et a notifier que l'interface est `en chargement...` et charger les feuilles lourdes en pied de page avec comme premier rôle de masquer le message d'attente et de ré-afficher complètement habiller l'intégralité de l'interface.","dates":{"published":{"$date":"2015-02-27T05:20:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Utiliser la balise Link dans la balise Body","urn":"utiliser-la-balise-link-dans-la-balise-body","description":"Utiliser la balise Link dans la balise Body","image":""}
{"_id":{"$oid":"54f838fb8abb243843ee1e76"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48bc"}],"content":"\u003ca href=\"media/images/upload/gmail_not_dot_sensitive.png\"\u003e\u003cimg width=\"575\" height=\"167\" alt=\"Gmail n'est pas sensible aux points\" src=\"media/images/upload/gmail_not_dot_sensitive.png\" style=\"max-width: 100%; border: solid 1px #ccc\"\u003e\u003c/a\u003e\n\nAussi étrange que cela puisse paraître sachez qu'une adresse Gmail n'est pas « dot sensitive » c'est-à-dire sensible aux points...\n\nMais quelle mouche a piqué Google ?!\n\n\n\n## Explication ##\n\nCela signifie donc que les adresses :\n\n- br**.**uno**.**lesi**.**eur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n- brunolesieur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n- bruno**.**lesieur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n- **.**brunolesieur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n- brunolesieur**.**\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n- bru**..**no**.**lesieu**..**r\u003cspan class=\"gmail\"\u003e\u003c/span\u003e\n\nsont toutes les 6 identiques ! Elles appartiennent à la même personne et... sont toutes valides pour Gmail.\n\nTestez vous même, envoyez-vous divers email à votre adresse Gmail avec des variations de point dans l'adresse et constatez que vous les recevrez tous.\n\nUn petit « Oui, il s'agit bien de votre adresse. » sera même précisé à côté de votre adresse.\n\n\n\n## Inscription sur Gmail ##\n\nCela fait que personne ne peut s'inscrire sur Gmail avec l'adresse « brunolesieur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e » par exemple ou toutes autres déclinaisons.\n\n\n\n## Inscription sur des sites tierces ##\n\nMais cela signifie aussi que je peux m'inscrire 10 fois sur le même site en faisant pointer tous les emails (c'est à dire mes identifiants) sur la même boîte en ajoutant simplement des points entre les lettres.\n\nEt pas seulement 10 fois, mais une infinité de fois puisque les points peuvent s'empiler les uns derrière les autres.\n\n\n\n## Quelle mouche a piqué Google ? ##\n\nGoogle s'explique [ici](https://support.google.com/mail/answer/10313?hl=fr) en avançant le fait qu'un utilisateur qui ne se souviendrait pas exactement s'il y a un point ou pas dans votre adresse email pourrait tout de même vous contacter.\n\nC'est un argument que l'on pourrait trouver curieux en avançant alors que l'adresse bruno-lesieur\u003cspan class=\"gmail\"\u003e\u003c/span\u003e appartiendrait elle a quelqu'un d'autre alors qu'on penserait me contacter ? Et bien non car Gmail a réponse à tout : une adresse Gmail ne peux pas contenir de tiret (« - ») ni d'underscore (« _ »). Curieuse politique chez Google !\n\n\u003e Note : Envoyer un email à bruno.lesieur+ce-que-je-veux\u003cspan class=\"gmail\"\u003e\u003c/span\u003e ferra également arriver un email dans la boîte originale comme précisé dans les commentaires de cet article.\n\n\n\n## Un peu de code ##\n\nEffectivement, l'expression régulière pour valider les emails [la plus communément utilisée autorise les caractères suivants](http://www.regular-expressions.info/email.html) devant l'arobase : `[a-zA-Z0-9._%+-]+`. [Vous pouvez tester la Regex et la comprendre ici](https://regex101.com/r/kA0eG1/2).\n\n\n\n## Un problème de plus pour la validation d'email ##\n\nEt puisque cette règle est spécifique à Google, à moins de faire une règle spécifique pour les adresses Gmail, on ne peut pas se permettre de faire notre validation « not dot sensitive » puisque toto@example.com n'est pas la même adresse que to.to@example.com...\n\n\n\n## Effets de bord ? ##\n\nEt vous, quels effets de bord imaginez-vous pour cette utilisation ?\n\nPour ma part j'ai reçu pour une adresse similaire à la mienne (ou plutôt une de mes infinités d'adresse) une facture qui ne m'était pas destiné. Ceci n'explique pas le pourquoi du comment mais il est assez difficile d'expliquer aux opérateurs que cette facture ne m'est pas destiné si elle est tombé dans ma boîte email, surtout si effectivement, on est bien inscrit chez le prestataire qui a envoyé la facture, mais pour un autre service !\n\n\n\n## Le mot de la fin ##\n\nCe qui est sûr, c'est que Yopmail n'est peut-être pas la seule solution pour les tests d'inscriptions faciles lors des phases de développement !","dates":{"published":{"$date":"2015-03-05T11:36:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"$(\".gmail\").text(\"@gmail.com\");","stylesheet":"","title":"Gmail n'est pas sensible aux points","urn":"gmail-n-est-pas-sensible-aux-points","description":"Aussi étrange que cela puisse paraître sachez qu'une adresse Gmail n'est pas « dot sensitive » c'est-à-dire sensible aux points...","image":"https://blog.lesieur.name/media/images/upload/gmail_not_dot_sensitive.png"}
{"_id":{"$oid":"54f8874a8abb243843ee1e77"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"54f042102ae5a068f260dae2"}],"content":"\nJe l'ai encore croisée au détour d'un code ! J'y ai prêté attention pour la première fois sur le Framework CSS [Semantic-UI](http://semantic-ui.com/elements/icon.html#/icons) car j'ai vu dans la source qu'il était impossible d'afficher une icône avec ce Framework sans utiliser **la balise qui n'existe pas : la balise Icon** !\n\nJe vous la présente sans plus de suspense avec cet exemple : `\u003ci class=\"icon settings\"\u003e\u003c/i\u003e`. Son rendu est une icône, représentant par exemple ici de quoi modifier les \u003cspan class=\"icons settings\"\u003eparamètres\u003c/span\u003e. Il n'y a pas de doute, l'intention première est d'afficher une icône, non pas avec la balise `\u003cimg\u003e` estimée réservée à de l'affichage de contenu pure (au contraire d'une décoration), mais en remplacement de `\u003cspan\u003e` qui, lui, est trop neutre.\n\n\u003cfigure\u003e\n\u003cimg width=\"600\" height=\"300\" src=\"media/images/upload/Basic-HTML.png\" alt=\"Balise i en HTML4\" style=\"max-width: 100%\"\u003e\n\u003cfigcaption\u003eLa balise \u0026lt;i\u0026gt; en HTML4, miriamposner.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nQuoi de mieux qu'une balise qui est inline, courte, dont la seule lettre représente le début du mot « icon » et qui passe même la validation W3C ? Je vous présente la balise `\u003ci\u003e` qui a vu le jour grâce à HTML4 et signifiait « *le contenu affiché est italique* » et qui tenterait de faire son coming-back en tant que nouvelle icône derrière le dos du W3C !\n\nMais ça me pause un problème. Parlons en de cette fausse-vrai balise !\n\n\n\n\n\n## Une balise tombée dans l’oubli ##\n\nTout commence avec la balise `\u003ci\u003ece texte est italique\u003c/i\u003e` totalement valide HTML4 et qui représente de la forme. Cela est légion à l'époque avec les cousines `\u003cb\u003e`, `\u003ccenter\u003e`, `\u003cfont\u003e`, etc. Comprenez par là que `\u003ci\u003e` n'a aucune autre utilitée que de rendre le texte italique et est un parfait raccourci du mot « italic ».\n\nEt puis, le CSS fait sont petit bonhomme de chemin si bien que l'on peut très vite rendre italique le contenu de n'importe quel groupe de balises si bien que l’existence même de `\u003ci\u003e` (et ses comparses) va être remise en cause. xHTML, le petit frère va enfoncer le clou et un texte ne sera plus `\u003ci\u003e` pour « italic » mais sera `\u003cem\u003e` pour « emphasis » et ce sera alors au CSS de décider si le rendu de son contenu sera italique ou rouge souligné... idem avec `\u003cb\u003e` pour « bold » qui deviendra `\u003cstrong\u003e` —c.-à-d. avec sens fort, important— et qui ne donnera pas nécessairement lieu à un rendu gras si la CSS en a décidé autrement.\n\nCependant, le rendu « par défaut » des `\u003cem\u003e` étant de l'italique et de `\u003cstrong\u003e` étant du gras, il n'en fallait pas plus pour les catégoriser, à tord, comme les « remplaçant » de `\u003ci\u003e` et `\u003cb\u003e` or... il n'en ai rien ! Nous allons voir ça plus loin.\n\n\n\n\n\n## Icône, du contenu ou de la décoration ? ##\n\nParlons de deux catégories d'images : celles qui sont destinées à représenter du contenu, l'équivalent de ce que raconte le texte mais sous forme d'image et celle destinées à la décoration permettant de rendre ce que l'on consulte plus agréable à l’œil, plus attractif. Il y a donc ;\n\n- les images de contenu qui [se chargent quelque soit le périphérique ou la place qu'il y a pour afficher de l'information](https://blog.lesieur.name/maitriser-les-requetes-au-chargement-d-une-page-web/#les-images). Quoi qu'il arrive, le réseau doit être en mesure d'aller la chercher, sinon un message alternatif doit expliquer pourquoi la ressource manque. C'est pourquoi nous utilisons une balise `\u003cimg\u003e`. Et il y a,\n- les images de décoration, de design qui ne sont que contextuelles, ne pas les afficher ne changerait en rien le sens du message délivré par la page, juste son appréciation par l'utilisateur. C'est pourquoi la magnifique image de background sur écran large ne doit pas être chargée sur mobile, idem pour les petits éléments décoratifs de ci de là car, on manque de réseau (pas toujours), mais surtout, on manque de place ! On utilise donc ici les propriétés CSS `background-image` [qui ne feront pas d'appels au réseau si elles ne sont pas sollicitées](https://blog.lesieur.name/maitriser-les-requetes-au-chargement-d-une-page-web/#les-backgrounds) (cachées par les parents, dans une Media Querie non interprétée, etc.).\n\nMais les icônes ? Que sont elles ? Du contenu ? Pas vraiment, elles ne changent pas le contenu du message délivré. De la décoration ? Pas totalement puisque c'est un guide ergonomique pour l’œil qui va bien au delà de la simple décoration (même si dans un sens, un bon design, en plus d'être agréable à l’œil, doit aller dans ce sens également).\n\n\n\n\n\n## Les icônes et les polices personnalisées ##\n\nAlors comment représenter des icônes ? Mettons les balises `\u003cimg\u003e` de côté tout de suite, si on considère qu'une icône n'est pas du contenu pertinent. L'icône sert dans le meilleur des cas à accompagner un mot, un groupe de mot ou dans le pire des cas à être affichée seule. Par exemple le mot « Paramètre » peut donc être précédé d'une icône d'écrou ou ne pas être affiché et guider l'utilisateur en lui laissant penser que cette icône seule représente le mot ou l'action « Paramètre ».\n\nQu'est-ce qui —sémantiquement ou d'un point de vu de séparation du fond et de la forme– serait le plus proche de ce comportement ? **Une balise inline, dont la valeur `:before` représenterait une icône** elle-même affichée par une `background-image` ou par une police.\n\nAinsi ceci répond parfaitement au besoin :\n\n```html\n`\u003cspan class=\"icon settings\"\u003eParamètres\u003c/span\u003e`\n```\n\nou ceci\n\n```html\n`\u003cspan class=\"icon settings hidden\"\u003eParamètres\u003c/span\u003e`\n```\n\navec comme affichage ceci :\n\n```css\n.icon:before {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    margin-right: 0.2em;\n    display: inline-block;\n    background-size: cover;\n}\n.icon.hidden {\n    display: block;\n    width: 0.8em;\n    text-indent: -7777px;\n}\n.icon.hidden:before {\n    display: none;\n}\n.icon.hidden:after {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    display: inline-block;\n    background-size: cover;\n    float: right;\n}\n\n.icon.settings:after,\n.icon.settings:before {\n    background-image: url('une-image-icone-ici.png');\n    /* À noter que l'on peut également charger une police avec un caractère spéciale représentant l'icône à la place d'images de background. Mais nous ne traiterons pas cet aspect dans cet article */\n}\n```\n\n\u003e Résultat\n\u003cp data-height=\"338\" data-theme-id=\"0\" data-slug-hash=\"pvZmae\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/pvZmae/'\u003eDisplay icon with background-image\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\n\n\n\n\n## La balise i, le retour discret ! ##\n\nPour revenir à notre balise `\u003ci\u003e`, détrompez-vous ! Non, seulement la balise `\u003ci\u003e` n'a pas été remplacée par `\u003cem\u003e` mais elle reste totalement utilisée par le W3C dans la spécification HTML5 !\n\nEt quoi de plus pratique et séduisant que de remplacer notre exemple précédent par\n\n```html\n`\u003ci class=\"settings\"\u003eParamètres\u003c/i\u003e`\n```\n\nou ceci\n\n```html\n`\u003ci class=\"settings hidden\"\u003eParamètres\u003c/i\u003e`\n```\n\n__Malheureusement pour cette pratique, si la balise `\u003ci\u003e` est toujours valide de nos jour, ce n'est pas que pour la rétro-compatibilité HTML5 mais belle et bien parce qu'elle signifie quelque chose, et ce n'est pas « icon ».__\n\n[La documentation HTML5 nous explique pour `\u003ci\u003e`](https://html.spec.whatwg.org/multipage/semantics.html#the-i-element) qu'elle s'applique à une portion de texte empruntant une autre voix, ou une autre humeur, c.-à-d. étant en décalage avec le propos global dans sa manière de l'aborder bien que son sujet reste le même ;\n\n1. comme une pensée :\n\n   \u003e `\u003cp\u003e`Tu as de très jolies yeux aujourd'hui, dit Salie. `\u003ci\u003e`_Dommage que tes oreilles les caches..._`\u003c/i\u003e` pensa t-elle.`\u003c/p\u003e`\n\n2. une pensée idiomatique d'une autre langue :\n\n   \u003e `\u003cp\u003e`It's like a `\u003ci lang=\"fr\"\u003e`déjà-vu`\u003c/i\u003e` all over again.`\u003c/p\u003e`\n\n3. un terme technique\n\n   \u003e `\u003cp\u003e`La notion de `\u003ci class=\"term\"\u003e`flemme empathique`\u003c/i\u003e` est expliqué dans un autre article.`\u003c/p\u003e`\n\n4. une taxonomie\n\n   \u003e `\u003cp\u003e`J'ai `\u003ci class=\"taxonomy\"\u003e`veni vidi vici`\u003c/i\u003e`.`\u003c/p\u003e`\n\nDe la même manière, sachez que `\u003cb\u003e` n'a pas été remplacé par `\u003cstrong\u003e` mais tout comme `\u003ci\u003e`, [`\u003cb\u003e` à une utilité précise](https://html.spec.whatwg.org/multipage/semantics.html#the-b-element).\n\n\n\n\n\n## La balise i peut-elle représenter une icône ? ##\n\nEst-ce bien d'utiliser la balise `\u003ci\u003e` pour représenter une icône en lieu et place de la balise `\u003cspan\u003e`. On peut clairement objecter que le code suivant `\u003ci class=\"icon settings\"\u003e\u003c/i\u003e` est une faute absolue puisque dans ce cas, la balise `\u003ci\u003e` ne représente aucun texte. D'une autre manière, `\u003ci class=\"settings\"\u003eParamètres\u003c/i\u003e` sans la classe `icon` est déconseillé puisque `\u003ci\u003e` doit avoir son propre rendu quand il ne sert pas à afficher une icône. Il faut donc absolument l'accompagner d'un mot et d'une classe spécifique, quitte à ensuite le masquer pour ne garder que l'icône, comme ceci `\u003ci class=\"icon settings hidden\"\u003eParamètres\u003c/i\u003e` (la classe `icon` étant ici une équivalence de `taxonomy` ou `term` dans nos exemples précédents).\n\nAu final, en extrapolant un peu, on peut estimer que l'icône *paramètres* est une autre manière de parler du message « paramètre ». Cet affichage est donc en décalage avec le propos du mot en lui même puisque c'est une autre manière de l'exprimer —comme le serrait de le signer (avec les mains), ou de l'écrire avec un symbole japonais— mais reste cohérent avec son sujet qui est « je désigne un ensemble de paramètre ». Ainsi ici, il est question de mettre l'accent sur le mot exprimé à travers un dessin.\n\nPour ma part, c'est une explication qui ne me satisfait pas totalement aussi j'estime que laisser le choix entre l'utilisation de `\u003ci class=\"icon settings hidden\"\u003eParamètres\u003c/i\u003e` et `\u003cspan class=\"icon settings hidden\"\u003eParamètres\u003c/span\u003e` au développeur est la moindre des choses pour un Framework CSS monsieur [Semantic-UI](http://semantic-ui.com/elements/icon.html#/icons) !\n\nEt vous ? Que pensez-vous de cette pratique ou de ce « détournement » des spécifications ?","dates":{"published":{"$date":"2015-04-07T12:41:00.000Z"},"updated":[]},"description":"La balise `i` n'est pas ce que vous croyez en HTML5","image":"https://blog.lesieur.name/media/images/upload/Basic-HTML.png","others":{"markdown":true,"published":true},"script":"(function (d) {\nvar js = d.createElement('script'),\n    ref = d.getElementsByTagName('script')[0]\njs.async = true;\njs.src = '//assets.codepen.io/assets/embed/ei.js';\nref.parentNode.insertBefore(js, ref);\n}(document));","stylesheet":".icons:before {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    margin-right: 0.2em;\n    display: inline-block;\n    background-size: cover;\n}\n.icons.hidden {\n    display: block;\n    width: 0.8em;\n    text-indent: -7777px;\n}\n.icons.hidden:before {\n    display: none;\n}\n.icons.hidden:after {\n    content: \"\";\n    width: 0.8em;\n    height: 0.8em;\n    display: inline-block;\n    background-size: cover;\n    float: right;\n}\n\n.icons.settings:after,\n.icons.settings:before {\n    background-image:  url('https://cdn2.iconfinder.com/data/icons/basicset/gear_64.png');\n}","title":"Icon ou la balise sémantique HTML qui n'existait pas !","urn":"icon-ou-la-balise-html-semantique-qui-n-existait-pas"}
{"_id":{"$oid":"555ca3736868ca087fbf8644"},"__v":0,"cache":{"comment":{"number":0}},"categories":[],"content":"Photoshop est *un outil vaste et complet* qui fait *le bonheur des designers* au quotidien, **mais un peu moins celui des intégrateurs HTML**.\n\nDans un monde parfait, une fois les recherches ergonomiques et visuelles faites, appliquées, testée et validée ; \n- un ensemble de gabari nous serait envoyé pour l'ensemble des pages du site (faites avec par exemple l'outil [Moqups](https://moqups.com/) que je vous conseil),\n- le résultat visuel en jpg serait éventuellement fourni pour avoir une idée du rendu global, ainsi que les polices d'écritures nécessaires,\n- l'ensemble des images de contenu seraient extraites et prêtes à l'emploi,\n- et un Guide de Style référençant l'intégralité des couleurs, typographies, espacements, etc. nous serait fourni dans [un document comme celui-ci](http://purina.k-expert.com/html/style-guidelines-example/guidelines.htm).\n\nCependant, si nous étions dans un monde parfait, cela se saurait. Aussi il faut se contenter au quotidien :\n- de *recevoir des PSDs pour chaque page*, d'une taille plus ou moins conséquente et d'une organisation plus ou moins correcte,\n- de *se procurer une version de Photoshop* « par les moyens dans nos moyens » afin d'aller fouiller cet ensemble de fichier à la recherche de nos valeurs et nos images,\n- de *courir après les polices* manquantes,\n- et de *faire nous même du Photoshop* pour rectifier des demandes faites par le Client qui ne va pas les demander à l'agence de création sous peine de devoir, après une modification conséquente de tous les PSDs, nous les renvoyer dans leur intégralité !\n\nEt dire que dans un monde parfait il suffirait de changer quelque ligne dans le Guide de Style sans même que nous sachions réellement que Photoshop existe... \n\nMais plutôt que d'attendre que le monde change, et si nous nous facilitions la vie avec ce qu'il a à nous offrir ? **C'est partit pour une liste non exhaustive de ce que j'utilise pour aller le plus vite possible lors de mes « Séances d'extraction Photoshop » !**","dates":{"published":{"$date":"2016-11-09T16:08:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"","stylesheet":"","title":"Les Tips Photoshop pour Développeurs Front-end","urn":"les-tips-photoshop-pour-developpeurs-front-end"}
{"_id":{"$oid":"5577e6346868ca087fbf8645"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5499b03566bb5aeedaafd8b6"}],"content":"Lors des reviews d'intégration HTML à partir de valeurs fournis dans un PSD, on m'a fait remarquer que « _les tailles de polices n'étaient pas bonnes_ » car elles étaient en `rem` et non en `px`. Aujourd'hui pire, on me somme de remplacer tous les `rem` par des `px`. C'est tout, c'est comme ça. Peut-être parce que l'on a peur que la conversion `rem` en `px` ne soit pas juste ou peut-être simplement parce qu'on ne sait pas bien à quoi sert le `rem`.\n\n\u003cfigure\u003e\n\u003cimg width=\"856\" height=\"435\" src=\"media/images/upload/rem-all.png\" alt=\"Balise i en HTML4\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eComment gérer avec du Rem, css-tricks.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n**Sans entrer dans des détails techniques poussés, je vais vous expliquer pourquoi j'utilise `rem`.**\n\n[Je vous laisse également une petite démo temps réel plus bas dans l'article](https://blog.lesieur.name/pourquoi-j-utilise-l-unite-rem-et-non-l-unite-pixel/#exemple)\n\nAllez, n'ayons pas peur, ce `rem`, il ne va pas nous manger !\n\n\n\n\n\n## Pixel VS Rem ##\n\n### Le Pixel ###\n\nNotre bon vieux pixel rassurant se comporte de tel sorte que je précise dans ma feuille CSS `font-size: 16px` et que la taille de la police sur laquelle cette propriété s'applique fait bien 16 pixel de hauteur (il y a des histoires de dpi et de faux pixel là dedans mais ça ne nous intéresse pas pour notre explication). Le problème ici est une question d'accessibilité. Si je demande d'agrandir les textes via l'option de mon navigateur ou de mon OS il ne se passera rien. Comme nous avons établie dans le marbre que le texte fait `16px`, il ferra toujours cette hauteur, peut importe ce que l'utilisateur demande.\n\n\n### Le Rem ###\n\nCette unité quand à elle est un pourcentage de taille en fonction du zoom texte que l'utilisateur applique sur son navigateur. Elle se base toujours sur la taille du texte défini à la racine du document. Avec un savant petit calcul CSS on arrive à faire en sorte que pour un zoom texte de 100% (qui est le zoom texte par défaut des navigateur) `1.0rem` est strictement la même chose que `10px` ou encore que `1.6rem` est strictement la même chose que `16px`. Cela nous permet de travailler facilement, avec une unité identique mais qui est taillé pour l'accessibilité.\n\n\n\n\n\n## Une Histoire de Responsive Web Design ##\n\nPar conséquent, si je modifie la taille du texte à la racine du document, cela modifiera la taille de tous les textes du document de manière proportionnelle ce qui est impossible avec des unités définis en pixel. Il me suffit alors via des Media Queries de difinir une valeur racine plus ou moins grande pour rendre les textes plus lisible ou plus facile à cliquer, etc.\n\n\n**Le pixel n'est donc pas à bannir, mais à utiliser uniquement pour des éléments qui ne doivent pas varier si le zoom texte est changé. Cela peut-être des cas pour les marges par exemple.**\n\n\n\n\n## Rem ou Em ? ##\n\nUne autre unité existante est le `em`. Cependant, à la différence du `rem` qui rend proportionnelle une taille par rapport à la taille du texte à la racine du document, le `em` la rend proportionnelle par rapport à la taille de l'élément parent dans lequel il est contenu. Cela permet de définir, par exemple, qu'un exposant est `0.8em` de sont parent, soit 80% de sa hauteur.\n\n\n\n\n\n## Un peu de concret ##\n\nPar ici c'est un peu plus concret, on s’arrête donc là pour la théorie.\n\n### Exemple ###\n\n\u003cp style=\"margin-bottom: 8px\"\u003eJouez donc avec le slider ou changez la valeur magique de 62.5% qui permet de rendre les valeurs en Rem fluide et constatez la différence entre Pixel et Rem.\u003c/p\u003e\n\n\u003cp style=\"margin-bottom: -16px\" data-height=\"364\" data-theme-id=\"0\" data-slug-hash=\"ZGyGWm\" data-default-tab=\"result\" data-user=\"Haeresis\" class='codepen'\u003eSee the Pen \u003ca href='http://codepen.io/Haeresis/pen/ZGyGWm/'\u003ePixel VS Rem\u003c/a\u003e by Bruno Lesieur (\u003ca href='http://codepen.io/Haeresis'\u003e@Haeresis\u003c/a\u003e) on \u003ca href='http://codepen.io'\u003eCodePen\u003c/a\u003e.\u003c/p\u003e\n\n### Explication ###\n\nPour se mettre à gérer ses tailles en Rem, rien de compliqué. Il suffit de définir la racine du document à 62.5% sur la balise `html` puis de gérer ses tailles en Rem en sachant que 10px correspond à 1.0rem.\n\n**En CSS**\n\n```css\nhtml {\n    font-size: 62.5%; /* Ré-équilibrage du Rem face au Pixel pour des calculs simples */\n}\n\n/* Exemple d'application */\np {\n    font-size: 12px; /* Pour les navigateurs qui ne supportent pas le Rem */\n    font-size: 1.2rem; /* Pour les navigateurs « Responsive » */\n}\n```\n\n**En Less**\n\n```css\nhtml {\n    font-size: 62.5%;\n}\n\n/* Fonction toute prête pour gérer Rem et Pixel en fonction des supports des navigateurs. */\n.font-size(@sizeValue) {\n    @remValue: @sizeValue;\n    @pxValue: (@sizeValue * 10);\n    font-size: ~\"@{pxValue}px\"; \n    font-size: ~\"@{remValue}rem\";\n}\n\n/* Exemple d'application */\np {\n    .font-size(1.2);\n}\n```\n\n\u003cscript async src=\"//assets.codepen.io/assets/embed/ei.js\"\u003e\u003c/script\u003e","dates":{"published":{"$date":"2015-06-10T11:24:00.000Z"},"updated":[]},"description":"Pourquoi j'utilise l'unité Rem et non l'unité Pixel","image":"","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Pourquoi j'utilise l'unité Rem et non l'unité Pixel","urn":"pourquoi-j-utilise-l-unite-rem-et-non-l-unite-pixel"}
{"_id":{"$oid":"5579c7c66868ca087fbf8647"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"54f0408e2ae5a068f260dae1"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5499b03566bb5aeedaafd8b6"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"On me dit souvent que je n'aime pas Bootstrap, et pour cause. Je pense que [c'est une regression pour un travail front-end de qualité](https://blog.lesieur.name/bootstrap-est-une-regression-pour-un-developpement-front-end-de-qualite/). En réalité, ce n'est pas le framework le fautif mais la façon dont il est utilisé. Les exemples de mauvaises utilisations sont légions sur le Net et les mauvaises intégrations HTML courent les rues.\n\nSuis-je donc entrain de dire qu'il y a une bonne et une mauvaise façon d'utiliser Bootstrap ? C'est exactement ce que je suis entrain de dire, et je vais vous expliquer à travers ce billet le cheminement qui va vous conduire à :\n\n- séparer le fond et la forme, pour un gain de lisibilité et de propreté,\n- inclure et générer le strict minimum pour un gain de performance, avec un exemple d'optimisation de CSS 30 fois plus légères !\n\n\u003cfigure\u003e\n\u003cimg width=\"220\" height=\"220\" src=\"media/images/upload/bootstrap_less.png\" alt=\"Bootstrap et Less\" style=\"max-width: 100%\"\u003e\n\u003cfigcaption\u003eBootstrap et Less, themightycribb.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nNon, je suis sérieux, ce billet n'est pas une blague. C'est cadeau, et c'est pour vous.\n\n\n\n\n\n## À ne pas faire, ou l'utilisation standard de Bootstrap ##\n\nPour commencer notre réflexion, partons de l'utilisation « standard » de Bootstrap. C'est la majorité du code que nous pourrons trouver à travers le Net quand il s'agit de Bootstrap. Si vous êtes farouchement attaché à Bootstrap, ou que vous ne pouvez pas faire autrement que de l'utiliser (certaines personnes ont malheureusement des IT Dictators), oubliez dès aujourd'hui cette méthode de travail.\n\nVoici un petit affichage de grille gratté à la va vite.\n\n**HTML**\n\n*La feuille CSS Bootstrap est inclue*\n\n```html\n\u003c!-- Composant --\u003e\n\u003cdiv class=\"container\"\u003e\n  \u003c!-- En-tête --\u003e\n  \u003cdiv class=\"row\"\u003e\n    \u003cdiv class=\"col-xs-12 col-md-6 col-md-push-6 text-right\"\u003e\n      \u003cdiv\u003e\n        \u003ch1\u003eJe suis un titre\u003c/h1\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"col-xs-12 col-md-6 col-md-pull-6\"\u003e\n      \u003cdiv\u003eJe suis un petit texte explicatif à propos du site.\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003c!-- Liste d'élément --\u003e\n  \u003cdiv class=\"row\"\u003e\n    \u003cdiv class=\"col-xs-12 col-sm-6 col-md-4\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"col-xs-12 col-sm-6 col-md-4\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"col-xs-12 col-sm-6 col-md-4\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"col-xs-12 col-sm-6 col-md-4\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n```\n\nAjoutons maintenant notre propre surcharge pour faire un rendu de tout ça :\n\n**CSS**\n\n```css\n/* Nous colorons la zone de site. */\n.container {\n  background-color: #f2f2f2;\n  padding-bottom: 16px;\n}\n\n/* Nous colorons chaque colonne sans sa marge,\n  nous avons donc été obligé de rajouter une\n  div inutile autour. */\n.row \u003e div \u003e div {\n  background-color: #ddddff;\n  margin-top: 16px;\n  padding: 10px;\n  font-size: 1.5rem;\n}\n\n/* Nous devons tout de même gérer de manière personnalisé\n  certains comportements. Ici je veux que les colonnes\n  aient une hauteur fixe à partir de la version tablette. */\n@media (min-width: 768px) {\n  .row \u003e div \u003e div {\n    height: 40px;\n  }\n}\n\n/* Avec Bootstrap, soit le texte est à gauche, soit\n  il est à droite. On ne peut pas changer\n  se compontement de façon responsive.\n  On va donc surcharger la classe `text-right`\n  qui dans notre cas ne veux plus dire grand chose... */\n.row:first-child .text-right {\n  text-align: left;\n}\n\n/* Je redéfini ici qu'il s'aligne à droite\n  à partir de la tablette. */\n@media (min-width: 992px) {\n  .row:first-child .text-right {\n    text-align: right;\n  }\n}\n\nh1 {\n  margin: 0;\n  font-size: 3rem;\n  margin-top: -6px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](https://codepen.io/Haeresis/pen/yNXXQO)**\n\n\u003e _`Mauvaise pratique :`_ On constate au rayon des mauvaises choses :\n - Un DOM pollué par un surplus de balises, dans notre exemple nous avons une `\u003cdiv\u003e` inutile dans chaque colonne. Dans un exemple simple, ce n'est pas génant. Mais c'est pour illustrer l'effet dans des structures plus complètes. Fort heureusement, ce point ci n'est qu'un détail.\n - Un DOM pollué par un surplus de classe. Non seulement elles décrivent visuellement et non sémantiquement la structure, mais en plus elles ne traduisent pas toujours le comportement réel du visuel (exemple avec la classe `text-right` surchargée dans notre exemple).\n - Une CSS Bootstrap complète et donc excessivement lourde en poids avec en plus notre propre surcharge, actuellement la portion HTML fait [657 octets](https://codepen.io/Haeresis/pen/yNXXQO?editors=100) après compression et le fichier CSS fait [118 ko](https://codepen.io/Haeresis/pen/yNXXQO?editors=010) après compression. Pour le dire autrement, l'information utile pèse environs 0.5% de l'information total.\n\n\n\n\n\n## Un début de bonne pratique, ou l'utilisation de Bootstrap avec Less ##\n\nVoyons à présent comment nous pouvons nous en sortir en utilisant [une méthode CSS-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/). L'avantage de cette méthode va être de déporter le poids du fichier HTML à l'intérieur des fichiers CSS. C'est une excellente chose puisque les fichiers CSS peuvent être mis en cache, eux. Grâce à la version Less de Bootstrap, nous sommes en mesure de n'inclure que les parties nécessaires à notre habillage. Pour commencer, on arrête avec les affreuses classes Bootstrap partout dans le HTML, et on nomme les classes sémantiquement !\n\n**HTML**\n\n```html\n\u003cdiv class=\"component\"\u003e\n  \u003cdiv class=\"header\"\u003e\n    \u003cdiv class=\"title\"\u003e\n      \u003cdiv\u003e\n        \u003ch1\u003eJe suis un titre\u003c/h1\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"quote\"\u003e\n      \u003cdiv\u003eJe suis un petit texte explicatif à propos du site.\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"list\"\u003e\n    \u003cdiv class=\"item\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"item\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"item\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"item\"\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n```\n\nOn ajoute ensuite les bribes Bootstrap qui nous sont nécessaires, et nous habillons la structure en Less :\n\n**Less**\n\n```css\n/* Inclusions Bootstrap nécessaires pour la page */\n@import 'bootstrap/normalize';\n@import 'bootstrap/variables';\n@import 'bootstrap/utilities';\n\n/* Inclusions Bootstrap nécessaires pour la grille */\n@import 'bootstrap/grid';\n@import 'bootstrap/mixins/hide-text';\n@import 'bootstrap/mixins/center-block';\n@import 'bootstrap/mixins/clearfix';\n@import 'bootstrap/mixins/grid';\n@import 'bootstrap/mixins/grid-framework';\n\n/* Inclusions Bootstrap nécessaires pour l'alignement */\n@import 'bootstrap/type';\n@import 'bootstrap/mixins/text-overflow.less';\n@import 'bootstrap/mixins/text-emphasis.less';\n@import 'bootstrap/mixins/background-variant.less';\n\n/* On se permet de recréer nous même quelques\n  comportements nécessitant trop d'inclusion de code. */\nhtml {\n  font-size: 62.5%;\n}\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n/* On travaille nos classes en empilement. */\n.component {\n  /* Ceci est la même chose que `\u003cdiv class=\"container\"\u003e`\n    appliqué à `.component`. */\n  .container;\n  .clearfix;\n\n  .list,\n  .header {\n    /* Ceci est la même chose que `\u003cdiv class=\"row\"\u003e`\n      appliqué à `.header` et `.list`. */\n    .row;\n  }\n\n  .header {\n    .quote,\n    .title {\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-xs-12\"\u003e`\n        appliqué à `.title` et `.quote`. */\n      .make-xs-column(12);\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-md-6\"\u003e`\n        appliqué à `.title` et `.quote`. */\n      .make-md-column(6);\n    }\n\n    .title {\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-md-push-6\"\u003e`\n        appliqué à `.title`. */\n      .make-md-column-push(6);\n\n      /* Ceci est l'équivalent de `\u003cdiv class=\"text-left\"\u003e`\n        appliqué à `.title`. L'avantage ici, c'est qu'il peut être écrasé facilement. */\n      .text-left;\n\n      @media (min-width: @screen-sm-min) {\n        /* Ceci est l'équivalent de `\u003cdiv class=\"text-right\"\u003e`\n          appliqué à `.title` uniquement à partir de la tablette.\n          Ceci n'est pas faisable avec une approche classique\n          avec Bootstrap dans le DOM. */\n        .text-right;\n      }\n    }\n\n    .quote {\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-md-pull-6\"\u003e`\n        appliqué à `.quote`. */\n      .make-md-column-pull(6);\n    }\n  }\n\n  .list {\n    .item {\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-xs-12\"\u003e`\n        appliqué à `.item`. */\n      .make-xs-column(12);\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-sm-6\"\u003e`\n        appliqué à `.item`. */\n      .make-sm-column(6);\n      /* Ceci est l'équivalent de `\u003cdiv class=\"col-md-4\"\u003e`\n        appliqué à `.item`. */\n      .make-md-column(4);\n    }\n  }\n\n  /* Par ici on fait un peu de Less standard */\n  .title,\n  .quote,\n  .item {\n    div {\n      background-color: #ddddff;\n      margin-top: 16px;\n      padding: 10px;\n      font-size: 1.5rem;\n\n      @media (min-width: @screen-xs-min) {\n        height: 40px;\n      }\n    }\n  }\n\n  h1 {\n    margin: 0;\n    font-size: 3rem;\n    margin-top: -6px;\n  }\n\n  background-color: #f2f2f2;\n  padding-bottom: 16px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](https://codepen.io/Haeresis/pen/gpRGQX)**\n\n\u003e Avec cette technique, on a une sortie CSS qui a été divisée par 7 :\n - Le DOM ne contient plus la CSS Bootstrap complète mais uniquement les classes contenues dans les fichiers inclus avec `@include`. Actuellement le fichier HTML fait [504 octets](https://codepen.io/Haeresis/pen/gpRGQX?editors=100) après compression et le fichier CSS fait [16 ko](https://codepen.io/Haeresis/pen/gpRGQX?editors=010) après compression ().\n - Mais ce qui est agréable c'est que Le DOM n'est plus pollué par un surplus de classe, elles décrivent maintenant sémantiquement la structure !\n - Cependant le DOM est toujours pollué par des balises inutiles.\n\n\n\n### Utiliser la fonctionnalité Less :extend() ###\n\nEn Less, il y a deux approches pour utiliser des raccourcis de classe afin de ne pas écrire de code de manière redondante. Tout d'abord, je crée une classe modèle\n\n```\n.model { a; b; c; d; e; f; g; h; i; j; }\n```\n\n- La première approche est celle utilisée dans notre exemple précédent, pour l'appliquer j'utilise le code suivant :\n\n  ```\n  .ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 {\n    .model;\n  }\n  ```\n\n  ce qui génère en sortie CSS :\n\n  ```\n  .model { a; b; c; d; e; f; g; h; i; j; }\n\n  .ex-1 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-2 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-3 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-4 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-5 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-6 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-7 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-8 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-9 { a; b; c; d; e; f; g; h; i; j; }\n  .ex-0 { a; b; c; d; e; f; g; h; i; j; }\n  ```\n\n- La seconde approche qui est notre fameuse fonctionnalité `:extend()` permet de gagner de la place en sortie :\n\n  ```\n  .ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 {\n    \u0026:extend(.model);\n  }\n  ```\n\n  ce qui génère en sortie CSS :\n\n  ```\n  .ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0,\n  .model { a; b; c; d; e; f; g; h; i; j; }\n  ```\n\nL'un des problèmes de cette seconde approche est qu'elle ne fonctionne pas avec des fonctions. Ainsi la fonction Bootstrap `.make-xs-column(12)` par exemple n'est pas utilisable :\n\n```\n.ex-1, .ex-2, .ex-3, .ex-4, .ex-5, .ex-6, .ex-7, .ex-8, .ex-9, .ex-0 {\n    \u0026:extend(.make-xs-column(12)); /* Ce code plante. */\n}\n```\n\nUn autre problème est que `:extend()` n'est pas utilisable dans les Media Queries. C'est un formidable atout qui est très limité avec l’utilisation de Bootstrap ou des [approches Desktop First](https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/) mais qui peut se révéler très intéressant sur des grosses CSS personnalisées Mobile First.\n\nVoyons rapidement en quoi cela changerait notre précédente CSS :\n\n```css\n\n/* ... */\n\n.component {\n  /* Ici, `:extend()` est appliquable. */\n  \u0026:extend(.container, .clearfix all);\n\n  .list,\n  .header {\n    /* Ici, `:extend()` est appliquable. */\n    \u0026:extend(.row);\n  }\n\n  .header {\n    .quote,\n    .title {\n      /* Ici, `:extend()` n'est pas appliquable\n        car ce sont des fonctions. */\n      .make-xs-column(12);\n      .make-md-column(6);\n    }\n\n    .title {\n      /* Ici, `:extend()` n'est pas appliquable\n        car c'est une fonction */\n      .make-md-column-push(6);\n\n      /* Ici, `:extend()` est appliquable. */\n      \u0026:extend(.text-left);\n\n      @media (min-width: @screen-sm-min) {\n        /* Ici, `:extend()` n'est pas appliquable\n          car on est dans une Media Query. */\n        .text-right;\n      }\n    }\n\n    .quote {\n      /* Ici, `:extend()` n'est pas appliquable\n        car c'est une fonction */\n      .make-md-column-pull(6);\n    }\n  }\n\n  .list {\n    .item {\n      /* Ici, `:extend()` n'est pas appliquable\n        car ce sont des fonctions. */\n      .make-xs-column(12);\n      .make-sm-column(6);\n      .make-md-column(4);\n    }\n  }\n\n  /* ... */\n}\n```\n\n\u003e **`Bonne pratique :`** Avec cette technique, on peut donc encore réduire la taille en sortie même si dans notre exemple nous passons seulement d'un code de 16277 octets à un code de 16038 octets. Dans de nombreux cas l'écart peut cependant être significatif !\n\n\n\n\n\n## LA bonne pratique, ou l'utilisation de Bootstrap avec Less et par référence ##\n\nC'est par ici qu'on touche réellement à un point intéressant. C'est LA chose qu'il faut faire quand on utilise du Less, et surtout Bootstrap ; l'inclusion par référence ! Avant d'en parler, adaptons rapidement notre HTML pour le rendre encore plus sémantique. Cela n'a rien à voir avec notre propos, mais des `\u003cdiv\u003e` partouts, ça me donne des boutons ! Nous pourrions également [ajouter des classes types BEM pour décrire structurellement le HTML](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/).\n\n**HTML**\n\n```html\n\u003csection class=\"component\"\u003e\n  \u003cheader\u003e\n    \u003cdiv class=\"title\"\u003e\n      \u003cdiv\u003e\n        \u003ch1\u003eJe suis un titre\u003c/h1\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n    \u003caside\u003e\n      \u003cdiv\u003eJe suis un petit texte explicatif à propos du site.\u003c/div\u003e\n    \u003c/aside\u003e\n  \u003c/header\u003e\n  \u003cul class=\"list\"\u003e\n    \u003cli\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/li\u003e\n    \u003cli\u003e\n      \u003cdiv\u003eJe suis un bloc avec contenu\u003c/div\u003e\n    \u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/section\u003e\n```\n\nLe réel intérêt va résider dans l'utilisation de l'inclusion par référence. C'est à dire qu'au lieu d'inclure les portions de Bootstrap utile avec `@import`, nous allons le faire avec `@import (reference)`.\n\n\n**Less**\n\n```css\n@import 'bootstrap/normalize';\n\n/* Inclusion des fichiers, non plus entièrement, mais par\n  référence avec `(reference)`. */\n@import (reference) 'bootstrap/variables';\n@import (reference) 'bootstrap/utilities';\n@import (reference) 'bootstrap/grid';\n@import (reference) 'bootstrap/mixins/hide-text';\n@import (reference) 'bootstrap/mixins/center-block';\n@import (reference) 'bootstrap/mixins/clearfix';\n@import (reference) 'bootstrap/mixins/grid';\n@import (reference) 'bootstrap/mixins/grid-framework';\n@import (reference) 'bootstrap/type';\n@import (reference) 'bootstrap/mixins/text-overflow.less';\n@import (reference) 'bootstrap/mixins/text-emphasis.less';\n@import (reference) 'bootstrap/mixins/background-variant.less';\n\nhtml {\n  font-size: 62.5%;\n}\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n/* On permet des listes au rendu vide. */\n.ul-reset {\n  margin-left: -15px;\n  margin-right: -15px;\n  padding: 0;\n  list-style-type: none;\n}\n\n.component {\n  \u0026:extend(.container);\n  \u0026:extend(.clearfix all);\n\n  .list,\n  header {\n    \u0026:extend(.row);\n  }\n\n  header {\n    aside,\n    .title {\n      .make-xs-column(12);\n      .make-md-column(6);\n    }\n\n    .title {\n      .make-md-column-push(6);\n\n      \u0026:extend(.text-left);\n\n      @media (min-width: @screen-sm-min) {\n        .text-right;\n      }\n    }\n\n    aside {\n      .make-md-column-pull(6);\n    }\n  }\n\n  .list {\n\n    /* On applique à `.list` un reset. */\n    \u0026:extend(.ul-reset);\n\n    li {\n      .make-xs-column(12);\n      .make-sm-column(6);\n      .make-md-column(4);\n    }\n  }\n\n  .title,\n  aside,\n  .list li {\n    div {\n      background-color: #ddddff;\n      margin-top: 16px;\n      padding: 10px;\n      font-size: 1.5rem;\n\n      @media (min-width: @screen-xs-min) {\n        height: 40px;\n      }\n    }\n  }\n\n  h1 {\n    margin: 0;\n    font-size: 3rem;\n    margin-top: -6px;\n  }\n\n  background-color: #f2f2f2;\n  padding-bottom: 16px;\n}\n```\n\n**Résultat**\n\n- **[Voir le résultat avec le code](https://codepen.io/Haeresis/pen/gpRGqX)**\n\n\u003e **`Bonne pratique`** Et là, c'est le jackpot, on a une sortie divisée par 30 !\n\u003e \n\u003e Ce qu'il se passe est que toutes les classes et fonctions des fichiers inclus par référence ne sont générées que si elles sont appelées en tant que raccourci dans le fichier qui les appels par référence.\n\u003e \n\u003e **Ainsi pour la sortie nous avons maintenant un HTML de [431 octets](https://codepen.io/Haeresis/pen/gpRGqX?editors=100) après compression et un fichier CSS de [4 ko](https://codepen.io/Haeresis/pen/gpRGqX?editors=010) après compression !**\n\n\n\n### Ne plus se soucier des inclusions ###\n\nAvec un appel par référence, comme vous l'aurez peut-être deviné, on peut même remplacer l'intégralité des appels suivant :\n\n```less\n@import (reference) 'bootstrap/variables';\n@import (reference) 'bootstrap/utilities';\n@import (reference) 'bootstrap/grid';\n@import (reference) 'bootstrap/mixins/hide-text';\n@import (reference) 'bootstrap/mixins/center-block';\n@import (reference) 'bootstrap/mixins/clearfix';\n@import (reference) 'bootstrap/mixins/grid';\n@import (reference) 'bootstrap/mixins/grid-framework';\n@import (reference) 'bootstrap/type';\n@import (reference) 'bootstrap/mixins/text-overflow.less';\n@import (reference) 'bootstrap/mixins/text-emphasis.less';\n@import (reference) 'bootstrap/mixins/background-variant.less';\n```\n\nuniquement par :\n\n```less\n@import (reference) 'bootstrap/bootstrap';\n```\n\net c'est la référence qui fera le reste. **Tout cela pour une sortie de [4 ko](https://codepen.io/Haeresis/pen/gpRGqX?editors=010) totalement identique avant l'inclusion fonctionnalité par fonctionnalité.** On est bien loin de nos [118 ko](https://codepen.io/Haeresis/pen/yNXXQO?editors=010) initiales !\n\n\n\n\n\n## Petits calculs ##\n\nNous allons voir rapidement la quantité de bande passante sauvée en aillant fait l'effort d'ajouter `(reference)` et `:extend()`. Gardez en tête que ce n'est pas pour une page complète, mais bien le petit fragment d'exemple que nous venons d'étudier.\n\nNous avons donc :\n\n- Méthode standard, avec DOM négligé : HTML = 657 octets, CSS = 116 972 octets.\n- Méthode optimisée, avec DOM propre : HTML = 431 octets, CSS = 4 018 octets.\n\n**Côté serveur**, pour 10 000 appels (de différents clients) :\n- Méthode standard : 657 x 10000 = 6 570 Mo, 116.972 x 10000 = 1 169 720 Mo\n- Méthode optimisée : 431 x 10000 = 4 310 Mo, 4.018 x 10000 = 40 180 Mo\n\n   Soit une **économie de trafic** :\n   - HTML = 6.570Mo - 4.310Mo = **2.260 Mo**\n   - CSS = 1.169.720Mo - 40.180Mo = **1.129 Go**\n\n**Côté client**, pour 100 appels d'un seul ordinateur **sans cache** (c.-à-d. à travers divers sites utilisant mal Bootstrap) :\n- Méthode standard : 657 x 100 = 65 700 octets, 116 972 x 100 = 11 697 200 octets\n- Méthode optimisée : 431 x 100 = 43 100 octets, 4 018 x 100 = 401 800 octets\n\n   Soit une **économie de trafic** :\n   - HTML = 65 ko - 43 ko = **22 ko**\n   - CSS = 11.697 ko - 401 ko = **11 Mo**\n\n**Côté client**, pour 100 appels d'un seul ordinateur **avec cache** (c.-à-d. en visitant plusieurs fois la même page) :\n- Méthode standard : 657 x 100 = 65 700 octets, 116 972 x 1 = 116 972 octet\n- Méthode optimisée : 431 x 100 = 43 100 octets, 4 018 x 1 = 4 018 octet\n\n   Soit une **économie de trafic** :\n   - HTML = 65 ko - 43 ko = **22 ko**\n   - CSS = 117 ko - 4 ko = **113 ko**\n\n\n\n\n\n## En Bonus ##\n\nPour développer des sites web avec Less en toute transparence, je ne saurais que trop vous conseiller le module [NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) en [Node.js](https://nodejs.org/). Cela vous permettra de développer dans vos feuilles Less et d'appeler les résultats CSS. Un exemple d'implémentation est à votre disposition dans le projet [PreprocessorAtlas](https://github.com/Haeresis/PreprocessorAtlas).","dates":{"published":{"$date":"2015-06-11T18:51:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Bootstrap, lisibilité, propreté, performance, optimisation ; c'est possible !","urn":"bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible","description":"On va apprendre à séparer le fond et la forme pour pour un gain de performance et des CSS plus légères.","image":"https://blog.lesieur.name/media/images/upload/bootstrap_less.png"}
{"_id":{"$oid":"55894a766868ca087fbf8648"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5499b03566bb5aeedaafd8b6"},{"$oid":"53746e72eb856da96ba3f8a3"},{"$oid":"5310456355dfd5f7698d48bb"}],"content":"Dans de nombreux cas, on utilise des balises superflus pour gérer ;\n\n- la largeur total d'une grille avec les éléments externes et \n- l'espacement entre chaque balise avec l'élément interne. Parfois même, \n- pour appliquer de la couleur de fond, on utilise une troisième balise ! \n\nC'est notamment le cas avec le framework CSS Bootstrap qui se fait vieux. Si vous vous ventez de ne plus suporter IE8 parce qu’il à fait son temps, alors il est également temps d'arrêter d'utiliser des balises inutiles !\n\nVoici un exemple d'ancienne pratique et son équivalence avec la propriété CSS3 `calc()`.\n\n\n\n\n\n## La Grille ##\n\n### Exemple old school à la Bootstrap ###\n\n**HTML :**\n\nAvec le HTML suivant :\n\n```html\n\u003cdiv class=\"container\"\u003e\n\u0009\u003cdiv class=\"row\"\u003e\n\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 1\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 2\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 3\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u0009\u003cdiv class=\"row\"\u003e\n\u0009\u0009\u003cdiv class=\"col-xs-6\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 4\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003cdiv class=\"col-xs-6\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 5\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n```\n\net avec la CSS suivante :\n\n**CSS :**\n\n```css\n* {\n\u0009box-sizing: border-box;\n}\n.container {\n\u0009max-width: 1200px;\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009margin-bottom: 15px;\n}\n.row {\n\u0009margin-top: 15px;\n\u0009margin-left: -15px;\n\u0009margin-right: -15px;\n}\n.row:after {\n\u0009content: \"\";\n\u0009display: block;\n\u0009clear: left;\n}\n.col-xs-6 {\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009width: 50%;\n\u0009float: left;\n}\n.col-xs-4 {\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009width: 33.33333333%;\n\u0009float: left;\n}\n.item {\n\u0009background-color: #e8e8e8;\n\u0009padding: 15px;\n}\n```\n\nnous obtenons :\n\n**Résultat :**\n\n\u003cdiv class=\"example-grid\"\u003e\n\u0009\u003cdiv class=\"container\"\u003e\n\u0009\u0009\u003cdiv class=\"row\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 1\u003c/div\u003e\n\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 2\u003c/div\u003e\n\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u003cdiv class=\"col-xs-4\"\u003e\n\u0009\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 3\u003c/div\u003e\n\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003cdiv class=\"row\"\u003e\n\u0009\u0009\u0009\u003cdiv class=\"col-xs-6\"\u003e\n\u0009\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 4\u003c/div\u003e\n\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u0009\u003cdiv class=\"col-xs-6\"\u003e\n\u0009\u0009\u0009\u0009\u003cdiv class=\"item\"\u003eZone 5\u003c/div\u003e\n\u0009\u0009\u0009\u003c/div\u003e\n\u0009\u0009\u003c/div\u003e\n\u0009\u003c/div\u003e\n\u003c/div\u003e\n\n### Même exemple avec calc() en CSS3 ###\n\nAvec le HTML suivant :\n\n**HTML :**\n\n```html\n\u003cul class=\"component\"\u003e\n\u0009\u003cli\u003eZone 1\u003c/li\u003e\n\u0009\u003cli\u003eZone 2\u003c/li\u003e\n\u0009\u003cli\u003eZone 3\u003c/li\u003e\n\u0009\u003cli\u003eZone 4\u003c/li\u003e\n\u0009\u003cli\u003eZone 5\u003c/li\u003e\n\u003c/ul\u003e\n```\n\net avec la CSS suivante :\n\n**CSS :**\n\n```css\n* {\n\u0009box-sizing: border-box;\n}\n.list {\n\u0009padding: 0;\n\u0009max-width: 1200px;\n\u0009margin-top: 0;\n\u0009margin-bottom: 15px;\n\u0009margin-left: -15px;\n\u0009margin-right: -15px;\n\u0009list-style-type: none;\n}\n.list:after {\n\u0009content: \"\";\n\u0009display: block;\n\u0009clear: left;\n}\n.list li {\n\u0009margin-top: 15px;\n\u0009background-color: #e8e8e8;\n\u0009padding: 15px;\n\u0009float: left;\n\u0009margin-left: 15px;\n\u0009margin-right: 15px;\n}\n.list li:nth-child(n+5) {\n\u0009width: calc(50% - 30px);\u0009\n}\n.list li:nth-child(n+3) {\n\u0009width: calc(33.33333333% - 30px);\u0009\n}\n```\n\nnous obtenons :\n\n**Résultat :**\n\n\u003cdiv class=\"example-list\"\u003e\n\u0009\u003cul class=\"list\"\u003e\n\u0009\u0009\u003cli\u003eZone 1\u003c/li\u003e\n\u0009\u0009\u003cli\u003eZone 2\u003c/li\u003e\n\u0009\u0009\u003cli\u003eZone 3\u003c/li\u003e\n\u0009\u0009\u003cli\u003eZone 4\u003c/li\u003e\n\u0009\u0009\u003cli\u003eZone 5\u003c/li\u003e\n\u0009\u003c/ul\u003e\n\u003c/div\u003e\n\n\n\n\n\n## À propos de calc() ##\n\nLa grande force de `calc()` en CSS3 est qu'elle est capable de mélanger le calcul de plusieurs unités en même temps, et en temps réel. Cela permet en plus de conserver des proportions bonnes dès que la fenêtre change de taille.\n\n### Support des navigateurs ###\n\n#### Support IE9 ###\n\nComme dit en introduction, si vous souhaitez supporter `calc()` pour des versions plus vieille que IE8, il va falloir vous procurer [un polyfill comme celui-ci](https://github.com/closingtag/calc-polyfill). En ce qui concerne IE9, il est mentionné qu'elle est partiellement supportée. En réalité, cela vient du fait que si vous écrivez `calc(50%-30px)` cela fonctionnera partout sauf sur IE9 ou il faut bien mettre des espaces entre les symboles d'opération comme ceci : `calc(50% - 30px)`.\n\n#### Support propriétaire ####\n\nVous pouvez également supporter des versions plus vieille de la plupard des navigateurs avec les extensions propriétaires suivantes :\n\n```css\nwidth: -webkit-calc(50% - 100px);\nwidth:    -moz-calc(50% - 100px);\nwidth:         calc(50% - 100px);\n```\n### Support Less ###\n\nEn Less, la propriété calc() existe aussi, et c'est peut-être elle qui vous avait fait échouer vos tests si vous aviez déjà tenté le mélange d'unité car elle est incapable de le faire, aussi : `width: calc(50% - 30px);` donnera en sortie CSS `width: 20%`. Qui plus est, le calcul n'est pas effectué en temps réel. Pour réellement utiliser la propriété `calc()` CSS3 il va falloir écrire `width: calc(~'50% - 30px');` ce qui donnera en sortie CSS `width: calc(50% - 30px);`.\n\n#### Pour en savoir plus ####\n\nSi vous voulez en savoir plus sur `calc()` et ses subtilités [c'est par ici](http://caniuse.com/#feat=calc).\n\n**À vous de jouer !**","dates":{"published":{"$date":"2015-06-23T12:00:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".example-grid * {\n\u0009-webkit-box-sizing: border-box;\n\u0009   -moz-box-sizing: border-box;\n\u0009        box-sizing: border-box;\n}\n.example-grid .container {\n\u0009max-width: 1200px;\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009margin-bottom: 15px;\n}\n.example-grid .row {\n\u0009margin-top: 15px;\n\u0009margin-left: -15px;\n\u0009margin-right: -15px;\n}\n.example-grid .row {\n\u0009margin-top: 15px;\n\u0009margin-left: -15px;\n\u0009margin-right: -15px;\n}\n.example-grid .row:after {\n\u0009content: \"\";\n\u0009display: block;\n\u0009clear: left;\n}\n.example-grid .col-xs-6 {\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009width: 50%;\n\u0009float: left;\n}\n.example-grid .col-xs-4 {\n\u0009padding-left: 15px;\n\u0009padding-right: 15px;\n\u0009width: 33.33333333%;\n\u0009float: left;\n}\n.example-grid .item {\n\u0009background-color: #e8e8e8;\n\u0009padding: 15px;\n}\n\n.example-list * {\n\u0009-webkit-box-sizing: border-box;\n\u0009   -moz-box-sizing: border-box;\n\u0009        box-sizing: border-box;\n}\n.example-list .list {\n\u0009padding: 0;\n\u0009max-width: 1200px;\n\u0009margin-top: 0;\n\u0009margin-bottom: 15px;\n\u0009margin-left: -15px;\n\u0009margin-right: -15px;\n\u0009list-style-type: none;\n}\n.example-list .list:after {\n\u0009content: \"\";\n\u0009display: block;\n\u0009clear: left;\n}\n.example-list .list li {\n\u0009margin-top: 15px;\n\u0009background-color: #e8e8e8;\n\u0009padding: 15px;\n\u0009float: left;\n\u0009margin-left: 15px;\n\u0009margin-right: 15px;\n\u0009width: calc(50% - 30px);\n}\n.example-list .list li:nth-child(n+3) {\n\u0009width: calc(33.33333333% - 30px);\u0009\n}\nbody {\n\u0009overflow-x: hidden;\n}","title":"La propriété CSS3 calc() pour arrêter avec les balises HTML imbriquées inutilement","urn":"la-propriete-css3-calc-pour-arreter-avec-les-balises-html-imbriquees-inutilement"}
{"_id":{"$oid":"558bf17d6868ca087fbf8649"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"Je viens de voir un code allembiqué permettant de maintenir la hauteur de deux `\u003cdiv\u003e` côte à côte. Problème ? Ces éléments ne sont pas côte à côte en version mobile mais l'un sous l'autre : et maintenir la hauteur dans ce cas là ne sert à rien. La semaine d'avant, j'ai vu un code avec une cascade de `if` permettant d'ouvrir une vidéo dans une popup sur PC et d'ouvrir un lien Youtube sur mobile. Bien évidemment, les petits écrans PC ouvraient une popup alors qu'il aurait été intéressant qu'ils ouvrent aussi un lien. Je vous fais l'impasse sur les comportements au redimensionnement de la fenêtre.\n\nBref, lançons-nous dans un petit exercice pour permettre un code JavaScript Responsive Web Design, sans se soucier de l'appareil qui l’exécute.\n\n\n\n\n\n## La fonction JavaScript `window.matchMedia` ##\n\nDe la même manière que dans une feuille CSS nous allons nous servir de `@media`, en JavaScript, nous allons nous servir de `window.matchMedia` pour adresser différent comportement en fonction de la taille d'affichage de l'écran. La syntaxe dans les deux cas est identique et une simple ligne gère la condition total d'affichage. Enfin, si votre navigateur ne gère pas `window.matchMedia`, il ne gère pas non plus `@media` ce qui va nous arranger pour le support.\n\n\n\n\n\n## Notre problématique ##\n\nJe souhaite ouvrir la vidéo d'une chaine Youtube dans une popup. Si l'écran est trop petit, je préfère allez sur la page Internet de la page. Cela permet aux smartphones de proposer d'ouvrir le lien Internet dans une application tierce dédiée (entre autre) et aux petits écrans de ne pas se manger de popup.\n\n\n\n### HTML ###\n\nTout d'abord, préparons le terrain HTML. Nous avons besoin de deux box côte à côte, la première présentera la chaine Youtube, la seconde permettra de lancer la vidéo dans une popup. Si l'écran est trop petit, les box seront l'une sous l'autre.\n\n```html\n\u003csection class=\"youtube-presentation\"\u003e\n  \u003cdiv class=\"presentation\"\u003e\n    \u003ch1\u003eYoutube for Playstation\u003c/h1\u003e\n    \u003ch2\u003eDescription\u003c/h2\u003e\n    \u003cp\u003eWelcome to the official home of PlayStation on YouTube.\u003c/p\u003e\n    \u003cp\u003eHere you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and\n    check back often for the new game trailers,\n    behind-the-scenes footage, in-game moments,\n    tips and tricks and exclusive sneak peeks.\u003c/p\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"video\"\u003e\n    \u003ch2\u003eFinal Fantasy VII Remake E3 Trailer | PS4\u003c/h2\u003e\n    \u003cdiv class=\"link\"\u003e\n      \u003ca \n        href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"\u003e\u003cimg \n        src=\"https://lh3.googleusercontent.com/[...]\" \n        alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"\u003e\u003c/a\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"popup\"\u003e\n      \u003cdiv class=\"embeded\"\u003e\n        \u003cdiv class=\"close\"\u003e\u003c/div\u003e\n        \u003ciframe \n          width=\"560\" \n          height=\"315\" \n          src=\"https://www.youtube.com/embed/Kznek1uNVsg\" \n          frameborder=\"0\" \n          allowfullscreen\u003e\u003c/iframe\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/section\u003e\n```\n\n### CSS ###\n\nHabillons tout ça :\n\n```css\n/* On créer un container responsive */\n* {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes Responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo */\n.youtube-presentation .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo */\n.youtube-presentation .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;\n}\n.youtube-presentation .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n```\n\nEt voyons le résultat !\n\u003csection class=\"youtube-presentation\"\u003e\n  \u003cdiv class=\"presentation\"\u003e\n    \u003cdiv class=\"like-h1\"\u003eYoutube for Playstation\u003c/div\u003e\n    \u003cdiv class=\"like-h2\"\u003eDescription\u003c/div\u003e\n    \u003cp\u003eWelcome to the official home of PlayStation on YouTube.\u003c/p\u003e\n    \u003cp\u003eHere you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.\u003c/p\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"video\"\u003e\n    \u003cdiv class=\"like-h2\"\u003eFinal Fantasy VII Remake E3 Trailer | PS4\u003c/div\u003e\n    \u003cdiv class=\"link\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"\u003e\u003csvg\u003e\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"\u003e\u003c/path\u003e\u003cpolygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003cimg src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"\u003e\u003c/a\u003e\u003c/div\u003e\n    \u003cdiv class=\"popup\"\u003e   \n      \u003cdiv class=\"embeded\"\u003e\n        \u003cdiv class=\"close\"\u003e\u003c/div\u003e\n        \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/section\u003e\n\n\u003e *`Conclusion :`* Sans JavaScript nous avons été capable d'habiller la totalité des éléments et de créer l'affichage de la popup (que l'on ne voit pas sans la classe `opened`). Nous allons maintenant avoir du JavaScript pour\n\u003e \n\u003e - maintenir la hauteur des box à la même taille, uniquement quand ils sont côte à côte,\n- ouvrir la popup en grand format ou laisser le lien amener à une page Youtube.\n\n\n\n\n\n## Notre solution : `window.matchMedia` ##\n\nCommençons dans un premier temps, à l'aide de jQuery, par appliquer le script qui va maintenir la hauteur, et ouvrir la popup.\n\n```js\n/* Variable globale si pas encore défini */\nvar website = website || {},\n    $window = $window || $(window);\n\n/* \n * Scope pour nos deux nouvelles fonctions, \n * aucune variable ici ne polluera le reste\n * des scripts.\n */\n(function (publics) {\n  \n  /* \n   * Création de la fonctionnalité pour maintenir \n   * les hauteurs.\n   */\n  publics.sameHeight = function ($items) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n      \n      /* Parmi les éléments recherchés... */\n      $items.height(\"\").each(function () {\n        var $current = $(this);\n        \n        /* ...on trouve le plus haut... */\n        if ($current.height() \u003e maxHeight) {\n          maxHeight = $current.height();\n        }\n        \n      /* Et on applique cette hauteur à tous les autres. */\n      }).height(maxHeight);\n    }\n    \n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    sameHeight();\n    \n    /* \n     * ...puis à chaque redimensionnement de \n     * page.\n     */\n    $window.resize(function () {\n      sameHeight(); \n    });\n  };\n  \n  /* \n   * Création de la fonctionnalité pour ouvrir/fermer \n   * les popups.\n   */\n  publics.popupVideo = function ($senders, $targets) {\n    \n    /* Sur une popup ouverte... */\n    function closePopup($popup) {\n      /* ...permettre au clique sur le background qu'elle se ferme... */\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n        \n      /* ...mais pas que le contenu utile la ferme... */\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n        \n      /* ...mais que le bouton close la ferme. */\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    /* Chaque élément d'ouverture $sender... */\n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        /* ...cible sa popup associée $target */\n        $sender.click(function (e) {\n          /* ...l'ouvre au clique... */\n          e.preventDefault();\n          $target.addClass(\"opened\");\n        });\n        \n        /* ...et met en place sa fermeture. */\n        closePopup($target)\n      });\n    }\n\n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    popupVideo();\n    \n    /* \n     * ...puis à chaque redimensionnement de \n     * page.\n     */\n    $window.resize(function () {\n      popupVideo(); \n    });\n  };\n  \n}(website));\n\n/* \n * Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight(\n  $(\".youtube-presentation .presentation, .youtube-presentation .video\")\n);\nwebsite.popupVideo(\n  $(\".youtube-presentation .video a\"),\n  $(\".youtube-presentation .popup\")\n);\n```\n\nCe qui nous donne au final... ceci !\n\u003csection class=\"youtube-presentation ex1\"\u003e\n  \u003cdiv class=\"presentation\"\u003e\n    \u003cdiv class=\"like-h1\"\u003eYoutube for Playstation\u003c/div\u003e\n    \u003cdiv class=\"like-h2\"\u003eDescription\u003c/div\u003e\n    \u003cp\u003eWelcome to the official home of PlayStation on YouTube.\u003c/p\u003e\n    \u003cp\u003eHere you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.\u003c/p\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"video\"\u003e\n    \u003cdiv class=\"like-h2\"\u003eFinal Fantasy VII Remake E3 Trailer | PS4\u003c/div\u003e\n    \u003cdiv class=\"link\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"\u003e\u003csvg\u003e\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"\u003e\u003c/path\u003e\u003cpolygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003cimg src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"\u003e\u003c/a\u003e\u003c/div\u003e\n    \u003cdiv class=\"popup\"\u003e   \n      \u003cdiv class=\"embeded\"\u003e\n        \u003cdiv class=\"close\"\u003e\u003c/div\u003e\n        \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/section\u003e\n\n\u003e Les mécanismes sont en place et fonctionnels, cependant, au vu du design de ma page dans ses divers formats Responsive, nous allons :\n- Pouvoir changer les règles pour les Media Queries `@media` de ma feuille CSS.\n- Les implémenter également dans le JavaScript avec `window.matchMedia`.\n\n\n\n### Le code JavaScript final ###\n\nAu regard de l'affichage de ma zone de contenu, il y a assez de place pour afficher les box côte à côte pour une largeur de fenêtre de 992px à l'infini et entre 480px et 780px. En ce qui concerne l'affichage de la popup, en dessous de 480px de large, je préférerais afficher la vidéo sur une page dédiée Youtube ou dans une application tierce. Je veux également le même comportement si l'affichage est inférieur à 320px de hauteur.\n\nLes deux Media Queries seront donc :\n\n- Pour les box : `(min-width: 480px) AND (max-width: 779px), (min-width: 992px)`\n- Pour la popup : `(min-width: 480px) AND (min-height: 320px)`\n\n*Note : Les valeurs données étant incluses, je mets donc 779px et non 780px pour qu'à 780px les box soient de nouveau en ligne.*\n\nCela nous donne les modifications suivantes pour la CSS :\n\n*CSS*\n\n```css\n/* ... */\n\n/* Et deux colonnes Responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n@media (min-width: 480px) AND (max-width: 779px), (min-width: 992px) { /* Media Queries des box. */\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* ... */\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n@media (min-width:480px) AND (min-height: 320px) { /* Media Queries de la popup. */\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n\n/* ... */\n```\n\net les modifications suivantes pour le JavaScript :\n\n```js\n/* ... */\n\n(function (publics) {\n  var privates = {};\n  \n  /*\n   * Nous créons une petite fonctionnalité\n   * utile uniquement dans notre scope pour\n   * autoriser, en fonction de la Media Queries\n   * le JavaScript à faire effet.\n   */\n  privates.allowMechanism = function (mediaQueries) {\n    var rtrn = false;\n    \n    /*\n     * Si le navigateur ne gère pas les Media Queries,\n     * la fonctionnalité ne fait rien de notable.\n     */\n    if (typeof mediaQueries !== 'undefined') {\n      \n      /*\n       * Si il les gère, appliquer l'effet, uniquement\n       * sur ce qui a été demandé dans la Media Queries.\n       */\n      if (typeof window.matchMedia !== 'undefined') {\n       rtrn = window.matchMedia(mediaQueries).matches;\n        \n      /*\n       * Si il les gère, mais qu'aucune Media Queries n'a été\n       * définies, rendre l'effet pour touts les\n       * cas de figure.\n       */\n      } else {\n        rtrn = true;\n      }\n    }\n    \n    return rtrn;\n  }\n\n  publics.sameHeight = function ($items, mediaQueries) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n      $items.height(\"\");\n\n      /*\n       * On ne manage la hauteur des box que\n       * si les Media Queries sont validées.\n       */\n      if (privates.allowMechanism(mediaQueries)) {\n        $items.each(function () {\n          var $current = $(this);\n\n          if ($current.height() \u003e maxHeight) {\n            maxHeight = $current.height();\n          }\n        }).height(maxHeight);\n      }\n    }\n\n    /* ... */\n  };\n\n  publics.popupVideo = function ($senders, $targets, mediaQueries) {\n\n    /* ... */\n    \n    function popupVideo() {\n        /* ... */\n        \n        $sender.click(function (e) {\n\n          /*\n           * On autorise l'ouverture de la Popup uniquement\n           * si les Media Queries sont validées.\n           */\n          if (privates.allowMechanism(mediaQueries)) {\n            e.preventDefault();\n            $target.addClass(\"opened\");\n          }\n        });\n\n        /* ... */\n      });\n    }\n\n    /* ... */\n  };\n  \n}(website));\n\n/* \n * Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight(\n  $(\".youtube-presentation .presentation, .youtube-presentation .video\"),\n  \"(min-width: 480px) AND (max-width: 779px), (min-width: 992px)\"\n);\nwebsite.popupVideo(\n  $(\".youtube-presentation .video a\"),\n  $(\".youtube-presentation .popup\"),\n  \"(min-width: 480px) AND (min-height: 320px)\"\n);\n```\n\nEt voilà !\n\u003csection class=\"youtube-presentation2\"\u003e\n  \u003cdiv class=\"presentation\"\u003e\n    \u003cdiv class=\"like-h1\"\u003eYoutube for Playstation\u003c/div\u003e\n    \u003cdiv class=\"like-h2\"\u003eDescription\u003c/div\u003e\n    \u003cp\u003eWelcome to the official home of PlayStation on YouTube.\u003c/p\u003e\n    \u003cp\u003eHere you'll find the latest videos about your favorite\n    PlayStation products direct from Sony Computer Entertainment,\n    as well as consumer generated clips from other PlayStation\n    fans. To stay up to date, be sure to subscribe above and \n    check back often for the new game trailers, \n    behind-the-scenes footage, in-game moments, \n    tips and tricks and exclusive sneak peeks.\u003c/p\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"video\"\u003e\n    \u003cdiv class=\"like-h2\"\u003eFinal Fantasy VII Remake E3 Trailer | PS4\u003c/div\u003e\n    \u003cdiv class=\"link\"\u003e\u003ca href=\"https://www.youtube.com/watch?v=Kznek1uNVsg\"\u003e\u003csvg\u003e\u003cpath fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#1F1F1F\" class=\"ytp-large-play-button-svg\" d=\"M84.15,26.4v6.35c0,2.833-0.15,5.967-0.45,9.4c-0.133,1.7-0.267,3.117-0.4,4.25l-0.15,0.95c-0.167,0.767-0.367,1.517-0.6,2.25c-0.667,2.367-1.533,4.083-2.6,5.15c-1.367,1.4-2.967,2.383-4.8,2.95c-0.633,0.2-1.316,0.333-2.05,0.4c-0.767,0.1-1.3,0.167-1.6,0.2c-4.9,0.367-11.283,0.617-19.15,0.75c-2.434,0.034-4.883,0.067-7.35,0.1h-2.95C38.417,59.117,34.5,59.067,30.3,59c-8.433-0.167-14.05-0.383-16.85-0.65c-0.067-0.033-0.667-0.117-1.8-0.25c-0.9-0.133-1.683-0.283-2.35-0.45c-2.066-0.533-3.783-1.5-5.15-2.9c-1.033-1.067-1.9-2.783-2.6-5.15C1.317,48.867,1.133,48.117,1,47.35L0.8,46.4c-0.133-1.133-0.267-2.55-0.4-4.25C0.133,38.717,0,35.583,0,32.75V26.4c0-2.833,0.133-5.95,0.4-9.35l0.4-4.25c0.167-0.966,0.417-2.05,0.75-3.25c0.7-2.333,1.567-4.033,2.6-5.1c1.367-1.434,2.967-2.434,4.8-3c0.633-0.167,1.333-0.3,2.1-0.4c0.4-0.066,0.917-0.133,1.55-0.2c4.9-0.333,11.283-0.567,19.15-0.7C35.65,0.05,39.083,0,42.05,0L45,0.05c2.467,0,4.933,0.034,7.4,0.1c7.833,0.133,14.2,0.367,19.1,0.7c0.3,0.033,0.833,0.1,1.6,0.2c0.733,0.1,1.417,0.233,2.05,0.4c1.833,0.566,3.434,1.566,4.8,3c1.066,1.066,1.933,2.767,2.6,5.1c0.367,1.2,0.617,2.284,0.75,3.25l0.4,4.25C84,20.45,84.15,23.567,84.15,26.4z M33.3,41.4L56,29.6L33.3,17.75V41.4z\"\u003e\u003c/path\u003e\u003cpolygon fill-rule=\"evenodd\" clip-rule=\"evenodd\" fill=\"#FFFFFF\" points=\"33.3,41.4 33.3,17.75 56,29.6\"\u003e\u003c/polygon\u003e\u003c/svg\u003e\u003cimg src=\"https://lh3.googleusercontent.com/proxy/EGUmRlYCgAUhw7F9Hic2auLGZfu3r9rAp1Z3hgouT_iYqgmKzxDtR5xcVimq25AIvdIUdBFC0dESno2LSxH5fd38P3O-jcmecp0A0GFXdCzkfVxDM0PqhVrH=w692-h384\" alt=\"Final Fantasy VII Remake E3 Trailer | PS4\"\u003e\u003c/a\u003e\u003c/div\u003e\n    \u003cdiv class=\"popup\"\u003e   \n      \u003cdiv class=\"embeded\"\u003e\n        \u003cdiv class=\"close\"\u003e\u003c/div\u003e\n        \u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Kznek1uNVsg\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n      \u003c/div\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/section\u003e\n\n\u003e **`Conclusion :`** Et nous voilà aligné avec les Media Queries que ce soit dans les fichiers CSS ou dans les fichiers JavaScript !\n\u003e \n\u003e Si vous souhaitez obtenir le code final complet, [c'est par ici](http://codepen.io/Haeresis/pen/YXEBbK) !","dates":{"published":{"$date":"2015-06-26T12:03:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"/* Variable globale si pas encore défini */\nvar website = website || {};\n\n/* \n * Scope pour nos deux nouvelles fonctions, \n * aucune variable ici ne pollura le reste\n * des scripts.\n */\n(function (publics) {\n   var privates = {};\n  \n /*\n   * Nous créeons une petite fonctionalité\n   * utile uniquement dans notre scope pour\n   * autoriser, en fonction de la Media Queries\n   * le JavaScript à faire effet.\n   */\n  privates.allowMechanism = function (mediaQueries) {\n    var rtrn = false;\n    \n    /*\n     * Si le navigateur ne gère pas les Media Queries,\n     * la fonctionalité ne fait rien de notable.\n     */\n    if (typeof mediaQueries !== 'undefined') {\n      \n      /*\n       * Si elle les gèrent, appliquer l'effet, uniquement\n       * sur ce qui a été demandé dans la Media Queries.\n       */\n      if (typeof window.matchMedia !== 'undefined') {\n       rtrn = window.matchMedia(mediaQueries).matches;\n        \n      /*\n       * Si elle les gèrent, mais qu'aucune n'a été\n       * définies, rendre l'effet pour toutes les\n       * tailles.\n       */\n      } else {\n        rtrn = true;\n      }\n    }\n    \n    return rtrn;\n  }\n\n  publics.sameHeight2 = function ($items, mediaQueries) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n\n      $items.height(\"\");\n\n      /*\n       * On ne manage la hauteur des box que\n       * si les mediaQueries sont validées.\n       */\n      if (privates.allowMechanism(mediaQueries)) {\n        $items.each(function () {\n          var $current = $(this);\n\n          if ($current.height() \u003e maxHeight) {\n            maxHeight = $current.height();\n          }\n        }).height(maxHeight);\n      }\n    }\n\n    sameHeight();\n    $window.resize(function () {\n      sameHeight(); \n    });\n  };\n\n  publics.popupVideo2 = function ($senders, $targets, mediaQueries) {\n\n    function closePopup($popup) {\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        $sender.click(function (e) {\n\n          /*\n           * On autorise l'ouverture de la Popup uniquement\n           * si les mediaQueries sont validées.\n           */\n          if (privates.allowMechanism(mediaQueries)) {\n            e.preventDefault();\n            $target.addClass(\"opened\");\n          }\n        });\n\n        closePopup($target)\n      });\n    }\n\n    popupVideo();\n    $window.resize(function () {\n      popupVideo(); \n    });\n  };\n  /* \n   * Création de la feature pour maintenir \n   * les hauteurs.\n   */\n  publics.sameHeight = function ($items) {\n  \n    function sameHeight() {\n      var maxHeight = 0;\n\n      /* Parmis les éléments recherchés... */\n      $items.height(\"\").each(function () {\n        var $current = $(this);\n        \n        /* ...on trouve le plus haut... */\n        if ($current.height() \u003e maxHeight) {\n          maxHeight = $current.height();\n        }\n        \n      /* Et on applique cette hauteur à tous les autres. */\n      }).height(maxHeight);\n    }\n    \n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    sameHeight();\n    \n    /* \n     * ...puis à chaque redimentionnement de \n     * page.\n     */\n    $(window).resize(function () {\n      sameHeight(); \n    });\n  };\n  \n  /* \n   * Création de la feature pour ouvrir/fermer \n   * les popups.\n   */\n  publics.popupVideo = function ($senders, $targets) {\n    \n    /* Sur une popup ouverte... */\n    function closePopup($popup) {\n      /* ...permettre au clique sur le background qu'elle se ferme... */\n      $popup.click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n        \n      /* ...mais pas que le contenu utile la ferme... */\n      }).find(\".content\").click(function (e) {\n        e.stopPropagation();\n        \n      /* ...mais que le bouton Close la ferme. */\n      }).find(\".close\").click(function (e) {\n        e.preventDefault();\n        $popup.removeClass(\"opened\")\n      });\n    }\n    \n    /* Chaque élément d'ouverture $sender... */\n    function popupVideo() {\n      $senders.each(function (i) {\n        var $sender = $(this),\n            $target = $targets.eq(i);\n        \n        /* ...cible sa popup associée $target */\n        $sender.click(function (e) {\n          /* ...l'ouvre au clique... */\n          e.preventDefault();\n          $target.addClass(\"opened\");\n        });\n        \n        /* ...et met en place sa fermeture. */\n        closePopup($target)\n      });\n    }\n\n    /* \n     * Application de la fonction à la \n     * lecture de celle-ci...\n     */\n    popupVideo();\n    \n    /* \n     * ...puis à chaque redimentionnement de \n     * page.\n     */\n    $(window).resize(function () {\n      popupVideo(); \n    });\n  };\n  \n}(website));\n\n/* Application de nos deux fonctions sur le \n * HTML préparé en amont.\n */\nwebsite.sameHeight($(\".youtube-presentation.ex1 .presentation, .youtube-presentation.ex1 .video\"));\nwebsite.popupVideo($(\".youtube-presentation.ex1 .video a\"), $(\".youtube-presentation.ex1 .popup\"));\nwebsite.sameHeight2(\n  $(\".youtube-presentation2 .presentation, .youtube-presentation2 .video\"),\n  \"(min-width: 480px) AND (max-width: 779px), (min-width: 992px)\"\n);\nwebsite.popupVideo2(\n  $(\".youtube-presentation2 .video a\"), $(\".youtube-presentation2 .popup\"),\n  \"(min-width: 480px) AND (min-height: 320px)\"\n);","stylesheet":"/* On créer un container responsive */\n.youtube-presentation,\n.youtube-presentation * {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes responsive */\n.youtube-presentation .presentation,\n.youtube-presentation .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n\n@media (min-width: 768px) {\n  .youtube-presentation .presentation,\n  .youtube-presentation .video {\n     width: calc(50% - 2rem);\n  }\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo*/\n.youtube-presentation .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo*/\n.youtube-presentation .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n}\n@media (min-width: 768px) {\n  .youtube-presentation .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;  \n}\n\n.youtube-presentation .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n\n.youtube-presentation .video .link {\n  position: relative;\n  display: inline-block;\n}\n.video svg {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 86px;\n  height: 60px;\n  -webkit-transform: translateY(-50%) translateX(-50%);\n     -moz-transform: translateY(-50%) translateX(-50%);\n      -ms-transform: translateY(-50%) translateX(-50%);\n       -o-transform: translateY(-50%) translateX(-50%);\n          transform: translateY(-50%) translateX(-50%);\n}\n\nbody {\n   overflow-x: hidden;\n}\n\n\n/* On créer un container responsive */\n.youtube-presentation2,\n.youtube-presentation2 * {\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n.youtube-presentation2 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n.youtube-presentation2:after {\n  content: '';\n  clear: left;\n  display: block;\n}\n\n/* Et deux colonnes responsive */\n.youtube-presentation2 .presentation,\n.youtube-presentation2 .video {\n   padding: 1rem;\n   float: left;\n   width: calc(100% - 2rem);\n   background-color: #e0e0e0;\n   margin: 1rem;\n   margin: 1rem;\n}\n\n@media (min-width: 480px) AND (max-width: 779px), (min-width: 992px) {\n\u0009.youtube-presentation2 .presentation,\n\u0009.youtube-presentation2 .video {\n\u0009   width: calc(50% - 2rem);\n\u0009}\n}\n\n/* Mise en forme de la présentation */\n.youtube-presentation2 .presentation *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation2 .presentation *:last-child {\n  margin-bottom: 0;\n}\n\n/* Mise en forme de l'image vidéo*/\n.youtube-presentation2 .video *:first-child {\n  margin-top: 0;\n}\n.youtube-presentation2 .video .link {\n  max-width: 100%;  \n}\n.youtube-presentation2 .video .link img {\n  max-width: 100%;\n  background-color: #000;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin: 0;\n  margin-top: 1rem;\n}\n\n/* Mise en forme de la popup pour la vidéo*/\n.youtube-presentation2 .video .popup {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.youtube-presentation2 .video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n/* Affichage de la popup */\n.youtube-presentation2 .popup {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n}\n@media (min-width:480px) AND (min-height: 320px) {\n  .youtube-presentation2 .popup.opened {\n    display: block;\n  }\n}\n.youtube-presentation2 .popup .embeded {\n  position: absolute;\n  width: 50%;\n  height: 50%;\n  top: 50%;\n  left: 50%;\n  -webkit-transform: translateX(-50%) translateY(-50%);\n     -moz-transform: translateX(-50%) translateY(-50%);\n      -ms-transform: translateX(-50%) translateY(-50%);\n       -o-transform: translateX(-50%) translateY(-50%);\n          transform: translateX(-50%) translateY(-50%);\n}\n.youtube-presentation2 .popup .close {\n  position:absolute;\n  right: 0;\n  bottom: 100%;\n  cursor: pointer;\n}\n\n.youtube-presentation2 .popup .close:before {\n  content: 'X';\n  display: block;\n  color: #000;\n  -webkit-border-radius: 50%;\n          border-radius: 50%;\n  cursor: pointer;\n  padding: .2rem;\n  font-size: 1rem;\n  width: 2rem;\n  text-align: center;\n  background-color: #fff;\n  margin-bottom: .2rem;\n}\n\n.youtube-presentation2 .video .link {\nposition: relative;\ndisplay: inline-block;\n}\n.youtube-presentation2 .video svg {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 86px;\n  height: 60px;\n  -webkit-transform: translateY(-50%) translateX(-50%);\n     -moz-transform: translateY(-50%) translateX(-50%);\n      -ms-transform: translateY(-50%) translateX(-50%);\n       -o-transform: translateY(-50%) translateX(-50%);\n          transform: translateY(-50%) translateX(-50%);\n}\n\n.like-h1 {\n  color: #222;\n  margin: 32px 0 0;\n  font-weight: 400;\n  line-height: 1.3;\n  font-size: 1.5em;\n}\n.like-h2 {\n  color: #111;\n  margin: 32px 0 0;\n  font-weight: 400;\n  line-height: 1.3;\n  font-size: 1.17em;\n}","title":"Activer vos effets JavaScript en fonction de vos Media Queries","urn":"activer-vos-effets-javascript-en-fonction-de-vos-media-queries","description":"Activer vos effets JavaScript en fonction de vos Media Queries","image":""}
{"_id":{"$oid":"55abad466868ca087fbf864a"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c9"}],"content":"Hier, c'était mon anniversaire. Et cette année, je ne m'en suis souvenu qu'avant-hier. Il ne me semble pas avoir passé une année sans que le mois de juillet arrivé, et même un peu avant, je ne me sois pas « impatienté » en attendant que le 18 arrive. Mais cette année, c'est comme si j'avais oublié de « m'impatienter ».\n\nAujourd'hui, j'ai mal à la tête, côté gauche, au dessus de l'oreille, et ce mal se prolonge jusqu'au dessus de ma tête et glisse jusqu'à ma tempe. C'est ténu, mais c'est le même mal de tête qu'hier, le jour de mon anniversaire, et que celui de la veille, et de la veille... et le même depuis maintenant deux semaines. Cette veille d'anniversaire, j'ai eu une accalmie. J'en ai certain jour, sans vraiment comprendre pourquoi. Avant ses deux dernières semaines, les maux de têtes étaient également chaque jour, mais pas nécessairement ciblés sur ce côté gauche. Avant le mois de mai, les maux de tête n'étaient pas tous les jours. Et avant le mois d'octobre de l'année dernière, les maux de tête n'étaient pas là.\n\nSi on analyse donc la progression de ces maux, en dehors de toutes causes environnementales, sociales ou physiques cela donne :\n - Dimanche 19 Octobre 2014 : premier mal de tête qui a cogné sur le côté gauche de mon crâne au dessus de l'oreille. Je m'en rappel car un tel mal de tête ne s'était jamais produit de toute ma vie. Ça cognait par saccade, c'était dérangeant, mais pas handicapant, juste très très désagréable. Puis cela marque le début de mes chaleurs au front et de mon hypersensibilité au touché frontal sans nécessairement pouvoir appeler ça des maux de tête. Le Nurofen qui était mon ami quand occasionnellement j'avais des maux de tête, ne changeait rien.\n - Samedi 16 Mai 2015 : après plusieurs mois de chaleur, de nausée, d'inquiétude, d'angoisse, de colique etc. Ce mal de tête qui le 19 Octobre a cogné du côté gauche, est apparu du côté droit de mon crâne, au dessus de l'oreille également. Depuis j'ai mal à la tête, tous les jours, à des endroits différents, mais tout est remis à zero la nuit en dormant. Le mal de tête apparaît une heure après le réveil, plus ou moins, et parfois se prolonge jusqu'à midi. Aucun médicament ne fait effet, sauf parfois du Co-doliprane et le très récent Relpax ou Zoromigro.\n - Depuis le 3 juillet 2015 : la majorité, voir la totalité des maux de tête qui réapparaissent chaque matin se trouvent sur le côté gauche, cependant, jusqu'au 12 juillet ils disparaissaient plus ou moins dans la journée, et cela n'a été gênant que deux jours pendant la semaine : des simples Dolipranne ont suffit à ré-apaiser mon mal dans la demi-heure à chaque fois.\n - Du 13 juillet 2015 à aujourd'hui, du matin au soir, du soir au matin, j'ai eu mal à ce côté gauche dans des proportions allant de ténus à presque insoutenable sans que aucun médicament ne change rien. Le 18, jour de mon anniversaire, avec ma première fêtes d'anniversaire surprise, deux Doliprannes et un anti-inflammatoire prescrit par le Neurologue en cas de dernier recours, j'ai passé ma journée à avoir mal.\n\nEn ajoutant les symptômes physiques qui ont accompagnés ses dates, et les examens cela donne :\n\n- Diverses prises de sang entre octobre et décembre qui ont montré un taux de lymphocyte un peu bas et de contre-examen m'étant en évidence le fait que celui-ci remontait progressivement\n - Cachet pour les maux de ventre accompagnant des selles molles mais seine à l'examen coprologique.\n\n- Nausées/maux de tête/prise au nez en fin décembre\n - J'ai eu un IRM cérébral avec l'avis du pratiquant disant RAS, juste un léger remaniement ethmoïdale.\n\n- Sans grosses améliorations en janvier/février\n - tentative de guérir une hypothétique sinusite aux antibiotique.\n\n- Tout Mars re-nausée/maux de tête/prise au nez \n - Cachet au carbone et anti-nauséeux.\n\n- D'Avril à Juin en complément diverse prises de sang, RAS, et un nouvel examen coprologique, RAS puis : \n - Allergologue qui diagnostique une Rhinite Chronique non allergique et qui me prescrit du Rhinocorne, depuis, plus de soucis.\n - Gastro-entérologue qui diagnostique des intestins irritables ainsi qu'un colon fonctionnant mal et qui me prescrit du Spagulax, depuis, plus de réel soucis. \n - Neurologue qui confirme le diagnostique IRM comme parfait et qui me donne un traitement de fond anti-migraine. Après 1 mois et demi, toujours en attente d'amélioration avec quelques nouvelles douleurs dans le bas des mollets, à la jointure du pied.\n\nEn ce qui concerne mon état psychologique :\n\nPour mon psy, et au vu de tous les examens antérieurs que j'ai pu faire, c'est parce que je me pause trop de questions et de problèmes que j'ai ses maux de tête. Alimenter par l'angoisse et la peur de mourir que j'ai eu ses derniers mois. Depuis que mes certitudes sur ma bonne santé ont été brisées par un corps qui m'a fait comprendre, pour la première fois de ma vie, que si la nature le souhaitait, je ne pourrais rien faire pour garder la forme. C'est très dure de penser qu'on n'est maître de son destin et de sa santé quand elle se dégrade sans que cela semble venir de nul part, et qu'on, ou le médecins ne semble rien pouvoir y faire. Pourquoi est ce que ça m'es arrivé maintenant ? On a toujours pas répondu à cette question...\n\nSi je perds un temps précieux à écrire tout ça, c'est parce que cela ne tournera plus dans ma tête une fois sorti de ma tête. Pourtant, j'ai l'impression que, maintenant que c'est écrit, c'est réel. Maintenant que mon histoire est « marqué sur le papier », je ne peux plus espérer que ça n'existe pas, et enfin me lever un matin en me disant : « Bon bah, je sais pas ce qui c'est passé, mais enfin sa semble fini. », ou que je puisse me dire « Je crois que ça s'améliore de mois en mois, ça va s'arrêter... ». Non, je n'en ai pas réellement l'impression en se qui concerne les maux de tête.\n\nMais j'écris sous les directives de mon psy, car je ne peux pas me résigner à avoir mal toute ma vie, et désespérer, je veux tout tenter. Mon psy m'assure que ça va passer, et que penser positivement et évacuer ce qui me tracasse de ma tête est la solution. Pourtant, j'étais vraiment sur qu'aujourd'hui, avec la magnifique journée que j'ai passé hier, les maux de têtes seraient plus ténus, comme pendant ma semaine de vacances. C'est maintenant sans compté le fait d'écrire tout ça qui me « prend la tête » comme ironiquement j'aime le dire ses derniers temps.\n\nJ'ai bien conscience que la vie, c'est pas des vacances, alors comment je vais faire pour arrêter ses maux de tête qui me semblent empirer quand la seule amélioration de ceux-ci semble liée à un environnement de vacances ? Pourquoi je ne peux pas simplement faire comme mes 26 dernières années : affronter les problèmes avec enthousiasme. Pourquoi je ne peux pas simplement profiter de mon bonheur auprès de ma Femme comme je l'ai fait ses 4 dernières années.\n\nEn tout cas, pour clore ce premier récit, pour ceux qui ne l'aurait pas compris, je suis né un 18 juillet il y a 27 ans. Je le marque, parce que je vais peut-être avoir tendance à l'oublier !\n\n\n\n\n\n- Hésitation à la medicine « alternative » car dernier recour avant le mur.\n- Explication de la signification du « plus mal à la tête », « accalmie ».\n- Ça me précoccupe d'avoir mal toujours au même endroit, j'ai lu qu'une personne avait toujours mal au même endroit car elle avait une petite tumeur inopérable tant qu'elle restait petite et qu'elle devrait vivre avec.\n- Je me demande comment un directeur de 55 ans déjà repéré comme pouvant faire des cancers à pu mourir d'une tumeur de la vésicule billiaire.\n- Le souvenirs donne l'impression que le temps est long","dates":{"published":{"$date":"2015-07-19T13:59:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"","stylesheet":"","title":"L'année où j'ai oublié mon anniversaire","urn":"l-annee-ou-j-ai-oublie-mon-anniversaire"}
{"_id":{"$oid":"55df1d924bf5981b0760b95b"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"530cc2f27188099a66e9bcec"}],"content":"Je viens de (re)terminer la lecture du [Guide CSS Fr](https://guidecss.davidl.fr) et j'ai eu envie d'apporter quelques modifications et ajouts à ces très bons conseils. Cet article va donc en quelque sorte constituer mes conventions en matière de création et maintenance HTML et CSS. Elles sont donc identiques à ce qui est écrit sur [Guide CSS Fr](https://guidecss.davidl.fr) à cet article prêt !\n\n\u003cfigure\u003e\n\u003cimg width=\"1003\" height=\"619\" src=\"media/images/upload/css.jpg\" alt=\"Anatomie d'une règle CSS\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eAffreux sélecteur... http://www.puce-et-media.com/\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nN'ayant rien à ajouter aux parties autres que « [4. Convention de nommage](https://guidecss.davidl.fr/convention.html) », je passe directement à mes propres conventions de nommage en vous sensibilisant à l'anatomie d'une page HTML.\n\n**Je finirai néanmoins par pointer du doigt une erreur, sinon la seule, en ce qui concerne la totale inutilité du préfixe `.js-` destiné à séparer le visuel du fonctionnel**.\n\n*Note : Tous les exemples d'inclusion de fragment HTML sont tirés du framework Node.js [NodeAtlas](https://node-atlas.js.org/) mais c'est juste à titre illustratif, c'est la même chose avec vos frameworks préférés.*\n\n\n\n\n\n## Composition d'une page ##\n\nChaque page HTML est composée par :\n\n- un **gabarit de page** ou *disposition* de page (nommé « template » ou « layout » en anglais),\n- des **composants** (nommé « components » en anglais) et\n- des **patrons de conception** (nommé « patterns » en anglais).\n\nAvant de nous attacher au gabarit qui représente la structure qui va accueillir nos composants sur une page, intéressons nous au plus important : les composants eux-mêmes.\n\n\n\n### Les composants ###\n\n#### Structure ####\n\nLes composants sont des fragments de HTML qui découpent une page de contenu HTML de manière logique et consistante. Bien qu'ils puissent être spécialisés et quasiment dédiés à un seul endroit —comme l'en-tête (souvent nommé « header ») de site—, ils sont prévus pour être :\n\n- **déplaçable** dans une page,\n- **réutilisable** sur d'autres pages.\n\nÀ cet effet, il est généralement bon d'écrire un composant dans un fichier dédié. Par exemple dans le dossier `views` de [NodeAtlas](https://node-atlas.js.org/), on pourrait créer un fichier `components/hearder.htm` et l'utiliser avec `\u003c?- include('components/header.htm') ?\u003e` dans un gabarit de page HTML.\n\nUn composant est obligatoirement composé d'au moins deux `\u003cdiv\u003e` imbriquées (ou toutes autres balises de type `block`) pour pouvoir se suffire à lui-même et respecter n'importe quel design sans être disposé dans un gabarit complexe (voir plus loin). D'ailleurs il ne doit disposer que d'une seule balise racine.\n\nLa première `\u003cdiv\u003e` représente la place totale qu'occupera le composant, design visuel inclus (background généralement) et peut varier sémantiquement avec les éléments HTML5 : `header`, `footer`, `section`, `article`, `aside` ou `nav`. Nous reviendrons plus bas sur cet aspect.\n\nLa seconde `\u003cdiv\u003e` représente la limite du contenu en lui-même (1200px maximum habituellement). Elle contiendra toujours le prefixe de classe `cmpt-` (pour « component » en anglais) qui nous permettrait par exemple de définir la taille maximale d'affichage du contenu des composants, pour tous les composants, quand ils sont libres (utilisés en dehors d'une grille, ce que nous verrons plus loin).\n\n**Voici par exemple un composant HTML dans `views/components/cmpt-\u003cname-of-component\u003e.htm`**\n\n```html\n\u003cdiv class=\"cmpt-\u003cname-of-component\u003e\"\u003e\n    \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--ui\"\u003e\n        \u003c!-- Sous-parties du composant ici. --\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nLa `\u003cdiv\u003e` de classe `cmpt-\u003cname-of-component\u003e--ui` fixe la taille maximale de chaque composant grâce à par exemple...\n\n**...cette directive CSS dans `assets/stylesheets/common.css` pour tous les composants**\n\n```css\n[class^=\"cmpt-\"][class$=\"--ui\"] {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1200px;\n}\n```\n\n**ou ponctuellement dans `assets/stylesheets/cmpt-\u003cname-of-component\u003e.css` avec**\n\n```css\n.cmpt-\u003cname-of-component\u003e--ui {\n    max-width: 1024px;\n}\n```\n\nMais aucune taille `width` ou `height` ne doit être forcée de manière à ce que le contenu du composant soit toujours fluide, quelque soit sa place dans une grille.\n\n\u003e **Pourquoi deux « div » imbriquées et une « --ui » partout ?**\n\u003e \n\u003e Je vais vous laisser voir cela à travers les divers exemples d'affichages réalisables sans gabarit complexe (pas de grille) et **à partir du même code HTML**.\n\n- [Toute la place en alternance : type « One Page »](https://codepen.io/Haeresis/pen/pJMBEg),\n- [inclus dans une page : type « Page Standard »](https://codepen.io/Haeresis/pen/NqQVXv),\n- [les deux exemples précédents en alternance : type « Design »](https://codepen.io/Haeresis/pen/PqMvQW),\n- [sur toute la page : type « BackOffice »](https://codepen.io/Haeresis/pen/mJNYxE),\n- [grille de composant : type « Bootstrap »](https://codepen.io/Haeresis/pen/vOowjL),\n- [un affichage hors flux : type « Popup »](https://codepen.io/Haeresis/pen/KpOLeR),\n- [un affichage en absolue : type « App Mobile »](https://codepen.io/Haeresis/pen/jPgopz) ou encore\n- **[la totalité en une page](https://codepen.io/Haeresis/pen/bdXymY)**.\n\n#### Nommage ####\n\nDans le [Guide CSS Fr](https://guidecss.davidl.fr), il est expliqué que si le nom du composant est : `my-component`, alors celui d'un sous composant serait `my-component__text` et une version alternative de se composant serait permise avec la classe `my-component--alternative` à la place. Pour ma part j'ai opté pour quelque chose de différent pour des questions de lisibilité du `__` ce qui nous permet de ne pas se soucier de séparer les classes par deux espaces.\n\n1. Le nom du composant est unique. Par exemple `.cmpt-presentation-items`.\n    ```html\n    \u003cdiv class=\"cmpt-presentation-items\"\u003e\n        \u003cdiv class=\"cmpt-presentation-items--ui\"\u003e\n            \u003c!-- Sous-parties --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n```\n\n2. Une sous partie de composant est nommée par exemple `.cmpt-presentation-items--title`, `.cmpt-presentation-items--content` ou encore `.cmpt-presentation-items--item--title`.\n    ```html\n    \u003cdiv class=\"cmpt-presentation-items\"\u003e\n        \u003cdiv class=\"cmpt-presentation-items--ui\"\u003e\n            \u003cdiv class=\"cmpt-presentation-items--title\"\u003e\n                \u003c!-- Titre --\u003e\n            \u003c/div\u003e\n\n            \u003cul class=\"cmpt-presentation-items--items\"\u003e\n                \u003cli class=\"cmpt-presentation-items--item\"\u003e\n                    \u003cdiv class=\"cmpt-presentation-items--subtitle\"\u003e \u003c!-- ou `cmpt-presentation-items--item--title` --\u003e\n                        \u003c!-- Sous-titre --\u003e\n                    \u003c/div\u003e\n\n                    \u003cdiv class=\"cmpt-presentation-items--content\"\u003e\n                        \u003c!-- Contenu --\u003e\n                    \u003c/div\u003e\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n```\n    et est adressé en CSS directement par son sélecteur CSS\n    ```css\n    .cmpt-presentation-item {\n        background-color: #f00;\n    }\n\n    .cmpt-presentation-item--title {\n        font-size: 1.4rem;\n    }\n\n    .cmpt-presentation-item--content {\n        padding: 20px;\n    }\n```\n\n3. La version alternative d'un composant n'est pas préfixée par son nom. Au lieu de cela, le comportement alternatif est nommé et est préfixé par `as-`. C'est grâce au cumul des classes et non à son changement que l'on appliquera la différence. Par exemple `as-carousel`.\n    ```html\n    \u003cdiv class=\"cmpt-presentation-items as-carousel\"\u003e\n        \u003cdiv class=\"cmpt-presentation-item--ui\"\u003e\n            \u003c!-- ... --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n```\n    qui est adressé en CSS grâce à la cascade\n    ```css\n    /* ... Partie précédente ... */\n\n    .cmpt-presentation-item.as-carousel { /* Cas rare de double sélection permise. */\n        background-color: #00f;\n    }\n\n    /*.cmpt-presentation-item*/.as-carousel .cmpt-presentation-item--title {\n        font-size: 1.2rem;\n    }\n\n    /*.cmpt-presentation-item*/.as-carousel .cmpt-presentation-item--content {\n         padding: 10px;\n    }\n```\n    ou encore en Less\n    ```css\n    .cmpt-presentation-item {\n        background-color: #f00;\n\n        \u0026.as-carousel {\n            background-color: #00f;\n        }\n\n        \u0026--title {\n            font-size: 1.4rem;\n        }\n\n        \u0026--content {\n            padding: 20px;\n        }\n    }\n\n    /*.cmpt-presentation-item*/.as-carousel {\n        .cmpt-presentation-item {\n            \u0026--title {\n                font-size: 1.2rem;\n            }\n\n            \u0026--content {\n                padding: 10px;\n            }\n        }\n    }\n    ```\n    ou encore **mieux**, en Stylus\n    ```css\n    .cmpt-presentation-item {\n        background-color: #f00;\n\n        \u0026.as-carousel {\n            background-color: #00f;\n        }\n\n        \u0026--title {\n            font-size: 1.4rem;\n        }\n\n        \u0026--content {\n            padding: 20px;\n        }\n\n        \u0026.as-carousel ^[0] {\n            \u0026--title {\n                font-size: 1.2rem;\n            }\n\n            \u0026--content {\n                padding: 10px;\n            }\n        }\n    }\n    ```\n\n\n\n### Le gabarit de page ###\n\nLe gabarit est la carcasse qui va accueillir les composants. On appel souvent cette carcasse la grille (en anglais « Grid »). Dans son état le plus simple, c'est une page HTML sans grille, sans classe de gabarit : une page uniquement composée de composants les uns à la suite des autres.\n\nLe contenu de la page HTML ne doit jamais être immédiatement sous le `\u003cbody\u003e` mais dans une `\u003cdiv\u003e` de classe `lyt` (pour « layout » en anglais) par exemple. Cela permet d'ajouter les scripts HTML à l'extérieur et de pouvoir profiter de `:nth-child(x)` à l'intérieur sans que le nombre ou la place des items soient altérés par l'ajout d'un `\u003cscript\u003e` (En ce qui concerne les `\u003clink\u003e`, ça se trouve dans le `\u003chead\u003e`).\n\n\n#### Gabarit simple (sans classe) ####\n\nVoici à quoi ressemble une page HTML sans grille qui accueil nos composants.\n\n```html\n\u003cbody\u003e\n    \u003c!-- Le minimum de `\u003cscript\u003e` nécessaire au démarrage pré-HTML --\u003e\n    \u003cdiv class=\"lyt\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/div\u003e\n    \u003c!-- Tous les `\u003cscript\u003e` soit 99% du Javascript appelé ici. --\u003e\n\u003c/body\u003e\n```\n\n#### Gabarit nommé ####\n\nIl est intéressant d'ajouter un nom à chaque gabarit de manière à pouvoir changer, pour un gabarit précis, le comportement de n'importe quel composant avec le préfixe `tmpl-` (pour « template » en anglais).\n\n```html\n\u003cbody\u003e\n    \u003cdiv class=\"lyt tmpl-home\"\u003e \u003c!-- Nom du gabarit --\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003cdiv\u003e\n\u003c/body\u003e\n```\n\nEn mettant ce nom au sommet de toute balise HTML, cela permet de manipuler les variations CSS de tous les pattrons de conception et composants en fonction du gabarit. En incluant donc la partie en-tête et pied-de-page de votre site au niveau de votre conteneur `lyt` global. Je peux donc changer l'arrière plan du site, spécifiquement pour le gabarit de classe `tmpl-home`.\n\n**Avec ce code CSS par exemple dans `assets/stylesheets/common.css`**\n\n```css\n.lyt {\n    background-image: none;\n}\n\n/* ... */\n\n/*.lyt*/.tmpl-home {\n    background-image: url('../media/images/ads.png');\n}\n```\n\n#### Gabarit complexe ####\n\nIl est possible de créer des gabarits plus complexes en permettant de les habiller avec un système de grille pour avoir une page plus ordonnée.\n\n**Un exemple de composants répartis dans des airs `lyt-area` et `lyt-part` destinées à être habillées par une grille.**\n\n```html\n\u003cdiv class=\"lyt tmpl-home\"\u003e\n    \u003csection class=\"lyt-area for-main\"\u003e\n        \u003cdiv class=\"lyt-part for-overview\"\u003e\n            \u003c!-- Boucle de composants ici. --\u003e\n        \u003c/div\u003e\n        \u003caside class=\"lyt-part for-ads\"\u003e\n            \u003c!-- Boucle de composants ici. --\u003e\n        \u003c/aside\u003e\n    \u003c/section\u003e\n    \u003csection class=\"lyt-area for-presentation\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/section\u003e\n    \u003caside class=\"lyt-area for-also\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/aside\u003e\n\u003c/div\u003e\n```\n\n**avec un habillage de grille (Less avec Bootstrap par exemple)**\n\n```css\n@import (reference) 'bootstrap/bootstrap';\n\n.tmpl-home {\n    .lyt-area {\n        .container; /* Ajouter une marge interne gauche et droite... */\n    }\n\n    /*.lyt-area*/.for-presentation {\n        padding: 0; /* ...et l'enlever spécifiquement pour la présentation. */\n    }\n\n    .lyt-part {\n        .make-sm-column(6); /* créer des colonnes de 6 sur 12 */\n    }\n}\n```\n\nRien ne vous empêche non plus de changer la grille (l'application CSS sur le gabarit) en fonction des besoins, ce que vous ne pourriez pas faire si vous appliquer des patrons de conceptions comme `col-xs-6` directement dans la grille (nous verrons cela plus bas).\n\nPar exemple en ajoutant `with-ads` à votre gabarit, vous pourriez faire varier votre feuille CSS de manière à accueillir de la publicité de part et d'autre de la page.\n\n```html\n\u003cdiv class=\"lyt tmpl-home with-ads\"\u003e\n    \u003c!-- Grille de gabarit --\u003e\n\u003c/div\u003e\n```\n\n\n\n### Les patrons de conception ###\n\nCe sont des modèles prêts à l'emploi destinés à être apposés sur une balise, ou, une balise contenant un ensemble de balise. Lors de sa définition, le patron nécessite « obligatoirement » un commentaire CSS sur son utilisation dans un code HTML.\n\nContrairement aux gabarit et composants, les patrons ne sont pas ciblés depuis la feuille CSS vers une classe « sémantique » mais mis à la main sur une balise HTML. En ce sens, ils sont parfait pour permettre à des rédacteurs de contenu de faire de la mise en page ou faire votre grille CSS dans le gabarit de manière [HTML-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/) plutôt que [CSS-Driven](https://blog.lesieur.name/utilisation-optimisee-de-framework-css-comme-bootstrap-avec-less/).\n\nDans nos exemples précédents, `lyt-area` et `lyt-part` pourrait être des patrons avec chacun un rôle « raccourci » spécifique (ici de mettre le code dans un containeur pour `lyt-part`. Les patrons peuvent donc servir dans les composants, mais également dans les gabarit en fonction du besoin.\n\nVoici des exemples de patrons :\n\n```css\n/**\n    \u003cdiv class=\"text-center\"\u003e\n        Ce texte est centré.\n    \u003c/div\u003e\n*/\n.text-center {\n    text-align: center;\n}\n\n/**\n    \u003cdiv class=\"img-responsive\"\u003e\n        \u003cimg src=\"fit-container-in-all-size.png\"\u003e\n    \u003c/div\u003e\n* ou\n    \u003cimg class=\"img-responsive\" src=\"fit-container-in-all-size.png\"\u003e\n*/\n.img-responsive {\n    max-width: 100%;\n    height: auto;\n\n    img {\n        max-width: 100%;\n        height: auto;\n    }\n}\n\n/**\n    \u003cbutton class=\"btn btn-primary\"\u003e\n        Click Me\n    \u003c/button\u003e\n*/\n.btn\n    display: inline-block;\n    padding: 4px 8px;\n}\n.btn.btn-lg {\n    background-color: blue;\n}\n\n/**\n    \u003cdiv class=\"container\"\u003e\n        \u003c!-- Des types blocks ou inlines --\u003e\n    \u003c/div\u003e\n*/\n.container {\n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n}\n```\n\nLes patrons étant applicables dans tous les composants, un comportement spécifique à un patron peut-être spécifié dans le fichier du composant de cette manière :\n\n**Exemple de patron CSS surchargé spécifiquement pour un composant**\n\n```css\n/**\n    \u003cdiv class=\"color-alternative\"\u003e\n        I am white !\n    \u003c/div\u003e\n*/\n.color-alternative {\n    color: white;\n}\n\n/* ... */\n\n/**\n    \u003cdiv class=\"div.cmpt-footer\"\u003e\n        \u003cdiv class=\"color-alternative\"\u003e\n            I am white !\n        \u003c/div\u003e\n    \u003c/div\u003e\n*/\n.cmpt-footer {\n    background-color: #fff;\n}\n.cmpt-footer .color-alternative {\n    color: black;\n}\n```\n\n**Mon conseil : un patron doit toujours être placé dans une zone dédiée au contenu et non au composant en lui-même. Il est parfait dans du HTML qui pourrait avoir vocation à finir dans une base de donnée de contenu. Aussi n'utilisez jamais un `.text-right` sur un `.component--subcomponent` car rien ne garanti que dans un autre contexte (gabarit), le texte ne serait pas à gauche. Et en ce qui concerne leur utilisation dans les gabarits : tout dépend si vous préférez intervertir les gabarits HTML (permet d'utiliser des grilles Bootstrap par exemple) quand la carcasse varie ou ajouter une classe `.with-this-variation` comme vu précédemment.**\n\n\n\n### Classes alternatives ###\n\n`class=\"cmpt-\u003cname-of-component\u003e\"` sert à identifier toutes les portions de HTML relatives à se composant dans une page. En ajoutant des classes, on peut varier l'habillage ou identifier précisément une instance.\n\n- __as-*__ : permet de faire varier le style / comportement d'un composant / gabarit. *Exemple : `class=\"cmpt-\u003cname-of-component\u003e as-popup\"` pour permettre au composant de s'afficher comme une popup.*\n\n- __with-*__ : un équivalent de `as-*`. _Vous pouvez par exemple réserver `as-*` pour les composants et `with-*` pour les gabarits._\n\n- __is-*__ : permet de décrire l'état d'un composant / gababrit afin d'activer / désactiver des visuels et / ou des fonctionnalités ou une capacité à permettre une fonctionnalité. *Exemple : `class=\"cmpt-\u003cname-of-component\u003e is-opened\"` pour décrire que la popup est ouverte ou `class=\"cmpt-\u003cname-of-component\u003e is-closable\"` pour dire que la popup peut être manuellement fermée*.\n\n- __for-*__ : permet d'identifier précisément un composant / gabarit parmi plusieurs autres du même type. _Exemple : class=\"tyl-area for-ads\" pour identifier le contenu des composants qui seront placés dans cet endroit du gabarit comme étant de la publicité par exemple._\n\n\n\n\n## CSS et JS : une seule classe pour les gouverner toutes ##\n\nNous y voilà, au point qui à lui seul m'a donné l'envie d'écrire cet article.\n\n\u003e Le [Guide CSS FR](https://guidecss.davidl.fr/convention.html) nous dit « *N'utilisez jamais une classe de style CSS pour vos ancres JavaScript. Associer un comportement JavaScript à une classe de style signifie que nous ne pourrons jamais avoir l'un sans l'autre.* » et nous donne comme exemple : « *is-sortable  js-is-sortable* »\n\u003e \n\u003e *Cela __n'__est __pas__ un conseil à suivre.* Je m'explique.\n\n1. Dans le cas des patrons ; une unique classe doit se suffire à elle-même. C'est précisément parce qu'elle a vocation à être apposée à la main qu'il ne doit pas être possible de gérer le visuel et le JavaScript indépendamment.\n\n    Soit tous les `.btn-popup` ouvre une popup, soit aucun. Il n'y a pas de raison que les `.btn-popup` n'ouvre pas les popups et que les `.btn-popup.js-btn-popup` les ouvre. Le `.btn-popup` se suffit à lui-même. Si toutefois on souhaite un bouton identique au `.btn-popup`, sans que celui-ci n'ouvre de popup, c'est dans la CSS et le HTML que ça se passe avec par exemple les règles CSS `.btn-popup, .btn-foo { /* même design */ }` que l'on applique sur l'élément HTML `.btn-foo`. Ainsi si l'utilisateur veut un bouton qui n'ouvre pas de popup mais qui est visuellement identique, il utilisera `.btn-foo` par exemple.\n\n    Une autre manière de faire (que je préfère réserver exclusivement aux composants et gabarits) serait alors les règles CSS `.btn-foo { /* design */ } .is-popup-openable { cursor: pointer; }` appliqué sur un élément HTML `.btn-foo.is-popup-openable`. Comprenez bien ici que le `cursor: pointer` et l'action de rendre cliquable sont encore une fois liés à une unique classe qui est `.is-popup-openable` et qu'il n'y a pas de sens à utiliser `.is-popup-openable.js-is-popup-openable`. Soit la classe y est et l'élément est cliquable avec une main, soit elle n'y ai pas et l'élément n'est pas cliquable sans main.\n\n2. Dans le cas des composants et des gabarits, c'est pareil. Il est cependant envisageable que dans un cas on souhaite afficher un composant de manière standard, et dans un autre cas on souhaite lui faire exécuter un script pour, par exemple, gérer un défilement automatique d'élément ; une visionneuse.\n\n    Cela n'a pas de sens que `.cmpt-presentation-items` ne soit pas un visionneur mais que `.cmpt-presentation-items.js-cmpt-presentation-items` en soit un. Non, cela a plus de sens que `.cmpt-presentation-items` n'en soit pas nécessairement un mais que `.cmpt-presentation-items.as-slider` en soit un.\n\n    Pas besoin de préciser `.js-` car c'est au moment de sélectionner un composant par la classe le désignant (et sa variation ou non) dans nos fichiers JavaScript qu'on décide qu'un code JavaScript doit s'appliquer dessus : et absolument pas parce que nous l'avons décidé en ajoutant la même classe avec `.js-` devant.\n\n    *Exemple : Il est possible que j'ajoute du JavaScript pour faire fonctionner `.cmpt-presentation-items` pour par exemple faire du Lazy Loading de contenu ou que je n'en utilise pas sur `.cmpt-presentation-items.as-slider` car mes transitions automatiques sont gérées en CSS3 avec transition et animation.*\n\n**En conclusion : style et comportement doivent être liés à la même classe. Si une autre classe doit être ajoutée, c'est pour décrire un __autre__ comportement visuel et / ou fonctionnel.**\n\n\n\n\n\n## Des composants réellement déplaçable partout ##\n\nLa problématique lorsque l'on déplace des fragments de HTML, c'est de ne plus respecter l'arborescence des `\u003ch1-h6\u003e`. Car si un composant possède un `\u003ch1\u003e`, alors il peut difficilement être mis une fois dans le haut de la page et une fois en bas sans faire hurler au scandale les experts SEO. Réglons ce problème.\n\n\n\n### Rappel sur les `block` sémantiques ###\n\nSachez qu'en HTML5, [il peut y avoir plus d'un `\u003ch1\u003e` par page](https://blog.lesieur.name/les-balises-h1-multiples-autorisees-en-html5/) mais pas à n'importes quelles conditions.\n\nSous la balise `\u003cbody\u003e` : l'intégralité des `\u003ch1-h6\u003e` dispersés entre les balises forment un index hiérarchique. L'élément `\u003ch1\u003e` doit être unique. Mais les balises `\u003csection\u003e`, `\u003carticle\u003e`, `\u003caside\u003e` et `\u003cnav\u003e` remettent les compteurs à zéro et sous chacune de ces balises il est de nouveau possible de disperser des `\u003ch1-h6\u003e` avec un seul `\u003ch1\u003e`, etc.\n\nChaque nouvel espace de `\u003csection\u003e`, `\u003carticle\u003e`, `\u003caside\u003e` et `\u003cnav\u003e` peut lui-même contenir un `\u003cheader\u003e` et un `\u003cfooter\u003e`. L'importance des `\u003ch1-h6\u003e` est donc à présent bi-directionnel voir tri-directionnel : un `\u003ch2\u003e` est d'autant plus important qu'il se trouve directement dans `\u003cbody\u003e` à l'intérieur d'un `\u003cheader\u003e` au contraire d'un `\u003ch1\u003e` sous une pile de plusieurs `\u003csection\u003e`. Il est même probable que un `body \u003e article \u003e header \u003e h1` dans une page avec une unique balise `\u003carticle\u003e` est plus de poids que le `body \u003e header \u003e h1` du titre de page (mais je spécule, ce n'ai pas moi qui fait les règles des algorithmes).\n\nEn tout cas le voilà ! Notre moyen de rendre déplaçable les composants comme des sortes de modules pouvant chacun contenir : un `\u003cheader\u003e`, un `\u003cfooter\u003e` et une hiérarchie `\u003ch1-h6\u003e`.\n\n\n\n### L'application simple : faire gérer le cloisonnement par le gabarit ###\n\nLe moyen le plus simple est de gérer le cloisonnement avec le gabarit. Imaginons ce gabarit :\n\n```html\n\u003cdiv class=\"lyt tmpl-home\"\u003e\n    \u003cheader class=\"lyt-area for-header\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/header\u003e\n    \u003csection class=\"lyt-area for-main\"\u003e\n        \u003cdiv class=\"lyt-part for-overview\"\u003e\n            \u003c!-- Boucle de composants ici. --\u003e\n        \u003c/div\u003e\n        \u003caside class=\"lyt-part for-ads\"\u003e\n            \u003c!-- Boucle de composants ici. --\u003e\n        \u003c/aside\u003e\n    \u003c/section\u003e\n    \u003csection class=\"lyt-area for-presentation\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/section\u003e\n    \u003caside class=\"lyt-area for-also\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/aside\u003e\n    \u003cfooter class=\"lyt-area for-footer\"\u003e\n        \u003c!-- Boucle de composants ici. --\u003e\n    \u003c/footer\u003e\n\u003c/div\u003e\n```\n\nainsi que ce Component :\n\n```html\n\u003cdiv class=\"cmpt-component\"\u003e\n    \u003cdiv class=\"cmpt-component--ui\"\u003e\n        \u003cheader class=\"cmpt-component--header\"\u003e\n            \u003ch1\u003eTitle\u003ch1\u003e\n        \u003c/header\u003e\n        \u003cdiv  class=\"cmpt-component--content\"\u003e\n            \u003ch2\u003eSubtitle\u003c/h2\u003e\n            \u003cp\u003eText\u003c/p\u003e\n            \u003cp\u003eText\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cfooter class=\"cmpt-component--footer\"\u003e\n            \u003ch3\u003eLien\u003ch3\u003e\n        \u003c/footer\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nLa contrainte avec ce composant est donc qu'il ne pourra jamais être placé dans `.for-header` ni dans `.for-footer` sous peine d'injecter un double `\u003cheader\u003e` et `\u003cfooter\u003e` dans le `\u003cbody\u003e`. Cela peut être évité en estimant que les composant d'en-tête et de pied-de-page globaux sont spécifiques à ces zones et ne seront pas déplaçables (comme c'est pratiquement toujours le cas).\n\nOn voit cependant que hors-mi ces zones, notre composant peut atterrir un peu partout ou il le souhaite sans que cela ne pose de soucis.\n\n\n\n### L'application complexe : faire gérer le cloisonnement au moment de l'injection du composant, hors gabarit et hors composant ###\n\nPenchons nous de nouveau sur [NodeAtlas](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/) qui va nous permettre de créer des injections de composant dynamique ! Vous pouvez faire des systèmes similaires de vos côtés avec vos outils ou frameworks préférés. Cela n'est qu'un brouillon car on pourrait même envisager l’injection de composants dans des composants, etc.\n\nAvec...\n\n1. La configuration `webconfig.json` :\n\n    ```js\n{\n    \"controller\": \"common.js\",\n    \"routes\": {\n        \"/\" : {\n            \"view\": \"home.htm\",\n            \"variation\": \"home.json\"\n        }\n    }\n}\n```\n\n2. Le gabarit `views/home.htm` :\n\n     ```html\n\u003c!-- ... --\u003e\n\u003cdiv class=\"lyt tmpl-home\"\u003e\n    \u003cdiv class=\"lyt-area for-header\"\u003e\n        \u003c?- includeComponent('placeholder-header') ?\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"lyt-area for-main\"\u003e\n        \u003cdiv class=\"lyt-part for-overview\"\u003e\n            \u003c?- includeComponent('placeholder-overview') ?\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"lyt-part for-ads\"\u003e\n            \u003c?- includeComponent('placeholder-ads') ?\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"lyt-area for-presentation\"\u003e\n        \u003c?- includeComponent('placeholder-presentation') ?\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"lyt-area for-also\"\u003e\n        \u003c?- includeComponent('placeholder-also') ?\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"lyt-area for-footer\"\u003e\n        \u003c?- includeComponent('placeholder-footer') ?\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003c!-- ... --\u003e\n```\n\n3. Le Fichier de variation `variations/home.json` :\n\n     ```js\n{\n    \"components\": {\n        \"placeholder-header\": [{\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"div\"\n            }\n        }, {\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"header\"\n            }\n        }],\n\n        \"placeholder-overview\": [{\n            \"path\": \"views/three-boxes.htm\",\n            \"variation\": {\n                \"mainTag\": \"section\"\n            }\n        }],\n\n        \"placeholder-ads\": [{\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"aside\"\n            }\n        }],\n\n        \"placeholder-presentation\": [{\n            \"path\": \"views/three-boxes.htm\",\n            \"variation\": {\n                \"mainTag\": \"article\"\n            }\n        }],\n\n        \"placeholder-also\": [{\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"aside\"\n            }\n        }],\n\n        \"placeholder-footer\": [{\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"footer\"\n            }\n        }, {\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"div\"\n            }\n        }, {\n            \"path\": \"views/component.htm\",\n            \"variation\": {\n                \"mainTag\": \"div\"\n            }\n        }]\n    }\n}\n```\n\n4. Le composant `views/components/component.htm` :\n\n     ```html\n\u003c?- sc('\u003csection class=\"cmpt-component\"\u003e', component) ?\u003e\n    \u003cdiv class=\"cmpt-component--ui\"\u003e\n        \u003c?- sc('\u003cheader class=\"cmpt-component--header\"\u003e', component) ?\u003e\n            \u003c?- sc('\u003ch1\u003e', component) ?\u003eTitle\u003c?- sc('\u003c/h1\u003e', component) ?\u003e\n        \u003c?- sc('\u003c/header\u003e', component) ?\u003e\n        \u003cdiv class=\"cmpt-component--content\"\u003e\n            \u003c?- sc('\u003ch2\u003e', component) ?\u003eTitle\u003c?- sc('\u003c/h2\u003e', component) ?\u003e\n            \u003cp\u003eText\u003c/p\u003e\n            \u003cp\u003eText\u003c/p\u003e\n        \u003c/div\u003e\n        \u003c?- sc('\u003cfooter class=\"cmpt-component--footer\"\u003e', component) ?\u003e\n            \u003c?- sc('\u003ch3\u003e', component) ?\u003eLien\u003c?- sc('\u003c/h3\u003e', component) ?\u003e\n        \u003c?- sc('\u003c/footer\u003e', component) ?\u003e\n    \u003c/div\u003e\n\u003c?- sc('\u003c/section\u003e', component) ?\u003e\n```\n\n...on pourrait parvenir à nos fins. Pendant la réalisation de nos composants on utilise toujours une `\u003csection\u003e`. C'est au moment d'injecter le composant que l'on décide grâce à mainTag quelle balise globale va remplacer `\u003csection\u003e`. On s'assurerait également de transformer tous les `\u003cheader\u003e` en `\u003cdiv class=\"header-like\"\u003e` (etc.) dans le cas où le mainTag serait `div`, `header` ou `footer`.\n\nVoici pour les petits curieux le code [NodeAtlas](https://node-atlas.js.org/) de `controllers/common.js` qu'il faut pour faire fonctionner tout ça.\n\n- [Contenu du fichier `controller/common.js`](http://codepen.io/Haeresis/pen/jbNVYa/?editors=001)\n\n#### De la sémantique automatique ####\n\nBon, **vous conviendrez que notre composant est assez laid**, et ça rend la chose faussement complexe. Je vous propose de plutôt maintenir un fichier `views/components/component.htm` comme celui-ci :\n\n```html\n\u003csection$ class=\"cmpt-component\"\u003e\n    \u003cdiv class=\"cmpt-component--ui\"\u003e\n        \u003cheader$ class=\"cmpt-component--header\"\u003e\n            \u003ch1$\u003eTitle\u003c/h1$\u003e\n        \u003c/header$\u003e\n        \u003cdiv  class=\"cmpt-component--content\"\u003e\n            \u003ch2$\u003eTitle\u003c/h2$\u003e\n            \u003cp\u003eText\u003c/p\u003e\n            \u003cp\u003eText\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cfooter$ class=\"cmpt-component--footer\"\u003e\n            \u003ch3$\u003eLien\u003c/h3$\u003e\n        \u003c/footer$\u003e\n    \u003c/div\u003e\n\u003c/section$\u003e\n```\n\ngrâce au projet [ComponentAtlas](https://github.com/Haeresis/ComponentAtlas) qui est un module additionnel de [NodeAtlas](https://node-atlas.js.org/). Il permet l'inclusion de composant en cascade, ne touchera à aucunes balises sans $ et permettra de transformer ceci :\n\n```html\n\u003csection$ class=\"cmpt-component\"\u003e\n    \u003cheader$ id=\"test\"\u003eheader\u003c/header$\u003e\n    \u003cfooter$ class=\"test\"\u003efooter\u003c/footer$\u003e\n    \u003ch1$ class='test'\u003eh1\u003c/h1$\u003e\n    \u003ch2$ class='test' id=\"test\"\u003eh2\u003c/h2$\u003e\n    \u003ch3$ id=\"test\" class=\"test\"\u003eh3\u003c/h3$\u003e\n    \u003ch4$ id=\"test\" class='test'\u003eh4\u003c/h4$\u003e\n    \u003ch5$ id='test' class='test'\u003eh5\u003c/h5$\u003e\n    \u003ch6$\u003eh6\u003c/h6$\u003e\n\u003c/section$\u003e\n```\n\nen ceci :\n\n```html\n\u003cheader class=\"cmpt-component\"\u003e\n    \u003cdiv class=\"header-like\" id=\"test\"\u003eheader\u003c/div\u003e\n    \u003cdiv class=\"footer-like test\"\u003efooter\u003c/div\u003e\n    \u003cdiv class='h1-like test'\u003eh1\u003c/div\u003e\n    \u003cdiv class=\"h2-like test' id=\"test\"\u003eh2\u003c/div\u003e\n    \u003cdiv class=\"h3-like test\"\u003eh3\u003c/div\u003e\n    \u003cdiv class='h4-like test'\u003eh4\u003c/div\u003e\n    \u003cdiv class='h5-like test'\u003eh5\u003c/div\u003e\n    \u003cdiv class=\"h6-like\"\u003eh6\u003c/div\u003e\n\u003c/header\u003e\n```\n\nsi le `maintTag` était `header` ou de le transformer en ceci :\n\n```html\n\u003csection class=\"cmpt-component\"\u003e\n    \u003cheader id=\"test\"\u003eheader\u003c/header\u003e\n    \u003cfooter class=\"test\"\u003efooter\u003c/footer\u003e\n    \u003ch1 class='test'\u003eh1\u003c/h1$\u003e\n    \u003ch2 class='test' id=\"test\"\u003eh2\u003c/h2\u003e\n    \u003ch3 id=\"test\" class=\"test\"\u003eh3\u003c/h3\u003e\n    \u003ch4 id=\"test\" class='test'\u003eh4\u003c/h4\u003e\n    \u003ch5 id='test' class='test'\u003eh5\u003c/h5\u003e\n    \u003ch6\u003eh6\u003c/h6\u003e\n\u003c/section\u003e\n```\n\nsans `mainTag` de précisé.\n\n## Aller plus loin\n\nSi vous désirez aller encore plus loin dans les conventions HTML et CSS pour bien séparer les zones dédiées aux composants et les zones dédiées au contenu, vous pouvez [lire mes conventions HTML, CSS et JS complètes](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/).","dates":{"published":{"$date":"2018-02-24T11:24:00.000Z"},"updated":[]},"description":"Je viens de (re)terminer la lecture du Guide CSS Fr et j'ai eu envie d'apporter quelques modifications et ajouts à ces très bons conseils.","image":"https://blog.lesieur.name/media/images/upload/css.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Quelles conventions CSS utiliser pour des structures HTML réutilisable ?","urn":"conventions-html-et-css-orientes-composants"}
{"_id":{"$oid":"55edf67336a8eee50213dd53"},"__v":0,"cache":{"comment":{"number":0}},"categories":[],"content":"« Que fait Google à longueur de journée ? Il indexe du texte. Comment les visiteurs arrivent sur mon site ? via Google. C.Q.F.D. ». J'adore cette citation, elle provient de l'article « [L'ère post PSD](http://davidl.fr/blog/fin-psd.html) » que j'ai découvert et lu une larme à l'œil. Il a d'autant plus de poids pour moi que son auteur adore Photoshop. J'ai toujours voulu parlé du sujet, et je me lance.\n\n\n\n\n\n## L'ère Photoshop ##\n\n### Il y a un vrai lobying autour de Photoshop ###\n\nOn embauche des profiles pour faire des maquettes de site web « à tout va », dans des déclinaisons « Desktop » / « Tablette » / « Mobile » ou encore on fournit la même page avec 17 contenus différents. Pourquoi fait-on ça ? C'est vrai : c'est tellement long et fastidieux de refaire la même page, trente fois, qu'une fois cette étape terminée, les PSDs ne changent plus. Quand on sait que tout ce beau monde peut frôler la trentaine de fichier avec la même redondance de visuel et faire quelques Gigas de transfert : on se demande vraiment où son les avantages :\n\n- La possibilité d'**évolution** ? De la home, surement, mais ça s'arrête ici.\n- L'espace de **stockage**. Pas vraiment, c'est assez lourd beaucoup de PSD.\n- La rapidité de **transfert**, Non plus du coup.\n- La facilité de **maintenance** ? Joker.\n\nAlors ? Pourquoi ? Parce que vendre à la maquette rapporte ? Et que c'est facilement justifiable ? Parce qu'on à toujours fait comme ça pour produire des mises en page figé ? Parce qu’on n'envisage pas que quelqu'un embauché pour faire du Photoshop ne puisse faire du HTML/CSS ? Si les maquettistes n'ont qu'une vague idée de comment est habillée une page web, comment peuvent-t ils en améliorer les processus de création ? \n\nPourquoi ne pas simplement se concentrer sur l'identité visuelle (atmosphère, typographie, logos) avec Photoshop pour fournir des Guides de style/Chartes graphiques de qualité et laisser le processus de gabarit Responsive Design HTML... aux intégrateurs HTML ! Un long processus auquel il faudrait habituer le client et qui serait une mine d'or pour l'équipe d'intégration qui pourrait fournir de vrai maquette à valider, dans un navigateur, en vrai !\n\n\n\n### Donnez le doigt, perdez le bras ! ###\n\nPour la création de site, ce sont ces PSD qui galvanisent le processus complet de fabrication d'un site web. Visuel, Structure, Hiérarchie, Spécifications, Processus, Validation et même... Contenu ! Tout peut y passer. On se retrouve à devoir respecter un écart entre chaque boite à la règle alors que cela n'a de sens pour une seule et unique taille, à parcourir le nom des liens pour savoir quelle page se trouve derrière quelle page ou à regarder le nom des fichiers pour connaître l'ordre des interactions inter-page. On se retrouve à devoir se justifier sur des incohérences de style inter-PSD pour lequel les PSD sont le Saint-Graal.\n\nMontrez aux clients une zone de texte pour discuter d'un contenu et ils vous diront que ce n'est pas le bon texte quand ils ne vous diront pas qu'ils veulent changer la couleur du pied de page. Au final, **les développeurs web finissent par devoir posséder Photoshop** pour travailler, et le site web se résume à devoir respecter le plus fidèlement possible un visuel qui n'est pas adapté pour les périphériques et même, le contenu...\n\nÀ qui la faute ? **Certainement pas au client**.\n\n\n\n\n## La clé de voûte du site Internet ##\n\nContenu, contenu, contenu et contenu. Voici dans l'ordre les étapes de développement d'un site web.\n\n\u003e 1. Pour qui ? ... Ambiance, Idée. \n2. Aménager son contenu ... Wireframe / Gabarit.\n3. Trouver l'identité visuel en respectant les Guidelines de la marque ... Concepts / Guide de Style\n4. Création du HTML ... Sémantique / Liaison au contenu référençable (BDD, fichiers).\n5. Habillage CSS ... Responsive Web Design ... Interaction JavaScript ... chargement asynchrone.","dates":{"published":{"$date":"2016-11-09T21:41:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"","stylesheet":"","title":"Les PSD ne sont pas des sites web !","urn":"les-psd-ne-sont-pas-des-sites-web"}
{"_id":{"$oid":"5613f26670877cd335a4b897"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"581cb31dbe08b018d7e9a3bf"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bc"}],"content":"Si vous avez déjà tenté d'[installer des modules npm pour Node.js](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/#la-documentation-les-modules-et-le-principe) sous Windows via la commande `npm install \u003cpackage\u003e [options]`, vous avez probablement déjà eu des soucis d'installation et abandonné l'idée. Peut-être même que vous ne vous êtes pas lancé dans l'aventure Node.js pour ces raisons ? Effectivement, certains modules ont besoin de **Python** pour s'installer et d'autres du **MSBUILD** de *Visual Studio*. Il y en à même, plus rare, qui on besoin de **Git**.\n\n\u003cfigure\u003e\n    \u003cimg width=\"320\" height=\"240\" src=\"https://kalliphant.com/wp-content/uploads/2017/02/nodejs.png\" alt=\"npm\" style=\"max-width: 100%;height: auto\"\u003e\n\u003c/figure\u003e\n\nPar exemple, [node-mariasql](https://github.com/mscdex/node-mariasql) est un module qui nécessite que Python et Visual Studio soient sur la machine Windows pour être installé sans quoi vous obtiendrez des erreurs.\n\nVoici **la procédure d'installation des pré-requis nécessaires pour faire fonctionner Node.js et tous ses modules npm sous Windows** ainsi qu'une aide à la résolution de problèmes divers après installation.\n\n\n\n\n\n## Étape 1 : Installer Python ##\n\n*Note : une alternative plus rapide à cette étape ainsi qu'à l'étape 2 est présenté en étape 2.5.*\n\nPython 2.7 (et non les versions 3.X ou 2.6.X et précédente) est requis par l'installeur npm pour installer les addons à compiler.\n\n1. Rendez-vous sur [python.org](https://www.python.org/) pour [télécharger la dernière version stable de Python 2.7](https://www.python.org/download/releases/2.7/) du Windows MSI Installer afin d'installer la version x86 ou x86-64 en fonction de votre système d'exploitation.\n\n2. Lancez l'installeur et assurez vous d'ajouter Python à votre variable d'environnement PATH.\n\n3. Acceptez l'« installation pour tous les utilisateurs ».\n\n4. Acceptez le chemin d'installation par défaut « C:\\Python27 ».\n\n\n\n\n\n## Étape 2 : Installer Visual Studio ##\n\n*Note : une alternative plus rapide à cette étape ainsi qu'à l'étape 1 est présenté en étape 2.5.*\n\nMSBUILD est requis par npm pour installer les addons à compiler en C/C++. Vous obtiendrez ce qu'il faut dans Visual Studio 2012 ou plus. *Notez bien que gcc, mingw, cygwin, et les autres compilateurs Windows non Microsoft ne sont pas supportés par Node.js*.\n\nSi vous utilisez actuellement Windows 7, 8 ou même 10, vous pouvez à la place utiliser Visual Studio C++ 2013 pour Windows Desktop (Express). Visual Studio Express est gratuit et est plus adéquat pour un support de Node.js.\n\n1. [Téléchargez, par exemple, Visual Studio Express 2013](http://download.microsoft.com/download/7/2/E/72E0F986-D247-4289-B9DC-C4FB07374894/wdexpress_full.exe).\n\n2. Lancez l'installeur et acceptez la localisation par défaut. C'est une grosse installation qui peut prendre longtemps !\n\n\n\n\n\n## Étape 2.5 : Installer Python et Windows Build Tools ##\n\n*Note : vous pouvez passer cette étape si vous avez déjà réalisé l'étape 1 et 2.*\n\nVous pouvez alternativement installer Python2.7 et MSBUILD en exécutant une commande npm depuis une fenêtre administrateur :\n\n1. Ouvrez un invité de commande en administrateur (Clique sur « \u003cb\u003e\u003ci\u003e⊞\u003c/i\u003e\u003c/b\u003e (Démarrer) » \u003e Taper « cmd » \u003e Clique droit sur « Invite de commande » \u003e Clique sur « Exécuter en tant qu'administrateur »).\n\n2. Installez les deux en tapant la commande `npm install --global --production windows-build-tools`, l'installation peut prendre un moment.\n\n3. Associé le MSBUILD en tapant la commande `npm config set msvs_version 2015 --global`\n\n4. Quittez la fenêtre administrateur. Pour que cela fonctionne, quittez également les fenêtres d'invitées déjà ouverte et ré-ouvrez les.\n\n\n\n\n\n## Étape 3 : Installer Git ##\n\nGit est nécessaire pour l'installation de package en provenance de GitHub ou autre plateforme Git. Bien que ces modules soient rares, ils ne sont pas inexistants. Vous pourrez donc également les installer.\n\n1. Rendez-vous sur [git-scm.com](http://git-scm.com/download) et téléchargez la dernière version pour Windows.\n\n2. Lancez l'installeur.\n\n3. Acceptez la localisation par défaut.\n\n4. Acceptez l'icône de démarrage menu.\n\n5. Acceptez les composants associés.\n\n6 Modifiez « Adjusting your PATH environment » to « Use Git from Windows Command Prompt ».\n\n7. Acceptez la valeur « Configuring the line ending conversions » par défaut.\n\n\n\n\n\n## Étape 4 : Installer Node.js ##\n\nSi vous aviez déjà installé Node.js avant de réaliser les étapes de cet article, vous pouvez toujours en profiter pour le mettre à jour avec la dernière version. Sinon téléchargez le pour la première fois.\n\n1. Allez sur [nodejs.org](https://nodejs.org/en/) et installez la version appropriée pour votre système d'exploitation. \n\n2. Installez Node.js en suivant les instructions de l'installeur. [Plus de détails par ici si vous le souhaitez](https://blog.lesieur.name/installer-et-utiliser-nodejs-sous-windows/).\n\n\n\n\n\n## Vérifier que tout fonctionne correctement ##\n\nSi vous rencontrez des difficultés à installer des modules npm, essayez les étapes suivantes pour identifier un problème de votre côté.\n\n1. Redémarrez Windows pour être sur que toutes les configurations aient pris effet.\n\n2. Vérifiez que tous les pré-requis soient correctement installés et accessibles :\n\n - La commande `python --version` doit retourner `Python 2.7`, sinon ajoutez à vos variables d'environnement le dossier `C:\\python27` (ou votre chemin d'installation).\n - La commande `node --version` doit retourner `vX.X.X`, sinon ajoutez à vos variables d'environnement le dossier `C:\\Program files\\nodejs` (ou votre chemin d'installation).\n - La commande `npm --version` doit retourner `X.X.X`, sinon ajoutez à vos variables d'environnement le dossier `%USERPROFILE%\\AppData\\Roaming\\npm`.\n - La commande `npm config get msvs_version` doit retourner `2015`, sinon vérifiez que la variable d'environnement `GYP_MSVS_VERSION` existe et vaut `2015`.\n\n3. Assurez vous que `npm -g prefix` pointe au même endroit que `echo %NODE_PATH%`(avec `\\node_modules` en plus à la fin), sinon vérifiez que la variable d'environnement `NODE_PATH` existe et vaut `%USERPROFILE%\\AppData\\Roaming\\npm\\node_modules`.\n\n4. Vérifiez qu'un simple module npm peut-être installé :\n\n - Avec `npm install -g semver`\n - et `semver --help` qui doit afficher l'aide.\n\n5. Assurez vous que si vous avez plusieurs version de Python ou Visual Studio sur votre machine, les astuces dans la partie « Astuces » ci-après ne résolvent pas le problème.\n\n6. Assurez vous que les addons à compiler peuvent être installées :\n\n - Avec `npm install mariasql` qui doit compiler sans erreur.\n\nSi vous avez toujours des erreurs et que toutes les étapes précédentes sont valides, vous pouvez reporter le fichier `npm-debug.log` laissé par npm dans le tracker d'issue du/des développeur(s) du module npm que vous tentez d'installer pour obtenir de l'aide.\n\nN'hésitez pas à laisser plus d'étapes de vérifications dans les commentaires de cet article, je les mettrais à jour ici même.\n\n\n\n\n\n## Astuces ##\n\n- Si vous avez plusieurs versions de Python d'installées, vous pouvez sélectionner celle utilisée par npm pour compiler les addons :\n\n - Par défaut (et pour tout le temps) `npm config set python python2.7` ou \n - Ponctuellement `npm install --python=python2.7` lors de l'installation d'un module.\n\n- Si vous avez plusieurs versions de Microsoft Visual Studio d'installées, vous pouvez sélectionner celle utilisée par npm pour compiler les addons :\n\n - Par défaut (et pour tout le temps) `npm config set msvs_version 2013` (si votre version est 2013) ou `npm config set msvs_version 2015` (si votre version est 2015), etc. ou\n - Ponctuellement `npm install [options] \u003cmodule-name\u003e --msvs_version=2013` lors de l'installation d'un module ou (`npm install [options] \u003cmodule-name\u003e --msvs_version=2015` si version 215, etc.).","dates":{"published":{"$date":"2018-01-26T10:00:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Installer n'importe quel module npm pour Node.js sous Windows","urn":"installer-tous-les-modules-npm-node-js-sous-windows","description":"Certains modules ont besoin de Python pour s'installer, d'autres de Visual Studio et d'autres encore de Git.","image":"https://kalliphant.com/wp-content/uploads/2017/02/nodejs.png"}
{"_id":{"$oid":"5620ee00d1b7fe136fc20058"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cb"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"56c4ad62675345bb2d63fced"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48cc"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bb"}],"content":"\u003cdiv class=\"h1-like\"\u003e\u003cspan\u003eVanilla JS\u003c/span\u003e\u003cimg src=\"media/images/upload/vanillajs.jpg\" width=\"200\" height=\"180\" alt=\"Vanilla JS\"\u003e\u003c/div\u003e\n\n\u003cp class=\"lead\"\u003e\u003cstrong\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e est \u003cspan class=\"mask\"\u003eun framework\u003c/span\u003e rapide, léger et multi-plateforme pour créer d'incroyables et puissantes applications JavaScript\u003c/strong\u003e\u003c/p\u003e\n\n\n\n\n\n## Introduction ##\n\n[L'équipe de \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e](https://twitter.com/MachinisteWeb) maintient le moindre petit octet de code \u003cspan class=\"mask\"\u003edu framework\u003c/span\u003e et travaille dur chaque jour pour être sûr qu'il reste léger et intuitif. Qui utilise \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e ? Content que vous vous le demandiez ! En voici quelques uns :\n\u003cul class=\"used-by\"\u003e\n\u0009\u003cli\u003eGoogle\u003c/li\u003e\n\u0009\u003cli\u003eFacebook\u003c/li\u003e\n\u0009\u003cli\u003eYouTube\u003c/li\u003e\n\u0009\u003cli\u003eYahoo\u003c/li\u003e\n\u0009\u003cli\u003eWikipedia\u003c/li\u003e\n\u0009\u003cli\u003eWindows Live\u003c/li\u003e\n\u0009\u003cli\u003eTwitter\u003c/li\u003e\n\u0009\u003cli\u003eAmazon\u003c/li\u003e\n\u0009\u003cli\u003eLinkedIn\u003c/li\u003e\n\u0009\u003cli\u003eMSN\u003c/li\u003e\n\u0009\u003cli\u003eeBay\u003c/li\u003e\n\u0009\u003cli\u003eMicrosoft\u003c/li\u003e\n\u0009\u003cli\u003eTumblr\u003c/li\u003e\n\u0009\u003cli\u003eApple\u003c/li\u003e\n\u0009\u003cli\u003ePinterest\u003c/li\u003e\n\u0009\u003cli\u003ePayPal\u003c/li\u003e\n\u0009\u003cli\u003eReddit\u003c/li\u003e\n\u0009\u003cli\u003eNetflix\u003c/li\u003e\n\u0009\u003cli\u003eStack Overflow\u003c/li\u003e\n\u0009\u003cli\u003e...\u003c/li\u003e\n\u003c/ul\u003e\n\nEn fait, \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e est déjà utilisé sur plus de sites que jQuery, Angular, React, Vue, Prototype JS, MooTools, YUI, et Google Web Toolkit - \u003cem\u003eréunis\u003c/em\u003e !\n\n\n\n\n\n## Télécharger ##\n\nPrêt à utiliser \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e ? Choisissez exactement ce dont vous avez besoin !\n\u003cdiv class=\"customizer-options\"\u003e\n\u0009\u003clabel class=\"selected disabled\"\u003e\u003cinput type=\"checkbox\" name=\"core\" checked=\"checked\" disabled=\"disabled\"\u003eFonctionnalités de base\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eAJAX (XMLHttpRequest)\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eDOM (Modèle de document objet)\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eObjet basé sur les prototypes\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eManipulations CSS (Animations)\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eÉvènements\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eExpressions régulières\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eFermetures (Closure)\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eFonctions de première classe\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eBibliothèque String\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eBibliothèque Array\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eBibliothèque Math\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eBibliothèque Date\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eBibliothèque Function\u003c/label\u003e\n\u0009\u003ch3\u003eOptions\u003c/h3\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eMinifier le code source\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eSortie en UTF8\u003c/label\u003e\n\u0009\u003clabel\u003e\u003cinput type=\"checkbox\"\u003eUtiliser des retours `CRLF` (Windows)\u003c/label\u003e\n\u003c/div\u003e\n\u003cdiv class=\"customizer-estimate\"\u003e\n\u0009\u003cstrong\u003eTaille du fichier :\u003c/strong\u003e\n\u0009\u003cspan class=\"customizer-estimate-uncompressed\"\u003e\u003cspan class=\"value\"\u003e\u003cspan class=\"no-readable\"\u003e0 octets\u003c/span\u003e\u003cspan class=\"readable\"\u003e0 Ko\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"loading\"\u003e\u003cspan class=\"loader\"\u003e\u003c/span\u003e\u003c/span\u003e \u003c/span\u003e non minifié,\n\u0009\u003cspan class=\"customizer-estimate-gzipped\" class=\"\"\u003e\u003cspan class=\"value\"\u003e\u003cspan class=\"no-readable\"\u003e34 octets\u003c/span\u003e\u003cspan class=\"readable\"\u003e0.03 Ko\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"loading\"\u003e\u003cspan class=\"loader\"\u003e\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e gzippé.\n\u0009(\u003ca class=\"human-size\" href=\"javascript:;\"\u003e\u003cspan class=\"no-readable\"\u003eTaille lisible\u003c/span\u003e\u003cspan class=\"readable\"\u003eTaille réelle\u003c/span\u003e\u003c/a\u003e)\n\u003c/div\u003e\n\n\u003ca class=\"download\" href=\"media/scripts/upload/vanilla.js.gz\" download\u003e\u003cbutton\u003eTélécharger\u003c/button\u003e\u003c/a\u003e \u003ca href=\"https://github.com/Haeresis/vanilla-js\"\u003eSource sur GitHub\u003c/a\u003e / \u003ca href=\"https://www.npmjs.com/package/vanilla-js-dom\"\u003enpm Package\u003c/a\u003e\n\n\n[![Faites un don](https://img.shields.io/badge/don-%E2%9D%A4-ddddff.svg)](https://www.paypal.me/BrunoLesieur/5) [![Build Passing](https://img.shields.io/badge/build-passing-brightgreen.svg)](https://github.com/Haeresis/NodeAtlas) [![Version 6.0](https://img.shields.io/badge/version-6.0-brightgreen.svg)](https://github.com/Haeresis/NodeAtlas) [![Technical Debt Ratio](https://img.shields.io/badge/debt_ratio-0%25-brightgreen.svg)](http://docs.sonarqube.org/display/PLUG/JavaScript+Plugin)\n\n\n\n\n\n## Témoignages ##\n\n\u003cdiv class=\"testimonials\"\u003e\n\u0009\u003cblockquote class=\"testimonial\"\u003e\u003cem\u003e« Le support natif de HTML5 et les autres technologies modernes on fait de Vanilla JS mon préféré, petit à petit. »\u003c/em\u003e\u003c/blockquote\u003e\n\u0009\u003cblockquote class=\"testimonial is-displayed\"\u003e\u003cem\u003e« Vanilla JS est un concentré d'objet, il est taillé pour des applications JavaScript Orientées Objet. »\u003c/em\u003e\u003c/blockquote\u003e\n\u003cblockquote class=\"testimonial\"\u003e\u003cem\u003e« Vanilla JS est le \u003cspan style=\"text-decoration: line-through\"\u003eframework\u003c/span\u003e JavaScript le plus proche de la spécification ECMAScript que j'ai jamais utilisé. »\u003c/em\u003e\u003c/blockquote\u003e\n\u0009\u003cblockquote class=\"testimonial\"\u003e\u003cem\u003e« Vous ne trouverez pas plus rapide que Vanilla JS ! »\u003c/em\u003e\u003c/blockquote\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Commencer avec Vanilla JS ##\n\n[L'équipe de \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e](https://twitter.com/MachinisteWeb) est fière du fait que c'est **le code \u003cspan class=\"mask\"\u003ede framework\u003c/span\u003e le plus léger que vous puissiez trouver** ; en utilisant notre **stratégie de déploiement**, vos visiteurs auront déjà chargés en mémoire \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e avant que la moindre requête HTTP n'est été faite à votre serveur !\n\nPour utiliser \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e, mettez juste le code suivant \u003cstrong\u003en'importe où\u003c/strong\u003e dans votre application HTML :\n\n```html\n\u003c!-- \u003cscript src=\"chemin/vers/vanilla.js\"\u003e\u003c/script\u003e --\u003e\n```\n\nQuand vous êtes prêt à déployer votre application dans votre environnement de production, optez pour la plus rapide des méthodes, voyez plutôt :\n\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-html\"\u003e \u003c/code\u003e\u003c/pre\u003e\n\n**C'est tout - pas de code**. \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e est *tellement populaire* que les navigateurs l'embarque déjà !\n\n\n\n\n## Comparaison de vitesse d'exécution ##\n\nVoici quelques exemples démontrant ô combien \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e est vraiment rapide. Quand \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e réalise 100 opérations, les autres en réalisent :\n\n### Retrouver un élément du DOM par ID ###\n\n\u003cdiv class=\"table three\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eCode\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementById('vanilla');](http://codepen.io/Haeresis/pen/RWeqaB)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003eDojo\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e92\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:92%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[dojo.byId('dojo');](http://codepen.io/Haeresis/pen/yYQjxp)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ePrototype JS\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e57\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:57%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('prototype');](http://codepen.io/Haeresis/pen/yYQjEP)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ejQuery\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e42\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:42%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('#jquery');](http://codepen.io/Haeresis/pen/EVOLLe)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003eMooTools\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e24\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:24%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.id('mootools');](http://codepen.io/Haeresis/pen/gaQzQr)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n### Retrouver 10 éléments du DOM par tag name ###\n\n\u003cdiv class=\"table three\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eCode\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementsByTagName('div');](http://codepen.io/Haeresis/pen/BoGVzd)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ePrototype JS\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e25\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:25%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[Prototype.Selector.select('div', document);](http://codepen.io/Haeresis/pen/LpXrOG)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ejQuery\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e21\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:21%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('div');](http://codepen.io/Haeresis/pen/BoGVmJ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003eDojo\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e3\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:3%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[dojo.query('div');](http://codepen.io/Haeresis/pen/dYQKJX)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003eMooTools\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e2\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:2%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[Slick.search(document, 'div', new Elements);](http://codepen.io/Haeresis/pen/qOQKxO)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n### Vanilla JS vs jQuery ###\n\n#### Retrouver 10 éléments du DOM par class name ####\n\n\u003cdiv class=\"table three\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eCode\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementsByClassName('vanilla');](http://codepen.io/Haeresis/pen/ZbmRMN)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ejQuery\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e17\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:17%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('.jquery');](http://codepen.io/Haeresis/pen/jbQKeQ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n#### Retrouver un élément du DOM avec le sélecteur `\u003c#id\u003e .inner span` ####\n\n\u003cdiv class=\"table three\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eCode\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.querySelector('#vanilla .inner span');](http://codepen.io/Haeresis/pen/PPxaVQ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ejQuery\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e33\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:33%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('#jquery .inner span');](http://codepen.io/Haeresis/pen/YyRvgQ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n#### Retrouver 10 éléments du DOM avec le sélecteur `\u003c.className\u003e .inner span` ####\n\n\u003cdiv class=\"table three\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eCode\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.querySelectorAll('.vanilla .inner span');](http://codepen.io/Haeresis/pen/gaQKJv)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003ejQuery\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e51\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:51%;\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[$('.jquery .inner span');](http://codepen.io/Haeresis/pen/ojQyrZ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n### Performance des sélecteurs Vanilla JS ###\n\nLes tests sont tous effectués sur le code suivant `\u003csection id=\"vanilla\" class=\"vanilla\"\u003e\u003carticle class=\"inner\"\u003e\u003cdiv class=\"target\" id=\"target\"\u003e\u003c/div\u003e\u003c/article\u003e\u003c/section\u003e`.\n\n\u003cdiv class=\"table two\"\u003e\n\u003ctable\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003cth\u003e100 ops \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/th\u003e\n\u0009\u0009\u003cth\u003eSelectionner le nœud `\u003cdiv class=\"target\" id=\"target\"\u003e\u003c/div\u003e`\u003c/th\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e100\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:100%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementsByTagName('div');](http://codepen.io/Haeresis/pen/PPxdWo)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e99\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:99%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementById('target');](http://codepen.io/Haeresis/pen/xwQaEz)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e96\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:96%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.getElementsByClassName('target');](http://codepen.io/Haeresis/pen/epQLBG)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e68\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:68%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.querySelector('.vanilla .inner div');](http://codepen.io/Haeresis/pen/qOQMRJ)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u0009\u003ctr\u003e\n\u0009\u0009\u003ctd\u003e\u003cspan class=\"opssec\"\u003e35\u003c/span\u003e\u003cspan class=\"bar\" style=\"width:35%\"\u003e\u003c/span\u003e\u003c/td\u003e\n\u0009\u0009\u003ctd\u003e[document.querySelectorAll('.vanilla .inner div');](http://codepen.io/Haeresis/pen/epQLve)\u003c/td\u003e\n\u0009\u003c/tr\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Passer de jQuery à Vanilla JS ##\n\nVous trouverez ici la liste non exhaustive de tâches courantes dans \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e en comparaison avec (par exemple) jQuery.\n\n*Effectivement, lors de la création d'API, il est souvent plus judicieux de développer sans dépendance à jQuery (par exemple) et de lui préférer seulement \u003cspan class=\"mask\"\u003eune dépendance à\u003c/span\u003e \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e.*\n\n**Légende**\n\nPour bien comprendre les types d'objets représentés, utilisez cette liste :\n\n```html\n\u003cdiv class=\"example\"\u003e\n  \u003cspan\u003e(Text into) Html Element\u003c/span\u003e\n  \u003c!-- Comment Element --\u003e\n  Text Element\n  \u003cspan\u003e(Text into) Html Element\u003c/span\u003e\n\u003c/div\u003e\n```\n\n- `querySelector('.example')` retourne un `HTMLElement`.\n- `querySelector('.example').children` retourne une `HTMLCollection`, chaque item de la collection est un `HTMLElement` soit deux `[span, span]`.\n- `querySelector('.example').childNodes` retourne une `NodeList`, chaque item de la collection est un `Node`, ici sept `[text, span, text, comment, text, span, text]`.\n- `querySelector('.example').childNodes[0]` retourne un `Text` (`Node`) de `typeNode` 3, soit du texte. (`...nodeList[3]` est de `typeNode` 8 soit un `Comment` (commentaire)).\n\n### .Selecteur De #Nœud ###\n\n#### \u003cspan\u003e#id\u003c/span\u003e ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un nœud par son identifiant...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = $('#id')[0];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = document.getElementById('id');\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### .classname #id tagname ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un nœud avec un sélecteur...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = $('#id .classname tagname')[0];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = document.querySelector('#id .classname tagname');\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### [.classname #id tagname] ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir plusieurs nœuds avec un sélecteur...\u003c/p\u003e\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('#id .classname tagname').each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll('#id .classname tagname'); // Not Live (Snapshot)\n[].forEach.call(nodeList, function (node) {\n\u0009node;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### [.classname] ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un nœud par par son nom de classe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('.classname').each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlCollection = document.getElementsByClassName('classname'); // Live\n// var nodeList = document.querySelectorAll('.classname'); // Not Live (Snapshot)\n[].forEach.call(htmlCollection, function (htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### [name] ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un nœud par son attribut `name`...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('[name=\"classname\"]').each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.getElementsByName(\"name\"); // Live\n// var nodeList = document.querySelectorAll('[name=name]'); // Not Live (Snapshot)\n[].forEach.call(nodeList, function (node) {\n\u0009node;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### [tagname] ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un nœud par son nom de balise...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('tagname').each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlCollection = document.getElementsByTagName('tagname'); // Live\n// var nodeList = document.querySelectorAll('tagname'); // Not Live (Snapshot)\n[].forEach.call(htmlCollection, function (htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parcour inversé ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eParcourir les nœuds dans leur ordre inverse...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$($('.className').get().reverse()).each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlCollection = document.getElementsByClassName('className'), // Live\n\u0009i = htmlCollection.length;\nwhile (htmlElement = htmlCollection[--i]) {\n\u0009htmlElement;\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### ATTRIBUTS\n\n#### Add Class ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eAjouter une classe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).addClass(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.classList.add(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Attribute ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir un attribut d'un nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).attr(\u0026lt;attributeName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.getAttribute(\u0026lt;attributeName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Data ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir une donnée d'un nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).data(\u0026lt;dataName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.getAttribute('data-' + \u0026lt;dataName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Value ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la valeur d'un champ de formulaire...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).value();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.value;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Has Class ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eVérifier la présence d'une classe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).hasClass(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.classList.contains(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Remove Attribute ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer un attribut...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).removeAttr(\u0026lt;attributeName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.removeAttribute(\u0026lt;attributeName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Remove Class ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer une classe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).removeClass(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.classList.remove(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Remove Data ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer une donnée d'un nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).removeData(\u0026lt;dataName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.removeAttribute('data-' + \u0026lt;dataName\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Attribute ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir un attribut d'un nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).attr(\u0026lt;attributeName\u003e, \u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.setAttribute(\u0026lt;attributeName\u003e, \u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Data ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir une donnée d'un nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).data(\u0026lt;dataName\u003e, \u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.setAttribute('data-' + \u0026lt;dataName\u003e, \u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Value ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir la valeur d'un champ de formulaire...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).value(\u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.value = \u0026lt;value\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Toggle Class ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer ou ajouter une classe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).toggleClass(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.classList.toggle(\u0026lt;className\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### AJAX ###\n\n#### GET ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eEnyoyer des informations à une URL par méthode GET...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.ajax({\n\u0009type: 'GET',\n\u0009url: \u0026lt;url\u003e,\n\u0009data: \u0026lt;data\u003e\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efetch(\u0026lt;url\u003e, {\n\u0009method: 'GET',\n\u0009body: \u0026lt;data\u003e\n});\n\n/\u0026#42; // IE fallback\nvar get = new XMLHttpRequest();\nget.open('GET', \u0026lt;url\u003e, true);\nget.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\nget.send(\u0026lt;data\u003e); \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### JSON ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRécupérer des informations au format JSON...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction getJSON(url, next) {\n\u0009$.getJSON(url, function (data) {\n\u0009\u0009next(null, data);\n\u0009}).error(function () {\n\u0009\u0009next(new Error('There was a connection error of some sort.'));\n\u0009});\n}\n\ngetJSON(\u0026lt;url\u003e, function (err, data) {\n\u0009if (err) {\n\u0009\u0009return err;\n\u0009}\n\u0009data;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction getJSON(url, next) {\n\u0009fetch(url)\n\u0009\u0009.then(function (data) {\n\u0009\u0009\u0009if (data.status \u003e= 200 \u0026\u0026 data.status \u003c 300) {\n\u0009\u0009\u0009\u0009return data;\n\u0009\u0009\u0009} \n\u0009\u0009\u0009next(new Error('We reached our target server, but it returned an error.'));\n\u0009\u0009})\n\u0009\u0009.then(function (data) {\n\u0009\u0009\u0009next(null, data.json());\n\u0009\u0009})\n\u0009\u0009.catch(function () {\n\u0009\u0009\u0009next(new Error('There was a connection error of some sort.'));\n\u0009\u0009});\n}\n\n/\u0026#42; // IE fallback\nfunction getJSON(url, next) {\n\u0009var request = new XMLHttpRequest();\n\u0009request.open('GET', url, true);\n\u0009request.send();\n\u0009request.addEventListener('load', function () {\n\u0009\u0009if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n\u0009\u0009\u0009return next(new Error('We reached our target server, but it returned an error.'));\n\u0009\u0009}\n\u0009\u0009next(null, JSON.parse(request.responseText));\n\u0009});\n\u0009request.addEventListener('error', function () {\n\u0009\u0009next(new Error('There was a connection error of some sort.'));\n\u0009});\n} \u0026#42;/\n\ngetJSON(\u0026lt;url\u003e, function (err, data) {\n\u0009if (err) {\n\u0009\u0009return err;\n\u0009}\n\u0009data;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### POST ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eEnyoyer des informations à une URL par méthode POST...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.ajax({\n\u0009type: 'POST',\n\u0009url: \u0026lt;url\u003e,\n\u0009data: \u0026lt;data\u003e\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efetch(\u0026lt;url\u003e, {\n\u0009method: 'POST',\n\u0009body: \u0026lt;data\u003e\n});\n\n/\u0026#42; // IE fallback\nvar post = new XMLHttpRequest();\npost.open('POST', \u0026lt;url\u003e, true);\npost.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\npost.send(\u0026lt;data\u003e); \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Request / Response ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRécupérer le contenu d'une URL...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction request(url, next) {\n\u0009$.ajax({\n\u0009\u0009type: 'GET',\n\u0009\u0009url: url,\n\u0009\u0009success: function(response) {\n\u0009\u0009\u0009next(null, response);\n\u0009\u0009},\n\u0009\u0009error: function() {\n\u0009\u0009\u0009next(new Error('There was a connection error of some sort.'));\n\u0009\u0009}\n\u0009});\n}\n\nrequest(\u0026lt;url\u003e, function (err, response) {\n\u0009if (err) {\n\u0009\u0009return err;\n\u0009}\n\u0009response;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction request(url, next) {\n\u0009fetch(url)\n\u0009\u0009.then(function (response) {\n\u0009\u0009\u0009if (response.status \u003e= 200 \u0026\u0026 response.status \u003c 300) {\n\u0009\u0009\u0009\u0009return response;\n\u0009\u0009\u0009} \n\u0009\u0009\u0009next(new Error('We reached our target server, but it returned an error.'));\n\u0009\u0009})\n\u0009\u0009.then(function (response) {\n\u0009\u0009\u0009next(null, response);\n\u0009\u0009})\n\u0009\u0009.catch(function () {\n\u0009\u0009\u0009next(new Error('There was a connection error of some sort.'));\n\u0009\u0009});\n}\n\n/\u0026#42; // IE fallback\nfunction request(url, next) {\n\u0009var request = new XMLHttpRequest();\n\u0009request.open('GET', url, true);\n\u0009request.send();\n\u0009request.addEventListener('load', function () {\n\u0009\u0009if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n\u0009\u0009\u0009return next(new Error('We reached our target server, but it returned an error.'));\n\u0009\u0009}\n\u0009\u0009next(null, request.responseText);\n\u0009});\n\u0009request.addEventListener('error', function () {\n\u0009\u0009return next(new Error('There was a connection error of some sort.'));\n\u0009});\n} \u0026#42;/\n\nrequest(\u0026gt;url\u003e, function (err, response) {\n\u0009if (err) {\n\u0009  return err;\n\u0009}\n\u0009response;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### ÉFFETS ###\n\n#### Animation ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eAnimer une propriété...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction fadeIn($element, speed, next) {\n\u0009$element.css('opacity', '0').animate({ opacity: 1 }, speed, next);\n}\nfadeIn($(\u0026lt;htmlElement\u003e), 2000, function () {\n  $(this).css('opacity', '');\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction fadeIn(htmlElement, speed, next) {\n\u0009var last = +new Date(),\n\u0009\u0009tick = function () {\n\u0009\u0009\u0009htmlElement.style.opacity = +htmlElement.style.opacity + (new Date() - last) / speed;\n\u0009\u0009\u0009last = +new Date();\n\u0009\u0009\u0009if (+htmlElement.style.opacity \u003c 1) {\n\u0009\u0009\u0009\u0009requestAnimationFrame(tick);\n\u0009\u0009\u0009} else if (next) {\n\u0009\u0009\u0009\u0009next.call(htmlElement);\n\u0009\u0009\u0009}\n\u0009\u0009};\n\u0009htmlElement.style.opacity = 0;\n\u0009tick();\n}\n\nfadeIn(\u0026lt;htmlElement\u003e, 2000, function () {\n\u0009this.style.opacity = '';\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Hide ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eCacher un élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).hide();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.style.display = 'none';\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Show ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eAfficher un élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).show();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.style.display = '';\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### ÉVÈNEMENTS ###\n\n#### Hover ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eÉquivalent du hover CSS en JavaScript...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).hover(\u0026lt;eventHandlerMouseIn\u003e, \u0026lt;eventHandlerMouseOut\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.addEventListener('mouseenter', \u0026lt;eventHandlerMouseIn\u003e);\n\u0026lt;htmlElement\u003e.addEventListener('mouseleave', \u0026lt;eventHandlerMouseOut\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Load ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eAttendre que le DOM et les fichiers externes (images, styles, scripts) soient chargés...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement).load(function () {\n\u0009// I am full loaded.\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.addEventListener('load', function () {\n\u0009// I am full loaded.\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Off ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSe désabonner d'un évènement...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).off(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.removeEventListener(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### On ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eS'abonner à un évènement...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).on(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.addEventListener(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### One ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eS'abonner à un évènement une seule fois...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).one(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.addEventListener(\u0026lt;eventName\u003e, \u0026lt;eventHandler\u003e, { once: true });\n\n/\u0026#42; // IE fallback\n\u0026lt;htmlElement\u003e.addEventListener(\u0026lt;eventName\u003e, function callee(event) {\n\u0009event.target.removeEventListener(e.type, callee);\n}); \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Ready ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eAttendre que le DOM soit chargé...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(document).ready(function () {\n\u0009// I am ready to be manipulate.\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003edocument.addEventListener('DOMContentLoaded', function () {\n\u0009// I am ready to be manipulate.\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Trigger ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéclencher un évènement...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar event = jQuery.Event('click');\nevent.test = true;\n\n$(\u0026lt;htmlElement\u003e).click(function (event) {\n\u0009event.test; // undefined by click, true by trigger.\n});\n$(\u0026lt;htmlElement\u003e).trigger(event);\n// $(\u0026lt;htmlElement\u003e).trigger('click'); // Shortcut without test property.\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar event = new Event('click');\nevent.test = true;\n\n\u0026lt;htmlElement\u003e.addEventListener('click', function (event) {\n\u0009event.test; // undefined by click, true by trigger.\n});\n\u0026lt;htmlElement\u003e.dispatchEvent(event);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### FILTRES ###\n\n#### Filter ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer des nœuds d'une liste d'après des instructions...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).filter(function (i, htmlElement) {\n\u0009return \u0026lt;filterCondition\u003e;\n}).each(function (i, htmlElement) {\n\u0009htmlElement;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll(\u0026lt;selector\u003e);\n\nnodeList = [].filter.call(nodeList, function (node) {\n\u0009return \u0026lt;filterCondition\u003e;\n});\n\n[].forEach.call(nodeList, function (node) {\n\u0009node;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### First ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner le premier nœud d'une liste...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).first();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlCollection\u003e.item(0);\n// \u0026lt;htmlCollection\u003e[0];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Has ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eQuels nœuds contiennent l'élément enfant...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).has(\u0026lt;matchesChildSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll(\u0026lt;selector\u003e);\n[].filter.call(nodeList, function (node) {\n\u0009return node.querySelector(\u0026lt;matchesChildSelector\u003e);\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Is ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eEst-ce qu'au moins un nœud correspond...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).is(\u0026lt;matchesSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll(\u0026lt;selector\u003e);\n[].some.call(nodeList, function (node) {\n\u0009return node.matches(\u0026lt;matchesSelector\u003e);\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Item ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner un nœud à l'index souhaité d'une liste...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).eq(\u0026lt;index\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlCollection\u003e.item(\u0026lt;index\u003e);\n// \u0026lt;htmlCollection\u003e[\u0026lt;index\u003e];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Last ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner le dernier nœud d'une liste...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).last();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlCollection\u003e.item(\u0026lt;htmlCollection\u003e.length - 1);\n// \u0026lt;htmlCollection\u003e[\u0026lt;htmlCollection\u003e.length - 1];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Not ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRécupérer les nœuds qui ne correspondent pas...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).not(\u0026lt;matchesSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll(\u0026lt;selector\u003e);\n[].filter.call(nodeList, function (node) {\n\u0009return !node.matches(\u0026lt;matchesSelector\u003e);\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Slice ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner une portion de nœuds dans une liste...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;selector\u003e).slice(\u0026lt;startIndex\u003e, \u0026lt;endIndex\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nodeList = document.querySelectorAll(\u0026lt;selector\u003e);\n[].slice.call(nodeList, \u0026lt;startIndex\u003e, \u0026lt;endIndex\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### MANIPULATION ###\n\n#### Append ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003e(Dé)placer un nœud dans un autre nœud, à la fin...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).append($(\u0026lt;appendHtmlElement\u003e));\n// $(\u0026lt;htmlElement\u003e).append(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.appendChild(\u0026lt;appendHtmlElement\u003e);\n// \u0026lt;htmlElement\u003e.insertAdjacentHTML('beforeEnd', \u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Clone ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDupliquer un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).clone();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.cloneNode(true);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Compare ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eComparer deux nœuds du DOM...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar $a = $(\u0026lt;selectorToFirstHtmlElement\u003e).find(\u0026lt;selectorToSecondHtmlElement\u003e);\n\u0009$b = $(\u0026lt;selectorToSecondElement\u003e);\n\n$a.is($b);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar temp = document.getElementsByTagName(\u0026lt;selectorToFirstHtmlElement\u003e)[0],\n\u0009a = temp.getElementsByTagName(\u0026lt;selectorToSecondHtmlElement\u003e)[0],\n\u0009b = document.querySelector(\u0026lt;selectorToSecondHtmlElement\u003e);\n\n(a === b);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Contains ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSavoir si un nœud est le fils d'un autre...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.contains($(\u0026lt;htmlElement\u003e), $(\u0026lt;childHtmlElement\u003e));\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e(\u0026lt;htmlElement\u003e !== \u0026lt;childHtmlElement\u003e) \u0026\u0026 \u0026lt;htmlElement\u003e.contains(\u0026lt;childHtmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Create ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eCréer un nouveau nœud HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('\u0026lt;' + \u0026lt;tagString\u003e + '\u003e');\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003edocument.createElement(\u0026lt;tagString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Empty ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eEffacer tout le contenu d'un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).empty();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.innerHTML = '';\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get HTML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le HTML interne d'un élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).html();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.innerHTML;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Node HTML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le HTML d'un élément (lui y compris)...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$('\u0026lt;div\u003e').append($(\u0026lt;htmlElement\u003e).clone()).html();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.outerHTML;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Text ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le texte interne d'un objet...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).text();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.textContent;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Index From Parent ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eConnaître la position d'un nœud dans son parent...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).index();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e[].slice.call(\u0026lt;htmlElement\u003e.parentNode.children).indexOf(\u0026lt;htmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Insert After ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eCréer un nœud après un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).after($(\u0026lt;afterHtmlElement\u003e));\n// $(\u0026lt;htmlElement\u003e).after(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode.insertBefore(\u0026lt;afterHtmlElement\u003e, \u0026lt;htmlElement\u003e.nextElementSibling);\n// \u0026lt;htmlElement\u003e.insertAdjacentHTML('afterend', \u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Insert Before ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eCréer un nœud avant un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).before($(\u0026lt;beforeHtmlElement\u003e));\n// $(\u0026lt;htmlElement\u003e).before(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode.insertBefore(\u0026lt;beforeHtmlElement\u003e, \u0026lt;htmlElement\u003e);\n// \u0026lt;htmlElement\u003e.insertAdjacentHTML('beforebegin', \u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Prepend ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003e(Dé)placer un nœud dans un autre nœud, au début...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).prepend($(\u0026lt;prependHtmlElement\u003e));\n// $(\u0026lt;htmlElement\u003e).prepend(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.insertBefore(\u0026lt;prependHtmlElement\u003e, \u0026lt;htmlElement\u003e.firstChild);\n// \u0026lt;htmlElement\u003e.insertAdjacentHTML('afterBegin', \u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Remove ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer un nœud du DOM...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).remove();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode.removeChild(\u0026lt;htmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Remove Children ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer tous les enfants d'un nœud du DOM...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).empty();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003ewhile (\u0026lt;htmlElement\u003e.firstChild) {\n\u0009\u0026lt;htmlElement\u003e.removeChild(\u0026lt;htmlElement\u003e.firstChild);\n}\n// \u0026lt;htmlElement\u003e.innerHTML = '';\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Replace ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRemplacer un nœud du DOM par un autre...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).replaceWith($(\u0026lt;newHtmlElement\u003e));\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode.replaceChild(\u0026lt;newHtmlElement\u003e, \u0026lt;htmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set HTML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir le HTML interne d'un élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).html(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.innerHTML = \u0026lt;htmlString\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Node HTML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir le HTML d'un élément (lui y compris)...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).replaceWith(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.outerHTML = \u0026lt;htmlString\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Text ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir le texte interne d'un objet...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).text(\u0026lt;string\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.textContent = \u0026lt;string\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Unwrap ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetirer le nœud englobant de tous les nœuds enfants...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).unwrap();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003ewhile (\u0026lt;htmlElement\u003e.firstChild) {\n\u0009\u0026lt;unwrapHtmlElement\u003e.insertBefore(\u0026lt;htmlElement\u003e.firstChild, \u0026lt;htmlElement\u003e);\n}\n\u0026lt;unwrapHtmlElement\u003e.removeChild(\u0026lt;htmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Wrap ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eEntourer un nœud du DOM par un autre...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).wrap($(\u0026lt;wrapHtmlElement\u003e));\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode.insertBefore(\u0026lt;wrapHtmlElement\u003e, \u0026lt;htmlElement\u003e);\n\u0026lt;wrapHtmlElement\u003e.appendChild(\u0026lt;htmlElement\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### PARCOURIR ###\n\n#### All Next ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds après...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).nextAll();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar nextAll = false;\nnextAll = [].filter.call(\u0026lt;htmlElement\u003e.parentNode.children, function (htmlElement) {\n\u0009return (htmlElement.previousElementSibling === \u0026lt;htmlElement\u003e) ? nextAll = true : nextAll;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### All Parents ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds parents au dessus...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar parents = $(\u0026lt;htmlElement\u003e).parents();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n\u0009parents.push(htmlElement);\n}\nparents;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### All Previous ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds avant...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).prevAll();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar prevAll = true;\nprevAll = [].filter.call(\u0026lt;htmlElement\u003e.parentNode.children, function (htmlElement) {\n\u0009return (htmlElement === \u0026lt;htmlElement\u003e) ? prevAll = false : prevAll;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Children ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir les nœuds fils d'un élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).children();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.children;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Closest Parent ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le premier nœud parent correspondant au sélecteur...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).closest(\u0026lt;parentSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.closest(\u0026lt;parentSelector\u003e);\n\n/\u0026#42; // IE fallback\nvar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n\u0009(htmlElement.matches \u0026\u0026 htmlElement.matches(\u0026lt;parentSelector\u003e)) ? parents.push(htmlElement) : '';\n}\nparents[0]; \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Find Children ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTrouver des nœuds enfants dans un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).find(\u0026lt;childrenSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.querySelectorAll(\u0026lt;childrenSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### First Child ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner le premier enfant d'un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).children().first();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.firstChild();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Last Child ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSélectionner le dernier enfant d'un nœud...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).children().last();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.lastChild();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Matches Selector ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSavoir si un nœud peut-être trouver avec un sélecteur...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).is(\u0026lt;selector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.matches(\u0026lt;selector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Next ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le nœud immédiatement après...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).next();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.nextElementSibling; // HTMLElement\n// \u0026lt;htmlElement\u003e.nextSibling; // Node\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Next Until ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds suivant jusqu'à croiser le nœud du sélecteur (non inclus)...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).nextUntil(\u0026lt;nextSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009nextUntil = [],\n\u0009until = true;\nwhile (htmlElement = htmlElement.nextElementSibling) {\n\u0009(until \u0026\u0026 htmlElement \u0026\u0026 !htmlElement.matches(\u0026lt;nextSelector\u003e)) ? nextUntil.push(htmlElement) : until = false;\n}\nnextUntil;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parent ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le nœud parent immédiatement au dessus...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).parent();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.parentNode;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parents ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds parent correspondant au sélecteur...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar parents = $(\u0026lt;htmlElement\u003e).parents(\u0026lt;parentsSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009parents = [];\nwhile (htmlElement = htmlElement.parentNode.closest(\u0026lt;parentSelector\u003e)) {\n\u0009parents.push(htmlElement);\n}\nparents;\n\n/\u0026#42; // IE fallback\nvar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009parents = [];\nwhile (htmlElement = htmlElement.parentNode) {\n\u0009(htmlElement.matches \u0026\u0026 htmlElement.matches(\u0026lt;parentSelector\u003e)) ? parents.push(htmlElement) : '';\n}\nparents; \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parents Until ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds parents précédent le nœud parent correspondant au sélecteur...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar parents = $(\u0026lt;htmlElement\u003e).parentsUntil(\u0026lt;parentsSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement =  \u0026lt;htmlElement\u003e,\n\u0009parentsUntil = [],\n\u0009until = true;\nwhile (htmlElement = htmlElement.parentNode.closest(\u0026lt;parentSelector\u003e)) {\n\u0009(until) ? parents.push(htmlElement) : until = false;\n}\nparentsUntil;\n\n/\u0026#42; // IE fallback\nvar htmlElement =  \u0026lt;htmlElement\u003e,\n\u0009parentsUntil = [],\n\u0009until = true;\nwhile (htmlElement = htmlElement.parentNode) {\n\u0009(until \u0026\u0026 htmlElement.matches \u0026\u0026 !htmlElement.matches(\u0026lt;parentSelector\u003e)) ? parents.push(htmlElement) : until = false;\n}\nparentsUntil; \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Previous ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir le nœud immédiatement avant...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).prev();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.previousElementSibling; // HTMLElement\n// \u0026lt;htmlElement\u003e.previousSibling // Node\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Previous Until ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir tous les nœuds précédent jusqu'à croiser le nœud du sélecteur (non inclus)...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).prevUtil(\u0026lt;previousSelector\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar htmlElement = \u0026lt;htmlElement\u003e,\n\u0009previousUntil = [],\n\u0009until = true;\nwhile (htmlElement = htmlElement.previousElementSibling) {\n\u0009(until \u0026\u0026 htmlElement \u0026\u0026 !htmlElement.matches(\u0026lt;previousSelector\u003e)) ? previousUntil.push(htmlElement) : until = false;\n}\npreviousUntil;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Siblings ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la liste des nœuds voisins...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).siblings();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e[].filter.call(\u0026lt;htmlElement\u003e.parentNode.children, function (htmlElement) {\n\u0009return htmlElement !== \u0026lt;htmlElement\u003e;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### STYLES ###\n\n#### Get Style ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir une propriété d'une règle CSS...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).css(\u0026lt;property\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003egetComputedStyle(\u0026lt;htmlElement\u003e)[\u0026lt;property\u003e];\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Scroll Left ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la position de la barre de défilement horizontal...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).scrollLeft();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.scrollLeft;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Get Scroll Top ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la position de la barre de défilement vertical...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).scrollTop();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.scrollTop;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Inner Height ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la hauteur d'un élément en incluant la marge interne sans la bordure...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).innerHeight();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.clientHeight\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Inner Width ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la largeur d'un élément en incluant la marge interne sans la bordure...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).innerWidth();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.clientWidth\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Offset from Document ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir les coordonnées d'affichage du nœud par rapport aux bords de la page...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).offset();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar rect = \u0026lt;htmlElement\u003e.getBoundingClientRect()\n{\n\u0009top: rect.top + document.body.scrollTop,\n\u0009left: rect.left + document.body.scrollLeft\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Offset from Parent ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir les coordonnées d'affichage du nœud par rapport aux bords du premier nœud parent...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).position();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e{\n\u0009left: \u0026lt;htmlElement\u003e.offsetLeft,\n\u0009top: \u0026lt;htmlElement\u003e.offsetTop\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Offset from Viewport ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir les coordonnées d'affichage du nœud par rapport aux bords de la partie visible de la fenêtre...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).offset();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003evar rect = \u0026lt;htmlElement\u003e.getBoundingClientRect()\n{\n\u0009top: rect.top + document.body.scrollTop,\n\u0009left: rect.left + document.body.scrollLeft\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Outer Height ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la hauteur d'un élément en incluant la marge interne et la bordure...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).outerHeight();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.offsetHeight\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Outer Width ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtenir la largeur d'un élément en incluant la marge interne et la bordure...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).outerWidth();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.offsetWidth\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parent Not Static ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eObtient le premier nœud parent qui n'est pas en `position: static` s'il existe...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).offsetParent();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e(\u0026lt;htmlElement\u003e.offsetParent || \u0026lt;htmlElement\u003e)\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Style ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir une propriété CSS dans l'attribut style...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).css(\u0026lt;property\u003e, \u0026lt;value\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.style.\u0026lt;property\u003e = \u0026lt;value\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Scroll Left ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir la position de la barre de défilement horizontal...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).scrollLeft(\u0026lt;distance\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.scrollLeft = \u0026lt;distance\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Set Scroll Top ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir la position de la barre de défilement vertical...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$(\u0026lt;htmlElement\u003e).scrollTop(\u0026lt;distance\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;htmlElement\u003e.scrollTop = \u0026lt;distance\u003e;\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### UTILES ###\n\n#### Array Each ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eLister les éléments d'un tableau...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.each(\u0026lt;array\u003e, function (i, item) {\n\u0009(item === \u0026lt;array\u003e[i]); // true\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;array\u003e.forEach(function (item, i) {\n\u0009(item === \u0026lt;array\u003e[i]); // true\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Change Futur Context ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eDéfinir le contexte d'execution qui sera utilisé à l'instanciation de la fonction...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.proxy(\u0026lt;fn\u003e, \u0026lt;context\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;fn\u003e.bind(\u0026lt;context\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Extend ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eÉtendre un objet avec d'autres objets...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;object\u003e = $.extend(\u0026lt;extendingObject\u003e, \u0026lt;object\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;object\u003e = Object.assign(\u0026lt;object\u003e, \u0026lt;extendingObject\u003e);\n\n/\u0026#42; // IE fallback (not deep)\nObject.keys(\u0026lt;object\u003e).forEach(function (key) {\n\u0009\u0026lt;object\u003e[key] = (\u0026lt;extendingObject\u003e[key]) ? \u0026lt;extendingObject\u003e[key] : \u0026lt;object\u003e[key];\n});\n\u0026lt;object\u003e; \u0026#42;/\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Index Of ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTrouver la position d'un élément dans un tableau...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.inArray(\u0026lt;item\u003e, \u0026lt;array\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;array\u003e.indexOf(\u0026lt;item\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Is Array ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eSavoir si un élément est un tableau...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.isArray(\u0026lt;array\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003eArray.isArray(\u0026lt;array\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Map ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTransformer un tableau en un autre suivant des opérations sur chaque élément...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.map(\u0026lt;array\u003e, function (item, i) {\n\u0009return \u0026lt;operations\u003e;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;array\u003e.map(function (item, i) {\n\u0009return \u0026lt;operations\u003e;\n});\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Now ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRetourner le timestamp courant...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.now();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003eDate.now();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parse HTML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTransformer une chaine de caractère en objet HTML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.parseHTML(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction parseHTML(htmlString) {\n\u0009var body = document.implementation.createHTMLDocument().body;\n\u0009body.innerHTML = htmlString;\n\u0009return body.childNodes;\n}\n\nparseHTML(\u0026lt;htmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parse JSON ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTransformer une chaine de caractère en objet JSON...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.parseJSON(\u0026lt;jsonString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003eJSON.parse(\u0026lt;jsonString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Parse XML ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTransformer une chaine de caractère en objet XML...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.parseXML(\u0026lt;xmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction parseXML(xmlString) {\n\u0009return (new DOMParser()).parseFromString(xmlString, 'text/xml');\n}\n\nparseXML(\u0026lt;xmlString\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Serialize Array ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRécupérer tous les champs de formulaire dans un Array JSON...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.serializeArray(\u0026lt;form\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction serializeArray(form) {\n\u0009var field, length, output = [];\n\u0009if (typeof form === 'object' \u0026\u0026 form.nodeName === 'FORM') {\n\u0009\u0009var length = form.elements.length;\n\u0009\u0009for (i = 0; i \u003c length; i++) {\n\u0009\u0009\u0009field = form.elements[i];\n\u0009\u0009\u0009if (field.name \u0026\u0026 !field.disabled \u0026\u0026 field.type !== 'file' \u0026\u0026 field.type != 'reset' \u0026\u0026 field.type != 'submit' \u0026\u0026 field.type != 'button') {\n\u0009\u0009\u0009\u0009if (field.type === 'select-multiple') {\n\u0009\u0009\u0009\u0009\u0009length = form.elements[i].options.length;\n\u0009\u0009\u0009\u0009\u0009for (j = 0; j \u003c length; j++) {\n\u0009\u0009\u0009\u0009\u0009\u0009if(field.options[j].selected)\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009output[output.length] = { name: field.name, value: field.options[j].value };\n\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009} else if ((field.type !== 'checkbox' \u0026\u0026 field.type !== 'radio') || field.checked) {\n\u0009\u0009\u0009\u0009\u0009output[output.length] = { name: field.name, value: field.value };\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009}\n\u0009\u0009}\n\u0009}\n\u0009return output;\n}\nserializeArray(\u0026lt;form\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Serialize String ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eRécupérer tous les champs de formulaire dans une QueryString...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.serialize(\u0026lt;form\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003efunction serialize(form) {\n\u0009var field, length, output = [];\n\u0009if (typeof form === 'object' \u0026\u0026 form.nodeName === 'FORM') {\n\u0009\u0009var length = form.elements.length;\n\u0009\u0009for (var i = 0; i \u003c length; i++) {\n\u0009\u0009\u0009field = form.elements[i];\n\u0009\u0009\u0009if (field.name \u0026\u0026 !field.disabled \u0026\u0026 field.type !== 'file' \u0026\u0026 field.type !== 'reset' \u0026\u0026 field.type !== 'submit' \u0026\u0026 field.type !== 'button') {\n\u0009\u0009\u0009\u0009if (field.type === 'select-multiple') {\n\u0009\u0009\u0009\u0009\u0009length = form.elements[i].options.length;\n\u0009\u0009\u0009\u0009\u0009for (var j=0; j \u003c length; j++) {\n\u0009\u0009\u0009\u0009\u0009\u0009if (field.options[j].selected) {\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009output[output.length] = encodeURIComponent(field.name) + '=' + encodeURIComponent(field.options[j].value);\n\u0009\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009} else if ((field.type !== 'checkbox' \u0026\u0026 field.type !== 'radio') || field.checked) {\n\u0009\u0009\u0009\u0009\u0009output[output.length] = encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value);\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009}\n\u0009\u0009}\n\u0009}\n\u0009return output.join('\u0026').replace(/%20/g, '+');\n}\nserialize(\u0026lt;form\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n#### Trim ####\n\n\u003cdiv class=\"from-jquery-to-vanilla-js\"\u003e\n\u003cblockquote class=\"jquery\"\u003e\n\u0009\u0009\u003cp\u003eTransformer une chaine de caractère en objet JSON...\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e$.trim(\u0026lt;string\u003e);\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\n\u003cblockquote class=\"vanilla-js\"\u003e\n\u0009\u0009\u003cp\u003e\u003cstrong\u003e\u003csamp\u003e\u003c/samp\u003e\u003c/strong\u003e...avec \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\u003c/p\u003e\n\u0009\u0009\u003cpre class=\"prettyprint linenums\"\u003e\u003ccode class=\"lang-js\"\u003e\u0026lt;string\u003e.trim();\u003c/code\u003e\u003c/pre\u003e\n\u003c/blockquote\u003e\n\u003c/div\u003e\n\n### PLUS ###\n\nJe vais maintenir cette liste au fur et à mesure que j'utiliserai moi-même \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e. Vous pouvez l'alimenter en postant dans les commentaires.\n\n\n## Pour aller plus loin ##\n\nPour plus d'informations à propos de \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e :\n\n- Jettez un oeil à la [documentation](https://developer.mozilla.org/fr/docs/Web/JavaScript) \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e\n- Essayez l'un des nombreux [plugins](https://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks) \u003cspan class=\"vanillajs\"\u003eVanilla JS\u003c/span\u003e.","dates":{"published":{"$date":"2015-10-19T12:30:00.000Z"},"updated":[]},"description":"Vanilla JS est rapide, léger et multi-plateforme pour créer d'incroyables et puissantes applications JavaScript","image":"https://blog.lesieur.name/media/images/upload/vanillajs-big.jpg","others":{"markdown":true,"published":true},"script":"var labels = document.querySelectorAll('.customizer-options label:not(.disabled)'),\n    loader = document.querySelector('.customizer-estimate'),\n    humanSize = document.querySelector('.human-size'),\n    testimonials = document.querySelectorAll('.testimonial'),\n    mask = document.getElementsByClassName(\"mask\"),\n    i = 0;\n\n[].forEach.call(mask, function(text) {\n  text.innerText = text.innerText.replace(/a/g, \"@\").replace(/u/g, \"µ\").replace(/e/g, \"€\").replace(/o/g, \"#\").replace(/i/g, \"!\");\n});\n\nfunction incrementI() {\n  i++;\n  if (i === testimonials.length) {\n    i = 0;\n  }\n}\n\n[].forEach.call(labels, function(label) {\n  label.addEventListener('click', function(event) {\n    var checkbox = this.querySelector('input');\n    event.preventDefault();\n    checkbox.checked = (this.getAttribute('class') !== 'selected');\n    this.classList.toggle('selected');\n    loader.classList.add('is-loaded');\n    setTimeout(function () {\n        loader.classList.remove('is-loaded');\n    }, 500);\n  });\n});\n\nhumanSize.addEventListener('click', function(event) {\n    loader.classList.toggle('is-readable');\n});\n\n[].forEach.call(testimonials, function(testimonial) {\n  testimonial.addEventListener('click', function(event) {\n   testimonial.classList.remove('is-displayed');\n   if (testimonial.nextElementSibling \u0026\u0026 testimonial.nextElementSibling.tagName.toLowerCase() === 'blockquote') {\n       testimonial.nextElementSibling.classList.add('is-displayed');\n   } else {\n       testimonials[0].classList.add('is-displayed');\n   }\n    incrementI();\n  });\n});\nsetInterval(function loopOnTestimonials() {;\n  testimonials[i].click();\n}, 5000);","stylesheet":"@font-face {\n  font-family: 'cursive2';\n  src: url('./media/fonts/cursive2.eot?#iefix') format('embedded-opentype'),\n  \u0009   url('./media/fonts/cursive2.woff') format('woff'),\n  \u0009   url('./media/fonts/cursive2.ttf')  format('truetype'),\n  \u0009   url('http://blog.haeresis.fr/upload/fonts/cursive2.svg#cursive2') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n.article .h1-like {\n    margin: 32px 0 0 0;\n    position: relative;\n    height: 200px;\n    line-height: 180px;\n    text-align: center;\n    font-size: 30pt;\n    text-shadow: 0 0 2px #333333, 0 0 4px #333333;\n    color: #F3E5AB;\n    font-weight: 100;\n    font-family: cursive2;\n}\n.article .h1-like span {\n    position: relative;\n    z-index: 1;\n}\n.article .h1-like img {\n    vertical-align: middle;\n    opacity: .3;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -100px;\n    margin-top: -100px;\n}\n.vanillajs {\n    font-family: cursive2;\n    color: #9e946e;\n    font-size: 1.2em;\n    padding-right: .1em;\n}\n.article .lead {\n   color: #111;\n    font-weight: 400;\n    font-size: 1.6rem;\n    margin-left: 32px;\n    margin-right: 32px;\n    text-align: center;\n}\n.used-by {\n    margin: 0;\n    padding: 16px 16px 8px;\n    text-align: center;\n}\n.used-by li {\n    display: inline-block;\n    padding: 4px 8px;\n   font-weight: bold;\n}\n.customizer-options {\n    display: table;\n    text-align: middle;\n}\n.customizer-options label {\n    position: relative;\n    cursor: pointer;\n    display: inline-block;\n    border-radius: 5px;\n    padding: 1px;\n    margin: 0 1px 1px 1px;\n    width: calc(49% - 2px);\n    background-color: #e8e8e8;\n    vertical-align: middle;\n}\n.customizer-options label:before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 25%;\n    height: 100%;\n    content: \"\";\n}\n.customizer-options label:hover {\n    background-color: #dddddd;\n}\n.customizer-options label.selected {\n    background-color: #F3E5AB;\n    color: #666666;\n}\n.customizer-options h3 {\n    margin-top: 8px;\n    margin-bottom: 4px;\n}\n@-webkit-keyframes loader {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes loader {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.customizer-estimate {\n    margin-top: 4px;\n    margin-bottom: 8px;\n}\n.customizer-estimate .loading {\n    display: none;\n    position: relative;\n    width: 20px;\n}\n.customizer-estimate .loader {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin: 0;\n    text-align: center;\n    z-index: 1000;\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    -ms-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n    width: 2.2585em;\n    height: 2.2585em;\n    font-size: 1em;\n    color: rgba(255,255,255,.9);\n}\n.customizer-estimate .loader:before {\n    position: absolute;\n    content: '';\n    top: 3px;\n    left: 75%;\n    border-radius: 500rem;\n    border: .2em solid rgba(0,0,0,.1);\n    width: 1em;\n    height: 1em;\n    margin: 0 0 0 -1.12925em;  \n}\n.customizer-estimate .loader:after {\n    display: block;\n    position: absolute;\n    content: '';\n    top: 3px;\n    left: 75%;\n    -webkit-animation: loader .6s linear;\n    animation: loader .6s linear;\n    -webkit-animation-iteration-count: infinite;\n    animation-iteration-count: infinite;\n    border-radius: 500rem;\n    border-color: #767676 transparent transparent;\n    border-style: solid;\n    border-width: .2em;\n    box-shadow: 0 0 0 1px transparent;\n    width: 1em;\n    height: 1em;\n    margin: 0 0 0 -1.12925em;\n    border-color: #fff transparent transparent;\n}\n.customizer-estimate.is-loaded .value {\n   display: none;\n}\n.customizer-estimate.is-loaded .loading {\n    display: inline-block;\n}\n.customizer-estimate .readable {\n    display: none;\n}\n.customizer-estimate.is-readable .readable {\n    display: inline-block;\n}\n.customizer-estimate.is-readable .no-readable {\n    display: none;\n}\n.download { text-align: center; }\n.testimonials {\n    position: relative;\n}\n.testimonial {\n    position: absolute;\n    visibility: hidden;\n    top: 0;\n    width: 100%;\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    left: 0;\n    text-align: center;\n}\n.testimonial:first-child {\n    position: relative;\n}\n.testimonial em {\n    color: #9e946e;\n}\n.testimonial.is-displayed {\n    visibility: visible;\n}\n.article table {\n  border-collapse: collapse;\n  width: 100%;\n}\n.article th,\n.article td {\n    border: solid 1px #ccc;\n    padding: 4px;\n}\n.two tr :first-child {\n    position: relative;\n}\n.three tr :nth-child(2) {\n    position: relative;\n}\n.article tr .opssec {\n    position: relative;\n    z-index: 2;\n}\n.article tr .bar {\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #ddd;\n}\n.article th:empty {\n    visibility: hidden;\n}\n.from-jquery-to-vanilla-js {\n\u0009/*display: table;*/\n        width: 100%;\n}\n.from-jquery-to-vanilla-js .vanilla-js,\n.from-jquery-to-vanilla-js .jquery {\n\u0009/*display: inline-block;\n\u0009width: calc(50% - 4px);*/\n        box-sizing: border-box;\n        -webkit-box-sizing: border-box;\n        vertical-align: middle;\n}\n/*.from-jquery-to-vanilla-js .jquery {\n       margin-right: 2px;\n}\n.from-jquery-to-vanilla-js .jquery {\n       margin-left: 2px;\n}*/\n.table {\n   position: relative;\n   overflow-x: auto;\n   white-space: nowrap;\n}\narticle .mask {\n   opacity: 0.4;\n}","title":"Vanilla JS - Documentation en français","urn":"vanilla-js-france"}
{"_id":{"$oid":"5650f0e6d1b7fe136fc20059"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48c8"}],"content":"Une étape bien trop souvent oubliée lors de la réalisation de scripts JavaScript est la gestion des erreurs. On se contente de colmater les problèmes à l'aide de `try`/`catch` quand ceux-ci sont remontés par l'interpréteur et... et c'est tout.\n\n\u003cdiv style=\"text-align: center;\"\u003e\u003cimg width=\"200\" height=\"140\" src=\"media/images/upload/error-or-exception.jpg\" alt=\"'Erreur ou Exception ?'\"\u003e\u003c/div\u003e\n\nVoici les [3 principaux patterns a utilisés pour gérer vos erreurs JavaScript](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/#erreurs-d-finir-retourner-et-utiliser-des-erreurs) dans les navigateurs ou dans Node.js et pour ceux qui ont le temps, un petit topo sur la différence entre Erreur et Exception.\n\n\n\n\n\n## Erreur ou Exception ? ##\n\nEn JavaScript les Erreurs sont un type d'objet à elles seules et se créent en utilisant la syntaxe suivante `new Error()`. Elles se manipulent comme un objet et peuvent être `return` ou mises dans des variables. L'exécuteur JavaScript lui-même retourne des erreurs.\n\nLes Exceptions quant à elles sont des Erreurs qui sont lancées ou jetées avec le mot clé `throw` soit `throw new Error()` et ne peuvent plus être manipulées. Elles mettent ainsi fin aux contextes d'exécution les un après les autres en remontant jusqu'à afficher une erreur dans la console. Elles peuvent être interceptées avec `try` et l'erreur qu'elles remontent peut être manipulée via `catch (exception)`.\n\n\n\n\n\n## Ne pas confondre erreurs de développement et erreurs opérationnelles ##\n\nTout d'abord, avant de pouvoir correctement gérer les erreurs, il va falloir faire la différence entre celles de type opérationnelles et celles de développement.\n\n\n\n### Erreurs de syntaxe et d'éxécution ###\n\nLes erreurs de développement sont des erreurs de syntaxe ou des bogues dans le programme. Ce sont des lignes qui peuvent toujours être réparées en changeant du code. Elles n'ont jamais besoin d'être interceptées. Ce sont des erreurs comme par exemple :\n- Oublier une parenthèse (erreur de syntaxe).\n- Essayer de lire la valeur d'une variable inexistante (erreur d'exécution).\n- Création d'une fonction asynchrone sans proposer de callback (erreur de conception).\n- Passer un primitif number quand un objet est attendu (erreur d'exécution).\n- etc...\n\nAjouter du code pour corriger ces erreurs n'est jamais la solution, sinon c'est la porte ouverte aux [Abstractions qui Fuient](http://french.joelonsoftware.com/Articles/LeakyAbstractions.html).\n\n### Erreurs opérationnelles ###\n\nLes erreurs opérationnelles sont les erreurs lancées par des programmes correctement écrit, ce ne sont pas des bogues dans les programmes mais des problèmes avec le système lui-même (hors mémoire, trop de fichiers ouvert, ...), la configuration système (pas de route pour l'adresse demandée, ...), le réseau (socket refermée, ...), les services distants (erreur 500, connexion impossible, ...) ou les utilisateurs (des inputs non valides) et **ce sont elles que vous devez veiller à intercepter pour les traiter ou à renvoyer pour que d'autres fonctions puissent les traiter**.\n\n\n\n\n\n## Erreur : définir, retourner et utiliser des erreurs ##\n\nIl y a donc 3 façons de « lancer » des erreurs opérationnelles en toutes sécurités, chacune dépendant de votre implémentation JavaScript.\n\n### Pour du code synchrone ###\n\nPour du code synchrone, si une erreur doit être levée, elle est retournée de la manière suivante :\n\n```js\n// Définition d'une fonction de division synchrone.\nvar divideSync = function (x, y) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève proprement une erreur en la retournant.\n        return (new Error(\"Can't divide by zero\")).code = \"ENOZER\";\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    return x / y;\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\n(function () {\n    \"use strict\";\n\n    // Diviser 4/0.\n    var result = divideSync(4, 0);\n\n    // Est-ce qu'une erreur connue a été levée ?\n    if (result instanceof Error \u0026\u0026 result.code === \"ENOZER\") { // Juste `(result instanceof Error)` pour une erreur inconnue.\n\n        // Traiter l'erreur.\n        return console.log(\"4/0 = Error, \", result); // 4/0 = Error, Can't divide by zero\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/0 = \" + result);\n}());\n```\n\n##### Pour du code basé sur une Callback #####\n\nPour du code basé sur une callback (utilisée pour les fonctions asynchrones entre autre), le premier paramètre de la Callback est `err`. Si une erreur doit être levée, `err` est un `new Error()`, sinon, `err` est `null`. Après, n'importe quels types de paramètre peuvent suivre :\n\n```js\n// Définition d'une fonction de division avec callback.\nvar divide = function(x, y, next) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève une erreur proprement en appelant la callback\n        // avec en premier paramètre l'erreur souhaitée.\n        return next((new Error(\"Can't divide by zero\")).code = \"ENOZER\");\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    next(null, x / y);\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\ndivide(4, 0, function (err, result) {\n\n    // Est-ce qu'une erreur connue a été levée ?\n    if (err \u0026\u0026 err.code === \"ENOZER\") { // Juste `(err)` pour une erreur inconnue.\n\n        // Traiter l'erreur.\n        return console.log(\"4/0 = Error, \", err); // 4/0 = Error, Can't divide by zero\n    }\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/0 = \" + result);\n});\n```\n\n##### Pour un Événement #####\n\nPour un code événementiel, si une erreur doit être levée, un événement de type `error` est émis.\n\nEn premier lieux, ajoutons la possibilité d’émettre et d'écouter des événements à un objet.\n\n```js\n// Définition d'un événement de division.\nvar events = require('events'), // Utiliser EventEmitter côté client `http://smalljs.org/object/events/event-emitter/`\n    Divider = function () {\n        \"use strict\";\n\n        events.EventEmitter.call(this);\n    };\nrequire('util').inherits(Divider, events.EventEmitter);\n```\n\npuis ajoutons une fonctionnalité de division à notre objet :\n\n```js\n// Ajout d'une fonction de division.\nDivider.prototype.divide = function (x, y) {\n    \"use strict\";\n\n    // La division par 0 est décidée comme interdite.\n    if (y === 0) {\n\n        // On lève proprement une erreur en l’émettant.\n        this.emit(\"error\", (new Error(\"Can't divide by zero\")).code = \"ENOZER\");\n    } else {\n\n        // S'il n'y a pas d'erreur, on retourne le résultat.\n        this.emit(\"divided\", x, y, x / y);\n    }\n\n    // Permettre le chaînage.\n    return this;\n};\n```\n\net on traite l'erreur de cette façon :\n\n```js\n// Créer un nouveau diviseur.\nvar divider = new Divider();\n\n// Gérer les erreurs.\ndivider.on(\"error\", function (err) {\n    \"use strict\";\n\n\u0009// Est-ce qu'une erreur connue a été levée ?\n    if (err.code === \"ENOZER\") { // Pas de condition pour une erreur inconnue.\n        // Traiter l'erreur.\n        return console.log(\"4/2=err\", err);\n    }\n});\n\n// Gérer le résultat.\ndivider.on('divided', function (x, y, result) {\n    \"use strict\";\n\n    // S'il n'y a pas d'erreur, on retourne le résultat.\n    console.log(\"4/2=\" + result);\n});\n\n// Division réussi puis division levant une erreur après chaînage.\ndivider.divide(4, 2).divide(4, 0);\n```\n\n\n\n\n\n## Exception : intercepter et lancer des erreurs avec `try`, `catch` et `throw`.\n\nL'exemple qui suit ne fait pas partie des 3 patterns de bonne pratique dont nous avons parlé un peu plus tôt mais il est important de le connaître car ce n'est qu'ainsi que vous pourrez créer ce que l'on appel des **exceptions** et que vous pourrez intercepter celles lancées par l'interpréteur JavaScript.\n\n### Lancer une Exception ###\n\nVous ne devriez que rarement (voir jamais) utiliser le mot clé `throw`. Ce mot-clé transforme les `new Error()` en exceptions et ont pour but d'afficher des erreurs dans les consoles d'erreur et de mettre fin à l'interprétation du code restant, c'est pourquoi elles **ne devraient jamais être utilisée pour représenter des erreurs opérationnelles**. De plus, il est impossible d'utiliser `try` / `catch` pour intercepter une erreur lancée autour d'une fonction asynchrone.\n\nVoici donc le `throw` pour lancer une erreur, c-à-d créer une exception :\n\n```javascript\nthrow new Error(\"The exception message.\");\n```\n\n### Intercepter une Exception ###\n\nPour intercepter une exception il suffit d'utiliser les mots-clés `try` / `catch` :\n\n```javascript\ntry {\n\u0009var code = \"EXAMPL\";\n\n\u0009throw new Error(\"Simulation of an Error throwed.\");\n} catch (exception) {\n\u0009return exception.code; // \"EXAMPL\"\n}\n```\n\nÀ vous de jouer !","dates":{"published":{"$date":"2015-11-21T16:32:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Gérer les Erreurs et les Exceptions en JavaScript","urn":"gerer-les-erreurs-et-les-exceptions-en-javascript"}
{"_id":{"$oid":"5667eaecd1b7fe136fc2005a"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48b6"},{"$oid":"530cc2f27188099a66e9bcec"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c5"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5810c7ceac1a7558f33a3acc"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5499b03566bb5aeedaafd8b6"},{"$oid":"5310456355dfd5f7698d48cd"}],"content":"Cet article fait office de conventions d'architecture d'un site web orienté composant pour la partie cliente, peu importe la technologie d'implémentation finale, de manière à ce que le code soit valide, performant et maintenable par des développeurs front-end, des développeurs back-end ainsi que des pousseurs de contenu. Ces techniques étant en constantes évolution, et les problématiques évoluant au fur et à mesure de mes itérations créatives, cet article est voué à se compléter et changer.\n\n\u003cfigure\u003e\n\u003cimg width=\"988\" height=\"847\" src=\"http://vdoit.in/wp-content/uploads/2016/09/vDoIT_html-css-logo1.jpg\" alt=\"Contenu, apparence et comportement\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eContenu, apparence et comportement\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n## Présentation globale des rôles ##\n\n### HTML ###\n\nLe HTML est le centre de tout. C'est lui qui doit **présenter le contenu**, qui est la clé de voûte de tout site web. Il doit être au service du contenu avant tout et non à celui du design (visuel). Le site web doit être valide et respecter les normes W3C en fonction de son DocType et être le plus cohérent à travers tout le site. Ce qui doit justifier son changement est un apport / une modification de contenu. Il est le lien entre le travail des développeurs front-end, des développeurs back-end ainsi que les pousseurs de contenu et doit bouger le moins possible quand il est question de changement de design.\n\nIl y a 3 types de fragment HTML sur une page :\n\n- Les **gabarits de page** (ou « layouts », ou « templates » ou encore « grids ») : ils représentent la structure globale d'une page qui doit accueillir des composants.\n- Les **composants** (ou « modules », ou « views » ou encore « items template ») : ils représentent une partie auto-suffisante à elle-même, traitant du même type de contenu et l'organisant hiérarchiquement.\n- Les **contenus** (ou « contents », ou « data ») : ils représentent les données à exposer au visiteur et pour lesquelles le site web existe. Elles sont sémantiquement parsemées de balise HTML et sont les zones qui proviennent généralement de fichier externe (HTML, Markdown, JSON, etc.) ou de base de donnée (SQL, NoSQL, etc.).\n\n**Exemple de gabarit, composants et contenus**\n\n\u003cdiv class=\"ex-layout\"\u003e\n    \u003cdiv class=\"ex-component\"\u003e\n        \u003cdiv class=\"ex-subcomponent\" style=\"width: calc(50% + 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                titre\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-subcomponent\" style=\"width: calc(50% + 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                menu (liste)\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ex-component\"\u003e\n        \u003cdiv class=\"ex-data\"\u003e\n            titre\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-data\"\u003e\n            paragraphes\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-data\"\u003e\n            bouton\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ex-sublayout\"\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                ...\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                ...\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                ...\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ex-component\"\u003e\u003c/div\u003e\n    \u003cdiv class=\"ex-sublayout\"\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(33.33333333% - 24px);\"\u003e\u003c/div\u003e\n        \u003cdiv class=\"ex-sublayout\" style=\"width: calc(66.66666666% + 24px);\"\u003e\n            \u003cdiv class=\"ex-component\" style=\"width: calc(25% - 24px);\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"ex-component\" style=\"width: calc(25% - 24px);\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"ex-component\" style=\"width: calc(25% - 24px);\"\u003e\u003c/div\u003e\n            \u003cdiv class=\"ex-component\" style=\"width: calc(25% - 24px);\"\u003e\u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ex-component\"\u003e\u003c/div\u003e\n    \u003cdiv class=\"ex-sublayout\"\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(50% - 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                paragraphe\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"ex-component\" style=\"width: calc(50% - 24px);\"\u003e\n            \u003cdiv class=\"ex-data\"\u003e\n                partage (liste)\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### CSS ###\n\nLe CSS est ce qui s'occupe d'**habiller graphiquement** le site web. Il doit être totalement invisible pour les développeurs back-end et les pousseurs de contenu. Ils ne doivent jamais mettre les mains dans des fichiers CSS, Less, Stylus, etc. Cependant, les classes sur lesquels ils s’appuient demande à être documentées.\n\nIl y a 2 types d'approche en CSS :\n\n- **CSS-Driven**, avec l'utilisation des sélecteurs CSS ciblant le HTML. Elles s'appliquent en premier lieu sur les composants mais également sur les gabarits. Elles ne doivent jamais être utilisées dans du contenu. Le CSS-Driven est décrit, par exemple, avec BEM. Une documentation des états ou variations possibles des gabarits et composants doit être fournie aux développeurs back-end.\n\n- **HTML-Driven**, avec l'utilisation de patrons de conception (ou en anglais « Class Pattern »). Ils s'appliquent en premier lieu sur les contenus (et possiblement sur les gabarits). Ils ne doivent jamais être utilisé dans des composants directement. Le HTML-Driven est décrit par exemple avec OOCSS (Bootstrap, Semantic-UI, etc.) et une documentation de l'utilisation des patrons de conception doit être fournie aux pousseurs de contenu pour les remplirs s'ils ne sont pas assistés d'un éditeur WYSIWYG (« What you see is what you get »).\n\n**Exemple CSS-Driven**\n\u003cdiv class=\"ex-component\" style=\"width: calc(60% - 24px);\"\u003e\n    .\u003cstrong\u003euser-profile\u003c/strong\u003e \u003cspan style=\"opacity: 0.66;\"\u003e(facultatif: \u003cstrong\u003e.as-popup\u003c/strong\u003e, \u003cstrong\u003e.is-opened\u003c/strong\u003e)\u003c/span\u003e\n    \u003cdiv class=\"ex-subcomponent\" style=\"margin: 12px;width: calc(100% - 24px);\"\u003e\n        .user-profile--\u003cstrong\u003eavatar\u003c/strong\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"ex-subcomponent\" style=\"margin: 12px;width: calc(100% - 24px);\"\u003e\n        .user-profile--\u003cstrong\u003einformation\u003c/strong\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"ex-css\" style=\"width: calc(40% - 24px);\"\u003e\n    \u003cstrong\u003eDéfini dans la CSS\u003c/strong\u003e\u003cbr\u003e\n    Le composant \u003cstrong\u003euser-profile\u003c/strong\u003e a un \u003cem\u003efond vert\u003c/em\u003e. Le sous-composant \u003cstrong\u003eavatar\u003c/strong\u003e est à \u003cem\u003egauche\u003c/em\u003e. Le sous-composant \u003cstrong\u003einformation\u003c/strong\u003e est à \u003cem\u003edroite\u003c/em\u003e. \u003cspan style=\"opacity: 0.66\"\u003eAvec la variation \u003cstrong\u003eas-popup\u003c/strong\u003e le composant est une \u003cem\u003epopup caché\u003c/em\u003e. Avec l'état \u003cstrong\u003eis-opened\u003c/strong\u003e le composant est \u003cem\u003evisible\u003c/em\u003e.\u003c/span\u003e\n\u003c/div\u003e\n\u003chr class=\"invisible\"\u003e\n\n**Exemple HTML-Driven**\n\u003cdiv class=\"ex-css\" style=\"width: calc(60% - 24px);\"\u003e\n    \u003cdiv class=\"ex-data\"\u003eimg \u003cstrong\u003e.img-responsive\u003c/strong\u003e\u003c/div\u003e\n    \u003cdiv class=\"ex-data\"\u003ep \u003cstrong\u003e.lead\u003c/strong\u003e\u003c/div\u003e\n    \u003cdiv class=\"ex-data\"\u003ea \u003cstrong\u003e.btn.btn-default\u003c/strong\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003cdiv class=\"ex-css\" style=\"width: calc(40% - 24px);\"\u003e\n    \u003cstrong\u003eAppliqué sur le HTML,\u003c/strong\u003e\u003cbr\u003e\n    Le patron \u003cstrong\u003eimg-responsive\u003c/strong\u003e rend l'image \u003cem\u003eadaptable à son conteneur\u003c/em\u003e. Le patron \u003cstrong\u003elead\u003c/strong\u003e met \u003cem\u003een avant\u003c/em\u003e le texte. Le patron \u003cstrong\u003ebtn\u003c/strong\u003e transforme le lien en \u003cem\u003ebouton\u003c/em\u003e et le patron \u003cstrong\u003ebtn-default\u003c/strong\u003e lui donne un \u003cem\u003eskin\u003c/em\u003e par défaut.\u003c/span\u003e\n\u003c/div\u003e\n\u003chr class=\"invisible\"\u003e\n\n\n### JavaScript ###\n\nLes JavaScript s'occupent, en partie, de **rendre dynamique** votre site web notamment en permettant les interactions entre l'utilisateur et celui-ci. Les JavaScript doivent, tout comme les feuilles de style être séparés du code HTML faisant office de gabarit. Ils se placent soit avant, soit à la fin du contenu de `\u003cbody\u003e` en fonction de leur nature.\n\n- Les **Avants DOM** (ou Bootstraper), sont les fichiers qui se placent en haut des pages HTML. Ils n'interagissent pas avec le DOM mais évitent le [phénomène de FOUC](https://fr.wikipedia.org/wiki/FOUC). Ils sont peu nombreux et doivent être le plus léger possible car ils bloquent l'affichage de la page. On aura, par exemple, Modernizr, RequireJS, etc. pour les bibliothèque ou Vue.js, Angular, React, etc. pour les frameworks utilisés en mode applications web monopage (injection du DOM côté client sans changement de page). Placer un fichier ici avec les propriétés `defer` ou `async` revient à les placer dans la partie **Après DOM**.\n\n- Les **Après DOM** (ou DOM Ready) :\n  - Les **communs**, ils sont chargés sur chaque page et sont :\n    - Le fichier principaux du site (ou **Common**, ou Main, ou App). Ils représentent l'unique point de démarrage du code qui va tourner dans toute votre page courante et également le code utilisé sur les patrons de conception.\n    - Les bibliothèques externes (ou **Vendor**), comme jQuery, Underscore, axios, etc. qui sont utilisées à travers toutes les pages (possiblement amené depuis des CDN).\n    - Les frameworks externes (ou **MVVM**), comme Vue.js, React, etc. qui sont utilisées à travers toutes les pages pour les [architectures web isomorphiques](https://blog.lesieur.name/modules-ecmascript-natif-sans-commonjs-systemjs-babel-webpack/) (possiblement amené depuis des CDN).\n  - Les **spécifiques**, ils sont chargés uniquement sur des pages dédiées :\n    - Le fichier principal de la page (ou **Specific**), habituellement rattachés à un gabarit. Il est lancé par le Common en fonction du gabarit trouvé.\n    - Les **composants** (ou **Classe** ou **Interface**), habituellement rattachés à un composant HTML. Ils sont lancés par le Specific en fonction des composants trouvés (ou par le Common si l'on se passe des Specifics, notamment pour les petits sites).\n\n\n\n\n\n## Rôle et utilisation du HTML ##\n\n### Les gabarits ###\n\n- Les gabarits de page (ou « layouts » / « templates ») incluent exclusivement des composants. Ils ne doivent jamais inclure directement du contenu. Un gabarit est composé de plusieurs zone d'atterrissage (ou « PlaceHolder »).\n\n- Un même gabarit peut être utilisé avec quelques différences entre deux rendus de page donc, dans ce cas, une variation de classe (ou « Class Variation ») avec `with-*` est utile. Nous verrons ça plus loin.\n\nVoici des exemples de gabarit :\n\n#### Avec un unique zone d'atterissage ####\n\nQui pourra servir de gabarit standard pour toutes pages simples.\n\n```html\n\u003chead\u003e\n    \u003c!-- Common CSS file declaration --\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- Boot JS file (modernizr, require, etc.) --\u003e\n    \u003cdiv class=\"lyt tmpl-\u003cname-of-template\u003e\"\u003e\n        \u003c!-- List of Components --\u003e\n    \u003c/div\u003e\n    \u003c!-- Common JS file declaration --\u003e\n\u003c/body\u003e\n```\n\n*Note : dans ce cas, `tmpl-\u003cname-of-template\u003e` n'est pas requis puisqu'il n'y a qu'une seule zone d’atterrissage pour tout.*\n\n#### Avec de multiples zones d'aterissages ####\n\nQui servira pour les dispositions les plus complexes.\n\n```html\n\u003chead\u003e\n    \u003c!-- Common CSS file declaration --\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- Boot JS file (modernizr, require, etc.) --\u003e\n    \u003cdiv class=\"lyt tmpl-\u003cname-of-template\u003e\"\u003e\n        \u003cdiv class=\"lyt-area for-header\"\u003e\n            \u003c!-- List of Components --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"lyt-area for-overview\"\u003e\n            \u003cdiv class=\"lyt-part for-content\"\u003e\n                \u003c!-- List of Components --\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"lyt-part for-aside\"\u003e\n                \u003c!-- List of Components --\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"lyt-area for-footer\"\u003e\n            \u003c!-- List of Components --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003c!-- Common JS file declaration --\u003e\n\u003c/body\u003e\n```\n\n*Note : dans ce cas, `tmpl-\u003cname-of-template\u003e` est obligatoire pour appliquer du CSS différemment sur chaque zone (`lyt-area` / `lyt-part`) en fonction du Gabarit.*\n\n#### Zones atterrissage multiples avec patron de classe ####\n\nComme par exemple la Grille de Bootstrap.\n\n```html\n\u003chead\u003e\n    \u003c!-- Common CSS file declaration --\u003e\n\u003c/head\u003e\n\u003cbody class=\"\u003cname-of-template\u003e\"\u003e\n    \u003c!-- Boot JS file (modernizr, require, etc.) declaration --\u003e\n    \u003cdiv class=\"container\"\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003c!-- List of Components --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003cdiv class=\"col-xs-12 col-sm-8\"\u003e\n                \u003c!-- List of Components --\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"col-xs-12 col-sm-4\"\u003e\n                \u003c!-- List of Components --\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"row\"\u003e\n            \u003c!-- List of Components --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003c!-- Common JS file declaration --\u003e\n\u003c/body\u003e\n```\n\n*Note : dans ce cas, `class=\"\u003cname-of-template\u003e\"` n'est pas obligatoire pour les CSS mais le sera pour le JavaScript qui doit pouvoir différencier (au besoin) un gabarit d'un autre.*\n\n\n\n### Les composants ###\n\n- Les composants —composés de plusieurs sous-partie (ou « Subcomponent »)— sont inclus dans les zones atterrissage et peuvent eux-même inclure des composants (c'est le cas des composants de type « composant de composant »).\n\n- Les composants incluent des contenus mais n'incluent jamais directement des patrons de conception en dehors de ses zones de contenu.\n\n- Les composants peuvent être incluent plus d'une fois dans de même gabarit et également plus d'une fois dans la même zone d'aterissage.\n\n**Les variations de classe**\n\n- Un composant peut-être utilisé dans différent contexte d'affichage et avec différent comportement, donc, pour chaque alternative, une variation de classe `as-*` est utilisée.\n- Un composant (ou une sous-partie) peuvent avoir différent états, donc, pour chaque état, une variation de classe `is-*` ou `has-*` est utilisée.\n- Parce que un composant peut-être trouvé plus d'une fois dans un même zone atterrissage, une variation de classe `for-*` peut-être utilisée pour différencier les mêmes composants les uns des autres.\n\nNous reparlerons des trois précédents points plus loin.\n\nExemple de composant\n\n```html\n\u003c!-- Specific CSS file declaration --\u003e\n\u003csection class=\"cmpt-\u003cname-of-component\u003e\"\u003e\n    \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--ui\"\u003e\n        \u003ch1\u003e\u003c!-- Contents --\u003e\u003c/h1\u003e\n        \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--image\"\u003e\n            \u003c!-- Contents --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--text\"\u003e\n            \u003c!-- Contents --\u003e\n        \u003c/div\u003e\n        \u003caside class=\"cmpt-\u003cname-of-component\u003e--ads\"\u003e\n            \u003cul class=\"cmpt-\u003cname-of-component\u003e--list\"\u003e\n                \u003cli class=\"cmpt-\u003cname-of-component\u003e--item\"\u003e\n                    \u003c!-- Contents --\u003e\n                \u003c/li\u003e\n                \u003cli class=\"cmpt-\u003cname-of-component\u003e--item\"\u003e\n                    \u003c!-- Contents --\u003e\n                \u003c/li\u003e\n                \u003cli class=\"cmpt-\u003cname-of-component\u003e--item\"\u003e\n                    \u003c!-- Contents --\u003e\n                \u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/aside\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\u003c!-- Specific JS file declaration --\u003e\n```\n\n**Les `--` indique une sous-partie du même composant. Il est possible de créer autant de sous-partie que souhaité.**\n\n*Note : un composant doit avoir au moins deux balises HTML imbriquées pour le représenter afin de pouvoir être totalement habillé avec du CSS de toutes les manières possibles. [Voir ce CodePen](https://codepen.io/Haeresis/pen/bdXymY).*\n\n#### Boucler sur eux même ####\n\nUn composant peut boucler sur lui même afin d'apparaître comme une liste ou de lier son contenu à une liste d'élément en base de donnée. Un `\u003cul\u003e` est grandement recommandé dans ce cas puisque chaque item est censé être identique dans sa structure de composant (mais pas forcément avec un contenu identique).\n\nExemple de composant\n\n```html\n\u003c!-- Specific CSS file declaration --\u003e\n\u003csection class=\"cmpt-\u003cname-of-component\u003e\"\u003e\n    \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--ui\"\u003e\n        \u003cul class=\"cmpt-\u003cname-of-component\u003e--multiple\"\u003e\n            \u003c!-- start loop --\u003e\n            \u003cli class=\"cmpt-\u003cname-of-component\u003e--single\"\u003e\n                \u003ch1\u003e\u003c!-- Contents --\u003e\u003c/h1\u003e\n                \u003c!-- All HTML Here --\u003e\n            \u003c/li\u003e\n            \u003c!-- some items --\u003e\n            \u003cli class=\"cmpt-\u003cname-of-component\u003e--single\"\u003e\n                \u003ch1\u003e\u003c!-- Contents --\u003e\u003c/h1\u003e\n                \u003c!-- All HTML Here --\u003e\n            \u003c/li\u003e\n            \u003c!-- some items --\u003e\n            \u003cli class=\"cmpt-\u003cname-of-component\u003e--single\"\u003e\n                \u003ch1\u003e\u003c!-- Contents --\u003e\u003c/h1\u003e\n                \u003c!-- All HTML Here --\u003e\n            \u003c/li\u003e\n            \u003c!-- end loop --\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\u003c!-- Specific JS file declaration --\u003e\n```\n\n\n\n### Les contenus ###\n\nLes contenus se trouvent uniquement dans les composants, dans les zones de contenu. Seul les patrons de conception (ou « Class Pattern ») doivent être utilisés dans ces parties et documentés pour être également à la disposition des pousseurs de contenu. C'est par exemple le cas de [Bootstrap](http://getbootstrap.com/css/).\n\nIl y a donc cinq zones de contenu dans ce composant\n\n```html\n\u003csection class=\"cmpt-article\"\u003e\n    \u003cdiv class=\"cmpt-article--ui\"\u003e\n        \u003cdiv class=\"cmpt-article--text\"\u003e\n            \u003ch2\u003e\u003c!-- Content A Title --\u003e\u003c/h2\u003e\n            \u003c!-- Contents A Text --\u003e\n            \u003cdiv class=\"cmpt-article--others\"\u003e\n                \u003cul class=\"cmpt-article--others--list\"\u003e\n                    \u003cli class=\"cmpt-article--others--item\"\u003e\n                        \u003c!-- Content B Image --\u003e\n                        \u003cdiv class=\"cmpt-article--others--text\"\u003e\n                            \u003ch2\u003e\u003c!-- Contents B Title --\u003e\u003c/h2\u003e\n                            \u003c!-- Content B Text --\u003e\n                        \u003c/div\u003e\n                    \u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n```\n\nLes contenus sont par exemple :\n\n*Content A Title*\n\n```html\n\u003cspan class=\"text-large reversed\"\u003eI'am the\u003cbr\u003eMain Title\u003c/span\u003e\n```\n\n*Content A Text*\n\n```html\n\u003ch2 class=\"text-center\"\u003eI'am a Subtitle\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\u003c/p\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\u003c/p\u003e\n\u003cul\u003e\n    \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e\n    \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e\n\u003c/ul\u003e\n```\n\n*Content B Image*\n\n```html\n\u003cimg src=\"source.png\" alt=\"I'am the Image Description\" class=\"img-responsive\"\u003e\n```\n\n*Content B Title*\n\n```html\nI'am an other Article\n```\n\n*Content A Text*\n\n```html\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\u003c/p\u003e\n\u003cp\u003e\u003cbutton class=\"btn btn-hugh\"\u003eSee more\u003c/button\u003e\u003c/p\u003e\n```\n\n\n\n### Les variations de classe ###\n\nIl y a beaucoup de prefixe de classe utilisés pour les variations de classe, en voici leur définition.\n\n- `as-*` : défini un comportement alternatif ou un rendu alternatif pour un composant ou une sous-partie de composant. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e as-popup\"` peut signifier que le composant standard `cmpt-\u003cname-of-component\u003e` est affiché cette fois comme une popup. Ainsi en JavaScript, la classe `.as-popup` donne la possibilité d'afficher ou de masquer le composant._\n\n- `with-*` : défini un comportement alternatif ou un rendu alternatif pour un gabarit. _Exemple: `class=\"tmpl-\u003cname-of-template\u003e with-ads\"` peut signifier qu'un background publicitaire peut-être affiché dans cette configuration._\n\n- `is-*` : défini un état alternatif sur un composant ou une sous-partie de composant. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e is-opened\"` peut signifier que le composant `cmpt-\u003cname-of-component\u003e` est actuellement ouvert et visible. Ainsi en JavaScript, l'action du clique sur une zone précise peut enlever la classe `.is-opened` et par conséquent fermer le composant._\n\n- `has-*` : défini un état alternatif sur un composant ou une sous-partie de composant. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e has-more-one-item\"` peut signifier que le composant `cmpt-\u003cname-of-component\u003e` contient au moins deux éléments et qu'il doit s'afficher comme une liste._\n\n- `for-*` : défini un id sur un composant parce que si un composant est utilisé plus d'une fois dans la même zone d'atterrissage, il est important d'avoir une classe différente pour les différencier au besoin. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e for-article\"` peut signifier que le composant est utilisé pour afficher du texte faisant office de contenu principale et `class=\"cmpt-\u003cname-of-component\u003e for-aside\"` peut signifier tout autre chose._\n\n- `to-*` : défini une étape d'attente en début de changement d'état pour gérer une animation. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e to-open\"` peut signifier que `cmpt-\u003cname-of-component\u003e` est en état d'ouverture depuis son état fermé vers son état ouvert et qu'il faut démarrer une augmentation de l'opacité. Quand l'animation est finie, le `is-*` peut-être mis._ [Un exemple ici](http://codepen.io/Haeresis/pen/OyoOEV).\n\n- `from-*` : défini une étape d'attente pour gérer une animation du retour à l'état initial. _Exemple: `class=\"cmpt-\u003cname-of-component\u003e from-open\"` peut signifier que le composant `cmpt-\u003cname-of-component\u003e` va être fermé et qu'il est temps de diminuer l'opacité de l'élément. Quand l'animation est finie, les classes `is-*` et `from-*` sont retirées._ [Un exemple ici](http://codepen.io/Haeresis/pen/OyoOEV).\n\n**Toutes les variations de classe doivent être documentées pour être utilisable par les développeurs back-end.**\n\n\n\n### Lire et comprendre le nommage du DOM ###\n\n- Si vous voyez une classe qui commence par `tmpl-` c'est un nom de gabarit.\n- Si vous voyez une classe qui commence par `cmpt-` c'est un nom de composant.\n- Si vous voyez une classe finissant par `--ui` c'est la partie du composant dédié au contenu utilisateur.\n- Si vous voyez une classe finissant par `--multiple` et `--single` cela concerne un composant répétable.\n- Si vous voyez une classe contenant des `--`, c'est une sous-partie de composant.\n- Si vous voyez une classe avec le préfixe `as-`, c'est un rendu et / ou un comportement alternatif sur un composant par rapport à l'état standard.\n- Si vous voyez une classe avec le préfixe `with-`, c'est un rendu et / ou un comportement alternatif sur un gabarit par rapport à l'état standard.\n- Si vous voyez une classe avec le préfixe `is-`, c'est la description d'un état de composant ou sous-partie de composant alternatif.\n- Si vous voyez une classe avec le préfixe `has-`, c'est la description d'un état de composant ou sous-partie de composant alternatif.\n- Si vous voyez une classe avec le préfixe `for-`, c'est pour un rendu ou comportement spécifique sur une unique version d'un composant.\n- Si vous voyez une classe avec le préfixe `to-`, c'est un état de transition vers un autre état.\n- Si vous voyez une classe avec le préfixe `from-`, c'est un état de transition de retour à l'état initial.\n- Si vous voyez une classe qui commence avec `lyt-`, c'est un patron de conception pour gabarit.\n- Si vous ne voyez aucune des classes listées avant, c'est un patron de conception pour contenu.\n\n\n\n### Choisir la sémantique de vos balise ###\n\nIl n'y au plus qu'un seul `\u003cheader\u003e` et `\u003cfooter\u003e` sous le `\u003cbody\u003e`. Le `\u003ch1\u003e` principale se trouve également dans cette partie. Sous le `\u003cbody\u003e` il y a une hiérarchie de `\u003ch1-h6\u003e` avec un unique `\u003ch1\u003e` jusqu'à ce que vous trouviez une balise :\n\n- `\u003csection\u003e`,\n- `\u003carticle\u003e`,\n- `\u003cnav\u003e` ou\n- `\u003caside\u003e`.\n\nChacune de ces balises arrête la propagation de la hierarchie `\u003ch1-h6\u003e` des balises parentes et commence leur propre hiérarchie de `\u003ch1-h6\u003e` (avec seulement un `\u003ch1\u003e`). Chacune de ces balises peuvent aussi avoir leur propre `\u003cheader\u003e` et `\u003cfooter\u003e`.\n\nDe manière à pouvoir rendre déplaçable et réutilisable chaque composant, nous avons deux manières d'organiser notre structure.\n\n#### Sémantique sur le gabarit ####\n\nIci on place `\u003csection\u003e`, `\u003carticle\u003e`, `\u003cnav\u003e` et `\u003caside\u003e` sur le gabarit dans les aires réservées des zones d'atterrissage. Mais dans ce cas, seuls des composants commençant par des `\u003cdiv\u003e` peuvent être insérés.\n\n**Gabarit**\n\n```html\n\u003cdiv class=\"lyt tmpl-products\"\u003e\n    \u003csection class=\"lyt-area for-overview\"\u003e\n        \u003c!-- One Component Here --\u003e\n    \u003c/section\u003e\n\u003c/div\u003e\n```\n\n**Composant**\n\n```html\n\u003cdiv class=\"cmpt-product\"\u003e\n    \u003cdiv class=\"cmpt-product--ui\"\u003e\n        \u003cheader\u003e\u003c!-- Content Title --\u003e\u003c/header\u003e\n        \u003c!-- Content Text --\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n**Contenus**\n\n```html\n\u003ch1\u003eA product\u003c/h1\u003e\n```\n\n```html\n\u003ch2\u003eSubtitle\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit.\u003c/p\u003e\n```\n\n#### Sémantique dans le composant ####\n\nIci on place `\u003csection\u003e`, `\u003carticle\u003e`, `\u003cnav\u003e` et `\u003caside\u003e` sur le composant. Dans ce cas, un composant ne peut pas être utilisé dans un autre type que celui pour lequel il est destiné.\n\n**Gabarit**\n\n```html\n\u003cdiv class=\"lyt tmpl-products\"\u003e\n    \u003cdiv class=\"area for-overview\"\u003e\n        \u003c!-- Multiple Component Here --\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n**Composant**\n\n```html\n\u003csection class=\"cmpt-product\"\u003e\n    \u003cdiv class=\"cmpt-product--ui\"\u003e\n        \u003cheader\u003e\u003c!-- Content Title --\u003e\u003c/header\u003e\n        \u003c!-- Content Text --\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n```\n\n**Contents**\n\n```html\n\u003ch1\u003eA product\u003c/h1\u003e\n```\n\n```html\n\u003ch2\u003eSubtitle\u003c/h2\u003e\n\u003cp\u003eLorem ipsum dolor sit amet, consectetur adipisicing elit.\u003c/p\u003e\n```\n\n#### Gommer les inconvénient des deux approches ####\n\n[Vous trouverez dans cet article des pistes et une solution exemple pour embarquer le type du composant sur lui-même tout en pouvant en changer en fonction de vos envies](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/#des-composants-r-ellement-d-pla-able-partout).\n\n\n### Comment créer des emails corrects ? ###\n\nPour permettre à vos emails HTML d'être lisible dans la plupard des clients mail, il est nécessaire de ne les réaliser qu'avec du HTML4 et d'utiliser des attributs HTML (voir des balises) à la place des attributs `style`.\n\nN'utiliser pas non plus de `\u003cdiv\u003e` brut utilisez une cascade de `\u003ctable\u003e`, `\u003ctr\u003e`, `\u003ctd\u003e` etc.\n\nPar exemple, n'utilisez pas `\u003cdiv style=\"text-align: center\"\u003e` mais `\u003ccenter\u003e`. Pour créer une version HTML5 de vos emails HTML4 pour le web, vous pouvez les transformer automatiquement avec [NodeAtlas](https://node-atlas.js.org/) par exemple.\n\n\n\n\n\n## Rôle et utilisation du CSS ##\n\n### La spécificité des sélecteurs ###\n\nC'est l'aspect le plus fondamental du fonctionnement CSS et c'est celui qui pause le plus problème. Parce que les règles CSS sont comme des variables globales mutables en JavaScript, car une propriété :\n\n- Peut **être redéfinie**.\n- Il y a un **niveau de spécifité** pour chaque sélecteur (voir [les règles](https://www.w3.org/TR/css3-selectors/#specificity)). En cas de spécificité égale sur deux règles s'appliquant sur le même élément : c'est la place des lignes qui compte.\n- L'**ordre** de la CSS a une importance.\n\n**Exemple**\n\n| Sélecteur                | Spécificité | Description                     |\n|--------------------------|------------:|---------------------------------|\n| `*`                      |   0.0.0.0   | tout                            |\n| `li`                     |   0.0.0.1   | tag                             |\n| `ul li`                  |   0.0.0.2   | tag + tag                       |\n| `li::first-letter`       |   0.0.0.2   | tag + pseudo-element            |\n| `ul li div`              |   0.0.0.3   | tag + tag + tag                 |\n| `.teal`                  |   0.0.1.0   | class .                         |\n| `li:nth-child(1)`        |   0.0.1.1   | pseudo-class . tag              |\n| `ul + *[rel=up] li`      |   0.0.1.2   | tout + attribut . tag + tag     |\n| `li.red.level`           |   0.0.2.1   | class + class . tag             |\n| `ul.blue ol li.blue`     |   0.0.2.3   | class + class . tag + tag + tag |\n| `li.orange.orange.level` |   0.0.3.1   | class + class + class . tag     |\n| `#my-id`                 |   0.1.0.0   | id . .                          |\n| `#my-id.teal`            |   0.1.1.0   | id . class .                    |\n| `#my-id.teal`            |   1.1.0.0   | **inline** . id . .             |\n\n[Voir des exemples live](https://codepen.io/Haeresis/pen/oLzdaR)\n\nEt si le mot clé `!important` est ajouté à la fin de n'importe quelle valeur de propriété elle passe devant toute autre. Soyez prudent en l'utilisant ([voici un cas d'utilisation justifié](https://codepen.io/Haeresis/pen/JYRLgr)).\n\n\nVous pouvez [voir la spécificité des sélecteurs grâce à cet outil](https://specificity.keegan.st/).\n\n\n\n### Deux approches d'utilisation du CSS ###\n\nIl y a deux façons d'appliquer des styles CSS sur du HTML. La manière CSS-Driven ou pilotée par la feuille de style ou la manière HTML-Driven ou pilotée par les classes dans les balises HTML.\n\n**CSS-Driven**\n\nNous avons une structure HTML figée. Nous nommons tous les éléments de notre structure\n\n```html\n\u003csection class=\"cmpt-\u003cname-of-component\u003e\"\u003e\n    \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--ui\"\u003e\n        \u003cdiv class=\"cmpt-\u003cname-of-component\u003e--text\"\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n```\n\npour pouvoir y faire référence depuis la feuille CSS. C'est une approche type BEM.\n\n```css\n.cmpt-\u003cname-of-component\u003e--ui {\n    font-weight: bold;\n}\n```\n\nNous venons d'habiller une partie HTML.\n\n**HTML-Driven**\n\nNous avons une feuille CSS figée. Nous nommons nos règles de manière à créer des patrons de conception (« Class Pattern »)\n\n```css\n.bold {\n    font-weight: bold;\n}\n```\n\nde manière à pouvoir les appliquer comme on le souhaite sur une structure HTML éditable.\n\n```html\n\u003cp class=\"bold\"\u003eLorem ipsum\u003c/p\u003e\n```\n\nNous avons créer le patron de conception `.bold`.\n\n#### Comment appliquer chaque approche ? ####\n\nLe plus important est de ne jamais enfermer les composants HTML dans des « patron emprisonnant » car vous ne pourrez pas l'habiller avec du sens dans un autre contexte.\n\nD'un autre côté, parceque les pousseurs de contenu ne doivent jamais toucher au fichier CSS, il est important de leur créer des patrons de conception pour le contenu. Sachez que via des balises `\u003cstyle\u003e` ou attribut `style` il est tout à fait acceptable qu'un pousseur de contenu altère de l'affichage **dans une zone de contenu**.\n\nPour finir, pour les gabarits de page, les deux approches sont envisageables, cela dépend se si votre système gère plus facilement le changement de gabarit (« Template ») ou le changement de CSS si vous souhaitez utiliser différentes grilles.\n\n\n\n### Less / Stylus vous aide à utiliser Bootstrap ###\n\nVotre meilleur ami pour la maintenance des feuilles CSS et pour garder votre HTML le plus clair possible est [Less](http://lesscss.org/) ou encore **mieux** [Stylus](http://stylus-lang.com/).\n\nIl est possible de gérer les deux avec [NodeAtlas](https://www.npmjs.com/package/node-atlas) avec ces simples `webconfig.json`\n\n```\n{\n    \"enableLess\": true,\n    \"assetsRelativePath\": \"/\"\n}\n```\n\nou\n\n```\n{\n    \"enableStylus\": true,\n    \"assetsRelativePath\": \"/\"\n}\n```\n\nplacés à la racine de votre dossier de site. Et avec la commande CLI `nodeatlas --browse`.\n\n#### Exemple de Less pour les gabarits, composants et contenus ####\n\nDans le but d'habiller le HTML suivant :\n\n```html\n\u003csection class=\"cmpt-follow-me \u003c!-- Variation Class --\u003e\"\u003e\n    \u003cdiv class=\"cmpt-follow-me--ui\"\u003e\n        \u003cdiv class=\"cmpt-follow-me--image\"\u003e\n            \u003c!-- Content Image --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"cmpt-follow-me--text\"\u003e\n            \u003c!-- Content Text --\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n```\n\nvous pourrez utiliser l'implémentation Less suivante dans le fichier `cmpt-follow-me.less` :\n\n```less\n/* Import Bootstrap Class Pattern. */\n@import (reference) 'bootstrap/bootstrap.less';\n\n/* Import your own Class Pattern. */\n@import (reference) 'common.less';\n\n/* Name your Component. */\n@componentName: e('.cmpt-follow-me');\n\n/* Outer Wrapper Design. */\n@{componentName} {\n\n    /* Initial State and properties. */\n    display: none;\n\n    /* ... */\n\n    /* Overload of Class Pattern for this Component. */\n    .arrowed {\n        /* ... */\n        span {\n            /* ... */\n        }\n    }\n\n    .gap {\n        /* ... */\n    }\n\n    /* Opened State. */\n    \u0026.is-opened {\n        display: block;\n    }\n\n    /* Clickable State. */\n    \u0026.is-closable {\n        cursor: pointer;\n    }\n\n    /* ... */\n\n    /* Inner Wrapper Design. */\n    \u0026--ui {\n        /* ... */\n    }\n\n    /* Subcomponent Design. */\n\n    \u0026--image {\n        .make-md-col(4);\n        /* ... */\n    }\n\n    \u0026--text {\n        .make-md-col(8);\n        /* ... */\n    }\n\n    \u0026--close,\n    /* Custom Component Class Pattern usable into Content part. */\n    .close {\n        /* ... */\n    }\n\n    /* Variation of this component. */\n    \u0026.as-v1 {\n        @{componentName}--ui {\n            background-color: #da5daf;\n        }\n        @{componentName}--text {\n            border: 1px solid #85214d;\n        }\n        /* ... */\n    }\n    \u0026.as-v2 {\n        @{componentName}--ui {\n            background-color: #80a837;\n        }\n        @{componentName}--text {\n            border: 1px solid #3e6618;\n        }\n        /* ... */\n    }\n    \u0026.as-v3 {\n        @{componentName}--ui {\n            background-color: #ed9364;\n        }\n        @{componentName}--text {\n            border: 1px solid #d6401c;\n        }\n        /* ... */\n    }\n}\n```\n\net avec ce fichier `common.less` par exemple\n\n```less\n/* Same design on all browser. */\n@import 'helpers/normalize.less';\n\n/* Use icones. */\n@import 'font-awesome/font-awesome-regular.less';\n\n/* Bootstrap Lib. */\n@import (reference) 'bootstrap/bootstrap.less';\n\n/* Font Awesome Lib. */\n@import (reference) 'font-awesome/font-awesome.less';\n\n/* Use more Font. */\n@import (css) 'https://fonts.googleapis.com/css?family=Muli';\n\n/* Just import Bootstrap Class Pattern you needed. */\n.text-center {\n    .text-center;\n}\n.text-left {\n    .text-left;\n}\n.text-right {\n    .text-right;\n}\n.img-responsive {\n    .img-responsive;\n    display: inline-block;\n}\n\n/* Your own Class Pattern for Content. */\n.arrowed {\n    /* ... */\n    span {\n        /* ... */\n    }\n}\n.gap {\n    /* ... */\n}\n\n/* Your Layout Implementation */\n.tmpl-products {\n    .for-overview {\n        .make-sm-col(8);\n    }\n    .for-aside {\n        .make-sm-col(4);\n    }\n}\n\n/* ... */\n```\n\n\n\n### Inclusion par référence ###\n\nPour Less, si vous importez en utilisant `@import (reference)` au lieu de simplement utiliser `@import` vous génèrerez dans le fichier de sortie uniquement le fragment de CSS souhaité en provenance de votre liste de patron de conception. Par exemple avec la bibliothèque Bootsrtap, vous pouvez importer tous les patrons `col-XX-YY` par exemple. [Cela peut grandement alléger vos feuilles CSS](https://blog.lesieur.name/bootstrap-lisibilite-proprete-performance-optimisation-c-est-possible/).\n\n\n\n### La spécificité d'un sélecteur ne doit pas être trop lourde ##\n\nNous imaginerons ici que `@{componentName}` retourne `.cmpt-article`.\n\n#### Sélectionner directement la cible ####\n\nVous devez accéder à un élément par sa classe :\n\n```less\n@{componentName} {\n    \u0026--others--item {\n        /* Apply style */\n    }\n}\n// CSS\n// .cmpt-article--others--item { /* Apply style */ }\n```\n\n#### Sélectionner un seul élément sans classe par sélecteur ####\n\nIl est possible qu'il y ai des éléments sans classes dans les composants ou sous-composants. Il devrait être permis de ne faire référence qu'à un, et un seul élément.\n\nCeci est autorisé\n\n```less\n@{componentName} {\n    \u0026--others--item {\n        a {\n            /* Apply style */\n        }\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .cmpt-article--others--item a { /* Apply style */ }\n// .cmpt-article--others--item span { /* Apply style */ }\n```\n\nmais ceci n'est PAS autorisé...\n\n```less\n@{componentName} {\n    \u0026--others--item {\n        a {\n            /* Apply style */\n            span {\n                /* Apply style */\n            }\n        }\n    }\n}\n// CSS\n// .cmpt-article--others--item a { /* Apply style */ }\n// .cmpt-article--others--item a span { /* Apply style */ } // Too specified selector.\n```\n\nC'est mal. Vous devez ajouter dans ce cas des classes sur vos éléments pour directement pouvoir intéragir avec eux.\n\n```less\n@{componentName} {\n    \u0026--others--item--span {\n        /* Apply style */\n    }\n}\n// CSS\n// .cmpt-article--others--item--span { /* Apply style */ }\n```\n\nou (un élément sans classe autorisé)\n\n```less\n@{componentName} {\n    \u0026--others--item {\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .cmpt-article--others--item--link span { /* Apply style */ }\n```\n\n#### Ajouter des variations de classe pour changer le design ####\n\nVous pouvez améliorer la précision de la sélection en utilisant une variation de classe.\n\nSur un composant\n\n```less\n@{componentName} {\n    \u0026.is-opened {\n        /* Apply style */\n    }\n}\n// CSS\n// .cmpt-article.is-opened { /* Apply style */ }\n```\n\nou un sous-composant\n\n```less\n.is-opened {\n    @{componentName}--others--item--link  {\n        span {\n            /* Apply style */\n        }\n    }\n}\n// CSS\n// .is-opened .cmpt-article--others--item--link span { /* Apply style */ }\n```\n\n*Note : le code ci-dessous produit la même sortie que celui au dessus.*\n\n```less\n.is-opened {\n    @{componentName} {\n        \u0026--others\n            \u0026--item\n                \u0026--link {\n                    span {\n                        /* Apply style */\n                    }\n                }\n            }\n        }\n    }\n}\n// CSS\n// .is-opened .cmpt-article--others--item--link span { /* Apply style */ }\n```\n\n*La règle est la suivante : écrire en une seule ligne les composantes du sélecteur si il n'y a aucun sous-élément voisin utilisant le même chemin à référencer, sinon créer un nouveau sous bloque comme ci-dessous*\n\n```less\n.is-opened {\n    @{componentName}--others--item {\n        \u0026--image  {\n            /* A new sibling Subcomponent */\n        }\n        \u0026--link  {\n            span {\n                /* Apply style */\n            }\n        }\n    }\n}\n// CSS\n// .is-opened .cmpt-article--others--item--image { /* A new sibling Subcomponent */ }\n// .is-opened .cmpt-article--others--item--link span { /* Apply style */ }\n```\n\n\n\n\n\n## Rôle et utilisation du JS ##\n\nDans le but de produire du code performant et maintenable, vous devriez passer à travers un outil comme JSLint et obtenir une sortie sans erreur. Si vous utilisez Sublim Text, vous pouvez installer [SublimeLinter-contrib-jslint](https://github.com/devdoc/SublimeLinter-jslint) pour éviter toute mauvaise pratique.\n\n\n\n### Règles et patrons ###\n\n*Notez que règles et patrons ci après sont utiles pour une utilisation JavaScript sans bibliothèque ou frameworks. Si vous utilisez par exemple le framework [Vue.js](https://fr.vuejs.org/), il sera alors plus intéressant de tenir compte de ce qui va suivre dans la limite de ce que l'outil offre déjà en plus de [respecter ses conventions](https://fr.vuejs.org/v2/style-guide/)*\n\n#### Éviter la surchauffe de cerveau (Brain Overload) ####\n\nPour commencer, observer autant que possible les règles suivantes :\n\n- Un fichier ne doit pas dépasser les 1000 lignes (commentaires inclus).\n- Une fonction ne doit pas dépasser les 100 lignes (commentaires inclus).\n- La complexité d'une fonction ne doit pas dépasser 10 [Tester la complexité](http://jshint.com/).\n- Il ne doit pas y avoir plus de 3 niveaux de if/else/swich/try/etc. sans qu'on ai recours à une fonction.\n\n#### Déclarer tout ce que vous utilisez dans la page, et son usage ####\n\nDans tous les fichiers JavaScript client, toutes les variables doivent être explicitement déclarée, même si vous savez que l'exécuteur JavaScript connait cette valeur par défaut ou qu'un autre fichier l'a déjà définie. Il est important de savoir ce qui va être utilisé à travers le fichier et de permettre le plus possible de pouvoir vous passer d'un ordre précis dans l'exécution des fichiers.\n\n**Exemple**\n\n```js\n/* jslint browser: true */\n/* global $ */\n\n// Define your usage of global object.\nvar website = website || {},\n\n    // Define your usage of `jQuery window` shortcut for this file.\n    $window = $window || $(window);\n\n// Define your usage of `website.component` namespace.\nwebsite.components = website.components || {};\n```\n\nObservez que seulement un `var` est déclaré au sommet de chaque fonction, pas plus. Si vous définissez vos variables dans le champ lexical globale (« Global Scope »), attachez les à `window` ou définissez les dans le `var` global de votre fichier.\n\nL'espace de nom global `website` va contenir tout le code JavaScript de votre site web. N'hésitez pas à utiliser `app` ou encore `application` si c'est une application web et non pas une simple page.\n\n#### Utiliser des fermetures pour garder le champ lexical global propre ####\n\nLe code ci-dessus est défini dans le champ lexical global. Si vous écrivez du code dans un fichier, n'écrivez jamais directement dans le champ lexical global. Il y a deux manière de garder le champ lexical global propre.\n\n##### Avec une fermeture statique anonyme #####\n\nSi le code n'a pas besoin d'être instancié, faites juste comme ci-après. C'est le cas des contrôlers comme `common.js`.\n\n```js\n// Create a closure to scope all variables or function invisible from global scope.\n;(function () {\n    \"use strict\";\n\n    var iAmAPrivateVariable_ForPublicExpositon = \"\",\n        iAmAPrivateVariable = \"\";\n\n    // No accessible in global scope.\n    iAmAPrivateVariable = \"i am only accessible in this closure\";\n\n    // Accessible to global scope with `website.iAmAPublicVariable`.\n    website.iAmAPublicVariable = iAmAPrivateVariable_ForPublicExpositon;\n}());\n```\n\nou exposer votre variable publique quand vous créer la Closure (ici `website` est publique et `publics` n'est accessible que dans la closure).\n\n```js\n// Pass an alias of `website` named `publics` only in this closure.\n;(function (publics) {\n    \"use strict\";\n\n    var privates = {};\n\n    // Private Example\n    privates.addClassIsLoaded = function (view) {\n        view.classList.add(\"is-loaded\");\n    }\n\n    // Public Example\n    publics.loadComponents = function () {\n        /* See this part later */\n    };\n\n}(website));\n```\n\n*Note : on commence notre fichier avec un `;` pour éviter qu'un précédent fichier minifié n'interprète notre parenthèse comme une demande d'exécution de fonction.*\n\n##### Avec new Class #####\n\nS'il est important que le code puisse être instancié en fonction d'un contexte donné, créer une classe est le mieux. Pour ne pas polluer le champ lexical global, attachez la classe à un espace de nom comme `website.components`.\n\n```js\nwindow.website = window.website || {};\nwebsite.components = website.components || {};\n\n// Create a Class for define JavaScript behavior of `\u003cdiv class=\"lightbox\"\u003e\u003c/div\u003e`.\nwebsite.components.Lightbox = function callee(selector) {\n    \"use strict\";\n\n    // Create private namespace for instanciable function (publics)\n    // and inner function (privates).\n    var publics = this,\n        statics = callee.prototype,\n        privates = {};\n\n    // Count number of instance for Lightbox.\n    statics.nbrOfInstance = (statics.nbrOfInstance) ? statics.nbrOfInstance + 1 : 1;\n    callee.nbrOfInstance = statics.nbrOfInstance;\n\n    // Define the selector by default for the HTML view of this Class.\n    publics.selector = selector || \".information\";\n\n    // Define all stuff to manage lightbox.\n    privates.openLightbox = function () { /* ... */ };\n    privates.moveLightbox = function () { /* ... */ };\n    privates.closeLightbox = function () { /* ... */ };\n\n    // Define a function to launch all mandatory behavior when a HTML view is parsed.\n    publics.init = function () {\n\n        // Set all function you want use to initialization.\n        privates.openLightbox();\n        privates.moveLightbox();\n        privates.closeLightbox();\n    };\n};\nwebsite.components.Lightbox.nbrOfInstance = 0;\n```\n\nEt initialisez tous les `\u003cdiv class=\"lightbox\"\u003e\u003c/div\u003e`\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox()).init();\n```\n\nou initialisez tous les `\u003cdiv class=\"popup\"\u003e\u003c/div\u003e`\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox(\".popup\")).init();\n```\n\nou initialisez `\u003cdiv class=\"ads\"\u003e\u003c/div\u003e`\n\n```js\nvar Lightbox = website.components.Lightbox,\n    lightbox = new Lightbox();\n\nlightbox.selector = \"ads\";\nlightbox.init();\n```\n\nou comptez le nombre d'instance avec\n\n```js\nvar Lightbox = website.components.Lightbox,\n    lightbox = new Lightbox();\n\nLightbox.nbrOfInstance; // `4`\nlightbox.nbrOfInstance; // `4`\n```\n\nou créez une fonction tierce...\n\n```js\n// This code is a focus on `website.loadComponents()` defined above.\npublics.loadComponents = function () {\n    var i, currentComponent, currentViews;\n\n    // Loop on all components\n    for (i in website.components) {\n\n        // Never forgot to use `hasOwnProperty` to not display other thing that personal object key.\n        if (website.components.hasOwnProperty(i)) {\n\n            // Work on current Component.\n            currentComponent = new website.components[i]();\n\n            // Obtain all `\u003cdiv class=\"\u003ccurrentComponent.selector\u003e\"\u003e\u003c/div\u003e`\n            currentViews = document.querySelectorAll(currentComponent.selector + \":not(.is-opened)\");\n            if (currentViews.length \u003e 0) {\n\n                // Initialize Component.\n                allComponentsInstance.push(currentComponent.init());\n\n                // Tag this component as already initialize.\n                [].forEach.call(currentViews, addClassIsLoaded); // see before for \"addClassIsLoaded\" definition.\n            }\n        }\n    }\n};\n```\n\n...pour charger tous les composants que vous avez créé de cette manière :\n\n```\nwebsite.loadComponents();\n```\n\nEt si plutard, vous souhaitez ajouter `\u003cdiv class=\"lightbox\"\u003e\u003c/div\u003e` au DOM par XMLHttpRequest (Ajax), vous serez capable d'appliquer le JavaScript suivant :\n\n```js\nvar Lightbox = website.components.Lightbox;\n(new Lightbox(\".information:not(.is-loaded)\")).init();\n```\n\net de charger dès lors tous les composants (non déjà chargé) avec :\n\n```js\nwebsite.loadComponents();\n```\n\n#### Use Strict ####\n\nLe champ lexical global (Global Scope) est une zone sauvage ou toutes les variables vont entrer en conflit ainsi la moindre chose déclarée dans un champ lexical dédié (fermeture ou « Closure ») est une bonne chose. C'est le but des fonctions anonymes comme :\n\n```js\n(function () {\n    \"use strict\";\n\n    // ...\n}())\n```\n\nmais pourquoi utiliser le « strict mode » avec `\"use strict\";` ?\n\nLes exécuteurs JavaScript acceptent toute sorte de manière d'écrire du JavaScript ainsi que du code qui n'a pas été standardisé, du code déprécié ou du code non optimisé dans le but de supporter du code JavaScript ancien. Pour ne pas permettre à l'exécuteur de faire tourner du vieux code étrange et de lever des exceptions pour aider au développement, il faut ajouter `\"use strict\";` et toutes les variables dans le champ lexical courant (le contexte d'exécution courant) ainsi que les contextes enfants vont lever une exception si le code ne respecte pas les standards. C'est une bonne pratique de nos jours, ne l'oubliez pas pour ne pas exécuter du code démoniaque !\n\n*Note : vous pouvez aussi l'utiliser dans une fonction nommée ou à instancier ainsi que dans le champ lexical global si vous le souhaitez.*\n\n#### Plus de règle JavaScript ####\n\nSi vous respecez ça, c'est déjà pas mal. Pour respecter toutes les règles, suivez ces règles : [Quality JavaScript Rules](http://nemo.sonarqube.org/coding_rules#languages=js)\n\n\n\n### Changement d'état des éléments ###\n\nSi vous souhaitez changer l'état d'un élément, vous pouvez le faire en suivant les étapes suivantes :\n\n#### Standard ####\n\n- Créez une classe `.is-*` avec tout le changement de design associé dans votre fichier CSS (ou Less / Stylus).\n- Ajoutez la classe `is-*` ou retirez la de l'élément en question pour changer son état.\n- Vérifiez l'existance de `is-*` pour savoir dans quel état est actuellement l'élément.\n\n#### Avec animations simples ####\n\nUtiliser deux classes de transitions.\n\n- Utilisez avant la classe `is-*` une classe `to-*` pour démarrer l'animation de transition entre deux états.\n- Utilisez après la classe `is-*` une classe `from-*` s'il existe une transition de retour à l'état précédent.\n- Utilisez les propriétés CSS3 keyframe, animation, transform, etc. pour créer des animations sur des éléments dont les paramètres sont statiques. Utilisez une librairie d'animation si les valeurs sont variables en fonction du contexte.\n\n*Exemple :*\n\n- Trouvez dans cet exemple comment permettre un changement d'état animé : [Change Element State](https://codepen.io/Haeresis/pen/OyoOEV).\n\n#### Avec animations complexes ###\n\nUtilisez six classes de transitions,\n\n*pour la transition entrante :*\n\n- Utilisez avec ou sans la classe `is-*` une classe `*-enter` pour définir l'état avant animation de transition entrante vers l'état modifié.\n- Utilisez une classe `*-enter-to` pour définir l'état après l'animation de transition entrante vers l'état modifié.\n- Utilisez une classe `*-enter-active` pour définir les instructions d'animation de transition entrante de l'état standard vers l'état modifié.\n\n*pour la transition sortante :*\n\n- Utilisez une classe `*-leave` pour définir l'état avant animation de transition sortante vers l'état standard.\n- Utilisez une classe `*-leave-to` et retirez la classe `is-*` (si utilisée) pour définir l'état après l'animation de transition sortante vers l'état standard.\n- Utilisez une classe `*-leave-active` pour définir les instructions d'animation de transition sortante de l'état modifié vers l'état standard.\n\n*Exemple :*\n\n- Trouvez dans cet article toutes les explications sur la mise en place et l'utilisation de ces six classes : [Comprendre et reproduire les animations de transitions Vue.js en CSS et JavaScript](https://blog.lesieur.name/comprendre-et-reproduire-les-animations-de-transitions-vuejs-en-css-et-javascript/).\n\n\n\n### Validation de formulaire ###\n\nPour valider un formulaire il n'est pas nécessaire d'écrire une seule ligne de JavaScript dans la majorité des cas. Utilisez juste ces trois fichiers :\n\n- [jQuery](http://jquery.com/) [//code.jquery.com/jquery-2.1.4.min.js](//code.jquery.com/jquery-2.1.4.min.js) (Utilisez comme une bibliothèque pour wrapper élément Nodes dans le DOM).\n- [jQuery Validation Plugin](http://jqueryvalidation.org/) [//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js](//cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.14.0/jquery.validate.min.js) (Applique différentes règles pré-définies sur les champs souhaités)\n- [jQuery Validation Unobstrusive Plugin](https://www.nuget.org/packages/jQuery.Validation.Unobtrusive/) [//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js](//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js) (Applique automatiquement les règles en ciblant les éléments avec l'attribut `data-*`).\n\n*Note: ce couple de fichier fonctionne ensemble mais si vous utilisez la dernière version pour l'un, en cas de problème, utilisez la dernière version pour les deux autres.*\n\nVous trouverez ici un cas d'usage complet de l'utilisation de chaque champ : [Exemple d'utilisation avec chaque champ](http://codepen.io/Haeresis/pen/AzJgF/)\n\nEt si un champ est injecté plus tard dans le DOM, **après** l'inclusion du fichier unobstrusive, utilisez `$.validator.unobtrusive.parse(\u003cselectorForm\u003e);` pour faire fonctionner les nouveaux formulaires/champs avec unobstrusive.\n\nSi une validation est plus complexe, vous pouvez trouver [la documentation de jQuery Validate ici](http://jqueryvalidation.org/documentation/) ou vous tourner vers un lieur de valeur réactive comme [Vue.js](https://fr.vuejs.org/).\n\n\n\n### Étendre une classe ###\n\nQuand vous souhaitez étendre une classe depuis une autre (héritage), vous devez en plus d'étendre la classe, bien penser a étendre les fonctions de son prototype. Si une classe doit hériter de plusieurs classe, alors ce que vous souhaitez est une interface (voir plus loin).\n\nQuand votre classe est un model pour une vue HTML, ajoutez la dans `website.components` mais si c'est purement une classe de model de donnée, ajoutez là dans `website.models`.\n\nEssayons donc d'étendre cette classe par celle-ci :\n\n**Class Person**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function (firstname, lastname) {\n    this.firstname = firstname || \"No firstname\";\n    this.lastname = lastname || \"No lastname\";\n};\nwebsite.models.Person.prototype.age = \"No age\";\n```\n\n**Class User**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.User = function (id, password, firstname, lastname) {\n    website.models.Person.call(this, firstname, lastname);\n\n    this.id = id;\n    this.password = password;\n};\nwebsite.models.User.prototype = Object.create(website.models.Person.prototype);\nwebsite.models.User.prototype.constructor = website.models.User;\n```\n\n**Contrôleur**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var user = new website.models.User(\"Haeresis\", \"myPassword\");\n    user.age = 18;\n\n    user.id; // \"Haeresis\"\n    user.password; // \"myPassword\"\n    user.firstname; // \"No firstname\"\n    user.lastname; // \"No lastname\"\n    user.age; // 18\n}());\n```\n\n\n\n### Implementer un mixin ###\n\nQuand une fonction est utilisable par plus d'une fonction anonyme, n'hésitez pas à la placer dans l'espace de nom `website` comme `loadComponents` dans l'exemple précédent.\n\n\nMais quand une fonction est partagée par plus d'une classe, vous pouvez créer cette fonction dans des interfaces ou mixins et l'implémenter dans les différentes classes. Un mixin est comme une classe mais son usage est uniquement d'étendre une classe, jamais d'être instanciée elle-même.\n\nAinsi nous pouvons implémenter ces deux mixins dans cette classe.\n\n**Interface Age**\n\n```js\n/* jslint browser: true */\n\nvar website = window.website || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.mixins.Age = function () {\n    this.age = \"18\";\n};\n```\n\n**Interface Firstname**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.mixins.Firstname = function () {\n    this.firstname = \"Bruno\";\n};\n```\n\n**Classe Person**\n\n```js\n/* jslint browser: true */\n\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\nwebsite.mixins = website.mixins || {};\n\nwebsite.classes.Person = function () {\n    website.mixins.Firstname.call(this);\n    website.mixins.Age.call(this);\n\n    var publics = this;\n\n    publics.lastname = \"Lesieur\";\n};\n```\n\n*Note : si un même nom de propriété ou de fonction existe entre deux interfaces, c'est la dernière interface chargée qui remporte le conflit !*\n\n**Contrôleur**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var person = new website.models.Person();\n\n    person.lastname; // \"Lesieur\"\n    person.firstname; // \"Bruno\"\n    person.age; // 18\n}());\n```\n\n\n\n### Travailler sans espace de nom ###\n\nSi nous attachons tout dans le namespace `website` c'est pour ne pas entrer en conflit avec des classes déjà existantes. Le patron pour éviter les conflits est d'exposer une méthode `noConflict()` dans la classe directement définie dans la portée lexicale `global`.\n\nVoir plus bas :\n\n```js\n;(function (factory) {\n    var initialClass = window.MyClass,\n        api = window.MyClass = factory;\n    api.noConflict = function () {\n        window.MyClass = initialClass;\n        return api;\n    };\n}(function () {\n    // Standard definition of class here.\n}));\n```\n\net si la classe globale `MyClass` existe déjà, utilisez un nouveau nom de classe avec la méthode `noConflict()` pour restaurer l'objet `MyClass` d'origine.\n\n```js\nvar MyClass2 = MyClass.noConflict();\n```\n\n\n\n### Classe pour environnement multiple ###\n\nDans le but de permettre à la classe `MyClass` de fonctionner aussi bien avec Vanilla JS, un loader de module JS ou Node.js, créez une `factory` comme ci-après.\n\n```js\n;(function (root, factory) {\n\u0009var root.MyClass = factory;\n    if (typeof define === \"function\" \u0026\u0026 define.amd) {\n        define(function () {\n            return factory;\n        });\n    }\n    if (typeof module === \"object\" \u0026\u0026 module.exports) {\n        module.exports = factory;\n    }\n}(this, function () {\n    // Normal definition of class here.\n}));\n```\n\n\n\n### Autres comportements ###\n\n#### Accesseurs et mutateurs ####\n\nLe patron d'accession et de mutation vous permettent d'effectuer des actions avant le renvoi d'une valeur ou l'affectation d'une valeur.\n\n**Classe**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function (firstname, lastname) {\n    var publics = this,\n        privates = {};\n\n    privates.firstname = (firstname) ? publics.firstname(firstname) : \"No firstname\";\n    privates.lastname = (lastname) ? publics.lastname(lastname) : \"No lastname\";\n\n    Object.defineProperty(publics, 'firstname', {\n        get: function () {\n            // Do what you want before getter\n            return privates.firstname;\n        },\n        set: function (firstname) {\n            // Do what you want before setter\n            privates.firstname = firstname;\n            // Do what you want after setter\n        }\n    });\n\n    Object.defineProperty(publics, 'lastname', {\n        get: function () {\n            // Do what you want before getter\n            return privates.lastname;\n        },\n        set: function (lastname) {\n            // Do what you want before setter\n            privates.lastname = lastname;\n            // Do what you want after setter\n        }\n    });\n};\n```\n\n**Contrôleur**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var person = new website.models.Person();\n\n    person.firstname = \"Bruno\";\n    person.lastname = \"Lesieur\";\n\n    console.log(person.firstname); // \"Bruno\"\n    console.log(person.lastname); // \"Lesieur\"\n}());\n```\n\n#### Chainage ####\n\nUn patron de chaînage (populaire en jQuery par exemple), consiste à fournir une référence aux propriétés privées d'une classe instanciée depuis l’extérieur. La méthode utilisée renvoi la valeur souhaitée en tant qu'accesseur et permet de la modifier en tant que mutateur. En tant que mutateur, l'objet alors retourné n'est pas la valeur mais l'objet instancié pour permettre « le chaînage ».\n\n**Classe**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function (firstname, lastname) {\n    var publics = this,\n        privates = {};\n\n    privates.firstname = (firstname) ? publics.firstname(firstname) : \"No firstname\";\n    privates.lastname = (lastname) ? publics.lastname(lastname) : \"No lastname\";\n\n    publics.firstname = function (firstname) {\n        if (typeof firstname === \"undefined\") {\n            // Do what you want before\n            return privates.firstname;\n        } else {\n            // Do what you want before\n            privates.firstname = firstname;\n            // Do what you want after\n            return publics;\n        }\n    };\n\n    publics.lastname = function (lastname) {\n        if (typeof lastname === \"undefined\") {\n            // Do what you want before\n            return privates.lastname;\n        } else {\n            // Do what you want before\n            privates.lastname = lastname;\n            // Do what you want after\n            return publics;\n        }\n    };\n};\n```\n\n**Contrôleur**\n\n```js\nwindow.website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    var person = (new website.models.Person())\n        .firstname(\"Bruno\")\n        .lastname(\"Lesieur\");\n\n    console.log(person.firstname()); // \"Bruno\"\n    console.log(person.lastname()); // \"Lesieur\"\n}());\n```\n\n#### Forcer le contexte d'exécution ####\n\nVous pouvez forcer une classe a ne jamais permettre un autre contexte d'exécution que le sien d'être utilisé. Cela vous permet de ne pas utiliser le mot clé `new` depuis un appel extérieur.\n\n**Classe**\n\n```js\nvar website = window.website || {};\nwebsite.models = website.models || {};\n\nwebsite.models.Person = function callee(firstname, lastname) {\n    if (!(this instanceof callee)) {\n        return new callee();\n    }\n\n    this.firstname = firstname || \"No firstname\";\n    this.lastname = lastname || \"No lastname\";\n};\n```\n\n**Contrôleur**\n\n```js\nvar website = window.website || {};\nwebsite.models = website.models || {};\n\n(function () {\n    (new website.models.Person() instanceof website.models.Person); // true\n    (website.models.Person() instanceof website.models.Person); // true\n}());\n```\n\n\n### Gérer les erreurs ###\n\nIl y a 3 manières de proprement lever les erreurs, pour un code synchrone, un code asynchrone ou un événement : [voir par ici](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/).\n\n\n\n### Documentation ###\n\nDe manière à documenter votre code, utilisez le [JSDoc npm CLI](https://www.npmjs.com/package/jsdoc). Vous trouverez tout [ce qu'il vous faut pour la documentation ici](http://usejsdoc.org/).\n\n- [Un exemple avec ce faux site Munchkin](https://www.lesieur.name/doc-atlas/) et [son code source](https://github.com/Haeresis/TestCaseAtlas).\n\nPar exemple la page « [Home](https://www.lesieur.name/doc-atlas/homepage.html) » possède le composant « [Hero](https://www.lesieur.name/doc-atlas/components/hero.html) » qui est documenté [pour le CSS](https://www.lesieur.name/doc-atlas/documentation/design/hero.html) et [pour le JS](https://www.lesieur.name/doc-atlas/documentation/behaviors/module-munchkin-ws.ui.Hero.html).","dates":{"published":{"$date":"2018-02-24T18:31:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"article ul ul {\n    margin-top: 0;\n    margin-bottom: 16px;\n}\n.invisible {\n    clear: left;\n    height: 0;\n    border: 0;\n}\n.ex-css {\n    float: left;\n    width: calc(100% - 24px);\n    margin: 0 6px 6px; padding: 0 6px;\n}\n.ex-subcomponent,\n.ex-layout,\n.ex-sublayout,\n.ex-component {\n    position: relative;\n    -webkit-box-sizing: border-box;\n       -moz-box-sizing: border-box;\n            box-sizing: border-box;\n    float: left;\n    width: calc(100% - 24px);\n    -webkit-hyphens: auto;\n       -moz-hyphens: auto;\n        -ms-hyphens: auto;\n            hyphens: auto;\n    overflow: hidden;\n}\n.ex-subcomponent:after,\n.ex-layout:after,\n.ex-sublayout:after,\n.ex-component:after {\n    -webkit-hyphens: auto;\n       -moz-hyphens: auto;\n        -ms-hyphens: auto;\n            hyphens: auto;\n    overflow: hidden;\n}\n\n.ex-layout { z-index: 2; margin: 12px; padding: 11px; border: 1px solid #98C379; position: relative; }\n.ex-layout:before { position: absolute; top: 0; left: 4px; content: \"Gabarit\"; color: #98C379; }\n\n.ex-sublayout { z-index: 2; margin: -12px; padding: 11px; border: 1px dashed #98C379; position: relative; width: calc(100% + 24px); }\n.ex-sublayout:before { position: absolute; top: 0; right: 4px; content: \"Sous-Gabarit\"; color: #98C379; }\n\n.ex-component { z-index: 1; margin: 12px; padding: 11px; border: 1px solid #E06C75; position: relative; }\n.ex-component:before { position: absolute; top: 0; left: 4px; content: \"Composant\"; color: #E06C75; }\n\n.ex-subcomponent { z-index: 3; margin: -12px; padding: 11px; border: 1px dashed #E06C75; position: relative; width: calc(100% + 24px); }\n.ex-subcomponent:before { position: absolute; top: 0; right: 4px; content: \"Sous-Composant\"; color: #E06C75; }\n\n.ex-data { z-index: 3; margin: 12px; padding: 11px; border: 1px solid #ABB2BF; position: relative; }\n.ex-data:before { position: absolute; top: 0; left: 4px; content: \"Contenu\"; color: #ABB2BF; }\n\n.article table {\n  border-collapse: collapse;\n  width: 100%;\n}\n.article th,\n.article td {\n    border: solid 1px #ccc;\n    padding: 4px;\n}\n.two tr :first-child {\n    position: relative;\n}\n.three tr :nth-child(2) {\n    position: relative;\n}\n.article tr .opssec {\n    position: relative;\n    z-index: 2;\n}\n.article tr .bar {\n    position: absolute;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #ddd;\n}\n.article th:empty {\n    visibility: hidden;\n}\n.article img {\n    max-width: 100%;\n}","title":"Séparations des rôles du HTML / CSS / JavaScript et mise en application","urn":"conventions-html-css-js-et-architecture-front-end","description":"Des conventions d'architecture d'un site web orienté composant pour la partie cliente, peu importe la technologie d'implémentation finale.","image":"http://vdoit.in/wp-content/uploads/2016/09/vDoIT_html-css-logo1.jpg"}
{"_id":{"$oid":"56c4274bd1b7fe136fc2005b"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"54f042102ae5a068f260dae2"},{"$oid":"56c4ad05675345bb2d63fcec"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48ce"},{"$oid":"5310456355dfd5f7698d48bd"}],"content":"AngularJS est un régale pour toute création d'Application Web de petite et moyenne taille. J'entends par là, des ensembles d'interfaces web ou l'utilisateur est sollicité à participer au remplissage de contenu par l'intermédiaire de champs, listes, boutons, etc.\n\n\u003cdiv style=\"text-align: center;\"\u003e\u003cimg width=\"383\" height=\"108\" src=\"media/images/upload/AngularJS-large.png\" alt=\"AngularJS\" style=\"max-width: 100%;\"\u003e\u003c/div\u003e\n\nLe principe est le suivant : sortir le contenu utile du HTML pour le ranger dans un scope JavaScript afin de le manipuler plus aisément et parsemer le HTML de référence à ce scope de contenu. L'avantage est que le contenu a sa propre vie, et n'est plus figé dans le HTML et surtout **toute mise à jour de contenu dans le JavaScript entraîne sa mise à jour dans le HTML**, bien pratique.\n\nLe revers de la médaille est que la source HTML mangée par les moteurs de recherche pour le référencement ne ressemble plus qu'à un ensemble de variables, et les balises et attributs HTML rencontrés font pâlir n'importe quel validateur W3C.\n\nC'est parti pour un tutoriel vous expliquant comment contenter le W3C pour pouvoir correctement implémenter vos recommandations SEO avec AngularJS.\n\n\n\n\n\n## AngularJS pour du contenu interactif ##\n\nConstruire son site web intégralement avec AngularJS, alors que son but est de présenter du contenu au visiteur et aux moteurs de recherche est le meilleur moyen de faire un magnifique site introuvable.\n\nCependant, parsemer un site web de divers mécanismes apportés par la bibliothèque AngularJS sur les formulaires ou le contenu extensible est un jeu d'enfant et n'entrave en rien un bon référencement et de bonnes pratiques HTML, à condition de respecter les guidelines que va vous fournir cet article.\n\n\n\n\n\n## Les `ng-*` deviennent des `data-ng-*` ##\n\nPartons d'un pattern extrêmement simple :\n\n**HTML**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003ctitle\u003eAngular pour le W3C et le SEO\u003c/title\u003e\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- AngularJS, applique toi ! --\u003e\n    \u003cdiv ng-app=\"\"\u003e\n        \u003cp\u003e\n            Écrivez dans ce champ :\u003cbr\u003e\n            \u003c!-- Choisi ton contenu dans `content` --\u003e\n            \u003cinput type=\"text\" ng-model=\"content\"\u003e\u003cbr\u003e\n            Résultat : {{ content }}\n        \u003c/p\u003e\n    \u003c/div\u003e\n    \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\n**Démo**\n\n\u003cdiv data-ng-app=\"\" class=\"demo\"\u003e\n    \u003cp\u003e\n        Écrivez dans ce champ :\u003cbr\u003e\n        \u003cinput type=\"text\" data-ng-model=\"content\"\u003e\u003cbr\u003e\n        Résultat : {{ content }}\n    \u003c/p\u003e\n\u003c/div\u003e\n\n\u003e *`Non`* **Ce qui ne va pas**\n\u003e \n\u003e La voix du W3C ne se fait pas prier et vous recevrez les remontrances suivantes :\n- Error: Attribute `ng-app` not allowed on element `div` at this point.\n- Error: Attribute `ng-model` not allowed on element `input` at this point.\n\u003e \n\u003e car effectivement il n'est pas possible d'inventer ses propres attributs en HTML5 à moins de les préfixer par `data-`.\n\n\u003e **`Oui`** **Ce qu'il faut faire**\n\u003e \n\u003e Pour régler ce point, préfixez tous les attributs de AngularJS avec `data-` ce qui nous donne :\n\u003e \n\u003e ```\n\u003e \u003cdiv data-ng-app=\"\"\u003e\n\u003e     \u003cp\u003e\n\u003e         Écrivez dans ce champ :\u003cbr\u003e\n\u003e         \u003cinput type=\"text\" data-ng-model=\"content\"\u003e\u003cbr\u003e\n\u003e         Résultat : {{ content }}\n\u003e     \u003c/p\u003e\n\u003e \u003c/div\u003e\n\u003e ```\n\n\n\n\n\n## Utilisez `data-ng-bind` plutôt que `{{ }}` ##\n\nImaginons ce texte qui est massacré pour les moteurs de recherche.\n\n```\n\u003c!-- ... --\u003e\n\u003c!-- Appelons par défaut notre personnage John Doe --\u003e\n\u003cdiv data-ng-app=\"\" data-init=\"name='John Doe'\"\u003e\n   \u003ch1\u003eL'histoire dont « qui vous voulez » est le zéro\u003c/h1\u003e\n   \u003cp\u003e\n       Quel nom pour l'histoire ?\u003cbr\u003e\n       \u003c!-- Renommez John ! --\u003e\n       \u003cinput type=\"text\" data-ng-model=\"name\"\u003e\n   \u003c/p\u003e\n   \u003c!-- Pas de nom, pas d'histoire ! --\u003e\n   \u003cp data-ng-show=\"name\"\u003e\n       Voici l'histoire de {{ name }}. {{ name }} était amoureux d'une princesse,\n       mais n'était pas prince.\n       {{ name }} mourru très vieux sans jamais avoir épousé sa princesse\n       —{{ name }} n'ayant effectivement pas réussi à se faire adopter par un noble—.\n   \u003c/p\u003e\n\u003c/div\u003e\n\u003c!-- ... --\u003e\n```\n\n**Démo**\n\n\u003cdiv id=\"app2\" data-ng-app=\"example2\" data-ng-controller=\"controller2\" class=\"demo\"\u003e\n   \u003cp\u003eL'histoire dont « qui vous voulez » est le zéro\u003c/p\u003e\n   \u003cp\u003e\n       Quel nom pour l'histoire ?\u003cbr\u003e\n       \u003cinput type=\"text\" data-ng-model=\"name\"\u003e\n   \u003c/p\u003e\n   \u003cp data-ng-show=\"name\"\u003e\n       Voici l'histoire de \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e. \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e était amoureux d'une princesse,\n       mais n'était pas prince.\n       \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e mourru très vieux sans jamais avoir épousé sa princesse\n       —\u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e n'ayant effectivement pas réussi à se faire adopter par un noble—.\n   \u003c/p\u003e\n\u003c/div\u003e\n\n\u003e *`Non`* **Ce qui ne va pas**\n\u003e \n\u003e Ici le soucis est pour les moteurs de recherche. S'ils souhaitent indexer votre histoire, ils n'entendront jamais parler du brave John Doe mais d'un certain `{{ name }}`.\n\n\u003e **`Oui`** **Ce qu'il faut faire**\n\u003e \n\u003e Pour solutionner ce problème il faut tout simplement remplacer `{{ name }}` par `\u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e` ainsi les moteurs de recherche pourront inscrire « la gloire » de John Doe dans l'histoire.\n\n\u003e ```\n\u003e \u003c!-- ... --\u003e\n\u003e \u003cdiv data-ng-app=\"\" data-init=\"name='John Doe'\"\u003e\n\u003e    \u003cp\u003eL'histoire dont « qui vous voulez » est le zéro\u003c/p\u003e\n\u003e    \u003cp\u003e\n\u003e        Quel nom pour l'histoire ?\u003cbr\u003e\n\u003e        \u003cinput type=\"text\" data-ng-model=\"name\"\u003e\n\u003e    \u003c/p\u003e\n\u003e    \u003cp data-ng-show=\"name\"\u003e\n\u003e        Voici l'histoire de \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e. \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e était amoureux d'une princesse,\n\u003e        mais n'était pas prince.\n\u003e        \u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e mourru très vieux sans jamais avoir épousé sa princesse\n\u003e        —\u003cspan data-ng-bind=\"name\"\u003eJohn Doe\u003c/span\u003e n'ayant effectivement pas réussi à se faire adopter par un roi—.\n\u003e    \u003c/p\u003e\n\u003e \u003c/div\u003e\n\u003e \u003c!-- ... --\u003e\n\u003e ```\n\n\u003e Si votre application permettait à quelqu'un de changer le nom et de valider cela côté serveur dans une base de donnée, il verrait son changement en temps réel, mais les moteurs de recherche en affichant la page à partir de cet instant pourrait indexer le nouveau nom pour l'histoire.\n\n\n\n\n\n## Des Directives par attributs au lieu de balises ##\n\nIl est possible grâce à AngularJS de créer ses propres directives comme dans cet exemple :\n\nHTML\n\n```\n\u003cdiv data-ng-app=\"new-directive\"\u003e\n    \u003cunknown-markup-directive\u003e\u003c/unknown-markup-directive\u003e\n\u003c/div\u003e\n```\n\nJS\n\n```\nangular.module(\"new-directive\", []).directive(\"unknownMarkupDirective\", function() {\n    return {\n        template : \"\u003cp\u003eCeci a été créé par une Directive !\u003c/p\u003e\"\n    };\n});\n```\n\n**Démo**\n\n\u003cdiv id=\"app4\" data-ng-app=\"example4\" class=\"demo\"\u003e\n    \u003cdiv data-new-directive\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003e *`Non`* **Ce qui ne va pas**\n\u003e \n\u003e Le problème ici c'est que le code suivant `\u003cunknown-markup-directive\u003e\u003c/unknown-markup-directive\u003e` ne passe pas la validation car il n'est pas permis en HTML d'inventer ses propres balises. Cependant, l'utilisation de directives étant fort pratique il est intéressant de savoir qu'il est également possible de les utiliser en tant que nom d'attribut ou nom de classe.\n\n\u003e **`Oui`** **Ce qu'il faut faire**\n\u003e \n\u003e Aussi pour résoudre notre problème précédent, il suffit de faire comme suit :\n\u003e \n\u003e HTML\n\u003e \n\u003e ```\n\u003e \u003cdiv data-ng-app=\"new-directive\"\u003e\n\u003e     \u003cdiv data-new-directive\u003e\u003c/div\u003e\n\u003e \u003c/div\u003e\n\u003e ```\n\u003e \n\u003e JS\n\u003e \n\u003e ```\n\u003e angular.module(\"new-directive\", []).directive(\"newDirective\", function() {\n\u003e     return {\n\u003e         /* On active l'utilisation de la directive avec un attribut ! */\n\u003e         restrict : \"A\",\n\u003e         template : \"\u003cp\u003eCeci a été créé par une Directive !\u003c/p\u003e\"\n\u003e     };\n\u003e });\n\u003e ```\n\n\n\n\n\n## Initialiser le Scope depuis une source indexable ##\n\nQuand vous mettez en marche une application AngularJS avec un fichier JavaScript pour initialiser le `$scope` ou à travers `data-ng-init`, les informations sont bien attachées au couple Vue-Modèle (HTML-JS) mais rien n'est indexable par les moteurs de recherche. Voyez plutôt.\n\nHTML\n\n```\n\u003cdiv data-ng-app=\"pokemon\" data-ng-controller=\"popular\"\u003e\n    \u003cp\u003ePokemons Populaires\u003c/p\u003e\n    \u003cul\u003e\n        \u003cli data-ng-repeat=\"pokemon in popularPokemons\"\u003e\n            {{ pokemon.name }} est populaire.\n            \u003cspan data-ng-if=\"pokemon.cover\"\u003e\n                \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n            \u003c/span\u003e\n            \u003cspan data-ng-if=\"!pokemon.cover\"\u003e\n                Il n'est pas sur une pochette de jeu.\n            \u003c/span\u003e -\n            \u003ca href=\"javascript:;\" data-ng-click=\"remove($index)\"\u003eSupprimer\u003c/a\u003e\n        \u003c/li\u003e\n    \u003c/ul\u003e\n    \u003cform data-ng-init=\"addPokemon={ cover: 'false' }\"\u003e\n        \u003cstrong\u003eVous en connaissez un autre ?\u003c/strong\u003e\u003cbr\u003e\n        Nom : \u003cinput type=\"text\" data-ng-model=\"addPokemon.name\"\u003e\u003cbr\u003e\n        \u003cselect data-ng-model=\"addPokemon.cover\"\u003e\n            \u003coption value=\"false\"\u003eIl n'est pas sur une pochette de jeu.\u003c/option\u003e\n            \u003coption value=\"true\"\u003eIl est sur une pochette de jeu.\u003c/option\u003e\n        \u003c/select\u003e\n        \u003cbutton data-ng-click=\"add()\" data-ng-disabled=\"!addPokemon.name\"\u003eAjouter\u003c/button\u003e\n    \u003c/form\u003e\n\u003c/div\u003e\n```\n\nJS\n\n```\nangular.module(\"pokemon\", []).controller(\"popular\", function($scope) {\n    $scope.popularPokemons = [\n        { name: \"Pikachu\", cover: true },\n        { name: \"Bulbizarre\", cover: false },\n        { name: \"Carapuce\", cover: false },\n        { name: \"Dracaufeu\", cover: true },\n        { name: \"Mewtwo\", cover: false },\n    ];\n    $scope.add = function () {\n        $scope.addPokemon.cover = ($scope.addPokemon.cover === \"true\");\n        $scope.popularPokemons.push($scope.addPokemon);\n        $scope.addPokemon = { cover: \"false\" };\n    }\n    $scope.remove = function (pos) {\n        $scope.popularPokemons.splice(pos, 1);\n    }\n});\n```\n\n**Démo**\n\n\u003cdiv id=\"app3\" data-ng-app=\"example3\" data-ng-controller=\"controller3\" class=\"demo\"\u003e\n    \u003cp\u003ePokemons Populaires\u003c/p\u003e\n    \u003cul class=\"popular-pokemon-list\"\u003e\n        \u003cli data-ng-if=\"false\"\u003e\n            \u003cspan class=\"pokemon\"\u003ePikachu\u003c/span\u003e est populaire.\n            \u003cspan class=\"cover\"\u003e\n                \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n            \u003c/span\u003e\n        \u003c/li\u003e\n        \u003cli data-ng-if=\"false\"\u003e\n            \u003cspan class=\"pokemon\"\u003eBulbizarre\u003c/span\u003e est populaire.\n            \u003cspan\u003eIl n'est pas sur une pochette de jeu.\u003c/span\u003e\n        \u003c/li\u003e\n        \u003cli data-ng-if=\"false\"\u003e\n            \u003cspan class=\"pokemon\"\u003eCarapuce\u003c/span\u003e est populaire.\n            \u003cspan\u003e Il n'est pas sur une pochette de jeu.\u003c/span\u003e\n        \u003c/li\u003e\n        \u003cli data-ng-if=\"false\"\u003e\n            \u003cspan class=\"pokemon\"\u003eDracaufeu\u003c/span\u003e est populaire.\n            \u003cspan class=\"cover\"\u003e\n                \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n            \u003c/span\u003e\n        \u003c/li\u003e\n        \u003cli data-ng-if=\"false\"\u003e\n            \u003cspan class=\"pokemon\"\u003eMewtwo\u003c/span\u003e est populaire.\n            \u003cspan\u003eIl n'est pas sur une pochette de jeu.\u003c/span\u003e\n        \u003c/li\u003e\n        \u003ctemplate class=\"popular-pokemon-template\"\u003e\n        \u003cli data-ng-repeat=\"pokemon in popularPokemons\"\u003e\n            {{ pokemon.name }} est populaire.\n            \u003cspan data-ng-if=\"pokemon.cover\"\u003e\n                \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n            \u003c/span\u003e\n            \u003cspan data-ng-if=\"!pokemon.cover\"\u003e\n                Il n'est pas sur une pochette de jeu.\n            \u003c/span\u003e -\n            \u003ca href=\"javascript:;\" data-ng-click=\"remove($index)\"\u003eSupprimer\u003c/a\u003e\n        \u003c/li\u003e\n        \u003c/template\u003e\n    \u003c/ul\u003e\n    \u003cbr\u003e\n    \u003cform data-ng-init=\"addPokemon={ cover: 'false' }\"\u003e\n        \u003cstrong\u003eVous en connaissez un autre ?\u003c/strong\u003e\u003cbr\u003e\n        Nom : \u003cinput type=\"text\" data-ng-model=\"addPokemon.name\"\u003e\n        \u003cselect data-ng-model=\"addPokemon.cover\"\u003e\n            \u003coption value=\"false\"\u003eIl n'est pas sur une pochette de jeu.\u003c/option\u003e\n            \u003coption value=\"true\"\u003eIl est sur une pochette de jeu.\u003c/option\u003e\n        \u003c/select\u003e\u003cbr\u003e\n        \u003cbutton data-ng-click=\"add()\" data-ng-disabled=\"!addPokemon.name\"\u003eAjouter\u003c/button\u003e\n    \u003c/form\u003e\n\u003c/div\u003e\n\n\u003e *`Non`* **Ce qui ne va pas**\n\u003e \n\u003e Le problème ici, c'est que pour un indexeur de contenu, ce morceau de code n'a rien de très appétissant.\n\u003e \n\u003e ```\n\u003e \u003cul\u003e\n\u003e     \u003cli data-ng-repeat=\"pokemon in popularPokemons\"\u003e\n\u003e         {{ pokemon.name }} est populaire.\n\u003e         \u003cspan data-ng-if=\"pokemon.cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e         \u003cspan data-ng-if=\"!pokemon.cover\"\u003e\n\u003e             Il n'est pas sur une pochette de jeu.\n\u003e         \u003c/span\u003e -\n\u003e         \u003ca href=\"javascript:;\" data-ng-click=\"remove($index)\"\u003eSupprimer\u003c/a\u003e\n\u003e     \u003c/li\u003e\n\u003e \u003c/ul\u003e\n\u003e ```\n\u003e \n\u003e - Nous allons donc le cacher aux yeux de l'indexeur en expliquant que c'est un `\u003ctemplate\u003e` avec la balise HTML5 associée.\n\u003e - Nous allons également donner à manger le vrai contenu dans le code HTML source que nous allons cacher à l'utilisateur.\n\u003e - Nous allons alimenter le `$scope` à partir du HTML comme référence et non plus le piéger dans le JavaScript.\n\n\u003e **`Oui`** **Ce qu'il faut faire**\n\u003e \n\u003e Modifions alors le code HTML qui va arriver du serveur et qui sera parfaitement indexable pour ce qui est du contenu et parfaitement ignoré pour ce qui est du template (la balise `\u003ctemplate\u003e`).\n\u003e \n\u003e HTML\n\u003e \n\u003e ```\n\u003e \u003c!-- ... Début identique à la précédente version ... --\u003e\n\u003e \u003cul class=\"popular-pokemon-list\"\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003ePikachu\u003c/span\u003e est populaire.\n\u003e         \u003cspan class=\"cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e     \u003c/li\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003eBulbizarre\u003c/span\u003e est populaire.\n\u003e         Il n'est pas sur une pochette de jeu.\n\u003e     \u003c/li\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003eCarapuce\u003c/span\u003e est populaire.\n\u003e         Il n'est pas sur une pochette de jeu.\n\u003e     \u003c/li\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003eDracaufeu\u003c/span\u003e est populaire.\n\u003e         \u003cspan class=\"cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e     \u003c/li\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003eMewtwo\u003c/span\u003e est populaire.\n\u003e         Il n'est pas sur une pochette de jeu.\n\u003e     \u003c/li\u003e\n\u003e \u003ctemplate class=\"popular-pokemon-template\"\u003e\n\u003e     \u003cli data-ng-repeat=\"pokemon in popularPokemons\"\u003e\n\u003e         {{ pokemon.name }} est populaire.\n\u003e         \u003cspan data-ng-if=\"pokemon.cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e         \u003cspan data-ng-if=\"!pokemon.cover\"\u003e\n\u003e             Il n'est pas sur une pochette de jeu.\n\u003e         \u003c/span\u003e -\n\u003e         \u003ca href=\"javascript:;\" data-ng-click=\"remove($index)\"\u003eSupprimer\u003c/a\u003e\n\u003e     \u003c/li\u003e\n\u003e \u003c/template\u003e\n\u003e \u003c/ul\u003e\n\u003e \u003c!-- ... Fin identique à la précédente version ... --\u003e\n\u003e ```\n\u003e \n\u003e Dans notre exemple précédent, tous les `data-ng-if` vont être retiré du DOM et la version contenu dans `\u003ctemplate\u003e` va être exécuté par AngularJS après avoir été activé à l'aide du code suivant :\n\u003e \n\u003e JS\n\u003e \n\u003e ```\n\u003e /* Récupération du Template */\n\u003e var template = document.getElementsByClassName(\"popular-pokemon-template\")[0],\n\u003e     /* Activation du Template par copie */\n\u003e     content = document.importNode(template.content, true),\n\u003e     /* Zone d'atterrissage du conteru de Template */\n\u003e     list = document.getElementsByClassName(\"popular-pokemon-list\")[0],\n\u003e     pokemons = list.getElementsByTagName(\"li\"),\n\u003e     popularPokemons = [];\n\u003e /* Alimentation du futur `Scope` Angular */\n\u003e Array.prototype.forEach.call(pokemons, function (pokemon) {\n\u003e     popularPokemons.push({\n\u003e         name: pokemon.getElementsByClassName(\"pokemon\")[0].textContent,\n\u003e         cover: (pokemon.getElementsByClassName(\"cover\").length \u003e 0) ? true : false\n\u003e     });\n\u003e });\n\u003e /* Dépôt du Template dans le DOM */\n\u003e list.appendChild(content);\n\u003e ```\n\u003e \n\u003e La variable `popularPokemons` peut ensuite être associée au `Scope` initial de AngularJS.\n\u003e \n\u003e ```\n\u003e /* Module AngularJS */\n\u003e angular.module(\"pokemon\", []).controller(\"popular\", function($scope) {\n\u003e     $scope.popularPokemons = popularPokemons;\n\u003e     /* ... Reste identique à la précédente version ... */\n\u003e });\n\u003e ```\n\u003e \n\u003e **Note :**\n\u003e \n\u003e Libre à vous d'utiliser la techno côté serveur qui vous délivrera le HTML près à être indexé par les moteurs. Voici un exemple en Node.js avec le module [NodeAtlas](https://www.npmjs.com/package/node-atlas) (Utilisant le moteur de template `EJS 2`).\n\u003e \n\u003e ```\n\u003e \u003c!-- ... --\u003e\n\u003e \u003cul class=\"popular-pokemon-list\"\u003e\n\u003e     \u003c% for (var pokemon in pokemons) { %\u003e\n\u003e     \u003cli data-ng-if=\"false\"\u003e\n\u003e         \u003cspan class=\"pokemon\"\u003e\u003c%- pokemon.name %\u003e\u003c/span\u003e est populaire.\n\u003e         \u003c% if (pokemon.cover) { %\u003e\n\u003e         \u003cspan class=\"cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e         \u003c% } else { %\u003e\n\u003e         Il n'est pas sur une pochette de jeu.\n\u003e         \u003c% } %\u003e\n\u003e     \u003c/li\u003e\n\u003e     \u003c% } %\u003e\n\u003e \u003ctemplate class=\"popular-pokemon-template\"\u003e\n\u003e     \u003cli data-ng-repeat=\"pokemon in popularPokemons\"\u003e\n\u003e         {{ pokemon.name }} est populaire.\n\u003e         \u003cspan data-ng-if=\"pokemon.cover\"\u003e\n\u003e             \u003cstrong\u003eIl est sur une pochette de jeu.\u003c/strong\u003e\n\u003e         \u003c/span\u003e\n\u003e         \u003cspan data-ng-if=\"!pokemon.cover\"\u003e\n\u003e             Il n'est pas sur une pochette de jeu.\n\u003e         \u003c/span\u003e -\n\u003e         \u003ca href=\"javascript:;\" data-ng-click=\"remove($index)\"\u003eSupprimer\u003c/a\u003e\n\u003e     \u003c/li\u003e\n\u003e \u003c/template\u003e\n\u003e \u003c/ul\u003e\n\u003e \u003c!-- ... --\u003e\n\u003e ```\n\n\n\n\n\n## Délivrer du contenu derrière chaque URL ##\n\nSi vous utilisez AngularJS pour quelque chose de plus complet que la vérification de formulaire, il est possible que votre site n'est qu'une seule et unique URL d'entrée actuellement.\n\nAinsi à la page `http://www.mon-site.com/` vous faites tourner le code suivant :\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"utf-8\"\u003e\n    \u003ctitle\u003eAngular pour le W3C et le SEO\u003c/title\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- AngularJS, applique toi ! --\u003e\n    \u003cdiv data-ng-app=\"app\" data-ng-controller=\"main\"\u003e\n        \u003cdiv data-main-module\u003e\u003c/div\u003e\n    \u003c/div\u003e\n    \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"\u003e\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nJS\n\n```\nangular.module(\"app\", []).controller(\"main\", function($scope, $location, $sce) {\n    // Liste de vos différentes pages.\n    var content = {\n        \"/\": \"\u003cdiv\u003e\u003c!-- Contenu de Home --\u003e\u003c/div\u003e\",\n        \"/products/\": \"\u003cdiv\u003e\u003c!-- Contenu de Products --\u003e\u003c/div\u003e\",\n        \"/contact/\": \"\u003cdiv\u003e\u003c!-- Contenu de Contacts --\u003e\u003c/div\u003e\",\n    };\n    // Afficher la bonne page en fonction du changement d'url.\n    $scope.$on(\"$locationChangeStart\", function (event, next) {\n        var hash = /\\/#(\\/[a-z]*\\/?)/g.exec(next);\n        $scope.content = $sce.trustAsHtml(content[hash ? hash[1] : \"/\"]);\n    });\n    // Changer artificiellement d'url.\n    $scope.goTo = function (url) {\n        $location.path(url).replace();\n    }\n}).directive(\"mainModule\", function() {\n        return {\n            restrict : \"A\",\n            template : \"\u003cdiv data-ng-bind-html='content'\u003e\u003c/div\u003e\" +\n                       \"\u003cbutton data-ng-click=\\\"goTo('/')\\\"\u003eAccueil\u003c/button\u003e\" +\n                       \"\u003cbutton data-ng-click=\\\"goTo('/products/')\\\"\u003eProduits\u003c/button\u003e\" +\n                       \"\u003cbutton data-ng-click=\\\"goTo('/contact/')\\\"\u003eContactez-nous\u003c/button\u003e\"\n    };\n});\n```\n\net en cliquant sur chaque lien vous allez afficher les urls :\n\n- http://www.mon-site.com/#/\n- http://www.mon-site.com/#/products/\n- http://www.mon-site.com/#/contact/\n\navec pour chacune un contenu différent\n\n**Démo**\n\n\u003cdiv id=\"app5\" data-ng-app=\"example5\" data-ng-controller=\"controller5\" class=\"demo\"\u003e\n    \u003cdiv data-main-module\u003e\u003c/div\u003e\n\u003c/div\u003e\n\n\u003e *`Non`* **Ce qui ne va pas**\n\u003e \n\u003e Vous constaterez en changeant de page via les boutons que vos urls contiennent toutes des `#`. Cela signifie que vous n'avez pas changé de page car tout ce qui suit ce caractère n'est pas interprété par les moteurs de recherche. L'intégralité de votre site aux yeux de Google se résume a une unique page HTML... vide...\n\u003e \n\u003e Nous avons également ajouté nous même du code JavaScript pour lier le changement d'url à l'état de la page, c-à-d que si vous changez à la main l'url de votre bar d'adresse pour une autre page existante celle-ci va s'afficher ce qui vous permet au moins de partager des urls avec `#` avec vos amis et qu'ils puissent arriver tout de même sur la bonne page.\n\u003e \n\u003e Il y a deux choses à faire pour rendre cela SEO friendly.\n\u003e \n\u003e - Il ne faut plus que les adresses contiennent de `#`, mais que ce soit de vrais adresses consultables si je me rends dessus.\n\u003e - Il faut qu'en me rendant à chaque adresse directement, il y ai un code source initial en « response » à la « request » serveur qui puisse être indexé par des moteurs de recherche.\n\n\u003e **`Oui`** **Ce qu'il faut faire**\n\u003e \n\u003e L'unique page précédente devient alors trois pages distinctes :\n\u003e \n\u003e - http://www.mon-site.com/\n\u003e - http://www.mon-site.com/products/\n\u003e - http://www.mon-site.com/contact/\n\u003e \n\u003e avec sur chaque page, au retour « response » du serveur, le contenu dédié à la page.\n\u003e \n\u003e **/**\n\u003e ```html\n\u003e \u003c!DOCTYPE html\u003e\n\u003e \u003chtml\u003e\n\u003e \u003chead\u003e\n\u003e     \u003cmeta charset=\"utf-8\"\u003e\n\u003e     \u003ctitle\u003eAccueil\u003c/title\u003e\n\u003e \u003c/head\u003e\n\u003e \u003cbody\u003e\n\u003e     \u003c!-- AngularJS, applique toi ! --\u003e\n\u003e     \u003cdiv data-ng-app=\"app\" data-ng-controller=\"main\"\u003e\n\u003e         \u003cdiv data-ng-if=\"false\"\u003e\u003c!-- Contenu de Home --\u003e\u003c/div\u003e\n\u003e         \u003cdiv data-main-module\u003e\u003c/div\u003e\n\u003e     \u003c/div\u003e\n\u003e     \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"\u003e\u003c/script\u003e\n\u003e     \u003cscript src=\"app.js\"\u003e\u003c/script\u003e\n\u003e \u003c/body\u003e\n\u003e \u003c/html\u003e\n\u003e ```\n\u003e \n\u003e **/products/**\n\u003e ```html\n\u003e \u003c!DOCTYPE html\u003e\n\u003e \u003chtml\u003e\n\u003e \u003chead\u003e\n\u003e     \u003cmeta charset=\"utf-8\"\u003e\n\u003e     \u003ctitle\u003eNotre Wallpaper\u003c/title\u003e\n\u003e \u003c/head\u003e\n\u003e \u003cbody\u003e\n\u003e     \u003c!-- AngularJS, applique toi ! --\u003e\n\u003e     \u003cdiv data-ng-app=\"app\" data-ng-controller=\"main\"\u003e\n\u003e         \u003cdiv data-ng-if=\"false\"\u003e\u003c!-- Contenu de Products --\u003e\u003c/div\u003e\n\u003e         \u003cdiv data-main-module\u003e\u003c/div\u003e\n\u003e     \u003c/div\u003e\n\u003e     \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"\u003e\u003c/script\u003e\n\u003e     \u003cscript src=\"app.js\"\u003e\u003c/script\u003e\n\u003e \u003c/body\u003e\n\u003e \u003c/html\u003e\n\u003e ```\n\u003e \n\u003e **/contact/**\n\u003e ```html\n\u003e \u003c!DOCTYPE html\u003e\n\u003e \u003chtml\u003e\n\u003e \u003chead\u003e\n\u003e     \u003cmeta charset=\"utf-8\"\u003e\n\u003e     \u003ctitle\u003eContactez-nous\u003c/title\u003e\n\u003e \u003c/head\u003e\n\u003e \u003cbody\u003e\n\u003e     \u003c!-- AngularJS, applique toi ! --\u003e\n\u003e     \u003cdiv data-ng-app=\"app\" data-ng-controller=\"main\"\u003e\n\u003e         \u003cdiv data-ng-if=\"false\"\u003e\u003c!-- Contenu de Contact --\u003e\u003c/div\u003e\n\u003e         \u003cdiv data-main-module\u003e\u003c/div\u003e\n\u003e     \u003c/div\u003e\n\u003e     \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js\"\u003e\u003c/script\u003e\n\u003e     \u003cscript src=\"app.js\"\u003e\u003c/script\u003e\n\u003e \u003c/body\u003e\n\u003e \u003c/html\u003e\n\u003e ```\n\u003e \n\u003e C'est ensuite que le code JavaScript va être analysé et que le `pushState` de AngularJS va être activé pour permettre aux utilisateur de changer l'adresse dynamiquement (sans rechargement de page, c-à-d sans request/response) et de charger les contenus.\n\u003e \n\u003e JS\n\u003e \n\u003e **app.js**\n\u003e \n\u003e ```js\n\u003e angular.module(\"app\", []).config(function($locationProvider) {\n\u003e     $locationProvider.html5Mode(true);\n\u003e }).controller(\"main\", function($scope, $location, $sce) {\n\u003e     // Liste de vos différentes pages.\n\u003e     var content = {\n\u003e         \"/\": \"\u003cdiv\u003e\u003c!-- Contenu de Home --\u003e\u003c/div\u003e\",\n\u003e         \"/products/\": \"\u003cdiv\u003e\u003c!-- Contenu de Products --\u003e\u003c/div\u003e\",\n\u003e         \"/contact/\": \"\u003cdiv\u003e\u003c!-- Contenu de Contacts --\u003e\u003c/div\u003e\",\n\u003e     };\n\u003e     // Changer d'url.\n\u003e     $scope.goTo = function (url) {\n\u003e         $location.path(url).replace();\n\u003e         $scope.content = $sce.trustAsHtml(content[url]);\n\u003e     }\n\u003e     // Charger la bonne page selon l'url\n\u003e     $scope.content = $sce.trustAsHtml(content[$location.url()]);\n\u003e }).directive(\"mainModule\", function() {\n\u003e         return {\n\u003e             restrict : \"A\",\n\u003e             template : \"\u003cdiv data-ng-bind-html='content'\u003e\u003c/div\u003e\" +\n\u003e                        \"\u003cbutton data-ng-click=\\\"goTo('/')\\\"\u003eAccueil\u003c/button\u003e\" +\n\u003e                        \"\u003cbutton data-ng-click=\\\"goTo('/products/')\\\"\u003eProduits\u003c/button\u003e\" +\n\u003e                        \"\u003cbutton data-ng-click=\\\"goTo('/contact/')\\\"\u003eContactez-nous\u003c/button\u003e\"\n\u003e     };\n\u003e });\n\u003e ```\n\u003e \n\u003e **Comment ça marche ?**\n\u003e \n\u003e Quand un moteur de recherche affiche l'une des trois pages, celle-ci est indexé via sont URL avec le contenu déjà présent dessus dans la source de la « response ».\n\u003e \n\u003e Quand un utilisateur affiche l'une des trois pages, son contenu initial est caché et `app.js` fait tourner l'application en chargeant le bon contenu en fonction de l'url. Après quoi, chaque fois que l'utilisateur changera de page, sa page ne se rechargera pas (le code source initial sera toujours celui de la page d'arrivée) mais sa barre d'adresse changera bien et AngularJS mettra le contenu à jour. S'il actualise la page depuis une autre URL après navigation à travers plusieurs page, c'est la nouvelle page que sera chargé depuis la « response » et le cycle recommencera.\n\u003e \n\u003e Ce mécanisme est bien entendu possible avec le routage officiel d'AngularJS avec `$routeProvider` et vous êtes libre d'utiliser la technologie back-end de votre choix pour afficher le bon contenu source derrière chaque URL de votre site en retour de la « response ».\n\u003e \n\u003e *Exemple Live*\n\u003e \n\u003e Sur mon \u003ca href=\"https://www.lesieur.name/\"\u003esite de présentation\u003c/a\u003e réalisé avec [NodeAtlas](https://github.com/Haeresis/NodeAtlas), en arrivant par l'une de ses URL :\n\u003e \n\u003e - https://www.lesieur.name/bienvenue/\n\u003e - https://www.lesieur.name/bepo/\n\u003e - https://www.lesieur.name/a-propos/\n\u003e - Etc.\n\u003e \n\u003e Le code source de la « response » sera uniquement celui de l'onglet ouvert. Tous le contenu des autres onglets sera chargé ultérieurement via des requêtes asynchrones. En changeant d'onglet, l'adresse changera mais pas le code source (la page ne sera pas rechargée, il n'y aura plus de « request / response »). Si vous rechargez la page depuis une autre url que celle d'arrivée, alors une « request / response » sera effectué avec seulement le contenu de cette page, et le reste viendra par contenu asynchrone, etc.\n\n\n\n\n\n## Vos astuces W3C et SEO ? ##\n\nIl doit exister d'autres situations ou de bonnes pratiques permettraient à du code AngularJS d'être parfaitement référencé aussi j'alimenterai cet article avec d'autres exemples dans le futur.\n\nEt vous ? Des méthodes à partager ?","dates":{"published":{"$date":"2016-02-17T15:20:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"function angularProcess() {\n    var example2 = angular.module(\"example2\", []),\n        example3 = angular.module(\"example3\", []),\n        example4 = angular.module(\"example4\", []),\n        example5 = angular.module(\"example5\", []),\n        template = document.getElementsByClassName(\"popular-pokemon-template\")[0],\n        content = document.importNode(template.content, true),\n        list = document.getElementsByClassName(\"popular-pokemon-list\")[0],\n        pokemons = list.getElementsByTagName(\"li\"),\n        popularPokemons = [];\n\n    Array.prototype.forEach.call(pokemons, function (pokemon) {\n        popularPokemons.push({ \n            name: pokemon.getElementsByClassName(\"pokemon\")[0].textContent, \n            cover: (pokemon.getElementsByClassName(\"cover\").length \u003e 0) ? true : false\n        });\n    });\n\n    list.appendChild(content);\n\n    example2.controller(\"controller2\", function($scope) {\n        $scope.name = \"John Doe\";\n    });\n\n    example5.config(function($locationProvider) {\n        //$locationProvider.html5Mode(true);\n    }).controller(\"controller5\", function($scope, $location, $sce) {\n        var content = {\n            \"/\": \"\u003ch2 style=\\\"margin-top: 0\\\"\u003eBienvenue !\u003c/h2\u003e\u003cp\u003eUtilisez les boutons pour naviguer.\u003c/p\u003e\",\n            \"/products/\": \"\u003ch2 style=\\\"margin-top: 0\\\"\u003eNotre Wallpaper\u003ch2\u003e\u003cp style=\\\"margin-top: 0\\\"\u003e\u003cimg style=\\\"max-width: 100%;margin-top: 0\\\" src=\\\"http://blog.haeresis.fr/upload/image/the_moment_by_dzsurnik.jpg\\\" alt=\\\"The Moment\\\"\u003e\u003c/p\u003e\",\n            \"/contact/\": \"\u003ch2 style=\\\"margin-top: 0\\\"\u003eContactez-nous\u003c/h2\u003e\u003cp\u003e\u003cinput type=\\\"text\\\"\u003e\u003c/p\u003e\",\n        };\n        $scope.$on(\"$locationChangeStart\", function (event, next) {\n            var hash = /\\/#(\\/[a-z]*\\/?)/g.exec(next);\n            $scope.content = $sce.trustAsHtml(content[hash ? hash[1] : \"/\"]);\n        });\n        $scope.goTo = function (url) {\n            $location.path(url).replace();\n        }\n    }).directive(\"mainModule\", function() {\n        return {\n            restrict : \"A\",\n            template : \"\u003cdiv data-ng-bind-html='content'\u003e\u003c/div\u003e\" + \n                       \"\u003cbutton data-ng-click=\\\"goTo('/')\\\"\u003eAccueil\u003c/button\u003e\" + \n                       \"\u003cbutton data-ng-click=\\\"goTo('/products/')\\\"\u003eProduits\u003c/button\u003e\" + \n                       \"\u003cbutton data-ng-click=\\\"goTo('/contact/')\\\"\u003eContactez-nous\u003c/button\u003e\"\n        };\n    });\n\n    example4.directive(\"newDirective\", function() {\n        return {\n            restrict : \"A\",\n            template : \"\u003cp\u003eCeci a été créer par une Directive !\u003c/p\u003e\"\n        };\n    });\n\n    example3.controller(\"controller3\", function($scope) {\n        $scope.popularPokemons = [\n            { name: \"Pikachu\", cover: true }, \n            { name: \"Bulbizarre\", cover: false }, \n            { name: \"Carapuce\", cover: false }, \n            { name: \"Dracaufeu\", cover: true }, \n            { name: \"Mewtwo\", cover: false }, \n        ];\n        $scope.add = function () {\n            $scope.addPokemon.cover = ($scope.addPokemon.cover === \"true\");\n            $scope.popularPokemons.push($scope.addPokemon);\n            $scope.addPokemon = { cover: \"false\" };\n        }\n        $scope.remove = function (pos) {\n            $scope.popularPokemons.splice(pos, 1);\n        }\n    });\n\n    angular.bootstrap(document.getElementById(\"app2\"), ['example2']);\n    angular.bootstrap(document.getElementById(\"app3\"), ['example3']);\n    angular.bootstrap(document.getElementById(\"app4\"), ['example4']);\n    angular.bootstrap(document.getElementById(\"app5\"), ['example5']);\n}\n\n(function () {\n    var scr = document.createElement('script');\n    scr.src = \"https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.5.0/angular.js\";\n    document.body.appendChild(scr);\n\n    scr.addEventListener(\"load\", function () {\n        angularProcess();\n    });\n }());","stylesheet":".demo {\n    border: 1px dashed #ccc;\n    padding: 6px;\n}\n.invisible {\n    display: none;\n}\n\narticle input {\n    max-width: 100%;\n}","title":"Utiliser AngularJS en respectant les recommandations W3C et SEO","urn":"utiliser-angularjs-en-respectant-les-recommandations-w3c-et-seo","description":"C'est parti pour un tutoriel vous expliquant comment contenter le W3C pour pouvoir correctement implémenter vos recommandations SEO avec AngularJS.","image":"https://blog.lesieur.name/media/images/upload/AngularJS-large.png"}
{"_id":{"$oid":"56cd70a3d1b7fe136fc2005c"},"__v":0,"cache":{"comment":{"number":0}},"categories":[],"content":"Cet article a pour but de lister les « raccourcis » utilisable dans du JavaScript pour :\n\n- la lecture : comprendre les patterns que vous croiserez et pourquoi ils fonctionnent ainsi.\n- l'écriture : écrire moins pour alléger le poids de vos fichiers, de votre relecture ou encore gagner haut la main les challenge de [CodeFights](https://codefights.com/).\n\n\n\n\n\n## Qu'est ce qu'un « raccourcis » JavaScript ##\n\nIl faut être conscient ici que par « raccourcis » j'entends « la manière utilisant le moins de caractère pour parvenir à un même résultat dans un contexte donné ». Cela implique donc que la mécanique interne des interpréteurs JavaScript sera différente et par conséquent le temps d’exécution également.\n\n**Légende**\n\nTout le long de cette page vous croiserez essentiellement :\n\n\u003e ``` js\n/**\n * Des exemples \n * de *code long*\n * ...\n */\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\n// ...transformé en **code court**.\n```\n\u003e **`Comprendre`**\n\n\u003cp class=\"know-more\"\u003eEt la possibilité d'en savoir plus\u003c/p\u003e\n\n\u003cdiv class=\"explaination\"\u003e\n\u003cp\u003eLe JavaScript est mon language préféré. Et je ne suis probablement pas le seul dans ce cas. C'est vraiment extraordinaire car dans mes jeunes années, c'était le language que je détestais le plus, le PHP semblait tellement plus simple. Après avoir fait un petit tour de C, C++, Java... j'ai fini par aprécier la structure complexe et ordonnée du C#, mais la simplicité du PHP me manquait. Était t-il possible de naviguer entre l'execution d'un code simple comme le PHP au besoin ou de créer des programme complexe et structuré comme en C#, avec le même language et si possible... dans le domaine du web ? Le JavaScript, certainement pas... comment un language de « bidouille » pouvait t-il être la réponse. Mais quelque chose n'allait pas.\u003c/p\u003e\n\n\u003cp\u003eComment jQuery pouvait t-il être aussi extraordinaire en étant écrit en JavaScript ? C'est la question qui m'a ammené là où j'en suis avec le JavaScript aujourd'hui. Avec un petit coup de pouce de Node.js.\u003c/p\u003e\n\n\u003cp\u003eCe qui a été le plus dur ? Comprendre le code des autres développeurs car j'ai rencontré des tas de patterns raccourcis que je ne comprenait pas au premier coup d'oeil et ce n'est qu'à force d'habitude et d'étude que j'ai pu tirer mon épingle du jeu.\u003c/p\u003e\n\n\u003cp\u003eJ'ai décider de compilé ici tout les raccourcis de code que j'ai pu rencontrer et/ou utiliser à ce jour : certain code sont plus « awesome » qu'utile, d'autres demande un certain contexte de variable pour être utilisé aussi c'est a vous de décider si oui ou non il constitue une bonne pratique dans vos équipes mais dès lors vous saurez les comprendre.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Création d'Objet et de Tableau ##\n\nOn commence avec deux raccourcis qui n'en sont pas vraiment et que vous connaissez forcément si vous utilisez l'écriture au format JSON. \n\n\u003e ```js\nvar obj = new Object();\nobj.lastname = \"Lesieur\";\nobj.firstname = \"Bruno\";\nobj[\"birth date\"] = 27;\n// --ou--\nvar arr = new Array();\narr[0] = \"First\";\narr[1] = \"Second\";\narr[3] = \"Fourth\";\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\nvar obj = {\n    lastname: \"Lesieur\",\n    firstname: \"Bruno\",\n    \"birth date\": 27\n}\n// --ou--\nvar arr = [\n    \"First\",\n    \"Second\",,\n    \"Fourth\"\n]\n```\n\u003e **`Rien de plus`**\n\n\n\n\n\n## Création de variables groupées ##\n\nOn continue avec un autre raccourci qui n'en est pas vraiment un mais qui d'une part va vous économiser un nombre de `var` non négligeable et vous permette de ne plus courir après vos variables. \n\n\u003e ```js\nvar c = \"Text\";\n/** … **/\nvar b = false;\n/** … **/\nif (b === false) { … }\nvar a;\nfor (var i = 0;…;…) { … }\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\nvar i = 0,\n    c = \"Text\",\n    b = false,\n    a;\n/** … **/\nif (b === false) { … }\nfor (…;…;…) { … }\n```\n\u003e **`Rien de plus`**\n\n\n\n\n\n## Existence d'une variable ##\n\nCe pattern est un raccourci pour évaluer une variable, dans la majorité des cas, savoir si elle existe ou si elle possède une valeur (Il y a 6 cas spéciaux à connaître dans en savoir plus).\n\n\u003e ```js\nif (iLikeJavaScript == true) { … }\n// ou son contraire\nif (iDontLikeJavaScript != true) { … }\nif (iDontLikeJavaScript == false) { … }\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\nif (iLikeJavaScript) { … }\n// ou son contraire\nif (!iDontLikeJavaScript) { … }\n```\n\u003e **`Comprendre`**\n\n\u003cp class=\"know-more\"\u003eEn savoir plus\u003c/p\u003e\n\n\u003cdiv class=\"explaination\"\u003e\n\u003cp\u003eLe JavaScript est un langage faiblement typé ce qui signifie que\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003echaque variable à un type (string, number, boolean, Object, null, undefined),\u003c/li\u003e \n\u003cli\u003echaque variable est transformée en fonction du contexte dans laquelle elle est analysée en un type équivalent.\u003c/li\u003e \n\u003c/ul\u003e\n\u003cp\u003eDans un contexte de condition, comme dans un `if`, toutes les variables sont converties, le temps de l'analyse, en boolean.\u003c/p\u003e\n\u003cp\u003eSi une variable vaut :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e`undefined` (de type undefined)\u003c/li\u003e \n\u003cli\u003e`null` (de type null)\u003c/li\u003e \n\u003cli\u003e`0` (de type number)\u003c/li\u003e \n\u003cli\u003e`NaN` (de type number)\u003c/li\u003e \n\u003cli\u003e`\"\"` (de type string)\u003c/li\u003e \n\u003cli\u003e`false` (de type boolean)\u003c/li\u003e \n\u003c/ul\u003e\n\u003cp\u003eelle est évaluée à `false`.\u003c/p\u003e\n\u003cp\u003eDans tous les autres cas (`16`, `true`, `{}`, `[]`, `\"test\"`, `{ a: 1 }`, ...) elle est évaluée à `true`.\u003c/p\u003e\n\u003cp\u003ePuisque `true == true`, `false == false`, `false != true`, `true` ou `!false` passe le test alors ce raccourcis est possible.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAttention :\u003c/strong\u003e Ceci n'est pas une équivalence absolue pour `(iLikeJavaScript === true)` (notez les triple égales) qui ne valide la condition uniquement si `iLikeJavaScript` est de type boolean à l'origine uniquement.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Valeur par défaut ##\n\nUtile pour initialiser des Namespaces dans les fichiers où pour initialiser des valeurs par défaut dans les fonctions, l'affectation de valeur par défaut marche comme suit.\n\n\u003e ```js\nif (variable1) {\n   variable2 = variable1;\n} else {\n   variable2 = \"default value\";\n}\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\nvariable2 = variable1 || \"default value\";\n```\n\u003e **`Comprendre`**\n\n\u003cp class=\"know-more\"\u003eEn savoir plus\u003c/p\u003e\n\n\u003cdiv class=\"explaination\"\u003e\n\u003cp\u003eQuand `variable1` utilise l'opérateur `||`, elle est convertie en type `boolean`. Si elle est `true`, alors elle remplit la condition, et le moteur JavaScript s'arrête là et l'affecte à `variable2`. Si elle vaut `false`, l'analyseur continue selon le souhait du `||`. Dans un contexte d'affectation, à la différence d'un contexte de condition, le dernier item de la liste est affecté, même s'il devait retourner `false` ainsi dans le cas suivant `exemple = NaN || \"\" || 0` le `0` est affecté la ou dans un `if` aucun élément n'aurait passé la validation.\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Vérifier la validité ##\n\nUtile pour s'assurer qu'un objet existe bien avant de l'utiliser ou de l'affecter, la vérification marche comme suit.\n\n\u003e ```js\nif (iAmAnything) {\n   iAmAFunction();\n}\n// -- ou --\nif (matrix) {\n    if (matrix[i]) {\n        if (matrix[i][j]) {\n            n = matrix[i][j];\n        }\n    }\n}\n```\n\n\u003chr class=\"invisible\"\u003e\n\n\u003e ```js\n(iAmAnything \u0026\u0026 iAmAFunction)();\n// -- ou --\nn = matrix \u0026\u0026 matrix[i] \u0026\u0026 matrix[i][j];\n```\n\u003e **`Comprendre`**\n\n\u003cp class=\"know-more\"\u003eEn savoir plus\u003c/p\u003e\n\n\u003cdiv class=\"explaination\"\u003e\n\u003cp\u003eQuand `variable1` utilise l'opérateur `||`, elle est convertie en type `boolean`. Si elle est `true`, alors elle remplit la condition, et le moteur JavaScript s'arrête là et l'affecte à `variable2`. Si elle vaut `false`, l'analyseur continue selon le souhait du `||`. Dans un contexte d'affectation, à la différence d'un contexte de condition, le dernier item de la liste est affecté, même s'il devait retourner `false` ainsi dans le cas suivant `exemple = NaN || \"\" || 0` le `0` est affecté la ou dans un `if` aucun élément n'aurait passé la validation.\u003c/p\u003e\n\u003c/div\u003e","dates":{"published":{"$date":"2016-11-09T10:58:00.000Z"},"updated":[]},"others":{"markdown":true,"published":false},"script":"var knowMores = document.getElementsByClassName(\"know-more\");\n\nArray.prototype.forEach.call(knowMores, function (knowMore) {\n    knowMore.addEventListener(\"click\", function (e) {\n        e.target.nextElementSibling.classList.toggle(\"is-opened\");\n    });\n});","stylesheet":".invisible {\nheight: 0;\nvisibility: hidden;\nmargin: 0;\n}\n.explaination {\ndisplay:none;\n}\n.explaination.is-opened {\ndisplay: block;\n}\n.prettyprint + p {\n    margin-top: 0;\n    height: 0;\n    font-size: 0;\n}\n.know-more {\n    color: #48739E;\n    cursor: pointer;\n    margin-top: 0;\n    margin-left: 8px;\n}\n.know-more:hover {\n    color: #C00;\n}","title":"Comprendre les Raccourcis de Code en JavaScript","urn":"comprendre-les-raccourcis-de-code-en-javascript"}
{"_id":{"$oid":"56fb9383d1b7fe136fc2005d"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"56c4ad05675345bb2d63fcec"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bb"}],"content":"Ce qui m'a interpellé la première fois que j'ai pu m'essayer à [AngularJS], c'est la possibilité offerte de sélectionner les services que l'on souhaite en les récupérant par leur nom d'argument, et non par leur position d'argument. Ce concept n'existe pas en JavaScript et pourtant le fait est bien là : `function ($scope, $http)` ou `function ($http, $scope)` renvoi les bons contenus de variable en fonction de leurs noms et `function (scope, $http)` vous dit que `scope` n'existe pas !\n\n\u003cfigure\u003e\n\u003cimg width=\"1100\" height=\"510\" src=\"https://blog.lesieur.name/media/images/upload/angular-named-parameters.jpg\" alt=\"Accès par nom de paramètre\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eAccès par nom de paramètre\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nComment cela est-il possible en JavaScript ? Il est possible de « simuler » un passage par nom d'argument avec un type `Object` en utilisant ses noms de propriété, mais là, il s'agit bel et bien de différents arguments.\n\nVoici le petit exercice que je vous propose dans cet article, faire du « Reverse Engineering » sur le mécanisme « caché » permettant aux fonctions de rappel (callback) JavaScript de délivrer leurs arguments par « nom d'argument » en lieu et place du mécanisme natif qui est par « position d'argument ».\n\n*Note : on parle souvent de passage par « nom de paramètre » dans les autres langages. Ici, en réalité, il s'agit plutôt de passage par nom d'argument car cette fonctionnalité est associée aux arguments fournis par la fonction de rappel et non aux paramètres que l'on fourniraient à une fonction. Pour rappel on fournit des arguments en déclarant une fonction, et on passe des paramètres en exécutant une fonction.*\n\n\n\n\n\n## Position d'argument vs. nom d'argument\n\nPrécisons plus finement de quoi l'on parle dans les deux différents cas : nom ou position.\n\n\n\n### Position d'argument par l'exemple\n\nHabituellement (et nativement) en JavaScript, lorsqu'une fonction de rappel vous fournit des arguments, chaque position d'argument vous permet de savoir à quoi celui-ci va vous servir. C'est sur cette position que s'appuie la documentation pour vous expliquer à quoi servent chaque argument. Prenons l'exemple de la fonction `filter` des `Array` en JavaScript :\n\n```js\n// Nous créons un tableau avec des chaines de caractère.\nvar numbers = [\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"];\n\n// Nous utilisons la fonction `filter` qui demande une\n// fonction de rappel qui va expliquer comment le filtre doit s'appliquer\n// sur chaque élément du tableau un par un.\n\n// Cette fonction de rappel nous fournit nativement les arguments par\n// « Position d'argument » ce qui signifie que...\nnumbers.filter(function (item, position, all) {\n\n    // Le premier argument est la valeur de chaque entrée (`\"zero\"`, `\"un\"`, etc.).\n    // Le deuxième argument est l'index de chaque entrée.\n    // Le troisième argument est le tableau complet.\n\n    // Pour le premier tour de `filter` on a donc :\n    // `item` qui vaut `\"zero\"`.\n    // `position` qui vaut `0`.\n    // `all` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.\n\n    // Pour le second tour de `filter` on a donc :\n    // `item` qui vaut `\"un\"`.\n    // `position` qui vaut `1`.\n    // `all` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.\n\n    // Etc.\n\n    // On filtre par indice pair le résultat et on obtient...\n    return (position % 2 === 0) ? true : false;\n});\n// Résultat : `[\"zero\", \"deux\", \"quatre\"]`\n```\n\nComprenez bien ici que vous choisissez le nom des arguments vous-même, car seule la position importe, aussi le code suivant fait la même chose :\n\n```js\n[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"].filter(function (o, i, a) {\n\n    // Pour le premier tour de `filter` on a donc :\n    // `o` qui vaut `\"zero\"`.\n    // `i` qui vaut `0`.\n    // `a` qui vaut `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`.\n\n    // Etc.\n\n    return !(i % 2);\n});\n// Résultat : `[\"zero\", \"deux\", \"quatre\"]`\n```\n\nMais le code suivant non :\n\n```js\n[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"].filter(function (position) {\n    // `position` vaut `\"zero\"`, puis `\"un\"`, puis...\n    return !(position % 2); // `!NaN` équivaut à `true`, tout passe.\n});\n// Résultat : `[\"zero\", \"un\", \"deux\", \"trois\", \"quatre\", \"cinq\"]`\n```\n\n\u003e **A retenir :** c'est l'ordre dans lequel les arguments sont fournis par une fonction de rappel qui détermine ce que le paramètre contient. Ceci est vrai pour tout programme JavaScript utilisant le mécanisme natif.\n\u003e \n\u003e *Avantage* : on peut utiliser n'importe quel nom pour nommer son argument et l'utiliser dans la fonction de rappel.\n\u003e \n\u003e *Inconvénient* : il faut créer les arguments 1 et 2 si l'on souhaite utiliser le paramètre 3.\n\n\n\n### Nom d'argument par l'exemple\n\nMais le petit tour de magie fait par [AngularJS] est que l'on ne récupère pas les arguments par position mais par nom ce qui n'est pas possible en JavaScript. Aussi observons le code suivant.\n\n```js\nvar app = angular.module(\"app\", []);\n\n// On demande l'objet `$scope` en première position,\n// puis la fonction `$http` en seconde position...\napp.controller(\"ctrl\", function ($scope, $http) {\n\n    // ...et on affiche l'objet `ChildScope { ... }`...\n    console.log($scope);\n\n    // ...ainsi que la fonction `function $http(requestConfig) { ... }`.\n    console.log($http);\n});\n```\n\nJusque là, rien d'anormal me direz-vous ? Effectivement, cela signifie que le premier argument délivre un objet et que le second délivre une fonction.\n\nMais la magie opère dès lors que vous demandez plutôt ceci :\n\n```js\nvar app = angular.module('app', []);\n// On demande la fonction `$http` en première position,\n// puis l'objet `$scope` en seconde position...\napp.controller(\"ctrl\", function ($http, $scope) {\n\n    // ...et on affiche l'objet `ChildScope { ... }`...\n    console.log($scope);\n\n    // ...ainsi que la fonction `function $http(requestConfig) { ... }`.\n    console.log($http);\n});\n```\n\n**Et ça marche !** Exactement de la même manière que précédemment. Par contre, si je voulais que mon `$http` ici réclamé en première position s'appelle plutôt `http`, j'aurais des ennuis.\n\n```js\nangular.module(\"app\", []).controller(\"ctrl\", function (http, $scope) {\n\n    // ...et on affiche l'objet `ChildScope { ... }`...\n    console.log($scope);\n\n    // ...et...\n    console.log(http);\n    // ...s'affiche `Error: [$injector:unpr] Unknown provider`...\n});\n```\n\n\u003e **A retenir** : [AngularJS] ne délivre pas le contenu de ses arguments de fonction de rappel selon leurs positions, mais en fonction de leurs noms.\n\u003e \n\u003e *Avantage* : nous pouvons nous servir à travers tous les arguments disponibles, dans l'ordre souhaité. « J'ai besoin de l'argument `$http` ? Ok, je le rajoute à la liste ».\n\u003e \n\u003e *Inconvénient* : on ne peut pas utiliser n'importe quel nom pour nommer son argument et l'utiliser dans la fonction de rappel sous peine d'avoir une erreur. Très handicapant pour minifier / offusquer son code JavaScript.\n\n\n\n\n\n## Comment AngularJS fournit les arguments par nom ?\n\nPour répondre à cette question, nous allons entreprendre de recréer les objets et fonctions de l'exemple avec [AngularJS] pas à pas pour comprendre exactement à quel moment nous pouvons agir afin de « changer » le comportement natif du JavaScript.\n\n**Commençons donc par créer `app` et sa fonction `module`.**\n\nAussi le code suivant :\n\n*Déclarations*\n\n```js\n// Création de l'espace de nom `angular` utilisé par la bibliothèque.\nvar angular = {};\n\n// Création d'une fonction `module` qui permettrait de\n// nommer mon module et de passer le tableau `[]`\n// nécessaire à la création.\nangular.module = function (name, options) {\n\n    console.log(name);\n    console.log(options);\n    return {};\n};\n```\n\nme permet d'exécuter cela :\n\n*Appels*\n\n```js\nvar app = angular.module(\"app\", []);\n// `app`\n// `[]`\n\nconsole.log(app);\n// `Object {}`\n```\n\n**Ajoutons maintenant la fonction `controller`.**\n\nAussi le code suivant :\n\n*Déclarations*\n\n```js\nvar angular = {};\n\nangular.module = function (name, options) {\n    return {\n\n        // Création d'une fonction `controller` qui permettrait de\n        // nommer mon contrôleur, de passer une fonction de rappel avec\n        // les instructions à exécuter et récupérer nos arguments !\n        controller: function (name, callback) {\n            console.log(name);\n            console.log(callback);\n\n            // On exécute la fonction de rappel que l'on a passé en attribuant\n            // pour le moment deux paramètres.\n            callback(\"first parameter\", \"second parameter\");\n        }\n    };\n};\n```\n\nme permet d'exécuter cela :\n\n*Appels*\n\n```js\nvar app = angular.module(\"app\", []);\n\napp.controller(\"ctrl\", function ($scope, $http) {\n// `ctrl`\n// `function ($scope, $http) { ... }`\n\n    console.log($scope);\n    // `\"first parameter\"`\n\n    console.log($http);\n    // `\"second parameter\"`\n});\n```\n\nEt là nous remarquons une belle piste. Nous sommes capable de connaître le nom des arguments utilisées par la fonction de rappel fournie dans la partie **Déclarations** (`console.log(callback);`) avant de l'exécuter et de lui passer actuellement les paramètres \"first parameter\" et \"second parameter\".\n\n\u003e **`Conclusion :`** **C'est exactement comme cela que [AngularJS] procède. Le nom des arguments est extrait à partir de** `callback.toString()` **grâce à une expression régulière et diverses opérations de capture. Nous allons en reproduire une équivalence dans l'exemple suivant.**\n\n\n\n\n\n## Extraction des arguments par nom\n\nPour simuler une fonction de rappel par nom d'argument il va falloir :\n\n- isoler la liste des paramètres pour en connaître leur nom et\n- affecter le bon contenu de paramètre à la bonne place dans la fonction de rappel pour donner l'illusion d'une fonction de rappel partageant ces arguments par nom d'argument.\n\n\n\n### Isoler la liste des paramètres\n\nLa manière la plus rapide de parvenir à nos fins va être d'utiliser une expression régulière pour extraire la liste des paramètres de la fonction rendue par `callback.toString()`.\n\nVoici là liste des fonctions dans lesquels nous devons pouvoir récupérer les paramètres. J'ai volontairement ajouté des espaces inutiles pour être sur de tester tous les cas :\n\n- `function test (  $http , $scope  ) { ... };`\n- `function test  (  $http  ) { ... };`\n- `function (  $scope, $http  ) { ... };`\n- `function (  $http, scope  ) { ... };`\n- `function (  $scope  ) { ... };`\n- `function (  ) { ... };`\n- `( $scop  ,  $http) =\u003e { ... };`\n- `$scope  =\u003e  { ... };`\n- `(  $scope  ) =\u003e { ... };`\n- `(  ) =\u003e { ... };`\n\nÀ l'aide d'outil comme [101Regex](https://regex101.com/#javascript), on arrive à une expression régulière comme celle-ci :\n\n```js\n/^(?:function [a-zA-Z0-9_$])? (? ([a-zA-Z0-9_$, ]) )?/g\n```\n\n\u003cdiv class=\"hidden-explaination\" onclick=\"this.classList.toggle('hidden-explaination')\"\u003e\n\u003cbr\u003e\n\u003cbutton\u003eExplication complète sur la RegExp en cliquant ici\u003c/button\u003e\n\u003cdiv\u003e\n\u003cbr\u003e\n\u003cem\u003eNote : nous ajoutons le paramètre \u003csamp\u003em\u003c/samp\u003e lors de nos tests pour tester tous nos cas de test dans \u003ca href=\"https://regex101.com/#javascript\" target=\"_blank\"\u003e101Regex\u003c/a\u003e mais il ne ferra pas parti de l'expression régulière finale.\u003c/em\u003e\n\u003cul id=\"regexExplainer\" class=\"filetree treeview\"\u003e\n                  \u003cli\u003e\n                    \u003cdiv class=\"first-folder\"\u003e\n                      \u003cdiv\u003e\u003cspan class=\"expslash\"\u003e/\u003c/span\u003e\u003cspan class=\"treeview_pattern regex_colorizer\"\u003e\u003cb\u003e^\u003c/b\u003e\u003cb class=\"g1\"\u003e(?:\u003c/b\u003efunction \u003cb\u003e*\u003c/b\u003e\u003ci\u003e[\u003c/i\u003e\u003ci\u003ea\u003cb\u003e-\u003c/b\u003ezA\u003cb\u003e-\u003c/b\u003eZ0\u003cb\u003e-\u003c/b\u003e9_$\u003c/i\u003e\u003ci\u003e]\u003c/i\u003e\u003cb\u003e*\u003c/b\u003e\u003cb class=\"g1\"\u003e)\u003c/b\u003e\u003cb class=\"g1\"\u003e?\u003c/b\u003e \u003cb\u003e*\u003c/b\u003e\u003cb class=\"et\"\u003e\\(\u003c/b\u003e\u003cb\u003e?\u003c/b\u003e \u003cb\u003e*\u003c/b\u003e\u003cb class=\"g1\" data-groupnum=\"1\"\u003e(\u003c/b\u003e\u003ci\u003e[\u003c/i\u003e\u003ci\u003ea\u003cb\u003e-\u003c/b\u003ezA\u003cb\u003e-\u003c/b\u003eZ0\u003cb\u003e-\u003c/b\u003e9_$, \u003c/i\u003e\u003ci\u003e]\u003c/i\u003e\u003cb\u003e*\u003c/b\u003e\u003cb class=\"g1\" data-groupnum=\"1\"\u003e)\u003c/b\u003e \u003cb\u003e*\u003c/b\u003e\u003cb class=\"et\"\u003e\\)\u003c/b\u003e\u003cb\u003e?\u003c/b\u003e\u003c/span\u003e\n                        \u003cspan class=\"expslash\"\u003e/\u003c/span\u003e\u003cspan class=\"treeview_pattern treeview_options\"\u003egm\u003c/span\u003e\u003c/div\u003e\n                    \u003c/div\u003e\n                    \u003cul\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003e^\u003c/span\u003e déclarer la position comme le début de la ligne\u003c/div\u003e\n                      \u003c/li\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003cdiv class=\"folder\"\u003e\u003cspan class=\"group\"\u003e(?:function \u003cem\u003e[a-zA-Z0-9_$]\u003c/em\u003e)?\u003c/span\u003e Groupe non capturant\u003c/div\u003e\n                        \u003cul\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"file\"\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e?\u003c/span\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune\u003c/span\u003e fois, autant de fois que possible, car en mode\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\n                            \u003c/div\u003e\n                          \u003c/li\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003efunction\u003c/span\u003e concorde avec les caractères \u003cspan class=\"literal\"\u003efunction\u003c/span\u003e tel quel (sensible à la casse)\u003c/div\u003e\n                          \u003c/li\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                            \u003cdiv class=\"folder\"\u003e\u003cspan class=\"token\"\u003e \u003cem\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e concorde avec le caractère \u003cspan class=\"literal\"\u003e \u003c/span\u003e tel quel\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003cul\u003e\u003cem\u003e\n                              \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                                \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003c/span\u003e\u003c/em\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, autant de fois que possible, car en mode\n                                  \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/div\u003e\n                              \u003c/li\u003e\n                            \u003c/ul\u003e\n                          \u003c/li\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                            \u003cdiv class=\"folder\"\u003e\u003cspan class=\"treeCharclass\"\u003e[a-zA-Z0-9\u003cem\u003e$]\u003cem\u003e\u003c/em\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e\u003cem\u003e concorde avec un seul caractère de la liste précédente\u003c/em\u003e\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003c/em\u003e\u003cul\u003e\u003cem\u003e\u003cem\u003e\n                              \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                                \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"note\"\u003eQuantifier:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003c/span\u003e\u003c/em\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, autant de fois que possible, car en mode\n                                  \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003ea-z\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003ea\u003c/span\u003e et \u003cspan class=\"literal\"\u003ez\u003c/span\u003e (sensible à la casse)\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003eA-Z\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003eA\u003c/span\u003e et \u003cspan class=\"literal\"\u003eZ\u003c/span\u003e (sensible à la casse)\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003e0-9\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003e0\u003c/span\u003e et \u003cspan class=\"literal\"\u003e9\u003c/span\u003e\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                                \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"token\"\u003e\u003c/span\u003e\u003c/em\u003e$ concorde avec un caractère de la liste \u003cspan class=\"literal\"\u003e\u003cem\u003e$\u003c/em\u003e\u003c/span\u003e\u003cem\u003e tel quel\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                              \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003c/ul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003c/ul\u003e\u003cem\u003e\n                      \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003cdiv class=\"folder\"\u003e\u003cspan class=\"token\"\u003e \u003cem\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e concorde avec le caractère \u003cspan class=\"literal\"\u003e \u003c/span\u003e tel quel\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003cul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003c/span\u003e\u003c/em\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, de fois, autant de fois que possible, car en mode\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/div\u003e\n                          \u003c/li\u003e\n                        \u003c/ul\u003e\n                      \u003c/li\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003cdiv class=\"folder\"\u003e\u003cspan class=\"token\"\u003e(?\u003c/span\u003e matches the character \u003cspan class=\"literal\"\u003e(\u003c/span\u003e literally\u003c/div\u003e\n                        \u003cul\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"file\"\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e?\u003c/span\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune\u003c/span\u003e fois, de fois, autant de fois que possible, car en mode\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\n                            \u003c/div\u003e\n                          \u003c/li\u003e\n                        \u003c/ul\u003e\n                      \u003c/li\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003cdiv class=\"folder\"\u003e\u003cspan class=\"token\"\u003e \u003cem\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e matches the character \u003cspan class=\"literal\"\u003e \u003c/span\u003e literally\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003cul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003c/span\u003e\u003c/em\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, autant de fois que possible, car en mode\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/div\u003e\n                          \u003c/li\u003e\n                        \u003c/ul\u003e\n                      \u003c/li\u003e\n                      \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003c/em\u003e\u003cdiv class=\"folder\"\u003e\u003cem\u003e\u003cspan class=\"capturinggrooup match1\"\u003e1st\u003c/span\u003e groupe caturant \u003cspan class=\"group\"\u003e([a-zA-Z0-9\u003c/span\u003e\u003c/em\u003e$, ]\u003cem\u003e)\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003cul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                            \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                            \u003c/em\u003e\u003cdiv class=\"folder\"\u003e\u003cem\u003e\u003cspan class=\"treeCharclass\"\u003e[a-zA-Z0-9_$, ]\u003c/span\u003e\u003c/em\u003e concorde avec un seul caractère de la liste précédente\u003c/div\u003e\n                            \u003cul\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"note\"\u003eQuantifier:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003cem\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, autant de fois que possible, car en mode\n                                  \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                              \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003ea-z\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003ea\u003c/span\u003e et \u003cspan class=\"literal\"\u003ez\u003c/span\u003e (sensible à la casse)\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003eA-Z\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003eA\u003c/span\u003e et \u003cspan class=\"literal\"\u003eZ\u003c/span\u003e (sensible à la casse)\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003e0-9\u003c/span\u003e un seul caractère entre \u003cspan class=\"literal\"\u003e0\u003c/span\u003e et \u003cspan class=\"literal\"\u003e9\u003c/span\u003e\u003c/div\u003e\n                              \u003c/li\u003e\n                              \u003cli\u003e\n                                \u003cdiv class=\"file\"\u003e\u003cspan class=\"token\"\u003e\u003cem\u003e$, \u003c/em\u003e\u003c/span\u003e\u003cem\u003e concorde avec un caractère de la liste \u003cspan class=\"literal\"\u003e\u003c/span\u003e\u003c/em\u003e$,  tel quel\u003c/div\u003e\n                              \u003c/li\u003e\n                            \u003c/em\u003e\u003c/ul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003c/ul\u003e\u003cem\u003e\n                      \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                      \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003c/em\u003e\u003cdiv class=\"folder\"\u003e\u003cem\u003e\u003cspan class=\"token\"\u003e \u003c/span\u003e\u003c/em\u003e concorde avec le caractère \u003cspan class=\"literal\"\u003e \u003c/span\u003e tel quel\u003c/div\u003e\n                        \u003cul\u003e\n                          \u003cli\u003e\n                            \u003cdiv class=\"file\"\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003cem\u003e\u003c/em\u003e\u003c/span\u003e\u003cem\u003e Between \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e and \u003cspan class=\"quantifier\"\u003eunlimited\u003c/span\u003e times, as many times as possible, giving back as needed\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\u003c/em\u003e\u003c/div\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                        \u003c/em\u003e\u003c/ul\u003e\u003cem\u003e\n                      \u003c/em\u003e\u003c/li\u003e\u003cem\u003e\n                      \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                        \u003cdiv class=\"hitarea collapsable\"\u003e\u003ci class=\"fa fa-caret-down\"\u003e\u003c/i\u003e\u003c/div\u003e\n                        \u003cdiv class=\"folder\"\u003e\u003cspan class=\"token\"\u003e)?\u003c/span\u003e matches the character \u003cspan class=\"literal\"\u003e)\u003c/span\u003e literally\u003c/div\u003e\n                        \u003c/em\u003e\u003cul\u003e\u003cem\u003e\n                          \u003c/em\u003e\u003cli\u003e\u003cem\u003e\n                            \u003c/em\u003e\u003cdiv class=\"file\"\u003e\u003cem\u003e\u003cspan class=\"note\"\u003eQuantifieur:\u003c/span\u003e \u003cspan class=\"inner-quantifier\"\u003e\u003c/span\u003e\u003c/em\u003e Entre \u003cspan class=\"quantifier\"\u003ezero\u003c/span\u003e et \u003cspan class=\"quantifier\"\u003eune infinité\u003c/span\u003e de fois, autant de fois que possible, car en mode\n                              \u003cspan class=\"misc\"\u003e[greedy]\u003c/span\u003e\n                            \u003c/div\u003e\n                          \u003c/li\u003e\n                        \u003c/ul\u003e\n                      \u003c/li\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"file\"\u003e\u003cspan class=\"modifier\"\u003eg modifieur:\u003c/span\u003e \u003cstrong\u003eg\u003c/strong\u003elobale. Pour toutes concordances (pas de retour à la première capture)\u003c/div\u003e\n                      \u003c/li\u003e\n                      \u003cli\u003e\n                        \u003cdiv class=\"file\"\u003e\u003cspan class=\"modifier\"\u003em modifieur:\u003c/span\u003e \u003cstrong\u003em\u003c/strong\u003eulti ligne. Fait que \u003cspan class=\"misc\"\u003e^\u003c/span\u003e et \u003cspan class=\"misc\"\u003e$\u003c/span\u003e concorde pour le début/la fin de chaque ligne (pas seulement le début/la fin de la chaine)\u003c/div\u003e\n                      \u003c/li\u003e\n                    \u003c/ul\u003e\n                  \u003c/li\u003e\n                \u003c/ul\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\nCette expression régulière nous extrait au regard des tests unitaires précédent ceci :\n\n- `  $http , $scope  `\n- `  $http  `\n- `  $scope, $http  `\n- `  $http, scope  `\n- `  $scope  `\n- `  `\n- ` $scope  ,  $http`\n- `$scope`\n- `  $scope  `\n- `  `\n\n\n\n### Affectation des paramètres\n\nAprès avoir obtenu de notre `callback.toString()` les paramètres suivant `  $http , $scope  ` à l'aide de notre expression régulière, nous allons récupérer ces paramètres un par un. Nous allons ensuite retirer les espaces et injecter nos paramètres dans notre fonction de rappel aux bonnes positions pour donner l'illusion d'une fonction de rappel par nom d'argument en sortie. C'est parti !\n\n*Déclarations*\n\n```js\nvar angular = {};\n\nangular.module = function (name, options) {\n    return {\n        controller: function (name, callback) {\n\n            // Création de la `RegExp` d'extraction des paramètres réclamés.\n            var regex = /^(?:function [a-zA-Z0-9_$])? (? ([a-zA-Z0-9_$, ]) )?/g,\n\n                // Exécution de la `RegExp` sur `callback.toString()` avec par exemple\n                // `function test (  $http , $scope  ) { ... };`. Est obtenu comme valeur...\n                params = ((regex.exec(callback.toString()) || [1]).slice(1)[0] || \"\").split(','),\n                // ...pour params : `['$http', '$scope']`.\n\n                // Attribution du contenu des paramètres que notre `callback` va fournir en sortie\n                // lors de l'utilisation de `app.controller(\"ctrl\", function (...) { ... })` dans un objet\n                // ou chaque clé correspondra aux arguments nommés souhaités.\n                functions = {\n\n                    // Si la clé passée à `functions` est `$scope`, la fonction suivante sera recournée.\n                    $scope: function () {\n                        \"I'm the `$scope` function\";\n                    },\n\n                    // Si la clé passée à `functions` est `$http`, la fonction suivante sera recournée.\n                    $http: function () {\n                        \"I'm the `$http` function\";\n                    }\n                };\n\n            // Association pour chaque élément de `['$http', '$scope']` de la valeur contenue dans `functions`\n            // en se servant de chaque chaine du tableau comme clé dans `functions`.\n            params = params.map(function (item) {\n\n                // Renvoi pour chaque clé de la valeur ou, si aucune concordance,\n                // une erreur pour signifier qu'aucun paramètre avec ce nom n'existe.\n                return functions[item.trim()] || new Error(\"This `\" + item.trim() + \"` doesn't exist.\");\n            });\n            // `[function () { \"I'm the `$scope` function\"; }, function () { \"I'm the `$http` function\"; }]`\n\n            // Exécution de `callback` fournit en utilisant\n            // les paramètres dans le bon ordre directement du tableau `params` avec\n            // `apply` qui prend un tableau de paramètres.\n            callback.apply(this, params);\n        }\n    };\n};\n```\n\nme permet d'exécuter cela :\n\n*Appels*\n\n```js\nvar app = angular.module(\"app\", []);\n\napp.controller(\"ctrl\", function ($scope, $http) {\n\n    console.log($scope);\n    // `\"function () { \"I'm the `$scope` function\"; }\"`\n\n    console.log($http);\n    // `\"function () { \"I'm the `$http` function\"; }\"`\n});\n```\n\nou\n\n\n```js\nvar app = angular.module(\"app\", []);\n\napp.controller(\"ctrl\", function ($http, $scope) {\n\n    console.log($scope);\n    // `\"function () { \"I'm the `$scope` function\"; }\"`\n\n    console.log($http);\n    // `\"function () { \"I'm the `$http` function\"; }\"`\n});\n```\n\nou avec erreur\n\n```js\nvar app = angular.module(\"app\", []);\n\napp.controller(\"ctrl\", function (http, $scope) {\n\n    console.log($scope);\n    // `\"function () { \"I'm the `$scope` function\"; }\"`\n\n    console.log(http);\n    // `Error: This `http` doesn't exist.`\n});\n```\n\n\n\n\n\n## Quid de l'offuscation du code ?\n\n### Utilisation souhaitée\n\nComme mentionné précédemment, si nous offusquons le code, ou si nous souhaitons simplement utiliser d'autres noms de variable pour les arguments fournis par la fonction de rappel, nous allons obtenir le même type d'erreur que dans notre troisième exemple d'appels dans la partie précédente.\n\n[AngularJS] contourne le problème en remplaçant cette syntaxe :\n\n```js\nfunction ($http, $scope) {\n\n  console.log($scope);\n  // `\"function () { \"I'm the $scope function\"; }\"`\n\n  console.log($http);\n  // `\"function () { \"I'm the $http function\"; }\"`\n}\n```\n\npar cette syntaxe :\n\n```js\n['$http', '$scope', function (h, s) {\n\n  console.log(s);\n  // `\"function () { \"I'm the $scope function\"; }\"`\n\n  console.log(h);\n  // `\"function () { \"I'm the $http function\"; }\"`\n}]\n```\n\n\u003e Pour contourner le problème, le nommage des arguments n'est plus effectué dans la fonction de rappel mais dans un tableau. On ne passe donc plus une `Function` en `callback` mais un `Array` dont le dernier élément est la fonction de rappel et dont tous les éléments précédents sont les arguments nommés que nous souhaitons sous forme de chaine de caractères (et donc non offusquable). Cela nous permet ensuite d'utiliser, par exemple, les variables `h` et `s` dans notre exemple.\n\n### Implémentation de la fonctionnalité\n\nAjoutons donc cela à notre code déjà existant. Nous voulons que le comportement précédent fonctionne toujours, mais que celui-ci marche également.\n\n*Déclarations*\n\n```js\nvar angular = {};\n\nangular.module = function (name, options) {\n    return {\n        controller: function (name, args) {\n\n            // On définira les `params` plus tard selon le type de `args`.\n            var params,\n\n                // `callback` est devenu `args`. `args` peut être une `Function` ou un `Array`.\n                // on définit donc la variable `callback` et lui attribuons `args`.\n                // en supposant qu'il est de type `Function`...\n                callback = args,\n                regex = /^(?:function [a-zA-Z0-9_$])? (? ([a-zA-Z0-9_$, ]) )?/g,\n                functions = {\n                    $scope: function () {\n                        \"I'm the `$scope` function\";\n                    },\n                    $http: function () {\n                        \"I'm the `$http` function\";\n                    }\n                };\n\n            // ...cependant si `args` est de type `Array`.\n            if (args instanceof Array) {\n\n              // Notre `callback` devient le dernier élément du tableau\n              // qui est retiré et retourné avec `pop()`,\n              callback = args.pop();\n\n              // et nos paramètres sont le reste du tableau.\n              params = args;\n            } else {\n\n              // Sinon, si `args` est —comme supposé initialement— une `Function`, on continue comme avant.\n              params = ((regex.exec(callback.toString()) || [1]).slice(1)[0] || \"\").split(',')\n            }\n\n            params = params.map(function (item) {\n                return functions[item.trim()] || new Error(\"This `\" + item.trim() + \"` doesn't exist.\");\n            });\n\n            callback.apply(this, params);\n        }\n    };\n};\n```\n\nme permet d'exécuter cela :\n\n*Appels*\n\n```js\nvar app = angular.module(\"app\", []);\n\napp.controller(\"ctrl\", ['$http', '$scope', function (h, s) {\n\n  console.log(s);\n  // `\"function () { \"I'm the $scope function\"; }\"`\n\n  console.log(h);\n  // `\"function () { \"I'm the $http function\"; }\"`\n}]);\n```\n\n\u003e *`Exemples :`* **[Vous trouverez un exemple Live de ce code sur ce Codepen !](http://codepen.io/Haeresis/pen/WwOpNG)**\n\n\n\n\n\n## Fonction préconçue\n\nEt si on utilisait ce système pour nos propres fonction de rappel, indépendamment de [AngularJS] ? Nous allons effectuer quelques changement et attacher ce mécanisme au prototype de `Function` mais vous pouvez en faire une simple fonction ou l'ajouter à votre bibliothèque JavaScript préférée !\n\n**Raccourci**\n\nCe code est à placer avec vos bibliothèques JavaScript.\n\n```js\n;(function () {\n\n    // On retire name qui ne sert pas et on ajoute sa propre injection de fonctions,\n    // et éventuellement sa propre fonction en cas d'erreur.\n    Function.prototype.namedParameters = function (args, providedFunctions, error) {\n        var params,\n            callback = args,\n            regex = /^(?:function [a-zA-Z0-9_$])? (? ([a-zA-Z0-9_$, ]) )?/g,\n            functions = providedFunctions || {};\n\n        if (args instanceof Array) {\n            callback = args.pop();\n            params = args;\n        } else {\n            params = ((regex.exec(callback.toString()) || [1]).slice(1)[0] || \"\").split(',')\n        }\n\n        params = params.map(function (item) {\n\n            // On ajoute sa propre fonction d'erreur qui prend en paramètre le nom de paramètre posant problème.\n            return functions[item.trim()] || (error \u0026\u0026 error(item.trim())) || new Error(\"This `\" + item.trim() + \"` doesn't exist.\");\n        });\n\n        callback.apply(this, params);\n    };\n}());\n```\n\n*Note : vous pouvez également accrocher cette fonction à votre bibliothèque préféré comme par exemple jQuery de cette manière : `$.fn.namedParameters = function (args, providedFunctions, error) { … }`.*\n\nVous pourrez ensuite définir et appliquer les paramètres par nom dans toutes les fonctions souhaitées :\n\n*Déclarations*\n\n```js\nvar say = function (args) {\n    Function.namedParameters(args, {\n        hello: \"Hello!\",\n        bye: \"Bye\"\n    }, function (param) {\n        return \"`\" + param + \"` create an error!\";\n    });\n};\n```\n\n*Appels*\n\n```js\nsay(function (again, hello, bye) {\n\n    console.log(hello);\n    // `Hello!`\n\n    console.log(bye);\n    // `Bye`\n\n    console.log(again);\n    // ``again` create an error!`\n});\n\nsay(['bye', 'again', 'hello', function (b, a, h) {\n\n  console.log(h);\n  // `Hello!`\n\n  console.log(b);\n  // `Bye`\n\n  console.log(a);\n  // ``again` create an error!`\n}]);\n```\n\n\u003e *`Exemples :`* **[Vous trouverez un exemple Live de ce code sur ce Codepen !](http://codepen.io/Haeresis/pen/xVpjxV)**\n\n[AngularJS]: https://angularjs.org/ \"AngularJS — Superheroic JavaScript MVW Framework\"","dates":{"published":{"$date":"2016-04-08T15:35:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"#regexExplainer ul {\n    font-family: 'Open Sans',\"Lucida Sans Unicode\",\"Lucida Grande\",sans-serif;\n    margin:0;\n    list-item-type: none;\n}\n.regex_colorizer b {\n    background: #80c0ff;\n    color: navy;\n}\n.regex_colorizer b.g1 {\n    background: #a9f854;\n    color: #282828;\n}\n.regex_colorizer i {\n    background: #ffc080;\n    color: #603000;\n}\n.regex_colorizer b.et {\n    background: #aaa;\n    color: #282828;\n}\n.regex_colorizer i b, .regex_colorizer i b.et, .regex_colorizer i u {\n    background: #e0a060;\n    color: #603000;\n}\n.treeview .token {\n    background: #C9DEF2;\n    color: #164a91;\n}\n.treeview .group {\n    background: #ffefed;\n    color: #7f2a1d;\n}\n.treeview .note {\n    background: #ccc;\n    color: #454545;\n}\n.treeview .quantifier {\n    background: #c6f1e6;\n    color: #0a5b43;\n}\n.treeview .misc {\n    color: #814A03;\n    background: #ffd298;\n}\n.treeview .literal {\n    background: #ffecda;\n    color: #9a3b01;\n}\n.match1 {\n    color: #124F46;\n    background-color: #C6E99D;\n}\n.treeview .modifier {\n    background: #e3d9ee;\n    color: #54256f;\n}\n.hidden-explaination div {\n  display: none;\n}","title":"JavaScript et callback par nom de paramètre comme dans AngularJS","urn":"javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs","description":"Comprenons le mécanisme caché par AngularJS permettant aux fonctions de rappel en JavaScript de délivrer leurs arguments par nom d'argument.","image":"https://blog.lesieur.name/media/images/upload/angular-named-parameters.jpg"}
{"_id":{"$oid":"575a62fbd1b7fe136fc2005e"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"Dans cet article il ne va pas être question d'expliquer l'utilité du point virgule (« _semi-colon_ ») `;` ou encore les bienfaits de l'opérateur d'égalité stricte (« _strict equality operator_ ») `===` mais plutôt de vous démontrer par l'exemple comment produire du code que vous et les autres pourrez relire sans entrer dans les détails si cela n'est pas nécessaire.\n\n\u003cdiv style=\"text-align: center\"\u003e\n\u003cimg width=\"638\" height=\"479\" style=\"max-width:100%;border-radius: 16px;height: auto\" src=\"media/images/upload/clean-code-design-patterns-7-638.jpg\" alt=\"Clean Code\"\u003e\n\u003cspan style=\"font-style: italic\"\u003e*Source : http://fr.slideshare.net/pazscall/clean-code-design-patterns*\u003c/span\u003e\n\u003c/div\u003e\n\nNous allons tout au long de cet article aborder plusieurs notions comme :\n\n- **La programmation par intention** (« _intentional programming_ ») ou le fait de rassembler et nommer chaque suite d'instruction dans une fonction pour rendre le code aisé à la relecture.\n- **La programmation par fonction de rappel** (« _function callback_ ») ou le fait de déléguer à une fonction externe ce qu'il va se passer à la fin d'une suite d'instruction.\n- **La programmation par entrée / sortie** (« _I/O_ ») ou le fait que chaque fonction doit clairement définir ce qu'elle attend en entrée (« _inputs_ »), et ce qu'elle renvoit en sortie (« _outputs_ »).\n- **La programmation asynchrone** ou le fait d'attendre un évènement ou un temps précis sur un tour (« tick ») de la boucle d'évènement (« Event Loop ») avant l'exécution du code.\n\nC'est parti pour apprendre tout ça à travers un exemple d'upload de fichier.\n\n\n\n\n\n## Sélectionner une image ##\n\nCommençons par tout script JavaScript courant, une simple suite d'instruction se trouvant dans le **champ lexical global** (« _global scope_ ») afin, dans notre exemple, de sélectionner une image stockée sur notre disque dur.\n\n```js\nvar inputFile = document.createElement('input');\ninputFile.type = 'file';\ninputFile.accept = 'image/*';\n\ndocument.getElementsByTagName('body')[0].appendChild(inputFile);\n```\n\nUne fois ce code exécuté, vous devriez voir un bouton pour choisir une image.\n\n\u003cinput type=\"file\" accept=\"image/*\"\u003e\n\nDans le détail c'est assez simple :\n\n- On affecte à la variable `inputFile` l'objet d'instance `HTMLInputElement` (représentant une balise `\u003cinput\u003e`) en le créant via la méthode `document.createElement`.\n- On affecte la propriété `type` ainsi que la propriété `accept` représentant les attributs `type` et `accept` de la balise `\u003cinput\u003e`.\n- Et on insère dans l'objet d'instance `HTMLBodyElement` (`\u003cbody\u003e`), en passant à la méthode `appendChild`, l'élément que nous venons de créer.\n\n\u003e **Comprendre le DOM et les nœuds («** _nodes_ **»)**\n\u003e \n\u003e La méthode `document.createElement` crée des objets d'instance `HTMLElement` et retourne une référence vers ces objets qui ne sont pas encore placés dans le DOM. Ces objets sont des nœuds du document (page web) de type HTML. Si le premier paramètre passé à `document.createElement` est un élément HTML connu, l'objet est encore plus précis. Dans notre cas `document.createElement('input')` est un objet d'instance `HTMLInputElement`.\n\u003e \n\u003e La méthode `document.getElementsByTagName` récupère un tableau d'instance `HTMLCollection` dont chaque élément est une référence à un `HTMLElement` déjà placé dans le DOM. Dans notre exemple, `document.getElementsByTagName('body')` retourne un objet `HTMLCollection` d'un seul élément puisque la balise `\u003cbody\u003e` est unique dans le DOM et `document.getElementsByTagName('body')[0]` retourne donc cet unique élément d'instance plus précise `HTMLBodyElement`.\n\u003e \n\u003e Chaque objet en JavaScript est créé à partir d'un prototype et y est lié. Chaque prototype est lui-même un objet qui est créé à partir d'un prototype et y est lié, etc. Tous les objets en dernier lieu sont chainés à `Object`. Par exemple ici :\n- Pour `HTMLBodyElement` (`\u003cbody\u003e`) la chaine prototypale est la suivante : `HTMLBodyElement` -\u003e `HTMLElement` -\u003e `Element` -\u003e `Node` -\u003e `EventTarget` -\u003e `Object`\n- Pour `HTMLInputElement` (`\u003cinput\u003e`) la chaine prototypale est la suivante : `HTMLInputElement` -\u003e `HTMLElement` -\u003e `Element` -\u003e `Node` -\u003e `EventTarget` -\u003e `Object`\n\u003e \n\u003e Nos deux objets ont chacun des méthodes utilisables comme `appendChild` qu'ils accèdent de leurs prototypes aussi :\n- La possibilité de pouvoir utiliser la méthode `inputFile.toString` vient de `Object`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.addEventListener` vient de `EventTarget`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.textContent` vient de `Node`.\n- La possibilité de pouvoir utiliser la méthode `inputFile.getElementsByTagName` vient de `Element`.\n- etc.\n\u003e \n\u003e Il faut également comprendre que l'on manipule des références vers les éléments HTML du DOM et que tous les objets HTML chargés en mémoire dans le navigateur ne sont pas forcément tous dans le DOM. C'est le cas de notre objet `HTMLInputElement` qui n'est référencé comme enfant de `HTMLBodyElement` dans le DOM qu'à partir de la ligne 5. Avant cela, l'objet existe et est manipulable via sa référence `inputFile` mais il n'est pas dans le DOM. Tout objet dont la référence se perd dans le code (n'est pas utilisée), et qui n'a pas été référencé dans le DOM (injecté) est alors perdu.\n\n\n\n### Lire l'image sélectionnée ###\n\nIl va maintenant être question de lire l'image que nous venons de sélectionner. C'est à dire de transformer chaque octet de données de l'image en une chaine de caractère exploitable par notre navigateur afin que celui-ci puisse afficher l'image.\n\nToujours dans notre **champ lexical global** et à la suite des précédentes instructions nous ajoutons ceci :\n\n```js\nvar reader = new FileReader();\nreader.readAsDataURL(inputFile.files[0]);\n```\n\nEn executant le code, nous obtenons alors l'erreur suivante : `Uncaught TypeError: Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'.`\n\nLe problème est le suivant : il n'y a aucuns octets représentant l'image de chargés dans `inputFile.files[0]` au moment ou `readAsDataURL` est exécuté. Il faut donc exécuter ce pend de code après avoir sélectionné l'image sinon `inputFile` ne contient pas d'image dans son tableau `files`.\n\n\n\n### Après la sélection... ###\n\nNous allons donc ajouter un écouteur d'évènement sur notre `HTMLInputElement` grâce à la méthode `addEventListener` disponible et exécuter par une **fonction de rappel** ce qu'il va se passer quand l'évènement ce produit. Voici donc à quoi va maintenant ressembler la partie qui est dans le **champ lexical global**.\n\n```js\nvar inputFile = document.createElement('input');\ninputFile.type = 'file';\ninputFile.accept = 'image/*';\n\ninputFile.addEventListener('change', function () {\n    var reader = new FileReader();\n    reader.readAsDataURL(inputFile.files[0]);\n\n    console.log('Done');\n});\n\ndocument.getElementsByTagName('body')[0].appendChild(inputFile);\n```\n\nOn précise donc ici via `'change'` à la ligne 5 que l'évènement que nous souhaitons écouter est le changement d'image dans l'élément `HTMLInputElement`. La fonction qui se trouve ensuite est celle qui va être exécutée par `addEventListener` quand l'image aura effectivement changée, à savoir : lire et convertir l'image.\n\nSi vous testez ce code, vous devriez voir dans la console de votre navigateur (F12, onglet console) le message `'Done'` (ligne 9) une fois l'évènement `'change'` déclenché.\n\n\u003e **Comprendre la boucle d'évènement**\n\u003e \n\u003e Les instructions en JavaScript sont analysées de haut en bas et exécutées par la **boucle d'évènement** JavaScript (« _Event Loop_ »). Quand une instruction JavaScript est analysée, elle est exécutée sur le tour (« _tick_ ») courant, dans la pile (« _stack_ ») courante. Chaque fois qu'une instruction fait appel à une fonction ou méthode, la pile se déplie et c'est au tour des instructions de cette fonction d'être exécutées sur le tour courant et ainsi de suite. Quand toutes les instructions d'une fonctions sont exécutées, la pile se replie jusqu'à ce que toutes les fonctions ai été exécutées de manière synchrone sur le même tour de la **boucle d'évènement**.\n\u003e \n\u003e Cependant, quand une instruction est asynchrone, elle n'est pas exécutée aussitôt qu'elle est analysée mais elle part dans une autre pile que la pile courante. Cette pile est placée dans la file d'attente (« _queue_ ») pour plus tard et sera exécutée sur un autre tour de la boucle. Dans notre exemple précédent, c'est le cas avec `addEventListener` dont la **fonction de rappel** (« _callback_ ») ne sera exécutée par la **boucle d'évènement** que lorsque l'évènement « changement d'image » sera levé. Les instructions dans `addEventListener` seront reversées dans la file d'attente au moment où l'image changera pour être exécutées sitôt que la boucle pourra s'en occuper.\n\u003e \n\u003e Cependant, ce n'est pas parce qu'une fonction dispose d'une **fonction de rappel** que celle-ci ne sera pas exécutée de manière synchrone, dans notre cas précédent c'est parce qu'il s'agit d'un évènement.\n\u003e \n\u003e Ce qui provoque une exécution de code sur un autre tour de boucle parmi des instructions à la suite dans une fonction sont de manière non exhaustives les éléments suivants :\n - `setInterval`, `setTimeout` ou `setImediate`.\n - Les Évènements (`load`, `click`, ...)\n - `XMLHttpRequest` ou les WebSockets\n - `requestAnimationFrame`\n - Des API HTML comme l'API File, ou l'API Web Database.\n - etc.\n\u003e \n\u003e Ainsi dans l'exemple suivant :\n\u003e \n\u003e ```js\n\u003e console.log('Test 1');\n\u003e setInterval(function () {\n\u003e     console.log('Test 2');\n\u003e }, 0);\n\u003e console.log('Test 3');\n\u003e ```\n\u003e \n\u003e La sortie produira dans l'ordre : `'Test 1'`, `'Test 3'` sur un premier tour de boucle et `'Test 2'` sur un autre.\n\n\n\n### Avec fonction de rappel asynchrone ###\n\nNous allons maintenant déporter ce qui est logique dans une fonction. Nous allons nommer cette fonction de manière à indiquer notre **intention** (« _intentional programming_ ») pour comprendre ce qui est fait lors de la relecture du code.\n\nLe développeur se référera à la partie « Déclaration » si cela lui est nécessaire, sinon il se contentera de relire la partie « Exécution ».\n\n**Déclaration**\n\n```js\n/**\n * Select an image from your device library and allow you to define what do after.\n * @param  {selectImage~callback} afterSelection - Allow you to set what do after selection.\n * @return {HTMLInputElement} The `HTMLInputElement` used to select photo from library.\n */\nfunction selectImage(afterSelection) {\n    var inputFile = document.createElement('input');\n    inputFile.type = 'file';\n    inputFile.accept = 'image/*';\n\n    inputFile.addEventListener('change', function () {\n        if (afterSelection) {\n\n            /**\n             * What do after selecting image.\n             * @callback selectImage~callback\n             * @param {HTMLInputElement} inputFile - The `HTMLInputElement` used to select photo from library.\n             */\n            afterSelection(inputFile);\n        }\n    });\n\n    return inputFile;\n}\n```\n\nNotre fonction `selectImage` va nous permettre de créer le mécanisme de sélection d'image, de le mettre à disposition et de nous permettre de déléguer par **fonction de rappel** ce qu'il sera fait une fois que l'image aura été choisie. Par ailleurs, cette fonction retourne le `HTMLInputElement` qu'elle crée en retour immédiat et le fourni également en premier argument de la **fonction de rappel**.\n\n**Exécution**\n\n```js\ndocument.getElementsByTagName(\"body\")[0].appendChild(\n    selectImage(function (inputFile) {\n        var reader = new FileReader();\n        reader.readAsDataURL(inputFile.files[0]);\n        console.log(\"Done\");\n    })\n);\n```\n\nAinsi à la ligne 2 nous savons que le code va nous permettre de sélectionner une image et la fonction passée en argument va constituer ce qu'il se passera quand celle-ci aura été choisie. En outre `selectImage` retourne de manière synchrone via son mot clé `return` le `HTMLInputElement` ce qui permet de le passer à `appendChild` à la ligne 1.\n\n\u003e **Comprendre les commentaires JSDoc**\n\u003e \n\u003e Si le but de la **programmation par intention** est de permettre de relire plus facilement ce que le code fait dans la partie « Exécution », les commentaires JSDoc permettent quand à eux d'expliquer les **entrées / sorties** (« _inputs_ » / « _outputs_ » ou « _I/O_ ») des fonctions définies dans la partie « Déclaration ».\n\u003e \n\u003e Le but est de ne pas relire le contenu de la fonction (sauf s'il faut la modifier) mais de comprendre\n- ce qu'elle fait,\n- ce qu'elle à besoin en entrée et\n- ce qu'elle retourne en sortie (ou ce qu'elle fournit à la **fonction de rappel**).\n\u003e \n\u003e Bien qu'il ne soit pas obligatoire de respecter le schéma de mon exemple, cela vous permettra avec divers outils de générer une documentation de vos scripts automatiquement.\n\n\n\n\n\n## Afficher l'image ##\n\nAugmentons un peu le code de retour de notre exemple précédent après l'utilisation de la fonction `selectImage`.\n\n```js\nvar reader = new FileReader(),\n    image = document.createElement('img');\n\nreader.readAsDataURL(inputFile.files[0]);\nimage.src = reader.result;\n\ndocument.getElementsByTagName('body')[0].appendChild(image);\nconsole.log('Done');\n```\n\nNous voyons à la ligne 7 que notre image est censée être affichée dans le DOM puisqu'elle est injectée dans la balise `\u003cbody\u003e`. Pourtant ce n'est pas le cas car le reader n'a pas eu le temps de convertir le résultat avant de l'afficher dans la source ce qui fait qu'il ne se passe rien.\n\n\n\n### Attendre la fin de la lecture ###\n\nDe la même manière qu'avec notre objet `HTMLInputElement`, il va falloir écouter l'évènement `'load'` qui exécutera une **fonction de rappel** quand l'image aura correctement été lue et convertie.\n\n```js\nvar reader = new FileReader();\n\nreader.addEventListener('load', function () {\n    var image = document.createElement('img');\n    image.src = reader.result;\n\n    document.getElementsByTagName('body')[0].appendChild(image);\n    console.log('Done');\n});\n\nreader.readAsDataURL(inputFile.files[0]);\n```\n\nIl est important de savoir ce qui déclenche l'évènement. Dans le cas présent, c'est l'exécution de `readAsDataURL` à la ligne 11. Ce qui signifie que pour que le code de rappel dans `'load'` puisse être exécuté, il faut qu'il ait été déclaré avant `readAsDataURL` sinon au moment ou celui-ci lèvera l'évènement `'load'`, il n'y aura pas encore d'écouteur d'évènement de déclaré.\n\n\n\n### Avec fonction de rappel asynchrone ###\n\nRé-écrivons ce code afin d'appeler les instructions d'exécution principale (dans le **champ lexical global**) par **intention**. Nous ajoutons donc au côté de `selectImage` une nouvelle fonction que nous appellerons `readImage`.\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Convert an Image from device to a Data Url Base64 string.\n * @param  {HTMLInputElement}   inputFile        - Element used to read the source image.\n * @param  {readImage~callback} afterConvertion  - Allow you to set what do after convertion.\n */\nfunction readImage(inputFile, afterConvertion) {\n    var reader = new FileReader();\n\n    reader.addEventListener('load', function () {\n        var image = document.createElement('img');\n        image.src = reader.result;\n        if (afterConvertion) {\n\n            /**\n             * What do after converting image.\n             * @callback readImage~callback\n             * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n             */\n            afterConvertion(image, reader);\n        }\n    });\n\n    reader.readAsDataURL(inputFile.files[0]);\n}\n```\n\nNous fournissons pour la **fonction de rappel** la possibilité de manipuler l'image avec en premier paramètre l'objet `HTMLImageElement` et en second paramètre l'objet `FileReader`. Nous choisissons cet ordre car il est plus probable qu'à l'utilisation, on souhaite manipuler l'image lue que réellement l'objet qui à permis sa conversion.\n\n**Exécution**\n\n```js\nvar body = document.getElementsByTagName('body')[0];\n\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            body.appendChild(image);\n            console.log(this.toString());\n        });\n    })\n);\n```\n\nAprès avoir mis la référence à `\u003cbody\u003e` dans la variable `body` ligne 1, on peut comprendre à la lecture des ligne 4 et 5 que le code va nous permettre de choisir une image, de la lire puis de faire autre chose. En l'occurrence ici de l'ajouter au DOM. On peut également voir à la ligne 5 que nous avons uniquement décidé d'utiliser le paramètre `image` pour la suite.\n\n\u003e **Raccourci et conservation des contextes d'exécution avec ES6**\n\u003e \n\u003e On utilise la notation `function () { /* ... */ }` pour utiliser une fonction anonyme comme **fonction de rappel** dans le code destiné à l'exécution dans le champ lexical global (le contexte d'exécution le plus haut). Ré-écrire ce terme `function` est assez verbeux et re-crée un nouveau contexte d'exécution entre chaque fonction et redéfinie la valeur de `this` à chaque niveau. Il est possible de conserver le `this` du contexte d'exécution important en changeant la manière de nommer les **fonctions de rappel** avec `=\u003e`. Le code précédent donnerait donc :\n\u003e \n\u003e ```js\n\u003e var body = this.document.getElementsByTagName('body')[0];\n\u003e \n\u003e body.appendChild(\n\u003e     selectImage(inputFile =\u003e {\n\u003e         readImage(inputFile, image =\u003e {\n\u003e             body.appendChild(image);\n\u003e             console.log(this.toString());\n\u003e         });\n\u003e     })\n\u003e );\n\u003e ```\n\u003e \n\u003e Dans l'exemple avec `=\u003e`, `this` vaut `window` alors que dans celui avec `function`, `this` vaut `undefined`.\n\n\n\n\n\n## Redimensionner l'image ##\n\nL'image sélectionnée est parfois grande alors que nous souhaitons l'afficher dans une zone réduite. De plus si nous souhaitons l'uploader sur le serveur plus tard, il serait intéressant qu'elle soit moins lourde. On souhaiterait qu'elle fasse au maximum 800 pixels de large ou au maximum 600 pixels de haut tout en conservant son ratio initial.\n\nVoici un petit algorithme capable de transformer notre image en utilisant pour cela un objet `HTMLCanvasElement`. Nous allons cette fois directement le créer dans une fonction, et l'utiliserons dans la partie exécution.\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Reduced size of image and kept the ratio.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    var canvas = document.createElement('canvas'),\n        imageResult = document.createElement('img'),\n        context,\n        maxWidth = 800,\n        maxHeight = 600,\n        width = imageSource.width,\n        height = imageSource.height;\n\n    if (width \u003e height) {\n        if (width \u003e maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height \u003e maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext('2d');\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.src = canvas.toDataURL('image/jpg', 0.8);\n\n    /**\n     * What do after resizing image.\n     * @callback reduceImage~callback\n     * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n     * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n     */\n    afterResizing(imageResult, canvas);\n}\n```\n\nNous pouvons lire comment cela fonctionne :\n- Après avoir fixé les largeur et hauteur maximales aux lignes 12 et 13,\n- nous trouvons quelle est la dimension la plus importante pour appliquer la valeur maximale à celle-ci ligne 17\n- et affectons à l'autre dimension le ratio approprié pour réduire l'image (ligne 19 et 24).\n- Après avoir défini la taille du canvas qui va nous permettre de créer l'image aux dimensions finales nous dessinons l'image à la ligne 33,\n- puis nous affectons l'image dans un nouvel élément de type `HTMLImageElement` en transferrant dans sa source le contenu du canvas au format « jpeg » compressé à « 80% » ligne 35.\n\n\u003e Note : actuellement ce code produira une image noire. C'est normal et cela va être expliqué dans la prochaine section.\n\nIl ne nous reste plus qu'à utiliser notre nouvelle fonction.\n\n**Exécution**\n\n```js\nvar body = document.getElementsByTagName('body')[0];\n\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            reduceImage(image, function (imageResult) {\n                body.appendChild(imageResult);\n                console.log('Done');\n            });\n        });\n    })\n);\n```\n\nNous pouvons voir que les lignes 7 et 8 (anciennement 6 et 7) sont restées inchangées et qu'une nouvelle ligne d'intention a été ajoutée, à savoir `reduceImage` (`image` est tout de même devenu `imageResult`).\n\n\u003e **Pourquoi la cascade de fonction de rappel**\n\u003e \n\u003e Sachez que si vous trouvez la cascade de **fonction de rappel** difficile à lire, vous pouvez toujours nommer et affecter chaque étape dans des variables pour tout rendre à plat. Pour ma part, je ne trouve pas cela plus simple puisque cela inverse le sens de lecture par rapport à ce qui est fait en premier et ce qui apparaît dans le fichier de code.\n\u003e \n\u003e ```js\n\u003e var body, inputFile, readImageCallback, selectImageCallback;\n\u003e \n\u003e body = document.getElementsByTagName('body')[0];\n\u003e \n\u003e readImageCallback = function (image) {\n\u003e     body.appendChild(image);\n\u003e     console.log('Done');\n\u003e };\n\u003e \n\u003e selectImageCallback = function (inputFile) {\n\u003e     readImage(inputFile, readImageCallback);\n\u003e };\n\u003e \n\u003e inputFile = selectImage(selectImageCallback);\n\u003e \n\u003e body.appendChild(inputFile);\n\u003e ```\n\u003e \n\u003e Il serait possible de rétablir le sens de lectrue non plus en associant les fonctions en tant qu'expression (dans une variable) mais en tant que déclaration de fonction afin qu'elle soit analysée à l'entrée dans la fonction et non à la ligne de l'affectation à une variable.\n\u003e \n\u003e ```js\n\u003e var body, inputFile;\n\u003e \n\u003e body = document.getElementsByTagName(\"body\")[0];\n\u003e \n\u003e inputFile = selectImage(selectImageCallback);\n\u003e \n\u003e function selectImageCallback(inputFile) {\n\u003e     readImage(inputFile, readImageCallback);\n\u003e };\n\u003e \n\u003e function readImageCallback(image) {\n\u003e     body.appendChild(image);\n\u003e     console.log(\"Done\");\n\u003e };\n\u003e \n\u003e body.appendChild(inputFile);\n\u003e ```\n\u003e \n\u003e Ce que je n'aime pas personnellement car dans ce cas nous mélangeons déclaration et exécution. C'est à dire qu'il faudrait déclarer toutes les fonctions à partir de la troisième ligne et nous perdrions de nouveau le sens de lecture.\n\n\n\n### Éviter l'image noire ###\n\nSi votre image réduite apparaît en noire dans le canvas c'est tout simplement parce qu'elle n'est pas chargée au moment ou elle est appliquée dans celui-ci. Il faut alors, comme c'était le cas avec l'objet `FileReader` attendre que l'image soit chargée avant d'exécuter la fonction de rappel.\n\n```js\n/* ... */\n\n/**\n * Convert an Image from device to a Data Url Base64 string.\n * @param  {HTMLInputElement}   inputFile       - Element used to read the source image.\n * @param  {readImage~callback} afterConvertion - Allow you to set what do after convertion.\n */\nfunction readImage(inputFile, afterConvertion) {\n    var reader = new FileReader();\n\n    reader.addEventListener('load', function () {\n        var image = document.createElement('img');\n\n        image.addEventListener('load', function () {\n            if (afterConvertion) {\n\n                /**\n                 * What do after converting image.\n                 * @callback readImage~callback\n                 * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n                 * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n                 */\n                afterConvertion(image, reader);\n            }\n        });\n\n        image.src = reader.result;\n    });\n\n    reader.readAsDataURL(inputFile.files[0]);\n}\n\n/* ... */\n\n/**\n * Reduced size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    var canvas = document.createElement('canvas'),\n        imageResult = document.createElement('img'),\n        context,\n        maxWidth = 800,\n        maxHeight = 600,\n        width = imageSource.width,\n        height = imageSource.height;\n\n    if (width \u003e height) {\n        if (width \u003e maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height \u003e maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext('2d');\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener('load', function () {\n\n        /**\n         * What do after resizing image.\n         * @callback reduceImage~callback\n         * @param {HTMLImageElement} image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {FileReader}       reader - The `FileReader` used to convert the original Image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL('image/jpg', 0.8);\n}\n\n/* ... */\n```\n\nvous constaterez donc, ligne 14 pour `readImage` et ligne 67 pour `reduceImage`, que nous avons ajouté `addEventListener` pour l'évènement `'load'` afin d'attendre que l'image soit complètement chargée avant de passer à la suite.\n\n\n\n### Externaliser des mécanismes réutilisables ###\n\nNotre fonction `reduceImage` fait deux choses :\n- elle nous délivre de nouvelles dimentions à partir de dimentions originales et\n- elle crée une « miniature » de l'image originale avec un canvas.\n\nCes deux actions pourraient être scindées pour ajouter un **niveau d'intention** à la relecture.\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {number}                       width         - Original with of item.\n * @param  {number}                       height        - Original height of item.\n * @param  {number}                       maxWidth      - Maximal width of the output item.\n * @param  {number}                       maxHeight     - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(width, height, maxWidth, maxHeight, afterResizing) {\n    if (width \u003e height) {\n        if (width \u003e maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height \u003e maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} width  - New with of item.\n     * @param {number} height - New height of item.\n     */\n    afterResizing(width, height);\n}\n\n/**\n * Create a reduced image from a more large image.\n * @param  {HTMLImageElement}             imageSource   - Element used as original image.\n * @param  {number}                       width         - New image width.\n * @param  {number}                       height        - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(imageSource, width, height, afterResizing) {\n    var canvas = document.createElement('canvas'),\n        imageResult = document.createElement('img'),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext('2d');\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener('load', function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL('image/jpg', 0.8);\n}\n\n/**\n * Reduce size of image, keept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio(imageSource.width, imageSource.height, 800, 600, function (width, height) {\n        thumbnailWithCanvas(imageSource, width, height, function (imageResult, canvas) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\n\u003e **Dette technique ou comment trouver le bon niveau d'intention**\n\u003e \n\u003e Vous me direz : « Pourquoi ne pas encore re-scinder les fonctions `resizeWithSameRatio` ou `thumbnailWithCanvas` ? Dans ce cas là, où s'arrête le travail pour faciliter la relecture ? Il faut pour cela repérer en quoi la fonction pourrait se suffire à elle-même. En général les « _inputs_ » / « _outputs_ » sont une bonne indication car si vous êtes capable en sortie de produire un élément de même type que celui en entrée, c'est que vos instructions sont bonnes pour être groupées.\n\u003e \n\u003e Il n'est pas non plus nécessaire de scinder une fonction qui pourrait l'être tant que la nécessité ne s'en fait pas ressentir. Il faut trouver le bon équilibre entre temps et utilité.\n\u003e \n\u003e Certain outils vous permette de jauger la complexité des fonctions à l'aide de la **complexité cyclomatique** (« _Cyclomatic Complexity_ ») ou du **Ratio d'endettement** qui donne un poids à chaque instruction et qui vous aide à grouper celle-ci en sous fonctions.\n\n\n\n### Paramètres d'entrée par passage d'objet ###\n\nVous aurez remarqué que pour la fonction `resizeWithSameRatio` il y a un nombre conséquent de paramètre à passer. Là première question à se poser est : « Est-il possible de diminuer ce nombre de paramètre ? » Ici on pourrait estimer que si la `maxWidth` et la `maxHeight` sont `undefined` alors on pourrait assigner des valeurs par défaut comme ceci :\n\n```js\n/* ... */\nfunction resizeWithSameRatio(width, height, maxWidth, maxHeight, afterResizing) {\n    var maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600/* ... */\n\n    /* ... */\n}\n/* ... */\n```\n\nce qui ne nous oblige plus à préciser réellement les valeurs en utilisant notre fonction comme ceci :\n\n```js\nresizeWithSameRatio(1024, 768, undefined, undefined, function (width, height) {\n    /* ... */\n});\n```\n\nCependant vous noterez deux problèmes :\n- Bien qu'il ne soit plus nécessaire d'indiquer les tailles maximales choisis pour la miniature, il est nécessaire de placer des valeurs à vide pour pouvoir appeler en dernier lieu, à la bonne position, la **fonction de rappel**.\n- Il est impossible à la relecture de la partie « Exécution » de comprendre à quoi servent chaque paramètres passés. Il faut alors se référer à la partie « Déclaration ».\n\n\u003e Note : vous remarquerez que j'ai utilisé `undefined` et non `null` pour signifier qu'il n'y avait pas de valeur de précisée. Si j'avais réellement voulu être en accord avec le type de paramètre attendu, j'aurais dû mettre `NaN`. Pour en savoir plus sur la différence entre null et undefined je vous propose de lire l'article [Est-il si null cet undefined ?](https://blog.lesieur.name/difference-entre-type-null-et-type-undefined-en-javascript/).\n\nLa manière la plus simple de rendre lisible les paramètres d'entrée, et de les rendre optionnels à l'appel est de n'utiliser pour unique entrée qu'un objet de la manière suivante :\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {Object}                       options             - All input values.\n * @param  {number}                       [options.width]     - Original with of item.\n * @param  {number}                       [options.height]    - Original height of item.\n * @param  {number}                       [options.maxWidth]  - Maximal width of the output item.\n * @param  {number}                       [options.maxHeight] - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing       - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(options, afterResizing) {\n    var width = options.width || 0,\n        height = options.height || 0,\n        maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600\n\n    if (width \u003e height) {\n        if (width \u003e maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height \u003e maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} width  - New with of item.\n     * @param {number} height - New height of item.\n     */\n    afterResizing(width, height);\n}\n\n/* ... */\n\n/**\n * Create a reduced image from a more large image.\n * @param  {Object}                       options               - All input values.\n * @param  {HTMLImageElement}             [options.imageSource] - Element used as original image.\n * @param  {number}                       [options.width]       - New image width.\n * @param  {number}                       [options.height]      - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing         - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(options, afterResizing) {\n    var imageSource = options.imageSource || document.createElement('img'),\n        width = options.width || 0,\n        height = options.height || 0,\n        canvas = document.createElement('canvas'),\n        imageResult = document.createElement('img'),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext('2d');\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener('load', function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n         */\n        afterResizing(imageResult, canvas);\n    });\n\n    imageResult.src = canvas.toDataURL('image/jpg', 0.8);\n}\n\n/* ... */\n\n/**\n * Reduce size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio({\n        height: imageSource.height,\n        width: imageSource.width\n    }, function (height, width) {\n        thumbnailWithCanvas({\n            imageSource: imageSource,\n            width: width,\n            height: height\n        }, function (canvas, imageResult) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\nVous remarquerez ainsi que lors de l'appel des fonctions `resizeWithSameRatio` ligne 85 et `thumbnailWithCanvas` ligne 89 nous ne passons que les paramètres nécessaires dans l'ordre voulu et que nous savons à présent côté « Exécution » à quoi correspond chaque paramètre d'entrée puisqu'ils sont nommés.\n\n\u003e **Passage de paramètres d'entrée par décomposition avec ES6**\n\u003e \n\u003e Vous constaterez dans l'exemple précédent qu'il est nécessaire de consacrer plusieurs lignes afin de constituer des **fonction de substitution** (« _fallback_ ») au cas où la propriété n'ait pas été passée dans l'objet des entrées (ligne 13 à 16 pour `resizeWithSameRatio`). Les fonctions de substitution sont assignées comme raccourci grâce à `||` : si la partie de gauche une fois convertie en booléen renvoi `true`, alors on affecte cette valeur dans sa forme originale, si elle renvoi `false` alors on passe à l'élément de droite et on l'affecte.\n\u003e \n\u003e Il existe un meilleur raccourci en ES6 qui consiste à directement créer les éléments vides lors de la définition de la fonction par **décomposition** :\n\u003e \n\u003e ```js\n\u003e /* ... */\n\u003e function resizeWithSameRatio({\n\u003e     width = 0,\n\u003e     height = 0,\n\u003e     maxWidth = 800,\n\u003e     maxHeight = 600\n\u003e } = {}, afterResizing) {\n\u003e     if (width \u003e height) {\n\u003e         if (width \u003e maxWidth) {\n\u003e             height *= maxWidth / width;\n\u003e             width = maxWidth;\n\u003e         }\n\u003e     } else {\n\u003e         if (height \u003e maxHeight) {\n\u003e             width *= maxHeight / height;\n\u003e             height = maxHeight;\n\u003e         }\n\u003e     }\n\u003e     /* ... */\n\u003e }\n\u003e /* ... */\n\u003e ```\n\u003e \n\u003e afin de l'appeler comme ceci :\n\u003e \n\u003e ```js\n\u003e resizeWithSameRatio({\n\u003e     height: imageSource.height,\n\u003e     width: imageSource.width\n\u003e }, function (width, height) {\n\u003e     /* ... */\n\u003e });\n\u003e ```\n\n\n\n### Arguments de sortie avec référence par nom au lieu de référence par position ###\n\nDe la même manière que l'on souhaite uniquement passer les paramètres d'entrée dont nous avons besoin pour utiliser une fonction, on souhaiterait pouvoir utiliser uniquement les arguments de sortie dont nous avons besoin sans avoir à invoquer des variables que nous n'utiliserons pas dans la **fonction de rappel**. Cela est possible en utilisant des **références par nom** [comme dans AngularJS](https://blog.lesieur.name/javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs/) au lieu de références par position.\n\n\u003e **Paramètres vs. arguments**\n\u003e \n\u003e Dans la littérature JavaScript, vous trouverrez souvent les termes paramètres et arguments comme interchangeables car ils représentent les éléments à passer aux fonctions ou fournie par celle-ci. En réalité, ces deux termes sont bien différent puisque les paramètres désignent ce que l'on passe à la fonction lors de son exécution alors que les arguments désignent ce qui est fourni par la fonction lors de sa déclaration. Aussi dans le code ci-dessous, `1024`, `768`, `undefined` et `undefined` sont les paramètres passées et `width` et `height` sont les arguments fournis.\n\u003e \n\u003e ```js\n\u003e resizeWithSameRatio(1024, 768, undefined, undefined, function (width, height) {\n\u003e     /* ... */\n\u003e });\n\u003e ```\n\nNotre code de la partie précédente devient alors celui-ci :\n\n```js\n/* ... */\n\n/**\n * Reduce size of 2D item and kept the ratio based on max width and height.\n * @param  {Object}                       options             - All input values.\n * @param  {number}                       [options.width]     - Original with of item.\n * @param  {number}                       [options.height]    - Original height of item.\n * @param  {number}                       [options.maxWidth]  - Maximal width of the output item.\n * @param  {number}                       [options.maxHeight] - Maximal height of the output item.\n * @param  {resizeWithSameRatio~callback} afterResizing       - Allow you to set what do after resizing.\n */\nfunction resizeWithSameRatio(options, afterResizing) {\n    var width = options.width || 0,\n        height = options.height || 0,\n        maxWidth = options.maxWidth || 800,\n        maxHeight = options.maxHeight || 600\n\n    if (width \u003e height) {\n        if (width \u003e maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n        }\n    } else {\n        if (height \u003e maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n        }\n    }\n\n    /**\n     * What do after find the reduced value.\n     * @callback resizeWithSameRatio~callback\n     * @param {number} [width]  - New with of item.\n     * @param {number} [height] - New height of item.\n     */\n    Function.namedParameters(afterResizing, {\n        width: width,\n        height: height\n    });\n}\n\n/* ... */\n\n/**\n * Create a reduced image from a more large image.\n * @param  {Object}                       options               - All input values.\n * @param  {HTMLImageElement}             [options.imageSource] - Element used as original image.\n * @param  {number}                       [options.width]       - New image width.\n * @param  {number}                       [options.height]      - New image height.\n * @param  {thumbnailWithCanvas~callback} afterResizing         - Allow you to set what do after generating new image.\n */\nfunction thumbnailWithCanvas(options, afterResizing) {\n    var imageSource = options.imageSource || document.createElement(\"img\"),\n        width = options.width || 0,\n        height = options.height || 0,\n        canvas = document.createElement('canvas'),\n        imageResult = document.createElement('img'),\n        context;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    context = canvas.getContext('2d');\n    context.drawImage(imageSource, 0, 0, width, height);\n\n    imageResult.addEventListener('load', function () {\n\n        /**\n         * What do after render the reduced image.\n         * @callback resizeWithSameRatio~callback\n         * @param {HTMLImageElement}  [image]  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n         * @param {HTMLCanvasElement} [canvas] - The `HTMLCanvasElement` used to reduce the image.\n         */\n        Function.namedParameters(afterResizing, {\n            imageResult: imageResult,\n            canvas: canvas\n        });\n    });\n\n    imageResult.src = canvas.toDataURL('image/jpg', 0.8);\n}\n\n/* ... */\n\n/**\n * Reduce size of image, kept the ratio and return a miniature of original image.\n * @param  {HTMLImageElement}     imageSource   - Element used as original image.\n * @param  {reduceImage~callback} afterResizing - Allow you to set what do after resizing.\n */\nfunction reduceImage(imageSource, afterResizing) {\n    resizeWithSameRatio({\n        height: imageSource.height,\n        width: imageSource.width\n    }, function (height, width) {\n        thumbnailWithCanvas({\n            imageSource: imageSource,\n            width: width,\n            height: height\n        }, function (canvas, imageResult) {\n\n            /**\n             * What do after resizing image.\n             * @callback reduceImage~callback\n             * @param {HTMLImageElement}  image  - The `HTMLImageElement` that content the correct Data Url Base64 source.\n             * @param {HTMLCanvasElement} canvas - The `HTMLCanvasElement` used to reduce the image.\n             */\n            afterResizing(imageResult, canvas);\n        })\n    });\n}\n\n/* ... */\n```\n\nVous constaterez que nous faisons alors appel à `Function.namedParameters` qui nous permet de créer des fonctions de rappel qui nous renvoi les arguments dans l'ordre que nous le souhaitons et cela en s'appuyant sur le **nom du paramètre**. Ainsi nous pouvons comme c'est le cas ligne 94 et ligne 99 intervertir les arguments ou seulement appeler le second en premier sans que cela ne brise notre code.\n\n\u003e **Comment simuler une fonction de rappel par nom de paramètre**\n\u003e \n\u003e Basiquement le code utiliser par `Function.namedParameters` pourrait être le suivant.\n\u003e \n\u003e ```js\n\u003e Function.prototype.namedParameters = function (type, list, error) {\n\u003e     var params,\n\u003e         callback = type,\n\u003e         regex = /^(?:function *[a-zA-Z0-9_$]*)? *\\(? *([a-zA-Z0-9_$, ]*) *\\)?/g,\n\u003e         functions = list || {};\n\u003e     if (type instanceof Array) {\n\u003e         callback = type.pop();\n\u003e         params = type;\n\u003e     } else {\n\u003e         params = ((regex.exec(callback.toString()) || [1]).slice(1)[0] || \"\").split(',')\n\u003e     }\n\u003e     params = params.map(function (item) {\n\u003e         var key = item.trim();\n\u003e         if (functions.hasOwnProperty(key)) {\n\u003e             return functions[key];\n\u003e         } else {\n\u003e             return (error \u0026\u0026 error(key)) || new Error('Named parameter `' + key + \"` doesn't exist.\");\n\u003e         }\n\u003e     });\n\u003e     callback.apply(this, params);\n\u003e };\n\u003e ```\n\u003e \n\u003e Vous trouverez tout ce qu'il vous faut dans l'article [JavaScript et fonction de rappel par nom de paramètre comme dans AngularJS](https://blog.lesieur.name/javascript-et-callback-par-nom-de-parametre-comme-dans-angularjs/) pour manipuler `Function.prototype.namedParameters` et comprendre comment il fonctionne.\n\n\n\n\n\n## Uploader l'image ##\n\nLa dernière étape va être d'uploader l'image pour permettre à un code hébergé sur le serveur de la récupérer et de l'enregistrer. Dans notre exemple, nous allons supposer que nous avons un code côté serveur qui attend une requête XMLHttpRequest (Ajax) en POST et qui s'attend à recevoir dans la variable `image` le contenu de l'image en base64. Si tout se passe bien, le contenu `\"Done\"` est renvoyé. (Pour les besoins de l'article nous avons simulé cela avec l'adresse `https://www.mocky.io/v2/5773cc3c0f0000950c597af9`).\n\n### Upload, gestion d'erreur et de succès ###\n\nNous allons de nouveau créer une fonction pour gérer l'upload comme ceci :\n\n**Déclaration**\n\n```js\n/* ... */\n\n/**\n * Upload an image with an XHR POST request via the `image` variable.\n * @param  {Object}               options        - All input values.\n * @param  {string}               options.url    - Url of service that handle the image POST request.\n * @param  {HTMLImageElement}     options.image  - The `HTMLImageElement` that contain the image.\n * @param  {uploadImage~callback} afterUploading - Allow you to set what do after upload of image.\n */\nfunction uploadImage(options, afterUploading) {\n    var xhr = new XMLHttpRequest(),\n        formData = new FormData();\n\n    url = options.url || new Error('`options.url` parameter invalid for `uploadImage` function.');\n    image = options.image || new Error('`options.image` parameter invalid for `uploadImage` function.');\n\n    if (url instanceof Error) {\n      throw url;\n    }\n    if (image instanceof Error) {\n      throw image;\n    }\n\n    formData.append('image', image.src);\n    xhr.open('POST', url, true);\n\n    xhr.addEventListener('load', function () {\n        if (xhr.status \u003c 200 \u0026\u0026 xhr.status \u003e= 400) {\n            return Function.namedParameters(afterUploading, {\n                error: new Error('XHR connection error for `uploadImage` function.'),\n                response: null\n            });\n        }\n\n        /**\n         * What do after upload the image.\n         * @callback uploadImage~callback\n         * @param {Error}  [error]    - Return `null` if no error occur else return an `Error` object.\n         * @param {string} [response] - Return the content of XHR response if no error occur, else return `null`.\n         */\n        Function.namedParameters(afterUploading, {\n            error: null,\n            response: xhr.responseText\n        });\n    });\n\n    xhr.addEventListener('error', function (test) {\n        Function.namedParameters(afterUploading, {\n            error: new Error('XHR connection error for `uploadImage` function.'),\n            response: null\n        });\n    });\n\n    xhr.send(formData);\n}\n\n/* ... */\n```\n\nNous créons donc :\n- une instance `xhr` de `XMLHttpRequest` ligne 11 que\n- nous paramétrons en POST à la ligne 25 à laquelle nous ajoutons\n- une écoute en cas de réussite (ligne 27)\n- et une écoute en cas d'échec (ligne 47)\n- avant d'envoyer les données ligne 54 à l'aide d'un container `FormData`.\n\nLa nouveauté ici c'est la gestion des erreurs, nous pouvons constater que cette fois, les propriétés `options.url` et `options.image` de l'argument `options` sont obligatoires ce qui signifie qu'il n'ai pas possible de décider d'une valeur par défaut ligne 14 et 15. C'est pour cela que nous créons des `Error` afin de les lancer et ainsi créer des exceptions aux lignes 18 et 21. Le mot clé `throw` arrête toute suite au script et renvoi des exceptions qui sont ainsi récupérables via un mécanisme de `try` / `catch` mais, plus intéressant, qui permettent au développeur utilisant la fonction de voir ce qui ne va pas.\n\n**Exécution**\n\n*Et voici le code final à relire pour comprendre rapidement ce qui se passe ici. Il ne sera pas nécessaire d'entrer dans le détail à moins d'améliorer des fonctionnalités.*\n\n```js\nvar body = document.getElementsByTagName('body')[0];\nbody.appendChild(\n    selectImage(function (inputFile) {\n        readImage(inputFile, function (image) {\n            reduceImage(image, function (imageResult) {\n                uploadImage({\n                    url: 'https://www.mocky.io/v2/5773cc3c0f0000950c597af9',\n                    image: imageResult\n                }, function (error, response) {\n                    var data = document.createElement('div');\n                    data.textContent = (error) ? error : response;\n\n                    body.appendChild(data);\n                    body.appendChild(imageResult);\n                });\n            });\n        });\n    })\n);\n```\n\nNous utilisons donc notre nouvelle fonction à la ligne 6 avec nos deux paramètres obligatoires. Dans notre exemple nous utilisons l'`error` pour définir quel message nous allons renvoyer dans le DOM (ligne 11).\n\n\u003e **Erreur ou exception ?**\n\u003e \n\u003e En JavaScript les erreurs sont une déclinaison d'objet à elles seules et se créent en utilisant la syntaxe suivante `new Error()`. Elles se manipulent comme un objet et peuvent être retournées avec `return` ou mises dans des variables.\n\u003e \n\u003e Les exceptions quant à elles sont des erreurs qui sont lancées ou jetées avec le mot clé `throw` soit `throw new Error()` et ne peuvent plus être manipulées. Elles mettent ainsi fin aux contextes d'exécution les un après les autres en remontant jusqu'à afficher une erreur dans la console. Elles peuvent être interceptées avec `try` et l'erreur qu'elles remontent peut être manipulée via `catch (exception)`.\n\u003e \n\u003e Vous trouverez tout ce qu'il vous faut dans l'article [Gérer les erreurs et les exceptions en JavaScript](https://blog.lesieur.name/gerer-les-erreurs-et-les-exceptions-en-javascript/) à propos des erreurs.\n\n\n\n\n\n## Isoler son code ##\n\nDepuis le début, nous créons tout dans le **champ lexical global** ce qui a pour conséquence d'écraser d'éventuelles variables déjà existantes à travers tous les scripts. Il convient donc d'isoler chaque code dans un **contexte d'exécution** dédié. Cela est possible en utilisant une fonction que nous exécutons immédiatement, ou en créant une **classe** (« _instantiate object_ ») spécifique pour ranger toutes les fonctions, ou encore en rangeant notre fonction dans un **espace de nom** (« _namespace_ ») dédié.\n\n\n\n### Fonction anonyme auto-exécutée ###\n\nNous allons nous contenter du premier point ici en créant une simple fonction anonyme (sans nom) et en l'exécutant immédiatement :\n\n```js\n;(function () {\n\n    /* Intégralité du code déjà existant ici. */\n\n}());\n```\n\nainsi, aucune fonctions et variables crées dans ce **contexte d'exécution** ne sera accessible ailleurs et n'ira écraser des variables déjà existante.\n\n*Note : le bout de code que nous avons attaché au prototype de `Function` sera quand à lui accessible partout car `Function` fait déjà partie du **contexte d'exécution global** (champ lexical global).*\n\n\n\n### Classe spécifique ###\n\nIl est également possible d'accrocher le code utile dans une classe JavaScript que nous instancierons afin d'exécuter le code. Nous pourrions créer alors deux types de fonctions :\n\n- Les fonctions privées qui ne seront accessibles que dans le **champ lexical** de la classe.\n- Les fonctions publiques qui seront attachées à `this` et qui seront donc accessibles depuis l'objet instancié.\n\nCela pourrait ressemblé à ceci :\n\n```js\nvar UploadImage = function () {\n    var privates =  {},\n        publics = this;\n\n    privates.selectImage = function (afterSelectCallback) { /* ... */ };\n    privates.readImage = function (inputFile, callback) { /* ... */ };\n    privates.resizeWithSameRatio = function (options, callback) { /* ... */ };\n    privates.thumbnailWithCanvas = function (options, callback) { /* ... */ };\n    privates.reduceImage = function (imageSource, callback) { /* ... */ };\n    privates.uploadImage = function (options, callback) { /* ... */ };\n\n    publics.init = function () {\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.appendChild(\n            privates.selectImage(function (inputFile) {\n                privates.readImage(inputFile, function (image) {\n                    privates.reduceImage(image, function (imageResult) {\n                        privates.uploadImage({\n                            url: \"https://www.mocky.io/v2/5773cc3c0f0000950c597af9\",\n                            image: imageResult\n                        }, function (error, response) {\n                            var data = document.createElement(\"div\");\n                            data.textContent = (error) ? error : response;\n\n                            body.appendChild(data);\n                            body.appendChild(imageResult);\n                        });\n                    });\n                });\n            })\n        );\n    };\n };\n```\n\nAvec la ligne d'instanciation :\n\n```js\nnew UploadImage().init();\n```\n\n\n\n\n\n## Exemple complet sur Codepen ##\n\nJe finirais par vous fournir un exemple fonctionnel de ce que nous venons de voir (avec une fonction anonyme comme **champ lexical**). C'est à vous de jouer maintenant !\n\n[Vous pouvez lire et tester le résultat final sur ce Codepen](http://codepen.io/Haeresis/pen/aZvQVQ)\n\n\n\n\n\n## Et vous ? ##\n\nJe vous laisse décider lesquels de ces conseils peuvent vous apporter de l'aide et lesquels ne le feront pas et vous donne rendez-vous dans les commentaires pour partager votre expérience sur la question ou éclaircir des zones d'ombre dans cet article.","dates":{"published":{"$date":"2016-06-27T10:49:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Coder proprement en JavaScript par l'exemple\u0026nbsp;: upload d'image","urn":"coder-proprement-en-javascript-par-l-exemple-upload-d-image","description":"Démontrer par l'exemple comment produire du code que vous et les autres pourrez relire sans entrer dans les détails.","image":"https://blog.lesieur.name/media/images/upload/clean-code-design-patterns-7-638.jpg"}
{"_id":{"$oid":"576946cfd1b7fe136fc2005f"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5810ca369e74a4a6d8aee691"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48be"}],"content":"Connaissez-vous ce petit code de triche qu'est le Konami Code ? Ce code à entrer dans les jeux vidéos permet de débloquer des options secrètes. Je vous propose de l'implémenter sur vos sites web en JavaScript avec une petite API maison gérant le clavier et le tactile. Suivez le guide !\n\n\u003cp\u003e\u003cimg width=\"600\" height=\"283\" style=\"display: block; margin: 0 auto; max-width: 100%\" src=\"media/images/upload/76d6ddd2a0293213d04e0847645bddbc.jpg\" alt=\"Konami Code\"\u003e\u003c/p\u003e\n\nL'API présenté dans cet article lève un événement JavaScript quand vous entrez la célèbre séquence du Konami Code « Haut Haut Bas Bas Gauche Droite Gauche Droite B A » avec votre clavier. Cela marche également avec votre doigt en glissant « Haut Haut Bas Bas Gauche Droite Gauche Droite » puis en faisant « Tap Tap ».\n\n\u003cdiv style=\"text-align: center;\"\u003e\n    \u003cp\u003e\u003ca href=\"https://github.com/Haeresis/konami-code-js\"\u003eSource sur GitHub\u003c/a\u003e / \u003ca href=\"https://www.npmjs.com/package/konami-code-js\"\u003eNpm Package\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Utilisation Basique ##\n\n```js\nnew KonamiCode(function () {\n    // Faites quelque chose ici.\n    // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n    // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n});\n```\n\n\n\n\n\n## Exemple plus complet ##\n\nDans cet exemple, nous allons autoriser la reconnaissance du Konami Code uniquement si la souris ou le doigt est sur l'élément `\u003carticle\u003e`. Une fois que la séquence aura été reconnue, on désactivera la reconnaissance du Konami Code.\n\n```js\nvar kc = new KonamiCode({\n    listener: document.getElementsByTagName(\"article\")[0]\n});\n\nkc.setCallback(function () {\n    kc.disable();\n\n    // Faites quelque chose ici.\n    // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n    // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n});\n```\n\n\n\n\n\n## Documentation de l'API ##\n\n**Pour obtenir la dernière version de l'API documentée, référez-vous à [la documentation sur Github](https://github.com/Haeresis/konami-code-js)**\n\n\u003ca name=\"KonamiCode\"\u003e\u003c/a\u003e\n\n**Version**: 0.8.0\n\n**Auteur:** [Bruno Lesieur](https://www.lesieur.name/)\n\n* [KonamiCode](#KonamiCode)\n    * [new KonamiCode([options])](#new_KonamiCode_new)\n    * _instance_\n        * [.enable()](#KonamiCode+enable) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.enableKeyboardKeys()](#KonamiCode+enableKeyboardKeys) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.enableTouchGesture()](#KonamiCode+enableTouchGesture) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.disable()](#KonamiCode+disable) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.disabledKeyboardKeys()](#KonamiCode+disabledKeyboardKeys) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.disabledTouchGesture()](#KonamiCode+disabledTouchGesture) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.setListener(listener)](#KonamiCode+setListener) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.setCallback(callback)](#KonamiCode+setCallback) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n        * [.setOptions([options])](#KonamiCode+setOptions) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n    * _static_\n        * [.noConflict()](#KonamiCode.noConflict)\n        * [.getNumberOfInstance()](#KonamiCode.getNumberOfInstance) ⇒ \u003ccode\u003enumber\u003c/code\u003e\n\n\u003ca name=\"new_KonamiCode_new\"\u003e\u003c/a\u003e\n\n### new KonamiCode([options])\nCréer une reconnaissance de la séquence du Konami Code « Haut Haut Bas Bas Gauche Droite Gauche Droite B A » sur un HTMLElement précis ou sur le HTMLDocument global.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | \u003ccode\u003eObject\u003c/code\u003e \u0026#124; \u003ccode\u003efunction\u003c/code\u003e | Contient toutes les options. Si le type de `options` est Function, il est exécuté après que la séquence du Konami Code est été reconnue. |\n| [options.callback] | \u003ccode\u003efunction\u003c/code\u003e | Si `options` n'est pas une Function, `options.callback` est exécuté après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante de `KonamiCode`. |\n| [options.listener] | \u003ccode\u003eNode\u003c/code\u003e | Par défaut c'est le HTMLDocument `window.document`. Vous pouvez passer un HTMLElement comme `\u003cinput\u003e` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n| [options.debug] | \u003ccode\u003eboolean\u003c/code\u003e | Par défaut sa valeur est à `false`. Quand vous changez cette valeur à `true`, cela vous permet de voir tous les messages de débogue dans la console. |\n\n\u003ca name=\"KonamiCode+enable\"\u003e\u003c/a\u003e\n\n### konamiCode.enable() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nActive l'écoute de la séquence du Konami Code.\n\n**Type**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Return**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\u003ca name=\"KonamiCode+enableKeyboardKeys\"\u003e\u003c/a\u003e\n\n### konamiCode.enableKeyboardKeys() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nActive l'écoute de la séquence du Konami Code pour les touches du clavier.\n\n**Kind**: instance method of \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Returns**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Current instance of KonamiCode\n\u003ca name=\"KonamiCode+enableTouchGesture\"\u003e\u003c/a\u003e\n\n### konamiCode.enableTouchGesture() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nActive l'écoute de la séquence du Konami Code pour les gestes tactiles.\n\n**Kind**: instance method of \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Returns**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Current instance of KonamiCode\n\u003ca name=\"KonamiCode+disable\"\u003e\u003c/a\u003e\n\n### konamiCode.disable() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nDésactive l'écoute de la séquence du Konami Code.\n\n**Type**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Return**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\u003ca name=\"KonamiCode+disabledKeyboardKeys\"\u003e\u003c/a\u003e\n\n### konamiCode.disabledKeyboardKeys() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nDésactive l'écoute de la séquence du Konami Code pour les touches du clavier.\n\n**Kind**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Returns**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\u003ca name=\"KonamiCode+disabledTouchGesture\"\u003e\u003c/a\u003e\n\n### konamiCode.disabledTouchGesture() ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nDésactive l'écoute de la séquence du Konami Code pour les gestes tactiles.\n\n**Kind**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Returns**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\u003ca name=\"KonamiCode+setListener\"\u003e\u003c/a\u003e\n\n### konamiCode.setListener(listener) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nChange l'écouteur. L'ancien écouteur ne fonctionnera plus. Note: changer l'écouteur ré-active une instance que aurait été précédemment `disable()`.\n\n**Type**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Return**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| listener | \u003ccode\u003eNode\u003c/code\u003e | Vous pouvez passer un HTMLElement comme `\u003cinput\u003e` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n\n\u003ca name=\"KonamiCode+setCallback\"\u003e\u003c/a\u003e\n\n### konamiCode.setCallback(callback) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nChange la Function exécutée après que la séquence du Konami Code ai été reconnue.\n\n**Type**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Return**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| callback | \u003ccode\u003efunction\u003c/code\u003e | Function exécutée après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante du KonamiCode. |\n\n**Example**\n```js\nnew KonamiCode().setCallback(function (konamiCode) {\n    konamiCode.disable();\n    // Faites quelque chose ici.\n});\n```\n\u003ca name=\"KonamiCode+setOptions\"\u003e\u003c/a\u003e\n\n### konamiCode.setOptions([options]) ⇒ \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\nChanger les options pour l'instance courante.\n\n**Kind**: instance de méthode du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Returns**: \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e - Instance courante `KonamiCode`\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [options] | \u003ccode\u003eObject\u003c/code\u003e | Contient toutes les options. |\n| [options.callback] | \u003ccode\u003efunction\u003c/code\u003e | Function exécutée après que la séquence du Konami Code ai été reconnue. Le premier argument fourni par la callback est l'instance courante du KonamiCode. |\n| [options.listener] | \u003ccode\u003eNode\u003c/code\u003e | Par défaut c'est le HTMLDocument `window.document`. Vous pouvez passer un HTMLElement comme `\u003cinput\u003e` (HTMLInputElement) pour seulement reconnaître la séquence du Konami Code quand la souris ou le doigt est sur cet élément. |\n| [options.debug] | \u003ccode\u003eboolean\u003c/code\u003e | Par défaut sa valeur est à `false`. Quand vous changez cette valeur à `true`, cela vous permet de voir tous les messages de débogue dans la console. |\n\n\u003ca name=\"KonamiCode.noConflict\"\u003e\u003c/a\u003e\n\n### KonamiCode.noConflict()\nSi une variable `KonamiCode` existe déjà dans l'environnement global, vous pouvez la conserver en changeant le nom du `KonamiCode`.\nVous pouvez aussi simplement utiliser cette fonction pour changer le nom de la variable global « KonamiCode ».\n\n**Type**: methode statique du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Example**\n```js\n\u003cscript src=\"other/konami-code.js\"\u003e\u003c/script\u003e\n\u003cscript src=\"last/konami-code.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n    var MyKC = KonamiCode.noConflict();\n    console.log(KonamiCode); // Return the other KonamiCode\n    console.log(MyKC); // Return your KonamiCode\n\u003c/script\u003e\n```\n\u003ca name=\"KonamiCode.getNumberOfInstance\"\u003e\u003c/a\u003e\n\n### KonamiCode.getNumberOfInstance() ⇒ \u003ccode\u003enumber\u003c/code\u003e\nRetourne le nombre de fois que `KonamiCode` a été instancié.\n\n**Type**: méthode statique du \u003ccode\u003e[KonamiCode](#KonamiCode)\u003c/code\u003e\n\n**Return**: \u003ccode\u003enumber\u003c/code\u003e - Nombre d'instance de `KonamiCode` créer depuis le début.\n\n\n\n\n\n## Chaînage ##\n\nToutes les méthodes instanciées de l'API  retourne l'instance courante de l'objet `KonamiCode`. Cela vous permet d'instancier un objet comme ceci :\n\n```js\nnew KonamiCode()\n    .disable()\n    .enable()\n    .setListener(document.getElementsByTagName(\"body\")[0])\n    .setCallback(function (konamiCode) {\n        konamiCode.disable();\n        // Faites quelque chose ici.\n        // Cette partie est exécutée si « Haut Haut Bas Bas Gauche Droite Gauche Droite B A »\n        // est reconnue depuis votre clavier ou votre mouvement de doigt sur l'écran.\n    });\n```\n\n\n\n\n\n## Mode Débogue ##\n\nVous pouvez voir chaque étape de la vie de l'instance dans votre débogueur par des messages console si le mode débogue est activé.\n\n```js\nnew KonamiCode({\n    debug: true,\n    callback: function (konamiCode) {\n        konamiCode.disable();\n    }\n});\n```\n\n\n\n\n\n## Importer le Fichier JavaScript##\n\n### Par Téléchargement ###\n\n- [https://github.com/Haeresis/konami-code-js](https://github.com/Haeresis/konami-code-js)\n\n\n\n### Via NPM ###\n\n```\nnpm install konami-code-js\n```\n\n\n\n### Via CDN ###\n\n- Pour le développement :\n\n```html\n\u003cscript src=\"https://rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\"\u003e\u003c/script\u003e\n```\n\n- Pour la production :\n\n```html\n\u003cscript src=\"https://cdn.rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\"\u003e\u003c/script\u003e\n```\n\n\n\n### Avec un injecteur AMD ###\n\n```html\n\u003cscript src=\"require.js\"\u003e\u003c/script\u003e\n\u003cscript\u003e\n\u0009requirejs([\"konami-code\"], function (KonamiCode) {\n\u0009    new KonamiCode(function () {\n\u0009    \u0009// Do something here.\n            // This part will be executed if « Up Up Down Down Left Right Left Right B A »\n            // is recognised from Keyboard or Touch Gesture.\n\u0009    });\n\u0009});\n\u003c/script\u003e\n```\n\n\n\n### Avec un injecteur CommonJS ###\n\n```js\nvar KonamiCode = require(\"konami-code-js\");\n\nnew KonamiCode(function () {\n    // Do something here.\n    // This part will be executed if « Up Up Down Down Left Right Left Right B A »\n    // is recognised from Keyboard or Touch Gesture.\n});\n```\n\n\n\n\n## Bonus : le Konami Code de cette page ##\n\nSi vous testez le Konami Code depuis cette page voici ce qui sera exécuté :\n\n```js\n// Création d'un HTMLScriptElement.\nvar script = document.createElement(\"script\"),\n    // Référence sur le HTMLBodyElement.\n    body = document.getElementsByTagName(\"body\")[0],\n    // Création d'un interrupteur activé/désactivé.\n    toggle = false;\n\n// Notre script sera de type JavaScript\nscript.type = \"text/javascript\";\n\n// Ce code s'exécutera quand la `src`\n// de notre HTMLScriptElement sera rempli\n// et quand le HTMLScriptElement sera injecté dans le DOM.\nscript.addEventListener(\"load\", function () {\n\n    // Création d'un écouteur de Konami Code.\n    new KonamiCode(function () {\n\n        // Surprise ou retour à la normal.\n        if (toggle)   {\n            toggle = false;\n            body.style = \"overflow-x: hidden;transition: transform 2s ease;transform: rotate(0deg)\";\n        } else {\n            toggle = true;\n            body.style = \"overflow-x: hidden;transition: transform 2s ease;transform: rotate(180deg)\";\n        }\n    });\n});\n\n// Attribution d'un fichier et injection de HTMLScriptElement dans le DOM.\nscript.src = \"https://cdn.rawgit.com/Haeresis/konami-code-js/master/src/konami-code.js\";\nbody.appendChild(script);\n```","dates":{"published":{"$date":"2016-06-21T10:53:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":"article table {\nborder: 1px solid rgba(39,41,43,.15)\n}\narticle th,\narticle td {\npadding-left: 4px;\npadding-right: 4px;\nborder: 1px solid rgba(39,41,43,.15)\n}\narticle th {\nborder: 1px solid #fbfbfb;\nbackground-color: #fbfbfb;\n}","title":"Des Easter Eggs sur vos sites avec le Konami Code JavaScript","urn":"des-easter-eggs-avec-konami-code-js","description":"Je vous propose d'implémenter le Konami Code sur vos sites web en JavaScript avec une petite API maison gérant le clavier et le tactile. Suivez le guide !","image":"https://blog.lesieur.name/media/images/upload/76d6ddd2a0293213d04e0847645bddbc.jpg"}
{"_id":{"$oid":"577a13cfd1b7fe136fc20060"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5310456355dfd5f7698d48ce"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5c95f351bdee591a81a98118"},{"$oid":"5810c8b1db1391f2a90b5f28"}],"content":"Je suis fan de Munchkin depuis des années maintenant ! Mais j'ai un assez gros problème depuis quelques temps avec le Munchkin : plus les extensions augmentes et plus j'ai des difficultés à pouvoir jouer avec des jeux équilibrés. Vous avez peut-être le même sentiment et si vous vous êtes déjà confronté aux problèmes listés ci-après, cette page peut vous être utile !\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"847\" src=\"http://www.regledujeu.fr/wp-content/uploads/munchkin-regle-du-jeu.jpg\" alt=\"J'ai créé ce petit outil qui va vous permettre de gérer votre jeu Munchkin ainsi que ses extensions plus facilement !\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eSource : http://www.regledujeu.fr/\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nElle va vous permettre de :\n\n- [Trier vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#comment-trier-vos-cartes-munchkin)\n- [Mélanger vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#comment-mélanger-vos-cartes-munchkin)\n- [Lister vos cartes](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#liste-des-cartes-du-munchkin-des-éditions-françaises)\n\n\n\n\n\n## Présentation ##\n\nVous avez peut-être des difficultés à :\n\n- Ajouter/Retirer des extensions/règles car vous en possédez un bon nombre toutes mélangés. Et si vous avez les premières versions sans couleurs, là vous ne pouvez pas les distinguer.\n- Mélanger vos cartes pour obtenir un jeu équilibré car il est difficile de mélanger facilement autant de cartes ensembles.\n\nJ'ai donc créé ce petit outil qui va vous permettre de gérer votre jeu Munchkin ainsi que ses extensions plus facilement !\n\nIl va par exemple vous permettre de :\n\n- Classer vos cartes Munchkin par extension ou\n- Trier vos cartes Munchkin par type ou\n- Compter vos cartes Munchkin pour être sur qu'il ne vous en manque pas ou\n- Créer vos propres Deck/Pioche Munchkin par pourcentage d'apparition,\n- Simuler des pioches pour jouer à la distribution temps réel, ou pré-créer des mélanges à partir de vos boîtes de rangement.\n- Etc.\n\n\u003e Si vous êtes développeur front-end et que vous cherchez un exemple d'utilisation de [Vue.js](https://vuejs.org/) qui est SEO compliant avec aucun autre outil supplémentaire, je peux vous conseiller de jeter un œil au code source de cet outil derrière ce CodePen : http://codepen.io/Haeresis/pen/zBzWgQ\n\n\n\n\n\n## Comment **trier** vos cartes Munchkin ##\n\nIl n'est pas facile de s'y repérer dans les différents types de cartes dans le Munchkin. Beaucoup ont la même couleur, et les versions dérivées du Munchkin original n'ont pas de distinctions colorées. Il est également possible de souhaiter jouer avec des règles en moins.\n\n### Trier vos cartes Munckin par extension ###\n\nCe cas de figure peut vous servir pour jouer à des parties avec des débutants afin de limiter les règles. Avant de pouvoir mélanger vos cartes à partir des extensions souhaités, il va falloir les triers. Pour ce faire,\n\nVoici comment reconnaître les cartes par extension :\n\n- **Munchkin**                                            *si*     Pas d'icone et indiqué au dos « Munchkin »\n- **Munchkin 2 : Hachement Mieux**                        *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m2.gif\" alt=\"Munchkin 2\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 3 : Clerc et (pas) net**                     *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m3.gif\" alt=\"Munchkin 3\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 4 : Ton destin est sellé !**                 *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m4.gif\" alt=\"Munchkin 4\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 5 : On Zeu Rôde Again**                      *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m5.gif\" alt=\"Munchkin 5\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 6 : Le Donjon de la Farce**                  *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m6.gif\" alt=\"Munchkin 6\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 7 : Et pour quelques cartes de plus...**     *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m7o.gif\" alt=\"Munchkin 7\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 7 : Oh le gros tricheuuuuuuuur !**           *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m7.gif\" alt=\"Munchkin 7\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin 8 : Centaure et Sans Reproche**              *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/m8.gif\" alt=\"Munchkin 8\"\u003e et indiqué au dos *Munchkin*\n- **Munchkin : Petit Papa Munchkin**                      *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/n1.gif\n\" alt=\"Petit Papa Munchkin\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/n2.gif\n\" alt=\"Petit Papa Munchkin\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/n3.gif\n\" alt=\"Petit Papa Munchkin\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/n4.gif\n\" alt=\"Petit Papa Munchkin\"\u003e et indiqué au dos *Munchkin*\n- **Munchkinomicon**                                      *si*     Icones \u003cimg style=\"height: 10px\" src=\"media/images/upload/mm.gif\" alt=\"Munchkinomicon\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/mm1.gif\" alt=\"Munchkinomicon\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/mm2.gif\" alt=\"Munchkinomicon\"\u003e ou \u003cimg style=\"height: 10px\" src=\"media/images/upload/mm3.gif\" alt=\"Munchkinomicon\"\u003e et indiqué au dos *Munchkin*\n- **Star Munchkin**                                       *si*     Pas d'icone et indiqué au dos *Star Munchkin*\n- **Star Munchkin 2 : La Guerre des Clowns**              *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/st2.gif\" alt=\"Star Munchkin 2\"\u003e et indiqué au dos *Star Munchkin*\n- **Super Munchkin**                                      *si*     Pas d'icone et indiqué au dos *Super Munchkin*\n- **Munchkin Zombies**                                    *si*     Pas d'icone et indiqué au dos *Munchkin Zombies*\n- **Munchkin Zombies 2 : Ça zigouille à tour de bras !**  *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/mz2.gif\" alt=\"Munchkin Zombies 2\"\u003e et indiqué au dos *Munchkin Zombies*\n- **Munchkin Cthulhu**                                    *si*     Pas d'icone et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 2 : L'Appel de la Vachthulhu**       *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/mc2.gif\" alt=\"Munchkin Cthulhu 2\"\u003e et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 3 : La Crypte de l'Indicible**       *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/mc3.gif\" alt=\"Munchkin Cthulhu 3\"\u003e et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Cthulhu 4 : Oh my grottes !**                *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/mc4.gif\" alt=\"Munchkin Cthulhu 4\"\u003e et indiqué au dos *Munchkin Cthulhu*\n- **Munchkin Apocalypse**                                 *si*     Pas d'icone et indiqué au dos *Munchkin Apocalypse*\n- **Munchkin Légendes**                                   *si*     Icone \u003cimg style=\"height: 10px\" src=\"media/images/upload/ml.gif\" alt=\"Munchkin 2\"\u003e et indiqué au dos *Munchkin*\n\n*Note : Le Munchkin original (sans couleur) ainsi que les deux premières extensions (sans couleur) n'ont pas d'icone. Il n'est donc pas possible de les différencier à moins de se référer à la [liste ci-après](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#-liste-des-cartes-du-munchkin-des-ditions-fran-aises) dans cette page. Puisque les extensions en question apporte du nouveau contenu mais pas de règle à proprement parler (il y a tout de même les améliorations d'objet), vous pouvez décider que quoi qu'il arrive ces extensions et le jeu reste uni pour ne pas avoir à les trier à chaque fois.*\n\n*Note 2 : Le Munchkin Légendes est très similaire à la version Munchkin (les cartes sont identiques) aussi, s'il est compliquer pour vous de jouer au jeu de base sans devoir retirer toutes les extensions, vous pouvez vous tourner vers cette version qui ne possède aucunes extensions pour jouer au jeu initial (pratique avec les débutants).*\n\n### Trier vos cartes Munckin par types ###\n\nSi vous avez l'intention de jouer au Munchkin avec toutes les extensions, il va être impossible de mélanger un jeu équilibré. C'est là que le tri par type peut-être utile. Dans un premier temps vous créez des tas par type de carte, puis vous mélanger chaque tas. Pour finir vous sélectionnez une carte depuis chaque tas pour construire les 200 ou 300 premières cartes en utilisant, par exemple, le mélangeur de la partie suivante.\n\nVoici comment reconnaître les cartes par type :\n\nDans les Portes\n- \u003cspan class=\"actions\"\u003eAmélioration\u003c/span\u003e             *si*    Aucunes des mentions listés ci-après *(Vert dans Munchkin)*.\n- \u003cspan class=\"classes\"\u003eClasse\u003c/span\u003e                   *si*    « Classe » est indiqué *(Marron dans Munchkin)*.\n- \u003cspan class=\"madnesses\"\u003eDémence\u003c/span\u003e                *si*    « Démence ! » est dans le titre.\n- \u003cspan class=\"acolytes\"\u003eFidèle Serviteur\u003c/span\u003e        *si*    « Fidèle Serviteur » ou « Acolyte » est dans le titre *(Vert dans Munchkin sauf Monture en solde)*.\n- \u003cspan class=\"curses\"\u003eMalédiction\u003c/span\u003e               *si*    « Malédiction ! », « Piège ! » ou « Catastrophe ! » est dans le titre *(Vert dans Munchkin)*.\n- \u003cspan class=\"mojos\"\u003eMojo\u003c/span\u003e                       *si*    « Mojo » est indiqué.\n- \u003cspan class=\"monsters\"\u003eMonstre\u003c/span\u003e                 *si*    Possède des trésors ou/et des niveaux *(Orange dans Munchkin)*.\n- \u003cspan class=\"mounts\"\u003eMonture\u003c/span\u003e                   *si*    « Monture » est indiqué *(Violet dans Munchkin sauf Big Joe)*.\n- \u003cspan class=\"origins\"\u003eOrigine\u003c/span\u003e                  *si*    « Origine » est dans le titre.\n- \u003cspan class=\"rooms\"\u003ePièce\u003c/span\u003e                      *si*    « Pièce » est dans le titre.\n- \u003cspan class=\"warps\"\u003ePortail\u003c/span\u003e                    *si*    « Portail » est indiqué *(Jaune dans Munchkin)*.\n- \u003cspan class=\"powers\"\u003ePouvoir\u003c/span\u003e                   *si*    « Pouvoir » est dans le titre.\n- \u003cspan class=\"races\"\u003eRace\u003c/span\u003e                       *si*    « Race » est indiqué *(Gris dans Munchkin)*.\n\nDans les Trésors\n- \u003cspan class=\"bonuses\"\u003eActions\u003c/span\u003e                  *si*    Pas de prix *(Vert dans Munchkin)*\n- \u003cspan class=\"stuffs\"\u003eÉquipement\u003c/span\u003e                *si*    Possède un prix et est à usage permanent *(Violet dans Munchkin)*.\n- \u003cspan class=\"slaves\"\u003eFidèle Serviteur\u003c/span\u003e          *si*    « Fidèle Serviteur » ou « Acolyte » est dans le titre *(Vert dans Munchkin)*.\n- \u003cspan class=\"levels\"\u003eGain de Niveau\u003c/span\u003e            *si*    « Gagner un Niveau » est écrit *(Vert dans Munchkin)*.\n- \u003cspan class=\"munchkinomicon\"\u003eMunchkinomicon\u003c/span\u003e    *si*    Tête du grimoire au dos *(Violet dans Munchkin)*.\n- \u003cspan class=\"objects\"\u003eObjets\u003c/span\u003e                   *si*    Un prix et à usage unique *(Bleu dans Munchkin)*.\n\nPour les Donjons, Sorts et Sceaux pas de soucis, se sont des défausses séparés. Vous reconnaîtrez aisément les grands formats des Donjons, les têtes de Munchkinomicon au dos des Sorts et le format carré des Sceaux.\n\n\n\n\n\n## Comment **mélanger** vos cartes Munchkin ##\n\n1. Sélectionnez les cartes que vous souhaitez inclure dans votre jeu grâce à la [liste ci-après](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/#-liste-des-cartes-du-munchkin-des-ditions-fran-aises).\n2. Lancez des mélanges virtuels avec le lien ci-dessous (Avec F12, si votre navigateur le permet, vous pouvez également surveiller l'état de vos pioches ét défausses).\n3. Créez votre pioche en créant le Deck en sélectionnant exactement les noms de cartes cités ou vraiment plus rapidement, en n'affectant qu'une carte du type indiqué (Amélioration, Monture, etc.).\n\n\u003cdiv class=\"shuffle\"\u003e\n    \u003cbr\u003e\n    \u003cdiv class=\"init\" v-on:click=\"initShuffle()\"\u003eCréez vos Pioches et testez-les !\u003c/div\u003e\n    \u003cdiv class=\"shuffle-card\"\u003e\n        \u003cdiv class=\"shuffle-card-inner\"\u003e\n            \u003cdiv class=\"stop\" v-on:click=\"stopShuffle()\"\u003eStop\u003c/div\u003e\n            \u003cdiv class=\"twelve\"\u003eF12\u003c/div\u003e\n            \u003cdiv class=\"stack-doors\"\u003e\n                \u003cdiv class=\"open\" v-on:click=\"openDoors()\"\u003e\n                    \u003cspan class=\"title\"\u003eOuvrir une \u003cstrong\u003ePorte\u003c/strong\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"discard\" v-bind:class=\"{ 'is-visible': doorsLastDiscard }\"\u003e\n                    \u003cspan class=\"title\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"stack\"\u003ePorte\u003c/span\u003e\n                    \u003cspan class=\"extension\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"type\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"progress\"\u003e\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"stack-treasures\"\u003e\n                \u003cdiv class=\"open\" v-on:click=\"openTreasures()\"\u003e\n                    \u003cspan class=\"title\"\u003eTrouver un \u003cstrong\u003eTrésor\u003c/strong\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"discard\" v-bind:class=\"{ 'is-visible': treasuresLastDiscard }\"\u003e\n                    \u003cspan class=\"title\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"stack\"\u003eTrésor\u003c/span\u003e\n                    \u003cspan class=\"extension\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"type\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"progress\"\u003e\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"stack-donjons\"\n                 v-bind:class=\"{ 'is-disabled': donjonsLength === 0 }\"\u003e\n                \u003cdiv class=\"open\" v-on:click=\"openDonjons()\"\u003e\n                    \u003cspan class=\"title\"\u003eEntrer dans un \u003cstrong\u003eDonjon\u003c/strong\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"discard\" v-bind:class=\"{ 'is-visible': donjonsLastDiscard }\"\u003e\n                    \u003cspan class=\"title\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"stack\"\u003eDonjon\u003c/span\u003e\n                    \u003cspan class=\"extension\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"type\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"progress\"\u003e\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"stack-books\"\n                 v-bind:class=\"{ 'is-disabled': booksLength === 0 }\"\u003e\n                \u003cdiv class=\"open\" v-on:click=\"openBooks()\"\u003e\n                    \u003cspan class=\"title\"\u003eLancer un \u003cstrong\u003eSort\u003c/strong\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"discard\" v-bind:class=\"{ 'is-visible': booksLastDiscard }\"\u003e\n                    \u003cspan class=\"title\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"stack\"\u003eSort\u003c/span\u003e\n                    \u003cspan class=\"extension\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"type\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"progress\"\u003e\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"stack-seals\"\n                 v-bind:class=\"{ 'is-disabled': sealsLength === 0 }\"\u003e\n                \u003cdiv class=\"open\" v-on:click=\"openSeals()\"\u003e\n                    \u003cspan class=\"title\"\u003eOuvrir un \u003cstrong\u003eSceau\u003c/strong\u003e\u003c/span\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"discard\" v-bind:class=\"{ 'is-visible': sealsLastDiscard }\"\u003e\n                    \u003cspan class=\"title\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"stack\"\u003eSceau\u003c/span\u003e\n                    \u003cspan class=\"extension\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"type\"\u003e\u003c/span\u003e\n                    \u003cspan class=\"progress\"\u003e\u003c/span\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n\n## **Liste** des cartes du Munchkin des Éditions Françaises ##\n\n\u003cdiv class=\"all-cards\"\u003e\n    \u003cdiv class=\"all\"\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': all.filters }\"\u003e\n            \u003ch3 id=\"munchkin-filtres\"\u003eFiltres : Jeux et Extensions\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"allToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                \u003cp\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin\"\u003e Munchkin\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin2\"\u003e Munchkin 2 : Hachement Mieux\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin3\"\u003e Munchkin 3 : Clerc et (pas) net\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin4\"\u003e Munchkin 4 : Ton destin est sellé !\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin5\"\u003e Munchkin 5 : On Zeu Rôde Again\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin6\"\u003e Munchkin 6 : Le Donjon de la Farce\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin7o\"\u003e Munchkin 7 : Et pour quelques cartes de plus...\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin7\"\u003e Munchkin 7 : Oh le gros tricheuuuuuuuur !\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkin8\"\u003e Munchkin 8 : Centaure et Sans Reproche\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinN\"\u003e Munchkin : Petit Papa Munchkin\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinM\"\u003e Munchkinomicon\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSt\"\u003e Star Munchkin\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSt2\"\u003e Star Munchkin 2 : La Guerre des Clowns\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinSu\"\u003e Super Munchkin\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinZ\"\u003e Munchkin Zombies\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinZ2\"\u003e Munchkin Zombies 2 : Ça zigouille à tour de bras !\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC\"\u003e Munchkin Cthulhu\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC2\"\u003e Munchkin Cthulhu 2 : L'Appel de la Vachthulhu\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC3\"\u003e Munchkin Cthulhu 3 : La Crypte de l'Indicible\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinC4\"\u003e Munchkin Cthulhu 4 : Oh my grottes !\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinA\"\u003e Munchkin Apocalypse\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"all.munchkinL\"\u003e Munchkin Légendes\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cp\u003e**\u003cspan v-text=\"allCardsNumber\"\u003e2095\u003c/span\u003e cartes affichées** au total pour votre Munchkin\u003c/p\u003e\n        \u003cul\u003e\n            \u003cli\u003eIl y a **\u003cspan v-text=\"allDoorsNumber\"\u003e1242\u003c/span\u003e cartes portes** pour votre Munchkin.\n                \u003cul\u003e\n                    \u003cli v-if=\"allActionsNumber\"\u003edont \u003cspan class=\"actions\"\u003e\u003cspan v-text=\"allActionsNumber\"\u003e285\u003c/span\u003e carte\u003cspan v-show=\"allActionsNumber \u003e 1\"\u003es\u003c/span\u003e Amélioration\u003cspan v-show=\"allActionsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allActionsPercent || 0\"\u003e23\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allClassesNumber\"\u003edont \u003cspan class=\"classes\"\u003e\u003cspan v-text=\"allClassesNumber\"\u003e96\u003c/span\u003e carte\u003cspan v-show=\"allClassesNumber \u003e 1\"\u003es\u003c/span\u003e Classe\u003cspan v-show=\"allClassesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allClassesPercent || 0\"\u003e8\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allAcolytesNumber\"\u003edont \u003cspan class=\"acolytes\"\u003e\u003cspan v-text=\"allAcolytesNumber\"\u003e33\u003c/span\u003e carte\u003cspan v-show=\"allAcolytesNumber \u003e 1\"\u003es\u003c/span\u003e Fidèle\u003cspan v-show=\"allAcolytesNumber \u003e 1\"\u003es\u003c/span\u003e Serviteur\u003cspan v-show=\"allActionsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allAcolytesPercent || 0\"\u003e3\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allCursesNumber\"\u003edont \u003cspan class=\"curses\"\u003e\u003cspan v-text=\"allCursesNumber\"\u003e150\u003c/span\u003e carte\u003cspan v-show=\"allCursesNumber \u003e 1\"\u003es\u003c/span\u003e Malédiction\u003cspan v-show=\"allCursesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allCursesPercent || 0\"\u003e12\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allMadnessesNumber\"\u003edont \u003cspan class=\"curses\"\u003e\u003cspan v-text=\"allMadnessesNumber\"\u003e10\u003c/span\u003e carte\u003cspan v-show=\"allMadnessesNumber \u003e 1\"\u003es\u003c/span\u003e Démence\u003cspan v-show=\"allMadnessesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allMadnessesPercent || 0\"\u003e1\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allMojosNumber\"\u003edont \u003cspan class=\"mojos\"\u003e\u003cspan v-text=\"allMojosNumber\"\u003e16\u003c/span\u003e carte\u003cspan v-show=\"allMojosNumber \u003e 1\"\u003es\u003c/span\u003e Mojos\u003cspan v-show=\"allMojosNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allMojosPercent || 0\"\u003e1\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allMonstersNumber\"\u003edont \u003cspan class=\"monsters\"\u003e\u003cspan v-text=\"allMonstersNumber\"\u003e445\u003c/span\u003e carte\u003cspan v-show=\"allMonstersNumber \u003e 1\"\u003es\u003c/span\u003e Monstre\u003cspan v-show=\"allMonstersNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allMonstersPercent || 0\"\u003e36\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allMountsNumber\"\u003edont \u003cspan class=\"mounts\"\u003e\u003cspan v-text=\"allMountsNumber\"\u003e16\u003c/span\u003e carte\u003cspan v-show=\"allMountsNumber \u003e 1\"\u003es\u003c/span\u003e Monture\u003cspan v-show=\"allMountsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allMountsPercent || 0\"\u003e1\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allOriginsNumber\"\u003edont \u003cspan class=\"origins\"\u003e\u003cspan v-text=\"allOriginsNumber\"\u003e6\u003c/span\u003e carte\u003cspan v-show=\"allOriginsNumber \u003e 1\"\u003es\u003c/span\u003e Origine\u003cspan v-show=\"allOriginsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allOriginsPercent || 0\"\u003e0\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allRoomsNumber\"\u003edont \u003cspan class=\"rooms\"\u003e\u003cspan v-text=\"allRoomsNumber\"\u003e6\u003c/span\u003e carte\u003cspan v-show=\"allRoomsNumber \u003e 1\"\u003es\u003c/span\u003e Pièce\u003cspan v-show=\"allRoomsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allRoomsPercent || 0\"\u003e0\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allWarpsNumber\"\u003edont \u003cspan class=\"warps\"\u003e\u003cspan v-text=\"allWarpsNumber\"\u003e32\u003c/span\u003e carte\u003cspan v-show=\"allWarpsNumber \u003e 1\"\u003es\u003c/span\u003e Portail\u003cspan v-show=\"allWarpsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allWarpsPercent || 0\"\u003e3\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allPowersNumber\"\u003edont \u003cspan class=\"powers\"\u003e\u003cspan v-text=\"allPowersNumber\"\u003e44\u003c/span\u003e carte\u003cspan v-show=\"allPowersNumber \u003e 1\"\u003es\u003c/span\u003e Pouvoir\u003cspan v-show=\"allPowersNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allPowersPercent || 0\"\u003e4\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allRacesNumber\"\u003edont \u003cspan class=\"races\"\u003e\u003cspan v-text=\"allRacesNumber\"\u003e103\u003c/span\u003e carte\u003cspan v-show=\"allRacesNumber \u003e 1\"\u003es\u003c/span\u003e Race\u003cspan v-show=\"allRacesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allRacesPercent || 0\"\u003e8\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003eIl y a **\u003cspan v-text=\"allTreasuresNumber\"\u003e799\u003c/span\u003e cartes trésors** pour votre Munchkin.\n                \u003cul\u003e\n                    \u003cli v-if=\"allBonusesNumber\"\u003edont \u003cspan class=\"bonuses\"\u003e\u003cspan v-text=\"allBonusesNumber\"\u003e123\u003c/span\u003e carte\u003cspan v-show=\"allBonusesNumber \u003e 1\"\u003es\u003c/span\u003e Action\u003cspan v-show=\"allBonusesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allBonusesPercent || 0\"\u003e15\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allStuffsNumber\"\u003edont \u003cspan class=\"stuffs\"\u003e\u003cspan v-text=\"allStuffsNumber\"\u003e386\u003c/span\u003e carte\u003cspan v-show=\"allStuffsNumber \u003e 1\"\u003es\u003c/span\u003e Équipement\u003cspan v-show=\"allStuffsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allStuffsPercent || 0\"\u003e48\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allSlavesNumber\"\u003edont \u003cspan class=\"slaves\"\u003e\u003cspan v-text=\"allSlavesNumber\"\u003e5\u003c/span\u003e carte\u003cspan v-show=\"allSlavesNumber \u003e 1\"\u003es\u003c/span\u003e Fidèle\u003cspan v-show=\"allSlavesNumber \u003e 1\"\u003es\u003c/span\u003e Serviteur\u003cspan v-show=\"allSlavesNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allSlavesPercent || 0\"\u003e1\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allLevelsNumber\"\u003edont \u003cspan class=\"levels\"\u003e\u003cspan v-text=\"allLevelsNumber\"\u003e111\u003c/span\u003e carte\u003cspan v-show=\"allLevelsNumber \u003e 1\"\u003es\u003c/span\u003e Gain\u003cspan v-show=\"allLevelsNumber \u003e 1\"\u003es\u003c/span\u003e de Niveau\u003cspan v-show=\"allLevelsNumber \u003e 1\"\u003ex\u003c/span\u003e (\u003cspan v-text=\"allLevelsPercent || 0\"\u003e14\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"munchkinMMunchkinomiconNumber\"\u003edont \u003cspan class=\"munchkinomicon\"\u003e\u003cspan v-text=\"munchkinMMunchkinomiconNumber\"\u003e1\u003c/span\u003e carte Munchkinomicon (\u003cspan v-text=\"allMunchkinomiconPercent || 0\"\u003e0\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                    \u003cli v-if=\"allObjectsNumber\"\u003edont \u003cspan class=\"objects\"\u003e\u003cspan v-text=\"allObjectsNumber\"\u003e173\u003c/span\u003e carte\u003cspan v-show=\"allObjectsNumber \u003e 1\"\u003es\u003c/span\u003e Objet\u003cspan v-show=\"allObjectsNumber \u003e 1\"\u003es\u003c/span\u003e (\u003cspan v-text=\"allObjectsPercent || 0\"\u003e22\u003c/span\u003e%)\u003c/span\u003e.\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/li\u003e\n            \u003cli\u003eIl y a **\u003cspan v-text=\"allDonjonsNumber\"\u003e40\u003c/span\u003e cartes donjons** pour votre Munchkin.\u003c/li\u003e\n            \u003cli\u003eIl y a **\u003cspan v-text=\"allSpellsNumber\"\u003e14\u003c/span\u003e cartes sorts** pour votre Munchkin.\u003c/li\u003e\n            \u003cli\u003eIl y a **\u003cspan v-text=\"allSealsNumber\"\u003e12\u003c/span\u003e cartes sceaux** pour votre Munchkin.\u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin }\"\u003e\n        \u003cimg class=\"demo\" height=\"200\" src=\"media/images/upload/51vcdk0ID7L.jpg\" alt=\"Munchkin\"\u003e\n        \u003ch2 id=\"munchkin\"\u003eMunchkin\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin.filters }\"\u003e\n            \u003ch3 id=\"munchkin-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinBonusesNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinActionsNumber\"\u003e16\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.classes\"\u003e Classes (\u003cspan v-text=\"munchkinClassesNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinStuffsNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"slaves\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.slaves\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkinSlavesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinLevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinCursesNumber\"\u003e19\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinMonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.objects\"\u003e Objets (\u003cspan v-text=\"munchkinObjectsNumber\"\u003e23\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin.races\"\u003e Races (\u003cspan v-text=\"munchkinRacesNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinDoorsNumber\"\u003e95\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"monsters color nocol\"\u003e3872 Orques\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eAmazone\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBalrog Charolais\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eBébé !\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBelvédère Sauvage\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBigfoot, alias Grand-Pied\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBinoclard Hurleur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCéphalopodzilla\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCheval Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDragon de Plutonium\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eÉnoooorme !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eEnragé\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eEscargots sous Acide\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eFan de Vampire\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGerbosaure\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGoblin Estropié\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGolem Fracassé\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGrenouilles Volantes\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eIllusion\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eIntervention Divine\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eIntelligent\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003e~~Harpistes~~ Harpies\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHippogriffe\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHorreur non-euclidienne indicible\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHuissier\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLépreuxchaun\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Canard de l'Apocalypse\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Changement de Classe\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Changement de Race\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Changement de Sexe\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Commun des Mortels\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Déclassé !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Impôt sur le Revenu\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Grosse Perte\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Miroir Perfide\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Perdez deux cartes\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Petite Perte\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Petite Perte\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Poulet sur la Tête\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction Vraiment Trop Injuste !\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eManticor-nithorynque\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMorpions\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMr. Nonos\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMucus Baveux\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eNez Flottant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eOctaèdre Gélatineux\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003ePause Déjeuner\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003ePetite Amie\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePit Bull\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePlante d'Ornement\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePoulet Élevé aux Stéroïdes\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eRat Musclé\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eRené Crophage et Fils, Dépanneurs en Chirurgie\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eReprésentant en Assurances\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlè\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlè\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eSuccube Lange-de-Belle-Mère\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eSuceur de Tête\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTire-moi de là !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTrôliste\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTut-Tuuut-Ankh-Ammon\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVamps...ires !?!\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eVénérable\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin.version) !== -1) \u0026\u0026 ((munchkin.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin.version) !== -1) \u0026\u0026 all.munchkinDoorsEach[index] }\"\u003e\n                                        \u003cinput type=\"checkbox\" v-model=\"all.munchkinDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinTreasuresNumber\"\u003e73\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"levels color nocol\"\u003e1000 pièces d'or\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArc Enrubanné\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure de Cuir\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure de Flamme\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure de Mithril\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure Gluante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure Trapue\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eBaguette de Sourcier\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBandana de Gros Dur\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBâton de Napalm\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eBoisson Énergisante Éventée\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBouclier Surdimensionné\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBottes de Convocation d'Hémorroïdes\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBottes de Déplacement Frénetique\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBrochette de Rat\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque de Courage\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque de Virilité Ostentatoire\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCape d'Ombre\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eChampagne\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eChapeau Pointu de Thaumaturgie\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCollants de Force de Géant\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCotion de Ponfusion\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eDague de Traitrise\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eDon de Chips Désintressé au MJ\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDoppelganger\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉnorme Rocher\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eEscabeau\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée (de) Bâtard(e)\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée de Féminisme Exacerbé\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée Karaoké\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eErreur de Calcul Avantageuse\u003c/li\u003e\n                    \u003cli class=\"slaves color nocol\"\u003eFidèle Serviteur\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eFlaque de Colle\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eGénocide de Fourmis à l'Huile Bouillante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eGenouillères de Séduction\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eGenouillères Perforantes\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eGourdin de Misogynie Fracassante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eHallebrde Suisse Multifonctions\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eInvocation de Règles Obscures\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eLampe Merveilleuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLance de 3,50 m\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMasse d'Armes de Répartie Piquante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMarteau des Rotules Douloureuses\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eMissile Magique\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eMutiler les Cadavres\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eMur Instantané\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eOh, Les Jolis Ballons !\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003ePillaaaaaaage !\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePleurer dans les Jupes du MJ\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion Acide Radioactive et Électrique\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion d'Invisibilité\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion d'Amitié\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de bravoure hystérique\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePotion de Machisme Triomphant\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Mauvaise Halleine\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Poison Enflammé\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Polly-morphie\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Sommeil\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Transfert\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion Glaciale Explosive\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eRape à Fromage de la Paix\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eRapière d'Injustice Flagrante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eSandales de Protection\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eSandwich Chocolat-Moules-Anchois\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eTarge d'Inconscience Suicidaire\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTitre qui en Jette Vraiment Grave\u003c/li\u003e\n                    \u003cli class=\"stuffs nocol\"\u003eTitre qui en Jette Vraiment Grave\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eTronçonneuse de la Mort\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eTuba d'Envoutement\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eTuer le Fidèle Serviteur\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eVol de Niveau\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin.version) !== -1) \u0026\u0026 ((munchkin.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) || (munchkin.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin.version) !== -1) \u0026\u0026 all.munchkinTreasuresEach[index] }\"\u003e\n                                        \u003cinput type=\"checkbox\" v-model=\"all.munchkinTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin2 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/51CHPcSgexL._AC_UL320_SR248,320_.jpg\" alt=\"Munchkin 2\"\u003e\n        \u003ch2 id=\"munchkin-2\"\u003eMunchkin 2 : Hachement Mieux\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin2.filters }\"\u003e\n            \u003ch3 id=\"munchkin-2-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin2ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin2.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin2.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin2BonusesNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin2ActionsNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.classes\"\u003e Classes (\u003cspan v-text=\"munchkin2ClassesNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin2StuffsNumber\"\u003e25\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin2LevelsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin2CursesNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin2MonstersNumber\"\u003e29\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.objects\"\u003e Objets (\u003cspan v-text=\"munchkin2ObjectsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin2.races\"\u003e Races (\u003cspan v-text=\"munchkin2RacesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-2-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m2.gif\" alt=\"Munchkin 2\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes améliorations d'objets\u003c/li\u003e\n                \u003cli\u003eLa Race des Orques\u003c/li\u003e\n                \u003cli\u003eLes très inutiles Cartes Vides\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin2CardsNumber\"\u003e111\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-2-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin2DoorsNumber\"\u003e66\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color nocol\"\u003eAmical\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eAnnihilation\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eAvocat fantôme\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCafard Géant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eCartes excessivement merveilleuses\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eChampi Gnons\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eClowns de la Mort\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCréature de Stupre et de Luxure\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDémon Tentaculaire\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eÉcureuil Psychopathe\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eÉlémentaire de Morve\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eEndormi\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eFauché\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGéant de Givre\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eHé, une carte !\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHerbeux Dégueu\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHydreolique\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eJabberwock\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eJudge Fredd\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eL'Ombre du Nez Flottant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLa Chose au Nom si Long\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLe Germe du Mal\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eLes cadavres ne se battent pas\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMain Rampante\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Bidule Maudit\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Bidule Maudit\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Générosité\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Grands Pieds\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Mains Minuscules\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Nécrophobie\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Odeur Corporelle\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Or des fous\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Perte d'un Gros Objet\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Perte d'un Petit Objet\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Règles de la Nouvelle Édition\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMinette Sanguinaire\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMobile\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMonstre fait maison\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMoÔoman\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMort-Vivant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMoufette Géante\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eNichée\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eNounours\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePère Noël\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePtérodactyle\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eRats pestiférés\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-Mêlé\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTortue-garou\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVestales de l'Ordrede la Pleine Lune\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"actions nocol\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin2.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin2.version) !== -1) \u0026\u0026 ((munchkin2.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin2.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin2.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin2.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin2.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin2.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin2.version) !== -1) \u0026\u0026 all.munchkin2DoorsEach[index] }\"\u003e\n                                        \u003cinput type=\"checkbox\" v-model=\"all.munchkin2DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-2-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin2TreasuresNumber\"\u003e45\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses nocol\"\u003e...du Destin !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003e...du Destin !\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBoomdague\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBraguette Cloutée\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque de vision périphérique\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasquelette\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eChapeau en Papier d'Alu\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eCheval de Troie\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eContemplation du Nombril\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCrème de bébé\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eCruauté Gratuite\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé Subtilement Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé Subtilement Pipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eDentier de l'Effroi\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eDragon Nain Tout Mignon\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eÉchange de feuilles de personnage\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eEngin de Siège\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée Super Zarbi\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée Tueuse de Tout (à l'exception notable des poulpes)\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eExoarmure\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFamilier\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFausse Barbe\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFourchette à Barbecue\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eGastérofronde\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eHache Surnaturelle\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eImperméable\u003c/li\u003e\n                    \u003cli class=\"objects nocol\"\u003eLampe Merveilleuse\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eLaver la Voiture MJ\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLe Maillet Béni de Saint Aieuuuu !\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLumière Éternelle (piles non incluses)\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePayer la Pizza\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePince à Épiler de la Terreur\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePlier, Embrocher et Mutiler\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePoil à Gratter\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotage Sauvage\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Lâcheté\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de Vol\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion d'Incrédulité\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePromettre au MJ d'arrêter de lui parler de votre Personnage\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eRouleau de l'Ordre\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eSac de Clous\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eSauce Tartare Barbare\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eTon lacet est défait !\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eTrès Saint Livre\u003c/li\u003e\n                    \u003cli class=\"objects nocol\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eVide Grenier\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin2.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin2.version) !== -1) \u0026\u0026 ((munchkin2.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin2.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin2.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin2.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin2.version) !== -1) \u0026\u0026 all.munchkin2TreasuresEach[index] }\"\u003e\n                                        \u003cinput type=\"checkbox\" v-model=\"all.munchkin2TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-3 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin3 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/munchkin-3.gif\" alt=\"Munchkin 3\"\u003e\n        \u003ch2 id=\"munchkin-3\"\u003eMunchkin 3 : Clerc et (pas) net\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin3.filters }\"\u003e\n            \u003ch3 id=\"munchkin-3-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin3ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin3.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin3.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin3BonusesNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin3ActionsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.classes\"\u003e Classes (\u003cspan v-text=\"munchkin3ClassesNumber\"\u003e9\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin3StuffsNumber\"\u003e17\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"slaves\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.slaves\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkin3SlavesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin3LevelsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin3CursesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin3MonstersNumber\"\u003e27\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.objects\"\u003e Objets (\u003cspan v-text=\"munchkin3ObjectsNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin3.races\"\u003e Races (\u003cspan v-text=\"munchkin3RacesNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-3-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m3.gif\" alt=\"Munchkin 2\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLa Classe des Bardes\u003c/li\u003e\n                \u003cli\u003eLa Race des Gnomes\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin3CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-3-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin3DoorsNumber\"\u003e66\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color nocol\"\u003e...de l'Enfer\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBaal-Y-Nacee,Grand Antien de la Basse-Cour des Enfers\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCamulot\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCécil Vanien, déménageur en entrailles\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDessin de votre petit frère\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDopplegangsters\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDryade\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eEn pleine dépression\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eEn sous-vêtements\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eÉnorme Épée de passage à tabac de personnage\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eErreur de typo\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGéants de la raclette\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGobe-mouche urticant bio-mutant\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGolem de Chewing-gum\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGothyanki\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGros Bourrin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGros porc macho\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHomme-hochet\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eKali\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eKobolds kamikazes\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLes Manes occis de la mer morte\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eLes Monstres sont occupés\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! ...de la mort qui tue !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! amnésie temporaire\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! bière des nains\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! échec christique !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! les genoux explosés\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! piège à touristes\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! sac à dos affamé\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! vous trebuchez sur votre trésors\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMéduse\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMort-Ylin Moncroc\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eNounours sanguinaire géant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eObscènement riche\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePetit lapin tout ce qu'il y a de plus ordinaire...\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePoisson rouge\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eResident débile, le charancon mutant\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eSire Hupeux\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTati Paladin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTequila Piaf\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTonneau sans fond\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eZozo le zusticier\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin3.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin3.version) !== -1) \u0026\u0026 ((munchkin3.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin3.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin3.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin3.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin3.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin3.version) !== -1) \u0026\u0026 all.munchkin3DoorsEach[index] }\"\u003e\n                                        \u003cinput type=\"checkbox\" v-model=\"all.munchkin3DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-3-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin3TreasuresNumber\"\u003e46\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"levels color nocol\"\u003eActe de bonté absurde\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eBéni\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBikini en cotte de mailles\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eC'est le luth finaAaleuuu !\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCanard d'abondance\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eChaussettes de Pestilence\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eChaussons de Coming-out\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCocktail Molotroll\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCostume en gnomex\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eCoup quasi-fatal\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCroquettes pour monstres\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé pipé\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eDescente de dieux\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eDivan de psi\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eEmpoisonné\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée à deux mains\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eFaire un dessin de son personnage\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFarces et attrapes de Manufacture Gnome\u003c/li\u003e\n                    \u003cli class=\"slaves color nocol\"\u003eFidèle Serviteur\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFouet \"Plein-la-goule™\"\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eGelée royale\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eGrelots tueurs\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eInjonction\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eIntervention féline\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLame vorpale\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eLancer de nain\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eL'amulette à fiabilité relative\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eL'autre Anneau\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eLe casino du donjon\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMangnifique chapeau\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMasse d'arme de cheville improvisée\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eMenacer de changer de système de jeu\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eMoi ! Moi ! Moi !\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eOreilles factices\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePoignard-o-matic\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003ePoignées de transport\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion d'apathie\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion de greluche instantanée\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eRegarde le dé, il tourne, il toune...\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eRemettre sa vieille fiche de perso au propre...\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eSauce pimentée\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eSe souvenir de l'anniversaire du MJ\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eTarte savoureuse\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eTaille unique\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eVoler la vedette\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin3.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin3.version) !== -1) \u0026\u0026 ((munchkin3.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) || (munchkin3.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin3.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin3.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin3.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin3.version) !== -1) \u0026\u0026 all.munchkin3TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin3TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-4 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin4 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/512ADEdYO8L._AC_UL320_SR252,320_.jpg\" alt=\"Munchkin 4\"\u003e\n        \u003ch2 id=\"munchkin-4\"\u003eMunchkin 4 : Ton destin est sellé !\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin4.filters }\"\u003e\n            \u003ch3 id=\"munchkin-4-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin4ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin4.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin4.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin4BonusesNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin4ActionsNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.classes\"\u003e Classes (\u003cspan v-text=\"munchkin4ClassesNumber\"\u003e5\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin4StuffsNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.acolytes\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkin4AcolytesNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin4LevelsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin4CursesNumber\"\u003e5\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin4MonstersNumber\"\u003e27\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"mounts\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.mounts\"\u003e Montures (\u003cspan v-text=\"munchkin4MountsNumber\"\u003e9\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.objects\"\u003e Objets (\u003cspan v-text=\"munchkin4ObjectsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin4.races\"\u003e Races (\u003cspan v-text=\"munchkin4RacesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-4-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m4.gif\" alt=\"Munchkin 4\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Fidèles serviteurs\u003c/li\u003e\n                \u003cli\u003eLes Montures\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin4CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-4-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin4DoorsNumber\"\u003e78\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color nocol\"\u003e...jouant de la cornemuse\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003e...surgi de l'enfer\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eÀ dents de sable\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eAffamé\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eAigle de selle\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBête égarante\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eBarde\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eBig Joe\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBugs Beuh-Ni\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCamionosaure (Monstertruckosaurus Rex)\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCrâne en peluche\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eDemi...\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eDragon de selle\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eEn armure\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur barde\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur Chappendale\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur elfe\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur en solde\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur gnome\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur guerrier\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur halfelin\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur magicien\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur nain\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur orque\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur prètre\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle ~~serviteur~~ ~~serviteuse~~ gourgandine pas farouche, quoi...\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur voleur\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eFurtif\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eHarry Pot-d'terre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGéant Ninja\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGelée au caramel fondu\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eGerbille mutante géante de selle\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGodefroy de Court Bouillon\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eGros type velu et barbu qu'on connait pas...\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eKatrina\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLa nuée des morts-vivants\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLe Mauvais oeil\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eLoup de selle\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003e~~Ma marraine~~ Mon parrain la fée\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Charges patronales\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Monture flatulente\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Plancher en papier tue-mouche !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Rations gatées\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Tout est relatif !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eOeuf\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eOurs bipolaire\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eOurs pigeon\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePetit coin d'ombre tout à fait inoffensif\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePetit toutou tout ce qu'il y a de plus ordinaire\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePolly Èdre\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003ePoulet de selle\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003ePuissant destrier\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eRaptor de selle\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eRésistant à la magie\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eRéveil matin\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eSphinx farceur\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eTigre de selle\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eToison Noire, le Fleau des Sept Mers, brebis égarée\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTouffu, élémentaire de poils\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eToute pitite araignée mignonne\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eTortue de selle\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVase naze à l'uzi usé\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eWilliam Jexpire, auteur du Songe d'une pluie d'XP\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eYack Yack Yack !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin4.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin4.version) !== -1) \u0026\u0026 ((munchkin4.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin4.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkin4.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) || (munchkin4.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin4.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin4.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin4.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin4.version) !== -1) \u0026\u0026 all.munchkin4DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin4DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-4-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin4TreasuresNumber\"\u003e34\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...du Destin\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eAiles de précipitation\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de souhait\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAppât à monture \"Oui-y-s'casse\"\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArc souffrant d'hypertension\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure en épluchures de patates\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure en solde\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBatte de braise-ball\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBottes Deux Chevals\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eBride lance-flammes\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eBrillant\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque de fier-à-bras\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eChant nuptial\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eCrise d'Intelligence aiguë\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCombat à pied nus\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eCrise de Jalousie\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eFaux et usage de faux\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eMaîtrise de gestion en management\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMasque d'Halloween\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eMécano-...\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003ePiller son propre temple\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePlanche à ~~repasser~~ trepasser\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotin de changement de sexe\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003ePotion de volubilité\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePoudre rétrécissante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePulvérisatueur\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eRéveiller un volcan sous la ville ennemie\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eS'habiller comme son personnage\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eSanfouane et l'oie\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eSoudoyer un Fidèle serviteur\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eTuer des nazis\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eTuer un Fidèle Serviteur\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eTuer une Monture\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin4.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin4.version) !== -1) \u0026\u0026 ((munchkin4.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin4.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin4.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin4.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin4.version) !== -1) \u0026\u0026 all.munchkin4TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin4TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-5 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin5 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/munchkin-5-on-ze-rode-again-edge_2345.jpg\" alt=\"Munchkin 5\"\u003e\n        \u003ch2 id=\"munchkin-5\"\u003eMunchkin 5 : On Zeu Rôde Again\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin5.filters }\"\u003e\n            \u003ch3 id=\"munchkin-5-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin5ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin5.version\"\u003e Édition originale\n                    \u003c/label\u003e\n                        \u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin5.version\"\u003e Seconde Édition - (Couleur)\n                    \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin5BonusesNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin5ActionsNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.classes\"\u003e Classes (\u003cspan v-text=\"munchkin5ClassesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin5StuffsNumber\"\u003e24\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.acolytes\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkin5AcolytesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin5LevelsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin5CursesNumber\"\u003e9\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin5MonstersNumber\"\u003e27\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"mounts\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.mounts\"\u003e Montures (\u003cspan v-text=\"munchkin5MountsNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.objects\"\u003e Objets (\u003cspan v-text=\"munchkin5ObjectsNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin5.races\"\u003e Races (\u003cspan v-text=\"munchkin5RacesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-5-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m5.gif\" alt=\"Munchkin 5\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLa Races des Gnomes\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin5CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-5-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin5DoorsNumber\"\u003e60\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color nocol\"\u003eÀ deux têtes\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eAnubis\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eAraignée de selle\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eAu sourire sinistre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBlobgobelin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eBoeuf Pour-qui-l'gnon\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003e~~Bonus de base~~ Bonnasse de bouse à l'attaque\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eClowns morts-vivants\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCoq qu'est triste\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eCyclope\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eDruide\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eEx di MJ\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eFée des dents\u003c/li\u003e\n                    \u003cli class=\"acolytes color nocol\"\u003eFidèle serviteur porteur de torche\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eGnome\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eGonflable\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eInsectricheurs\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eKarateka Rapace (spectral, qui plus est...)\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLa colère du Khan\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLa main du destin\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLes J'tue-mpfs\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLes frères Grimm\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eLes trois munchquetaires\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMâchoire de verre\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Catalogue\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! \"Et moi j'ai... un vieux caillou...\"\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Musette de rétention brachiale inopinée\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Perte du dé porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Pluie de belettes\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Poupée vaudou\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Règles arbitrairement égalitaires\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Souhait prononcé sur un coup de tête\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction ! Souhaiter qu'on vous retire une épine du pied\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eMonstre (subtilement) caché sous le lit\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Érrant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Érrant\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eMonture en solde\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eOrque\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eOrque perdu\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003ePolitiquement correct\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePou de foudre\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003ePouletergeist\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eRapace caparaçonne\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eSalaad\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"classes color nocol\"\u003eRôdeur\u003c/li\u003e\n                    \u003cli class=\"mounts color nocol\"\u003eTapis volant\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTéléprospecteur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eTout ptit dieu\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur\u003c/li\u003e\n                    \u003cli class=\"monsters color nocol\"\u003eVendeur de montures d'occasion\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin5.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin5.version) !== -1) \u0026\u0026 ((munchkin5.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin5.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkin5.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) || (munchkin5.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin5.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin5.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin5.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin5.version) !== -1) \u0026\u0026 all.munchkin5DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin5DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-5-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin5TreasuresNumber\"\u003e52\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArbre de transmission de gnons\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArc de désequilibre éhonté des combats\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure d'écuelles\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eArmure de plaques chauffantes\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eArmure ~~lourde~~ gourde\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eBaron de Münchkinhausen\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eBénédiction\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBottes de sept dieux\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBouclier humain\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque de l'horreur indicible et effroyablement terrifiante\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCasque invisible\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCloche à gros mage\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eCorde de saut à l'élastique\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eCoup critique\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCordon d'insécurité\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCotte de mailles en spandex\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé pipé\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eDeux pieds de plus\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eDiadème de dextérité suspecte\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eEau gazeuse bénite\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eÉcrire l'histoire de votre personnage\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eEnflammé\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée à trois mains\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eEspadon\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eÉpée courte\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eFaire cracher du soda par le nez au MJ\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eFaire rire le MJ\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eFaux ~~sein~~ saint en plastique\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eHarnois à la noix\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eIl ne peut en rester qu'un et c'est moi\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eInvitation à prendre une bière\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eJeter un froid\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eJoli petit haut perforant\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eJudicieusement interchangeable\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLA hache\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eLame ~~vorpale~~ morfale\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMarteau de guerre de destruction massive\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eMoulin à gruyère\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eNouveau MJ crédule\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePantoufles de P'yen-Hu\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePierre fine aux os de poil\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003ePlaque personnalisée\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e~~Port des armures légères...~~ Peur des ordres d'une mégère\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion ~~de torero~~ d'eau de terreur\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003ePoulaines\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eRire des répliques empruntées par le MJ aux Monty Python\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eSandwich aux épinards\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eSceptre d'éveil Playsghoule©\u003c/li\u003e\n                    \u003cli class=\"levels color nocol\"\u003eTrouver l'entrée secrète\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eTuning de monture\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin5.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin5.version) !== -1) \u0026\u0026 ((munchkin5.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin5.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin5.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin5.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin5.version) !== -1) \u0026\u0026 all.munchkin5TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin5TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-6 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin6 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/01ec5a2846c8ecc0bc8b3fa3ad606c169c3a.jpeg\" alt=\"Munchkin 6\"\u003e\n        \u003ch2 id=\"munchkin-6\"\u003eMunchkin 6 : Le Donjon de la Farce\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin6.filters }\"\u003e\n            \u003ch3 id=\"munchkin-6-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin6ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin6.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin6.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"fields\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin6.fields\"\u003e Donjons (\u003cspan v-text=\"munchkin6DonjonsNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"warps\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin6.warps\"\u003e Portails  (\u003cspan v-text=\"munchkin6WarpsNumber\"\u003e16\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-6-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m6.gif\" alt=\"Munchkin 6\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Portails\u003c/li\u003e\n                \u003cli\u003eLes Donjons\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin6CardsNumber\"\u003e36\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-6-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin6DoorsNumber\"\u003e16\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"warps color nocol\"\u003eÉboulement\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eÉboulement\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eLa fortune sourit aux gros nuls\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eLa fortune sourit aux gros nuls\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003ePassage étroit\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003ePassage étroit\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTous les chemin mènent à Rome\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTous les chemin mènent à Rome\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTourner en rond\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTourner en rond\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003ePorte secrète\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003ePorte secrète\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eDonjon néttoyé !\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eDonjon néttoyé !\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTéléportation !\u003c/li\u003e\n                    \u003cli class=\"warps color nocol\"\u003eTéléportation !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin6.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin6.version) !== -1) \u0026\u0026 (munchkin6.warps \u0026\u0026 item.class.indexOf('warps') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin6.version) !== -1) \u0026\u0026 all.munchkin6DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin6DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donjons\"\u003e\n                \u003ch3 id=\"munchkin-6-donjons\"\u003eDonjons\u003c/h3\u003e\n                \u003cp\u003eNombre total de donjons : \u003cspan v-text=\"munchkin6DonjonsNumber\"\u003e20\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"fields color nocol\"\u003eChez Joe, le donjon à prix discount !\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon au sol en papier tue-mouche dégueu\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon de l'effet manga libidineux\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon de la prodigalité du MD\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon de la révoltante mesquinerie\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon de la surabondance elfique\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon de la tricherie encore plus éhontée que d'habitude\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des adversaires en guimauve\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des malédictions contagieuses\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des monstres militants\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des morts-vivants omniprésents\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des prouesses inattendues\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des races ridicules\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon des règles d'emcombrement truquées\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du butin opulent\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du changement de sexe\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du meurtre obligatoire\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du petit effort en plus...\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du talent prodigieux\u003c/li\u003e\n                    \u003cli class=\"fields color nocol\"\u003eDonjon du trépas létal mortel qui tue\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin6.donjonsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin6.version) !== -1) \u0026\u0026 (munchkin6.fields \u0026\u0026 item.class.indexOf('fields') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin6.version) !== -1) \u0026\u0026 all.munchkin6DonjonsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin6DonjonsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-7-o munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin7o }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/munchkin-7-et-pour-q-1372-1294056786.jpg\" alt=\"Munchkin 7\"\u003e\n        \u003ch2 id=\"munchkin-7-o\"\u003eMunchkin 7 : Et pour quelques cartes de plus...\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin7o.filters }\"\u003e\n            \u003ch3 id=\"munchkin-7-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin7oToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Éditions**\n                \u003cdiv class=\"edition\"\u003e\n                    \u003cp\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"nocol\" v-model=\"munchkin7o.version\"\u003e Édition originale\n                        \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel\u003e\n                            \u003cinput type=\"radio\" value=\"color\" v-model=\"munchkin7o.version\"\u003e Seconde Édition - (Couleur)\n                        \u003c/label\u003e\n                    \u003c/p\u003e\n                \u003c/div\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin7oBonusesNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin7oActionsNumber\"\u003e25\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin7oStuffsNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin7oCursesNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.objects\"\u003e Objets (\u003cspan v-text=\"munchkin7oObjectsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7o.races\"\u003e Races (\u003cspan v-text=\"munchkin7oRacesNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-7-o-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m7o.gif\" alt=\"Munchkin 7\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eUn peu plus de triche !\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin7oCardsNumber\"\u003e56\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-7-o-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin7oDoorsNumber\"\u003e32\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color nocol\"\u003e... et ses petits copains\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003e... et ses petits copains\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eChimère\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eDans de beaux draps\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eIndiciblement...\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eInvisible\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction! Et ne m'appelez pas Ginette\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction! Expiration de garantie !\u003c/li\u003e\n                    \u003cli class=\"curses color nocol\"\u003eMalédiction! Peinture au plomb !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMeurtrier\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSauvage\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSéduisant(e)\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eStandard\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color nocol\"\u003eSang-méli-mélo\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Maousse Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eTromperie dur la marchandise\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eUltra Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eVraiment très...\u003c/li\u003e\n                    \u003cli class=\"actions color nocol\"\u003eVoleur de niveaux\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin7o.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin7o.version) !== -1) \u0026\u0026 ((munchkin7o.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin7o.actions \u0026\u0026 item.class.indexOf('actions') !== -1) || (munchkin7o.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkin7o.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin7o.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7o.version) !== -1) \u0026\u0026 all.munchkin7oDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin7oDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-7-o-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin7oTreasuresNumber\"\u003e24\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...À coque en acier renforcé\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...À talons aiguille\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Au multiples bouts pointus et tranchants\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Autonettoyant(e)\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Monté sur ressorts\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Perce-armure\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Plaqué or\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Renforcé(e)\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Thème musical\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003e...Ventilé\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003e1001 astuces de survie en donjon\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eBon pour des objets gratuits\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eCostume ne laissant (quasiment) rien à l'imagination\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eDeux ~~pieds dans le même sabot~~ sabots sur le même pied\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eOh le gros tricheuuuuuuuur!\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003ePotion magique de transmutation d'ADN\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eSou porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color nocol\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eTriche éhontée\u003c/li\u003e\n                    \u003cli class=\"bonuses color nocol\"\u003eTriche éhontée\u003c/li\u003e\n                    \u003cli class=\"stuffs color nocol\"\u003eTrou portatif\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin7o.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin7o.version) !== -1) \u0026\u0026 ((munchkin7o.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin7o.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin7o.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7o.version) !== -1) \u0026\u0026 all.munchkin7oTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin7oTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-7 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin7 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubimu07.png\" alt=\"Munchkin 7\"\u003e\n        \u003ch2 id=\"munchkin-7\"\u003eMunchkin 7 : Oh le gros tricheuuuuuuuur !\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin7.filters }\"\u003e\n            \u003ch3 id=\"munchkin-7-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin7ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin7BonusesNumber\"\u003e19\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin7ActionsNumber\"\u003e50\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin7StuffsNumber\"\u003e5\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin7LevelsNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin7CursesNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin7MonstersNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.objects\"\u003e Objets (\u003cspan v-text=\"munchkin7ObjectsNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin7.races\"\u003e Races (\u003cspan v-text=\"munchkin7RacesNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-7-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m7.gif\" alt=\"Munchkin 7\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eDe la triche de malade !\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin7CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-7-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin7DoorsNumber\"\u003e70\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e...de l'Amour\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003e...avec supplément de fromage\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAcheté au prix de gros\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAlité\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAncienne Édition\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAncienne Édition\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAncienne Édition\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBlindé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eChimère\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDans de beaux draps\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDans de beaux draps\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDeuxième round\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉdenté\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eEmpreintes de pas\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉpique Junior\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉpique Junior\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉpique Junior\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉpouvantable\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eExplosif\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eExtraordinairement\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eExtrèmement\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eFoire aux monstres\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eFoire aux monstres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFrites\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGérant de magasin de jeux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGonflé aux stéroïdes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGraffiti\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eInconcevablement\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eIncroyablement\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eInvraisemblablement\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLinge sale\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Et ne m'appelez pas Ginette\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Le MJ fait respecter les règles !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMarionnette chaussette\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMauvais odeur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetits soldats en plastique\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSaoul\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-méli-mélo\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-méli-mélo\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-méli-mélo\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSilhouette en carton\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSmiley\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSournois\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Maousse Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTélévision\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eUltra Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eUltra Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eUltra Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eUltra-rare\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVelu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVomitivement\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin7.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin7.version) !== -1) \u0026\u0026 ((munchkin7.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin7.actions \u0026\u0026 item.class.indexOf('actions') !== -1) || (munchkin7.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin7.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7.version) !== -1) \u0026\u0026 all.munchkin7DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin7DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-7-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin7TreasuresNumber\"\u003e42\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"objects color\"\u003e1001 astuces de survie en donjon\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÀ revêtement en Téflon®\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÀ coque en acier renforcé\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÀ talons aiguille\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAu multiples bouts pointus et tranchants\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAutonettoyant(e)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBon pour des objets gratuits\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCostume ne laissant (quasiment) rien à l'imagination\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDeux ~~pieds dans le même sabot~~ sabots sur le même pied\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eMites dressées\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eMoi, je monte jusqu'à II\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eMonté sur ressorts\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eMunchkin gonflable\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eNourrir l'obsession du MJ pour les dés\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eOh le gros tricheuuuuuuuur!\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eParchemin de désamélioration\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePerce-armure\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePlaqué or\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de taille démesurée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion magique de transmutation d'ADN\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePour me prendre mon jouet, il faudra l'arracher à mes mains froides et sans vie\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRetourner le cerveau du MJ\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eRenforcé(e)\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eSe réincarner sans mourir\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eSou porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTalisman porte-bonheur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eThème musical\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTonitruant\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTriche éhontée\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTriche éhontée\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTriche éhontée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTrou portatif\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eVendre père et mère\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVentilé\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eZieuter le scénario\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin7.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin7.version) !== -1) \u0026\u0026 ((munchkin7.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin7.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin7.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin7.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin7.version) !== -1) \u0026\u0026 all.munchkin7TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin7TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-8 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkin8 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/munchkin8.jpg\" alt=\"Munchkin 8\"\u003e\n        \u003ch2 id=\"munchkin-8\"\u003eMunchkin 8 : Centaure et Sans Reproche\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkin8.filters }\"\u003e\n            \u003ch3 id=\"munchkin-8-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkin8ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkin8BonusesNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkin8ActionsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkin8StuffsNumber\"\u003e22\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.acolytes\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkin8AcolytesNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkin8LevelsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkin8CursesNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkin8MonstersNumber\"\u003e24\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"mounts\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.mounts\"\u003e Montures (\u003cspan v-text=\"munchkin8MountsNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.objects\"\u003e Objets (\u003cspan v-text=\"munchkin8ObjectsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkin8.races\"\u003e Races (\u003cspan v-text=\"munchkin8RacesNumber\"\u003e25\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-8-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m8.gif\" alt=\"Munchkin 8\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLa Race des Centaures\u003c/li\u003e\n                \u003cli\u003eLa Race des Hommes-lézards\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkin8CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-8-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkin8DoorsNumber\"\u003e77\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"races color\"\u003eAncien\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eAncien\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eAncien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAccros qu'aux deals\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003e~~Angle~~ Ange adroit\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003e~~Angle~~ Ange droit\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003e~~Angle~~ Ange obtus\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBarabare\u003c/li\u003e\n                    \u003cli class=\"mounts color\"\u003eBélier de selle\u003c/li\u003e\n                    \u003cli class=\"mounts color\"\u003eBouc et mystère\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCentaure\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCentaure Tillard\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCheval de bataille\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eD'élite\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eD'élite\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eD'élite\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDes serpents dans le bus\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eFidèle serviteur Centaure\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eFidèle serviteur Homme-lézard\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eFidèle Serviteur Médium\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFlipper le ~~Dauphin~~ Saurien\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGrincheux\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHomme-lézard\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eHomme des Tavernes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJockey\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003e~~La nuit des morts vivants~~ L'ami des mors luisants\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLapin en chocolat\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe cavalier sans tête (et sans cheval, de surcroît)\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eLégendaire\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eLégendaire\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eLégendaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLézards et essais\u003c/li\u003e\n                    \u003cli class=\"mounts color\"\u003eLicorne de selle\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLord Alfred Tennis-on\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Appel de la forêt\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Avoine avarée !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Bobos\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Curieuse impression que les choses vont mal se passer...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Dé-coiffe-é\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Dérive génétique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Des fourmis (géantes rouges et carnivores) dans les jambes\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Gasterocotte de mailles\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Perte du sens de l'orientation sexuelle\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Petits doigts gourds, gluants et gauches\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Poussée d'incompétence\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Ta race !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Tu n'étais *pas* l'Élu\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction! Vide !\u003c/li\u003e\n                    \u003cli class=\"mounts color\"\u003eMonture Complètement Speed\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eNévrosé\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eObsessionnel\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePère Glu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePlacide\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePrince crapaud\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRoc Star\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSalamandre\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSalamandre Montypythonesque\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSerpent de Midgard\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTikbalang\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVaran navrant des écrans\u003c/li\u003e\n                    \u003cli class=\"mounts color\"\u003ePhénix de selle\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin8.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin8.version) !== -1) \u0026\u0026 ((munchkin8.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkin8.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkin8.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) || (munchkin8.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkin8.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkin8.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin8.version) !== -1) \u0026\u0026 all.munchkin8DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin8DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-8-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkin8TreasuresNumber\"\u003e35\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"levels color\"\u003eÀ quelque chose malheur est bon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAccessoires assortis\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAcheter de nouvelles figurines au MJ\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau qui donne la pêche !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAppeau à cheval\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eArriver en avance à la partie\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAvatar\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAvertisseur sonore absolument pas kitsch\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBardes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes en peau de mammifère\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCentaure et Sans Reproche\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussures pour voyager à pinces\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCotte ~~de mailles~~ d'écailles\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCouverture d'invisibilité\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCravache enragée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eEncensoir de censure\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eHalo\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLance et casque magiques\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMarmite de cassoulet William Saurien\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMasse à ailettes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMattraque du matin...\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMattraque du soir...\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOeillères\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePlumes de cheval\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePull-over de Noël\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRegarder des films de monstres japonais\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSerpent ~~à sonnette~~ des toilettes\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eSirop des Râles\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eSirop des vrais bonhommes\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eTrahir le groupe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTruc sphérique, pointu et sacré\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTurbo\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkin8.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkin8.version) !== -1) \u0026\u0026 ((munchkin8.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkin8.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkin8.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkin8.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkin8.version) !== -1) \u0026\u0026 all.munchkin8TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkin8TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-n munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinN }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubimub01.png\" alt=\"Munchkin : Petit Papa Munchkin\"\u003e\n        \u003ch2 id=\"munchkin-n\"\u003eMunchkin : Petit Papa Munchkin\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinN.filters }\"\u003e\n            \u003ch3 id=\"munchkin-n-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinNToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinNActionsNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinNStuffsNumber\"\u003e19\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinNLevelsNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinNCursesNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinNMonstersNumber\"\u003e26\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinN.objects\"\u003e Objets (\u003cspan v-text=\"munchkinNObjectsNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-n-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/n1.gif\" alt=\"Munchkin : Petit Papa Munchkin\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/n2.gif\" alt=\"Munchkin : Petit Papa Munchkin\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/n3.gif\" alt=\"Munchkin : Petit Papa Munchkin\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/n4.gif\" alt=\"Munchkin : Petit Papa Munchkin\"\u003e\n            \u003c/p\u003e\n            \u003cp\u003eLes icones précédentes en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Vilains et Gentils\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinNCardsNumber\"\u003e60\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-n-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinNDoorsNumber\"\u003e36\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e... armé d'une bûche de Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAides du père Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAnge de Bonté (mais aux manières un tantinet brutales)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAnti-Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBergers allemands\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBon Anges de Neige\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCasse-noisette\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCamelot de Noěl\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDinde de Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eEsprits de Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eÉléphant blanc\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGentil\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGentil\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJouets défectueux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eJoyeux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eKrampus\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'enfant au (satané bon sang d')Tambour (qui casse les oreilles)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Crado de Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Vent d'Hiver\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes p'tits rennes qui voient rouge\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes trois rois mafieux\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction : ~~Joyeux~~ Facheux Noël\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Pas la bonne taille !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMère Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePerce oreilles\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePère Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetits chanteurs à la Noix de Bois\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetit tambour\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePôle Mords Express\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePolice des vacances\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSapin de Noël\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eScrooge\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSpectre ~~du Noël présent~~ des présents de Noël\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eQuand on perd Noël...\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVilain\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVilain\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinN.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinN.version) !== -1) \u0026\u0026 ((munchkinN.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinN.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) || (munchkinN.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkinN.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinN.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinN.version) !== -1) \u0026\u0026 all.munchkinNDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinNDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-n-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinNTreasuresNumber\"\u003e24\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"levels color\"\u003eAffrontez les fêtes de faim damnée\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAvec tes souhaits par milliers\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBoîte à chaussures\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes de neige\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes de Père Noël\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBoule de neige\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBoulet de ~~canon~~ charbon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCane à sucre (d'orge)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCake au fruit un tout petit peu rassis, mais vraiment un tout petit peu\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChandelle festive\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChausson de Noël\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChapeau de Père Noël\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChapeau de Renne\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eCoincé dans la cheminée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉcharpe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉtoile de Noël\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eLait de poule très légèrement alcoolisé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMât de Cocagne qui cogne\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMon beau gourdin\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMon petit soulier (innocent et parfaitement inoffensif, promis)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÔôôô tannen bombe, ôôô tannen bombe...\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePagne en Guirlande\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePapier crado\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePic ~~à~~ de glace\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinN.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinN.version) !== -1) \u0026\u0026 ((munchkinN.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinN.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinN.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinN.version) !== -1) \u0026\u0026 all.munchkinNTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinNTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-m munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinM }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubimub2.png\" alt=\"Munchkinomicon\"\u003e\n        \u003ch2 id=\"munchkin-m\"\u003eMunchkinomicon\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinM.filters }\"\u003e\n            \u003ch3 id=\"munchkin-m-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinMToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinMActionsNumber\"\u003e17\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinMBonusesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.classes\"\u003e Classes (\u003cspan v-text=\"munchkinMClassesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinMStuffsNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinMLevelsNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinMCursesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinMMonstersNumber\"\u003e3\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"munchkinomicon\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.munchkinomicon\"\u003e Munchkinomicon (\u003cspan v-text=\"munchkinMMunchkinomiconNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.objects\"\u003e Objets (\u003cspan v-text=\"munchkinMObjectsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.races\"\u003e Races (\u003cspan v-text=\"munchkinMRacesNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"spells\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinM.spells\"\u003e Sorts (\u003cspan v-text=\"munchkinMSpellsNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-m-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/mm.gif\" alt=\"Munchkinomicon\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/mm1.gif\" alt=\"Munchkinomicon\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/mm2.gif\" alt=\"Munchkinomicon\"\u003e\n            \u003cimg style=\"float: none;\" src=\"media/images/upload/mm3.gif\" alt=\"Munchkinomicon\"\u003e\n            \u003c/p\u003e\n            \u003cp\u003eLes icones précédentes en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLe Munchkinomicon\u003c/li\u003e\n                \u003cli\u003eLes Sorts\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinMCardsNumber\"\u003e60\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-m-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinMDoorsNumber\"\u003e32\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e... et ses petits copains\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003e... et ses petits copains\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDe Hollywood\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eEnragé\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGolem de savon\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHaut\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHaut\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHaut\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eIndiciblement\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eInvisible\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJeanne d'Orque\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMaître\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMaître\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMaître\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Condamné par le Destin !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMeurtrier\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMiniature\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePeau de vache de la cour de récré\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePlein de préjugés\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSauvage\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSéduisant(e)\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSombre\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSombre\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSombre\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eStandard\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTromperie sur la marchandise\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eUltime\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVoleur de niveaux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVraiment très...\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinM.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 ((munchkinM.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinM.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinM.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkinM.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinM.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 all.munchkinMDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinMDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-m-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinMTreasuresNumber\"\u003e14\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes de pas de deux\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eChutte de rochers : pas de survivant\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eEnclume\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGreffier Griffu Grognon à une main\u003c/li\u003e\n                    \u003cli class=\"munchkinomicon color\"\u003eMunchkinomicon\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion d'éructation déplacée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de continuité rétroactive\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRecalculez vos XP\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTondeuse à gazon\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eUn coup de polsh sur le matos !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinM.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 ((munchkinM.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinM.munchkinomicon \u0026\u0026 item.class.indexOf('munchkinomicon') !== -1) || (munchkinM.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinM.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinM.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 all.munchkinMTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinMTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n             \u003cdiv class=\"books\"\u003e\n                \u003ch3 id=\"munchkin-m-books\"\u003eSorts\u003c/h3\u003e\n                \u003cp\u003eNombre total de sorts : \u003cspan v-text=\"munchkinMSpellsNumber\"\u003e14\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"spells color\"\u003eÀ vot' bon coeur !\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eGloire contagieuse\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eHachoir occulte\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eInvocation de horde\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eInvocation du livre\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eLe pouvoir par la terreur\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eLa Crypte de Zyvakomanksébo\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eMarque-page\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eMettez-y un peu du vôtre\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eMonstre, je t'ordonne de paraître !\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eNi vu ni connu j't'embrouille\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eRésurrection\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eSortilèche\u003c/li\u003e\n                    \u003cli class=\"spells color\"\u003eUn pour tous, tous pour moi\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinM.spellsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 (munchkinM.spells \u0026\u0026 item.class.indexOf('spells') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinM.version) !== -1) \u0026\u0026 all.munchkinMSpellsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinMSpellsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-st munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSt }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubism01.png\" alt=\"Star Munchkin\"\u003e\n        \u003ch2 id=\"munchkin-st\"\u003eStar Munchkin\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSt.filters }\"\u003e\n            \u003ch3 id=\"munchkin-st-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinStToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.acolytes\"\u003e Acolytes (Serviteurs) (\u003cspan v-text=\"munchkinStAcolytesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinStBonusesNumber\"\u003e4\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinStActionsNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.classes\"\u003e Classes (\u003cspan v-text=\"munchkinStClassesNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinStStuffsNumber\"\u003e40\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinStLevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinStMonstersNumber\"\u003e36\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.curses\"\u003e Pièges (Malédictions) (\u003cspan v-text=\"munchkinStCursesNumber\"\u003e15\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.races\"\u003e Races (\u003cspan v-text=\"munchkinStRacesNumber\"\u003e9\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt.objects\"\u003e Objets (\u003cspan v-text=\"munchkinStObjectsNumber\"\u003e21\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-st-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003eSont apparut avec ce jeu :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Acolytes (similaire aux Fidèles Serviteurs)\u003c/li\u003e\n                \u003cli\u003eLes Pièges (similaire aux Malédictions)\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinStCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-st-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinStDoorsNumber\"\u003e93\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Assistant(e) Sexy\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Androïde\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Cible Vivante\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Cible Vivante\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Extra-Terrestre Sonore et Velu\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Fidèle Robot\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Petit Génie\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Voleur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003e...d'une Autre Dimension\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003e...et son Clone\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAffreux Machin Vert\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAmazone de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAstrorat Musqué Pirate de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBimbo Bionique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBlob\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBoule de Poils\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBoule de Poils à Dents de Sabre\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCapitaine Beurk\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCerveau en Bocal\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChaise\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eChasseur de Primes\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eChasseur de Primes\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eChasseur de Primes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChose sur laquelle les Yeux de l'Homme ne devraient Point se Poser\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCow-Boy de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCréatures Minuscules mais Incroyablement Avancées\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCybernétique\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCyborg\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCyborg\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCyborg\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eÉtoile ~~de mer~~ de l'Espace...\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eÊtre de Pensée Impure\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eFélin\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eFélin\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eFélin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFourmis Géantes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFrank le Tank Facétieux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGéant Gazeux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJarre Jarre\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Étrange Créature du Lac Rose\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Horreur aux Mille Yeux (Comptez pas, on vous dit...)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Chèvre de Monsieur Spock\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eLe Dernier de sa Race\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Grand Cthulhu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMassacrobot\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMiniature\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eNégociant Interstellaire\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eNégociant Interstellaire\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eNégociant Interstellaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eParasite Facial Extrêmement Attachant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetits Gris\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetit Homme Vert\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Accident de Téléportation\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Amnésie\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Antimatière\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Bonbons Extra-Terrestres\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Déversement Accidentel de Produits Chimiques (et accessoirement mutagènes)\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Éruption Solaire\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Expérience Extra-Terestre\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Inversion de Chromosome\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Inversion de la Gravité\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Monofilament\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Ouvre-Boîte\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Poulpisateur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Régression Génétique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Touillage de Cerveau\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePlasmoïde\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePlante Carnivore\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePshérif Psi\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePsi\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePsi\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePsi\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eRadioactif\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRobalayeur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSang-Mêlé\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSang-Mêlé\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSavant Fou\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSavant Fou\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSavant Fou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSonde Spatiale\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTank O.G.R.E.\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVampire de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVerminator\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVirus Informatique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eYip\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSt.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSt.version) !== -1) \u0026\u0026 ((munchkinSt.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinSt.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkinSt.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkinSt.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinSt.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinSt.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt.version) !== -1) \u0026\u0026 all.munchkinStDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinStDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-st-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinStTreasuresNumber\"\u003e75\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color\"\u003e\"J'ai une meilleure offre...\"\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003e\"Nous venons en paix... juré craché !\"\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAmplificateur Mental (avec caisson de basses psychiques)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAntennes à Ressort\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure Énergétique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure de Combat\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBaguette Paralysante\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBananoventilolaser\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBobaser\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBoite de Schrödinger\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBombe Sangsue\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes à Propulsion\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes Magnétiques\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eBouton Innocemment Dégrafé\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eCasier d'Armes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasque Bulle\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChamé de Stupidité\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eChamp de Stase\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCimeterre Photonique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCombinaison Spatiale en Cellophane\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eCoupons de Réduction\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDazer\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDénoument Inattendu\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDents en Diamantoïde\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉlectro-Combinaison\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eFausse Carte d'Identité\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFouet Neuronal\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eFourrière Intergalactique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGaz de Contrôle Mental\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade à Flash très Intense (bronzage au 3ème degré garanti)\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade à la Bierre Secouée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade à Nanomachines Hallucinogènes\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade à Virus Vibratoire\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade Gerbante à Plasma Sonique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGros Bouton Rouge\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eIllumination Cosmique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eInterface de Piratage Cybernétique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLaser\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLaser\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLunettes à Rayons X\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMaser\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMécha-Na-P\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eMédikit\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eMédikit\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMitrailleuse de Queue\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eMonolithe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMutation Digitocéphale\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eOblitération Totale de Planète Pacifique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOrbe de Prédiction\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOrteils Préhensiles\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePacificateur Low-Tech\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eParaboles de Détection\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePartenaire Symbiote\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePelote de Laine\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003ePiratage Informatique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet à Rayons R\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet à Plop !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet Décérébrant pour Décérébré\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003ePréter vos Bandes Dessinées au MJ\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003ePréter vos Vidéos au MJ\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRazer\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eRhum Dénébien\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRobochien\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRuban de Scotch\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eShmazer\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eSerum du Super-Soldat\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eSoutenir le MJ à Coup d'Arguments Scientifiques Bidon\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTime Warp\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTime Warp\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eToutou Extra-Terrestre\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTronço-Gants\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eVibrolame\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eVisite de Votre Double du Futur\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSt.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSt.version) !== -1) \u0026\u0026 ((munchkinSt.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinSt.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinSt.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinSt.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt.version) !== -1) \u0026\u0026 all.munchkinStTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinStTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-st-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSt2 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubism02.png\" alt=\"Star Munchkin 2\"\u003e\n        \u003ch2 id=\"munchkin-st-2\"\u003eStar Munchkin 2 : La Guerre des Clowns\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSt2.filters }\"\u003e\n            \u003ch3 id=\"munchkin-st-2-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinSt2ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.acolytes\"\u003e Acolytes (Serviteurs) (\u003cspan v-text=\"munchkinSt2AcolytesNumber\"\u003e5\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinSt2BonusesNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinSt2ActionsNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.classes\"\u003e Classes (\u003cspan v-text=\"munchkinSt2ClassesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinSt2StuffsNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinSt2LevelsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinSt2MonstersNumber\"\u003e27\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"rooms\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.rooms\"\u003e Pièces (\u003cspan v-text=\"munchkinSt2RoomsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.curses\"\u003e Pièges (Malédictions) (\u003cspan v-text=\"munchkinSt2CursesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.races\"\u003e Races (\u003cspan v-text=\"munchkinSt2RacesNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSt2.objects\"\u003e Objets (\u003cspan v-text=\"munchkinSt2ObjectsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-st-2-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/st2.gif\" alt=\"Star Munchkin 2\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Sont apparut avec cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Pièces\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinSt2CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-st-2-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinSt2DoorsNumber\"\u003e72\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Cible Vivante\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Le Professeur\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Ralph le Super Chien\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Petite Soeur\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolyte Tadboulons\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAmbassadeur Bourdon\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBob Ascète\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCadettes de Star-Flirt\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eChasseur de Primes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCantatrice de Space Opera\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eClowntrooper\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCosplayer un Poil (voire plusieurs poils) trop Enthousiaste\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eCyborg\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDark Cador, le Musichien de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eElvis Bicéphale de l'Espace\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eErreur de Continuité\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eEsprit de Ruche\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eFélin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eFou\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eJe suis ton Père !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJumeau de Télétransporteur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Pince de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Mec aux Oreilles Factices\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Zéro Absolu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eInsectoïde\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eInsectoïde\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eInsectoïde\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eInsectoïde\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Oeil Électrique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Momie de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Raclette Maléfique de la Voie Lactée\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Cruel et Crapuleux Dr Cranedechrome\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMiss Île\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eMutant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eNain Rouge\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eNana peu Farouches de Films de Série Bzzzz\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eNégociant Interstellaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eOffres Spatiales : Soldes Monstres\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Boudoir Extra-Terrestre\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Cantina\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Compacteur à Ordures\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Dehors\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Laboratoire\u003c/li\u003e\n                    \u003cli class=\"rooms color\"\u003ePièce : Salle de Bain Extra-Terrestre\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Big Bang\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Champ Inhibiteur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Désintégration Spontanée\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Jet d'Acide\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Le Plus Pernicieux des Pièges Jamais Conçus\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Trou Noir\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePingouins Tueurs\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePolymorphe\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePsi\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePtérodactyle Fractal\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePublic Volatil\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSang-Mêlé\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSavant Fou\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper-Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eRanger de l'Espace\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eRanger de l'Espace\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eRanger de l'Espace\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eRanger de l'Espace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRDC\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTélépathe\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eUltra-Violette\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVictime d'une Terrible Méprise\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eXQWZZMP\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSt2.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSt2.version) !== -1) \u0026\u0026 ((munchkinSt2.rooms \u0026\u0026 item.class.indexOf('rooms') !== -1) || (munchkinSt2.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinSt2.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkinSt2.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkinSt2.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinSt2.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinSt2.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt2.version) !== -1) \u0026\u0026 all.munchkinSt2DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinSt2DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-st-2-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinSt2TreasuresNumber\"\u003e40\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"levels color\"\u003eAmélioration des Micro-Chloridiens\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAstronourriture\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAutofuite 1000\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAux Effets Spéciaux Améliorés\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAnimation Suspendue\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBombe Intelligente\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCanon à Plasma\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasque Psi\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCeinture d'Astéroïdes\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCharabia Technologique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eComplexe Exoskeleton\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eComplexe Gratte-Dos Extra-Terrestre\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eComplexe Laser Optique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eComplexe Le ~~Pont~~ Front de l'Enterprise\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCravatou Barada Nikto\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDans l'Espace, Personne ne vous Entend Tricher\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDécouverte d'une Nouvelle Forme de Vie\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÉcrire les Caractéristiques de son Personnage en Base 8\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÉdition Spéciale du Director's Cut\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eExpérimental\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFil de la Trame Spatio-Temporelle\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eGagner la Reconnaissance de toutes les Races Intelligentes de l'Univers\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade Multiplicatrice\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade au Yaourt Parfumé au Nacho\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade Ouvre-Boîte\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLampe ~~Torche~~ Chalumeau\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLance-Boulettes Perce-Armure à Tête Chercheuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLaser à Rayons X\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLaser à Commande Digitale\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMinces Rubans Judicieusement Placés\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePeinture Verte\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePulvérilaser\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eRamper par les Conduits d'Aération\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRoues Rétractables\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTélécommande de Porte de Garage\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTronçobottes\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVide\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVide\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSt2.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSt2.version) !== -1) \u0026\u0026 ((munchkinSt2.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinSt2.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinSt2.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinSt2.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSt2.version) !== -1) \u0026\u0026 all.munchkinSt2TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinSt2TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-su munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinSu }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/super_munchkin_Boite.jpg\" alt=\"Super Munchkin\"\u003e\n        \u003ch2 id=\"munchkin-su\"\u003eSuper Munchkin\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinSu.filters }\"\u003e\n            \u003ch3 id=\"munchkin-su-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinSuToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"acolytes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.acolytes\" v-on:click=\"munchkinSuAcolytesGroup()\"\u003e Acolytes (Serviteurs) (\u003cspan v-text=\"munchkinSuAcolytesNumber + munchkinSuSlavesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinSuBonusesNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinSuActionsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.classes\"\u003e Classes (\u003cspan v-text=\"munchkinSuClassesNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinSuStuffsNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinSuLevelsNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinSuMonstersNumber\"\u003e39\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"origins\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.origins\"\u003e Origines (\u003cspan v-text=\"munchkinSuOriginsNumber\"\u003e6\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.curses\"\u003e Pièges (Malédictions) (\u003cspan v-text=\"munchkinSuCursesNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"powers\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.powers\"\u003e Pouvoirs (\u003cspan v-text=\"munchkinSuPowersNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinSu.objects\"\u003e Objets (\u003cspan v-text=\"munchkinSuObjectsNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-m-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003eSont apparut avec ce jeu :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Pouvoirs\u003c/li\u003e\n                \u003cli\u003eLes Origins\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinSuCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-su-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinSuDoorsNumber\"\u003e106\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e\"Il n'était pas vraiment mort...\"\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003e2D\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolytes : Ami Imaginaire\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolytes : Femme reporter pleine d'aplomb\u003c/li\u003e\n                    \u003cli class=\"acolytes color\"\u003eAcolytes : Gamin doté des mêmes Pouvoirs\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAgent du Fisc\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAnonyman\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eAura Radioactive\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBalèzman\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBaron Bidon\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCaméléon\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCaptain Corrosion\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCharisme\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChasseur de Frime\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eClicman\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eContact avec une Idole Mystérieuse\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCorps Vachement Résistant (mais un truc de ouf, Quoi...)\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCostume moins Naze que le Vôtre\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCri Supersonique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eD'autres voyous mous du genou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDangerousse Girl\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eDécolleté Foudroyant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDirigeant d'un Petit Pays d'Europe\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDocteur Abiquitor\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDocteur Halitos\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDuplicato-Rayon\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eÉlasticité\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eExotique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eExotique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eExotique\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eExpérience du Gouvernement qui à mal Tourné\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eExplosiman\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFlammes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGlandouilleman\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGodzillarbre\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eGriffes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGamins pénibles\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGerbeman\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGrand type qui bouffe les planètes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eHéros de l'Ancienne République Soviétique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eHorde d'Aliens Baveux\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eHypnotisme\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eImmergé dans une substance étrange\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eIrrésistible tendance à Laisser des Indices\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eInvisibilité\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eKidnapping de votre Tante Marge\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Armée sans Visage\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Imposteur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Vachouette Landaise du Dr Alain Therville\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Big Boss\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Spaminator\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Tueur à Gags\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMarc Delabête, le Grizzly-Garou de l'Apocalypse\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMatériel-de-Bureau-Man\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMiss Intello\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMiss Wonder-Chépaquoi\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMister DCA, spécialiste en Tir aux Super-Pigeons\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMister Incompris\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eMordu par un Chihuahua Radioactif\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMutan\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMystique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMystique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMystique\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eOrteil écrasé\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePiaf Man\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Bégonia Mangeurs d'Hommes\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Changement de Scénariste\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Condamnation pour trouble sur la voie publique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Couictonite\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Démasqué !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Dinosaure\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Falaise Incroyablement Fragile\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Immondes Produits Chimiques\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Mixeur à Superhéros\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Péril Invisible\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Propulsé dans l'Espace\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Réacteur Nucléaire\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Robot Compresseur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003ePiège ! Un sort pire que la mort\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eProfesseur Onsley Jell\u003c/li\u003e\n                    \u003cli class=\"origins color\"\u003eRadio tombée dans la Baignoire\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRafale Psi\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRayon de la Morve\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRayons Oculaires\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRot Supersonique\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper-Tricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSupervers-Man\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eSupervitesse\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTechno\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTechno\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTechno\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eTéléportation\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eToujours des voyous mous du genou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTriple Idiot\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eVision à Rayons X\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eVol\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVotre Ennemi Juré\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVoyous mous du genou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eWonder Bimbo\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eWonder Bras\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSu.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSu.version) !== -1) \u0026\u0026 ((munchkinSu.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinSu.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) || (munchkinSu.origins \u0026\u0026 item.class.indexOf('origins') !== -1) || (munchkinSu.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinSu.powers \u0026\u0026 item.class.indexOf('powers') !== -1) || (munchkinSu.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinSu.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSu.version) !== -1) \u0026\u0026 all.munchkinSuDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinSuDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-su-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinSuTreasuresNumber\"\u003e62\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color\"\u003e\"Tu peux être sûr qu'ils vont faire une suite...\"\u003c/li\u003e\n                    \u003cli class=\"slaves color\"\u003eAcolyte Voiture Parlante\u003c/li\u003e\n                    \u003cli class=\"slaves color\"\u003eAcolyte Double Robotique\u003c/li\u003e\n                    \u003cli class=\"slaves color\"\u003eAcolyte Singe avec un costume comme le votre\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAimant Géant\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAnneau Lazérospidouilleur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure à la Limite de la Décence\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure Ailée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure en Cristal\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBagette Magique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBalai à Chiottes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBalai à Réaction\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBasket à Ventouses\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBatte Mobile\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBatteur Électrique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes pour Shooter\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBoum-rang\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eCafé Noir\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCape\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasque Électropsychique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCeinture Multi-Usage\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eClub de Golf\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCouettes Préhensiles\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCostume Peint à même la Peau\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDéguisement d'individu sans Histoire\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDétecteur de Vilains\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eEffroyable Machine de Mort et de Destruction\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÉvasion organisée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eHaltères\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eIncohérence de Scénario\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLa Torche (contondante) de la Liberté\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eLabo Secret\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMontre-Radio Légère Pratique et Maniable\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eObsession Délirante\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePavé de Bonnes Intentions\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePermis de Démolir\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePetit Raté Vestimentaire\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet à Grappin\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet Extra-Terrestre qui fait Pschiiiiiiiiwww\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePsycho-Électrodes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eQG : En Orbite\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eQG : Grotte Secrète\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eQG en Solde\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSandales Ailées\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSkate en Molybdène\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSuper Armure\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSuper Bouclier\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eSuper Sérum\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTélézapinateur\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVersion d'un Univers Alternatif\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eViolation de Copyright\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAcheter une Figurine au MJ\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAdaptation en Film\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCaleçon par-dessus le Pantalon\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eColère du Juste\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRecherches dans un Magasin de Comics\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRécompense d'un montant Inconcevable\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eNouveau Costume\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eMeurtre Accidentel d'un Acolyte\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinSu.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinSu.version) !== -1) \u0026\u0026 ((munchkinSu.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) || (munchkinSu.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinSu.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinSu.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinSu.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinSu.version) !== -1) \u0026\u0026 all.munchkinSuTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinSuTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-z munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinZ }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubimz01.png\" alt=\"Munchkin Zombies\"\u003e\n        \u003ch2 id=\"munchkin-z\"\u003eMunchkin Zombies\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinZ.filters }\"\u003e\n            \u003ch3 id=\"munchkin-z-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinZToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinZBonusesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinZActionsNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinZStuffsNumber\"\u003e40\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinZLevelsNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"mojos\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.mojos\"\u003e Mojos (\u003cspan v-text=\"munchkinZMojosNumber\"\u003e9\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinZMonstersNumber\"\u003e38\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinZCursesNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"powers\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.powers\"\u003e Pouvoirs (\u003cspan v-text=\"munchkinZPowersNumber\"\u003e15\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ.objects\"\u003e Objets (\u003cspan v-text=\"munchkinZObjectsNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-z-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003eSont apparut avec ce jeu :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Mojos\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinZCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-z-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinZDoorsNumber\"\u003e95\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"monsters color\"\u003e3872 Bin-Ork-Lards\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAdepte de l'Herbe qui Vide la Tête\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAu Volant d'un Rouleau Compresseur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAvec un Gros Sifflet\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAttrape-Cerveau\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBaby-Sitter\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBarista\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBodybuildé\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBoucher\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBureaucrate Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCannibale\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCheftaine Scout (aux méthodes de vente un tantinet agressives)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChihuahua Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eConcierge\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCostaud\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCostaud\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCostaud\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCoriace\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCoriace\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCroque-Mort\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFurtif\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFurtif\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFuté\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFuté\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFuté\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGang de Bikers\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGlandeur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGolfeur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eHéros de Film d'Action\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eInconscient\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eInfirmière\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Dame de la Cafet'\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLivreur de Pizza\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Arrêt de Mort\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Article(s) de la Mort\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Bière et Paix\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Bobooooooooo\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! C'est Chauuuuuud !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Capital Décès\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Cerveauuuuuuu !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! De l'eaaaaauuuuuuu\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Doberman très Attaché\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Double Mojo\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Double Mojo\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Feinté par un Mannequin\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Fourmis\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Jeuuunoooooot !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Les Bras vous en tombent\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Locooooooo !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Mais où aviez-vous la Tête ?\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Mort à l'arrivée (et au départ aussi)\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Perplexité Cadaverique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Tue par-dessus Quête\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eManiant un Fusil\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eManiant un Fusil à Canon Double\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eManiant une Tondeuse à Gazon\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eManifestante\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMascotte\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMère de Famille\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMonsieur tout le Monde\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eNinja\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eNonne\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePercepteur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePetit Gamin Mignon\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePoivrot\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePompier\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePostier\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePrésentateur de Jeu Télévisé\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003ePutrescent\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003ePutrescent\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRapide\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRapide\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRapide\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRequin Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSécurité de l'Aéroport\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShérif du Comté\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eType en Chemise Hawaïenne\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVendeur de Voiture d'Occasion\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eZombie de l'Administration\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Nucléaire\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Nucléaire\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Nucléaire\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Pestiféré\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Pestiféré\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Pestiféré\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Vaudou\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Vaudou\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Vaudou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eZombiologiste\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinZ.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinZ.version) !== -1) \u0026\u0026 ((munchkinZ.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinZ.powers \u0026\u0026 item.class.indexOf('powers') !== -1) || (munchkinZ.mojos \u0026\u0026 item.class.indexOf('mojos') !== -1) || (munchkinZ.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinZ.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ.version) !== -1) \u0026\u0026 all.munchkinZDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinZDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-z-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinZTreasuresNumber\"\u003e73\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color\"\u003eÀ son Corps Défendant\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAllez les Pourris !\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAstuces pour Survivre à une Invasion de Zombies\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBarrière Grillagée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBâton à Ressort\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eBi-Zombie\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eBlague Humerus-Tique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBlanche Armure de Porcelaine\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBoîte aux Lettres\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBorne Anti-Incendie\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBras\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBrique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBoule de Bowling\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBouteille d'Acide\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCabane à Oiseaux\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eCachette Idéale\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCanettes de Soda\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasserole\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCerveaauuux !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChariot de Supermarché\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eChat Furibard\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussures de Pointure\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eClef au Bras (un poil brutale)\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eConseils Diététiques\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCôte de Porc\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCoupe de Bowling\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCrachat Contaminé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCravate en Papier Tue-Mouche\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCrocs\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCroque-Madame\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eEn-Cas Diététique\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eEn Feu\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFétiche\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eFuite des Cerveaux\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGraisse en Putréfaction\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGriffes Phosphorescentes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGueule Béante\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGuirlande de Noël\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003e~~Intestin Grêle~~ Grêle d'intestins\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eJambe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eJouet Tape-à-l'Oeil\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eLa Main sur le ~~Berceau~~ Cerveau\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLangue Fourchue\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLongs Doigts Osseux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eMain Armée (pour les attaques éponymes)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMauvais Oeil\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOs de Mort-Bon-Vivant\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePanneau de Stop\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eParapluie\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePatin à Roulettes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePelle de Fossoyeur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePiège à Rat\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePortière de Voiture\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePots de Fleur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePunaises\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRepas Chaud (comme la braise)\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eS'Attaquer à l'Homme de Tête\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSinge Domestique\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eSosie Moisi\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSuperglou, la Colle qui Colle ~~à Mort~~ les Morts\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTête de Clown\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTête de Lard\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTripes qui Agrippent\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eUn Autre Zombie\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eUn Bras et une Jambe\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eUne Cervelle pour Deux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eVieux Restes\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eVisite au Musée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eVinyl Vintage\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eVotre propre Pancreas et/ou votre Rate\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eZombies\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinZ.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinZ.version) !== -1) \u0026\u0026 ((munchkinZ.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinZ.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinZ.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinZ.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ.version) !== -1) \u0026\u0026 all.munchkinZTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinZTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-z-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinZ2 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubimz02.png\" alt=\"Munchkin Zombies 2\"\u003e\n        \u003ch2 id=\"munchkin-z-2\"\u003eMunchkin Zombies 2 : Ça zigouille à tour de bras !\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinZ2.filters }\"\u003e\n            \u003ch3 id=\"munchkin-z-2-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinZ2ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinZ2BonusesNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinZ2ActionsNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinZ2StuffsNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinZ2LevelsNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"mojos\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.mojos\"\u003e Mojos (\u003cspan v-text=\"munchkinZ2MojosNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinZ2MonstersNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinZ2CursesNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"powers\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.powers\"\u003e Pouvoirs (\u003cspan v-text=\"munchkinZ2PowersNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinZ2.objects\"\u003e Objets (\u003cspan v-text=\"munchkinZ2ObjectsNumber\"\u003e\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-z-2-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/mz2.gif\" alt=\"Munchkin Zombies 2\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.\u003c/p\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinZ2CardsNumber\"\u003e112\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-z-2-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinZ2DoorsNumber\"\u003e66\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"powers color\"\u003eAffamé\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eAffamé\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eAffamé\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAu Dernier ~~Rang~~ Range\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAu Téléphone\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBatte-Man\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBébé Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBibliothécaire\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCerveauphage\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChirurgien du Dimanche\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eConducteur de Cyclopousse\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCoriace\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eCostaud\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDiplômée de l'Unversité\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDoté du Pouvoir de la Science !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDouble Mojo\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFermier\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFurtif\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eFuté\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eImposteur Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJoueur de Basket\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJoueur de Hockey\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJoueur ~~de~~ Zombie\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! À Corps Perdu...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Complètement Creuvé !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Fuite des Cerveaux\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Garroooooooot !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Kesakoooooooo !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Noyauuuuuuux !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Ostrogoths !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Travaaaaaaaaux !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Traversée du Ciment\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eOrang-Outan\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePas de Cerveau, pas de Bobo\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePierroooooooot !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePoliticard\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eProf de Mécanique\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003ePutrescent\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eQu'a du Cran\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePervenche\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePlombier\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eProf de Sport\u003c/li\u003e\n                    \u003cli class=\"powers color\"\u003eRapide\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eReprésentant en Feux d'Artifice\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eReporter\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eRobin des Doigts\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSkateur de l'Extrême\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSosie d'Elvis Zombie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSoubrette\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSurvivant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVégétalienne\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVieille Dame aux Chats\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVieux Grincheux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eZombie qui (se) Déchire\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Rafistolé\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Rafistolé\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Rafistolé\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Rafistolé\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Nucléaire\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Pestiféré\u003c/li\u003e\n                    \u003cli class=\"mojos color\"\u003eZombie Vaudou\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinZ2.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinZ2.version) !== -1) \u0026\u0026 ((munchkinZ2.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinZ2.powers \u0026\u0026 item.class.indexOf('powers') !== -1) || (munchkinZ2.mojos \u0026\u0026 item.class.indexOf('mojos') !== -1) || (munchkinZ2.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinZ2.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ2.version) !== -1) \u0026\u0026 all.munchkinZ2DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinZ2DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-z-2-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinZ2TreasuresNumber\"\u003e46\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"stuffs color\"\u003eAbat-Jour\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAlimentation Riche\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003e~~Attaché-case~~ Attaché-Crève\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBaguette à Bulles\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBilles\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBois de Cerf\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBonne Vieille Planche des Familles\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÇa à un Goût de Poulet\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÇa Zigouille à Tour de Bras !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCactus\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCercueil\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eChampaaaaaaagne !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussures de Bowling\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChemise de Bowling\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCompteur Geiger\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCou à Rallonge\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Ultrapipé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDentier Mécanique\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eDes Richesses dépassant vos Rêves les plus Fou !\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDevine qui vient (te) manger ce soir !\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÉquilibre Alimentaire\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eFluide d'Embaumement\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eFluide d'Embrasement\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFourche\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGirouette\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGros Doigts\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eLa Mort vous vas si Bien\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLangue Préhensile\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eLingo d'Or\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMauvaise Haleine\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMouche de Combat\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMoto\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNarguilé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePancarte d'homme-sandwich\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePiège à Ours\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePierre Tombale\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePoisson\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePoubelles en Feu\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRestauration Rapide\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eRéutilisation, Recyclage, Réanimation\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSabre de Samouraï\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSourire de Winner\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTête Chercheuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTuyau d'Arrosage\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinZ2.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinZ2.version) !== -1) \u0026\u0026 ((munchkinZ2.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinZ2.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinZ2.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinZ2.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinZ2.version) !== -1) \u0026\u0026 all.munchkinZ2TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinZ2TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-c munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/b28668707a5461de055da1bb129d18f368b4.jpeg\" alt=\"Munchkin Cthulhu\"\u003e\n        \u003ch2 id=\"munchkin-c\"\u003eMunchkin Cthulhu\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC.filters }\"\u003e\n            \u003ch3 id=\"munchkin-c-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinCToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinCBonusesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinCActionsNumber\"\u003e32\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.classes\"\u003e Classes (\u003cspan v-text=\"munchkinCClassesNumber\"\u003e18\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinCStuffsNumber\"\u003e38\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinCLevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinCMonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinCCursesNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC.objects\"\u003e Objets (\u003cspan v-text=\"munchkinCObjectsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-c-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003eEst apparut dans ce jeu :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLa Classe spéciale Cultiste\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinCCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-c-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinCDoorsNumber\"\u003e100\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e... et sa Progéniture\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBlasphématoire\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eC'est çui qui dit qui R'Lyeh !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCelle qui Suçotait dans les Ténèbres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCelui qui Chapardait dans les Ténèbres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCeux qui Chipotaient dans les Ténèbres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChibithulhu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCréé avec des Règles Cinématographiques !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eComplètement Barge\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eConvention de Cultistes\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCorrompu par le Pouvoir !\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eD'une Indescriptible Hideur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eÉcume de Bave\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eEn pleine Élucubration\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eEscarggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGoulaschoggoth\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGrand Coup sur la Tête\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGrand Coup sur la Tête\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eH.P. Munchcraft\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eIïa R'Lyeh !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eIllumination Inopportune\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eInnommable\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eJe ne suis pas Digne de cet Honneur...\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJoggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eKermitoggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL_ Ch_s_ s_ns V___ll_s\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Abomination du Sandwich\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Avocat d'Affaires Charles Dexter Ward\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'Horreur Inçonon... impon... imprononçable\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Beaufonds\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Clochard d'Innsmouth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Funky de Yuggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Grand Cthulhu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Peuple Serpent à Lunettes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Roi en Rose\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eLes Étoiles sont Alignées\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eLes Étoiles sont Complètement Stone\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eLes Étoiles sont Troublées\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLloigor (ou Lloichka) Bogdanoff (on les reconnaît plus...)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMaigre Bêtes de la Nuisette\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Aller-simple pour l'Asile de Snarkham\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Amnésie\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Changement de Sexe\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Cheveux Blanchis sous le Coup de l'Horreur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Cheveux Dressés sur la Tête\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Encore une Affreuse Prise de Conscience\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Hastur Hastur Hastur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! J'me sens tout Visqueux, d'un Coup...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! La Malédiction de Savath\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Par-delà la Frontière de la Démence\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Piles de la Lampe Torche Usées !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Sac à Dos Dévoré\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Votre Arme devient Maléfique\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMéphitique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMesquins Byakhees Taquins Kakis\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMorves de Dieu Extérieur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMouchoggoth, La Mite de Cthulhu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMutation\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePaahrdeulhah, Lémure du Sommeil\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePlongé dans son Sommeil Millénaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePolly le Polype Violent\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003ePortail du Mystère\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eQuadri-Dimensionnel\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003e~~Rejeton~~ Gueuleton d'Azathoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRideauggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRoboggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShog Goth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShoggoth (même pas de jeu de mot, rien...)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSombre Bouton de Shub-Niggurath (en pleine floraison, qui plus est...)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSouchoggoth\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSquameux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTchou-Tchou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTony Harlathotep (dit « Hawk »)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTémoins de Cthulhu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eVésiculeux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eVigne des Anciens, Avatar de Yog-Sauterne\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC.version) !== -1) \u0026\u0026 ((munchkinC.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinC.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinC.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinC.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC.version) !== -1) \u0026\u0026 all.munchkinCDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinCDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-c-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinCTreasuresNumber\"\u003e68\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color\"\u003e...des Plutôt Grands et Relativement Anciens\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003e... Officiel du Mythe\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAppareil de Protection Électrique du Professeur Tesla (Prototype)\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAppeler l'Armée à la Rescousse\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eApprendre ce que l'Homme n'était pas Censé Savoir\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAutocollant de Pare-Choc Cthulhu\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAvertir le FBI de l'Existence des Créatures\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAvertir le Président\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBaguette de Mémorable Raclée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes en Caoutchouc\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCarte de Membre d'un Culte Maléfique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCarte Non-Euclidienne\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasque de Mineur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eClou Lourd\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eCorned-Beef\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCornemuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCouteau à Sushi du Destin\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCouvre... Poulpe-Chef\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eCri Perçant\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCthulhututu Chapeau Pointu\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDécouverte Troublante dans l'Album de Famille\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eÉclipse Solaire\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eEnseigne des Anciens\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eEntrainement\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÊtre Interviewé au Journal de Vingt Heures\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFusil à Triple Canon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eHache Préhistorique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Cancan Fielleux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Élan des Preux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Flan Visqueux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le P'tit Blanc des Dieux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Sang Dégueu\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Sang des Dieux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Moins Lent, c'est Mieux...\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eIncommensurable Richesse\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eInformer les Autorités Locales\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eInsecticide\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eLa Douleur tombée du Ciel\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLance-Flammes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLattes à latter du Monstre\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eLe Chant qui Rend Fou\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLes Tatanes Hallucinées\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMaîîîîîîître !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eManuscrit Ésotérique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMythailleuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNecrocomicon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNecrognomicon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNecronomicon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNecrononichons\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNécrotélécom\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePages Jaunes d'Innsmouth\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePoing Américain Vachement Stylé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePoncho Imperméable aux Substances Dégueu\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eQuille de Bowling\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eRire Dément\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSac à Dos Rempli de Dynamite\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eSeul Survivant\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eShogulateur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTentacule\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTentacule Factice\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eT-Shirt de l'Université de Miskatronic\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTorche Électrique à Deux Mains\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eVeste en Tweed\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eVision Mystiques\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVoleur d'Ichor\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC.version) !== -1) \u0026\u0026 ((munchkinC.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinC.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinC.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinC.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC.version) !== -1) \u0026\u0026 all.munchkinCTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinCTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-c-2 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC2 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubicm02.png\" alt=\"Munchkin Cthulhu 2\"\u003e\n        \u003ch2 id=\"munchkin-c-2\"\u003eMunchkin Cthulhu 2 : L'Appel de la Vachthulhu\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC2.filters }\"\u003e\n            \u003ch3 id=\"munchkin-c-2-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinC2ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinC2BonusesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinC2ActionsNumber\"\u003e32\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.classes\"\u003e Classes (\u003cspan v-text=\"munchkinC2ClassesNumber\"\u003e18\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinC2StuffsNumber\"\u003e38\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinC2LevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinC2MonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"madnesses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.madnesses\"\u003e Démences (\u003cspan v-text=\"munchkinC2MadnessesNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC2.objects\"\u003e Objets (\u003cspan v-text=\"munchkinC2ObjectsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-c-2-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/mc2.gif\" alt=\"Munchkin Cthulhu 2\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension. Est apparut dans cette extension :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Démences\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinC2CardsNumber\"\u003e56\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-c-2-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinC2DoorsNumber\"\u003e32\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003eAgité de Soubresauts\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eArkhamster\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBatracien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCochonien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChatzatoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChiot-Goth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eChiots de Tindalos\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCotchk-Cotchk-Codêêêêtchk\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eD'une Hideuse Indescriptibilitude\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Double Personnalité\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Gammaphobie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Kleptomanie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Névrose Obsessionnelle Compulsive\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Paranoïa\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGrand Coup sur la Tête\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Douleur Tombée du Miel\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa Vache Milkhathulhu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Chariots des Dieux Vieux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Enfants du Maïs\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSalade de Chèvres Chauggoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShub-Ni-Goret\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSombres Moutons de Shub-Niggurath\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTcha-Tcha\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTout(e) Pitit(e) Pitit(e)...\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC2.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC2.version) !== -1) \u0026\u0026 ((munchkinC2.madnesses \u0026\u0026 item.class.indexOf('madnesses') !== -1) || (munchkinC2.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinC2.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinC2.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC2.version) !== -1) \u0026\u0026 all.munchkinC2DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC2DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-c-2-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinC2TreasuresNumber\"\u003e24\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes en Peau de Poulpe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCanon à Patates\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChapeau de Paille\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eConserves de Concours\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eDoc Igor l'Ichor\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFaux\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFourche de Foule en Colère (mais néanmoins prudente...)\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor : Le Nectar du Feu de Dieu ! Boudiou !\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eInfecté\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eHurlement Délirant\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eIntervention Bovine\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLe Barattor ! (et à travers...)\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eLe Chant qui rend Fou, 2e Couplet\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eMéditer au Temple de la Pleine Lune Fendue\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMoissonneuse Tabasseuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePelle à Crottes qui déchire sa Race (surtout sa Race Ancienne)\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePoignée de Main Secrète\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003ePoser pour un Portrait de Famille\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePuits aux Souhaits\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRouleau à Pâtisserie\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eVeste de l'Université de Rat-Musquétonic\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eVieux Poêle Curieusement Aérodynamique\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC2.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC2.version) !== -1) \u0026\u0026 ((munchkinC2.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinC2.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinC2.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinC2.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC2.version) !== -1) \u0026\u0026 all.munchkinC2TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC2TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-c-3 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC3 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubicm03.png\" alt=\"Munchkin Cthulhu 3\"\u003e\n        \u003ch2 id=\"munchkin-c-3\"\u003eMunchkin Cthulhu 3 : La Crypte de l'Indicible\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC3.filters }\"\u003e\n            \u003ch3 id=\"munchkin-c-3-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinC3ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinC3BonusesNumber\"\u003e8\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinC3ActionsNumber\"\u003e32\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.classes\"\u003e Classes (\u003cspan v-text=\"munchkinC3ClassesNumber\"\u003e18\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinC3StuffsNumber\"\u003e38\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinC3LevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinC3MonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"madnesses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.madnesses\"\u003e Démences (\u003cspan v-text=\"munchkinC3MadnessesNumber\"\u003e13\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC3.objects\"\u003e Objets (\u003cspan v-text=\"munchkinC3ObjectsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-c-3-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/mc3.gif\" alt=\"Munchkin Cthulhu 3\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.\u003c/p\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinC3CardsNumber\"\u003e56\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-c-3-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinC3DoorsNumber\"\u003e34\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"monsters color\"\u003e'Zathoth\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAtlach-Nacha\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eChthoniens !\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eCultiste\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eCultistes Croustillants\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDagoon\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDégoulinant de Bave\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Autophobie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Bibliophobie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Disophobie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Phobophobie\u003c/li\u003e\n                    \u003cli class=\"madnesses color\"\u003eDémence ! Pyromanie\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGoules\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGrand Coup sur la Tête\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGug\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eInvestigateur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Grand Quethoulhou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Pwofonds\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMaigres Bêtes de la Nuit\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMi-Glu\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eNyarly\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eProfesseur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShoggies\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShubby\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eTabasseur de Monstres\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTindaloo\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTout Minuscule\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTruculent\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTumescent\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eYgo\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eYogzotot\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC3.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC3.version) !== -1) \u0026\u0026 ((munchkinC3.madnesses \u0026\u0026 item.class.indexOf('madnesses') !== -1) || (munchkinC3.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinC3.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) || (munchkinC3.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC3.version) !== -1) \u0026\u0026 all.munchkinC3DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC3DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-c-3-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinC3TreasuresNumber\"\u003e22\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"objects color\"\u003eAnneau de Souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDonner vos Amis à Manger à Quethoulhou\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFeux d'Artifice\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eFouiller les Profondeurs en Quête de Savoir\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eGémissement Inhumain\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGramophone\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor le Nectar Capricieux !\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eIchor le Nectar Vicieux !\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eLe Chant qui rend Fou, 3e Couplet\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eMaîtriser ses Peurs\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eMiam Miam !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNécrominicon\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOuvre-Boîte\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePied Tentaculaires\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSeringue Hypodermique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eShoggy Gelé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eT-Shirt ~~de~~ en Cultiste\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTaille-Haie\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTête Gluante\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTrop Coool !\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVenu d'une Autre Dimension\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC3.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC3.version) !== -1) \u0026\u0026 ((munchkinC3.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinC3.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinC3.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinC3.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC3.version) !== -1) \u0026\u0026 all.munchkinC3TreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC3TreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-c-4 munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinC4 }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/ubicm04.png\" alt=\"Munchkin Cthulhu 4\"\u003e\n        \u003ch2 id=\"munchkin-c-4\"\u003eMunchkin Cthulhu 4 : Oh my grottes !\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinC4.filters }\"\u003e\n            \u003ch3 id=\"munchkin-c-4-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinC4ToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"fields\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC4.fields\"\u003e Donjons (\u003cspan v-text=\"munchkinC4DonjonsNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"warps\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinC4.warps\"\u003e Portails (\u003cspan v-text=\"munchkinC4WarpsNumber\"\u003e16\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-c-4-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/mc4.gif\" alt=\"Munchkin Cthulhu 4\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.\u003c/p\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinC4CardsNumber\"\u003e36\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-c-4-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinC4DoorsNumber\"\u003e16\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"warps color\"\u003eCondamnés à Répéter les Erreurs du Passé\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eCondamnés à Répéter les Erreurs du Passé\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eDimension Parallèle\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eDimension Parallèle\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eEnseigne Clignotante Géante des Anciens\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eEnseigne Clignotante Géante des Anciens\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eFosse et Usage de Fosse !\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eFosse et Usage de Fosse !\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eImmenses Glyphes Immondes Sculptés sur les Murs\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003eImmenses Glyphes Immondes Sculptés sur les Murs\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePasse Devant et Suis-moi\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePasse Devant et Suis-moi\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePar ici, Bande d'Abrutis !\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePar ici, Bande d'Abrutis !\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePorte des Grands Anciens\u003c/li\u003e\n                    \u003cli class=\"warps color\"\u003ePorte des Grands Anciens\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC4.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC4.version) !== -1) \u0026\u0026 (munchkinC4.warps \u0026\u0026 item.class.indexOf('warps') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC4.version) !== -1) \u0026\u0026 all.munchkinC4DoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC4DoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"donjons\"\u003e\n                \u003ch3 id=\"munchkin-c-4-donjons\"\u003eDonjons\u003c/h3\u003e\n                \u003cp\u003eNombre total de donjons : \u003cspan v-text=\"munchkinC4DonjonsNumber\"\u003e20\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"fields color\"\u003eAntre des Dholes\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eAntre Souterrain de Byatis\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eArène d'Azathoth\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eBoutique de Chaussures Souterraine de Shub-Niggurath\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eCaverne des Archétypes\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eCloaque des Mi-Go\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eCrevasse des Chthoniens\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eCryptes d'Innsmouth\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eÉgout des Shoggoths\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eGouffre de Cthulhu\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eGrotte de Glaaki\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eK'n-Yan\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eLe Fossé de Dunwich\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eLes Contrées du Rêve\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eLes Montagnes Hallucinées\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eMonde Souterrain d'Ubbo-Sathla\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eSous-sol de la Bibliothèque de l'Université Miskatonic\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eStation de Métro d'Arkham\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eTénébreuse Tanière des Lloigor\u003c/li\u003e\n                    \u003cli class=\"fields color\"\u003eTunnel de Tsathoggua\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinC4.donjonsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinC4.version) !== -1) \u0026\u0026 (munchkinC4.fields \u0026\u0026 item.class.indexOf('fields') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinC4.version) !== -1) \u0026\u0026 all.munchkinC4DonjonsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinC4DonjonsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-a munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinA }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/munchkin-apocalypse.jpg\" alt=\"Munchkin Apocalypse\"\u003e\n        \u003ch2 id=\"munchkin-a\"\u003eMunchkin Apocalypse\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinA.filters }\"\u003e\n            \u003ch3 id=\"munchkin-a-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinAToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinABonusesNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinAActionsNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.curses\"\u003e Catastrophe (Malédictions) (\u003cspan v-text=\"munchkinACursesNumber\"\u003e21\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.classes\"\u003e Classes (\u003cspan v-text=\"munchkinAClassesNumber\"\u003e14\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinAStuffsNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinALevelsNumber\"\u003e10\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinAMonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.objects\"\u003e Objets (\u003cspan v-text=\"munchkinAObjectsNumber\"\u003e23\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinA.marks\"\u003e Sceaux (\u003cspan v-text=\"munchkinASealsNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-a-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003eSont apparut avec ce jeu :\u003c/p\u003e\n            \u003cul\u003e\n                \u003cli\u003eLes Catastrophes (similaire aux Malédictions)\u003c/li\u003e\n                \u003cli\u003eLes Sceaux (similaire aux Fidèles Serviteurs)\u003c/li\u003e\n            \u003c/ul\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinACardsNumber\"\u003e36\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-a-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinADoorsNumber\"\u003e16\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"actions color\"\u003e... Lourd de Symbole Leligieux\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAbomination\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eAffligé de Mutations\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eAnge Exterminator (et à travers)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBanquier d'affaires\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eBlogueur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eBlogueur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eBlogueur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eBouc émissaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCaravane Caractérielle et Carnivore\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Éruption Vorcanique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Météore géant\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Tremblement de Vers\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Jus de Cadavres\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Inversion des Pôles\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Esssplosion nucléaire\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Invasion de Notaires de Proportions Bibliques\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Inflation Galopante\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Pluie de feu\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Krach boursier\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Raz-de-marée\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Grippe aviaire\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Blizzard\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Opération commando !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Tremblement de terre\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Fausse alerte\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Invasion de Zombies\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Évasion du Zoo\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Pluie acide\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Invasion d'extra-terrestres\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eCatastrophe ! Grandes Ondes Nocives\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCrapaud Calypse\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDanse de Saint-Guy Sant Jean de Patmos\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDe Chez les Cocos\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDe la (non-)Vie dans le Frigo !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDes bestioles... des tas de bestioles\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDr. Octopours\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eEspèce en Voie d'Extinction des Humains\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFan-Tomme (de Gruyère)\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFantôme de George Washington\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFar West Fanfare Complètement à l'Ouest\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFou psychopathe dangereux évadé d'un asile\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFougère Fou-de-Guerre\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFourmis Chauffées au Rouge\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFournitures de Bureau Déchainées\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGamin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGamin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGamin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGazon Mutant (et un poil carnivore)\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eGéant Atomique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGog et Magog\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGourde Nationale\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGraine de Geek\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eHorde de Morts-vivants Voraces\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eL'Élu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Grand Cthulhu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLe Livre Lièvre des Morts Égyptien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Quatre Petits Poneys de l'Apocalypse\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eLoi Martiale\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMeute de Caniches Sauvages\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMilicien\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMilicien\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMilicien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMoisissure Toxique\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre Errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMoutons de « Ça urge »\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMutant à Trois Yeux\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eParanoïaque\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eParanoïaque\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eQuelques secondes de répit\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eQuatre Mayas et un enterrement...\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRagnarocs\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRequin Géant et Génial\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eRetraite Totalement Dépourvue de Dignité\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRock Star qui a de quoi soutenir ce qu'elle vance\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eRongeurs de Taille Inédite\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eScientifique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eScientifique\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eScientifique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSoldat du SEAL renégat\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTéléphone (Bio-)Cellulaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTélévangéliste\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTia-meute\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTir ami\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTraumatisé par la Guerre\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinA.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 ((munchkin.curses \u0026\u0026 item.class.indexOf('curses') !== -1)  || (munchkinA.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinA.actions \u0026\u0026 item.class.indexOf('actions') !== -1) || (munchkinA.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 all.munchkinADoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinADoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-a-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinATreasuresNumber\"\u003e22\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"bonuses color\"\u003e... à Baïonnette\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003e15 ans de réserves de bière et de PQ\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArc Composite\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArme Improvisée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure Antimissile\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure de Signalisation\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eAspirateur Ectoplasmique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAstéroïde Minuscule mais au Peint de Chute Judicieusement Calculé\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eAvec Allume-feu Incorporé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBâches en Plastique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBazooka\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBidon d'essence\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBombe de Gaz Salé\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBombe de Gaz Poivré\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBombe de Laque\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBonnet en Fonte\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes de Deuxième Main\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBracelet Magnétique à Cristal Antimonstre (efficacité garantie)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBrosse à Dents à Cran d'Arrêt\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eC'est la Faute du Gouvernement !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCalibre 50\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eCamouflage Cosmétique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCamouflage de Chasseur d'une authenticité à s'y tromper\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCamouflage Urbain\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCanne\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCarte Platinium\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasquette d'Officier Supérieur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChapeau de Grandes Manœuvres\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussettes en Papier d'Alu\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussettes Propres\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChaussures à Orteils\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eChien Policier\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eCulture Hydroponique de Broccolis\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eD'Occase (de Deuxième Main, Quoi...)\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eDe Camouflage\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDé Pipé\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eDéclaration Présidentielle\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDéconnexion à l'Arrache\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eDémonte-pneu\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDétruire le Gardien\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eEau Déshydratée\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eÉcole de Survie\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉlagueur Électrique\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eExplosifs Faits Maison\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eFusée de Détresse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eFusée de Survie\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGaz Hilarant\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGaz Lacrymogène\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eGilet de Sauvetage\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eGrenade Fumigène\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eJudicieux Conseil Trouvé sur Internet\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eKit de Premiers Secours\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eLa La La ! J'entends Rien !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLampe de Studio\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLance-pierres à Deux Coups\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLe Drone de Fer\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLes Prophéties de Nostradamus\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLunettes Infrarouges\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMagnum 357\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eMettre en Ligne une Vidéo Amateur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eOutil de Survie\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePancarte de Manif'\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePassoire\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePierre-Calendrier\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003ePillage d'un Surplus de l'Armée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet à Clous\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePistolet de Paintball\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePlans Top Secret\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eRadio à Panneaux solaires, Torche et Appeau à Cannards\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eRations de Combat\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTactique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTente Antiatomique\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eTout s'arrange ! (ou pas)\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eTu Crois Que Je T'Ai Pas Vu ?\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eTweeter Vos Dernières Paroles\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eVirus du rhume\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinA.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 ((munchkinA.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinA.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinA.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinA.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 all.munchkinATreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinATreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"seals\"\u003e\n                \u003ch3 id=\"munchkin-a-sceaux\"\u003eSceaux\u003c/h3\u003e\n                \u003cp\u003eNombre total de sceaux : \u003cspan v-text=\"munchkinASealsNumber\"\u003e12\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"marks color\"\u003e#OccupyFinDuMonde !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eAPOCALYPSE !!!\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eFuyez ! Sauvez votre peau !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eIls reviennent !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eJ'ai trouvé ça par terre, promis !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eL'École des Coups Durs !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eL'Histoire se Répète !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eMais ils sont increvables ou quoi ?\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003ePare-feu !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003ePénurie de beurre de cacahuètes !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003ePénurie de Bière !\u003c/li\u003e\n                    \u003cli class=\"marks color\"\u003eSession du Congrès !\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinA.sealsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 (munchkinA.marks \u0026\u0026 item.class.indexOf('marks') !== -1) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinA.version) !== -1) \u0026\u0026 all.munchkinASealsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinASealsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"munchkin-l munchkin-all\" v-bind:class=\"{ 'is-visible': all.munchkinL }\"\u003e\n        \u003cimg class=\"demo\" src=\"media/images/upload/efsjml01_m_th.png\" alt=\"Munchkin Légendes\"\u003e\n        \u003ch2 id=\"munchkin-l\"\u003eMunchkin Légendes\u003c/h2\u003e\n        \u003cdiv class=\"details\" v-bind:class=\"{ 'is-displayed': munchkinL.filters }\"\u003e\n            \u003ch3 id=\"munchkin-l-filtres\"\u003eFiltres\u003c/h3\u003e\n            \u003cp\u003e\u003cbutton v-on:click=\"munchkinLToggleFilters\"\u003e\u003cins\u003eAfficher\u003c/ins\u003e\u003cdel\u003eMasquer\u003c/del\u003e\u003c/button\u003e\u003c/p\u003e\n            \u003cdiv class=\"filters\"\u003e\n                **Types de carte**\n                \u003cp\u003e\n                    \u003clabel class=\"bonuses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.bonuses\"\u003e Actions (\u003cspan v-text=\"munchkinLBonusesNumber\"\u003e2\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"actions\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.actions\"\u003e Améliorations (\u003cspan v-text=\"munchkinLActionsNumber\"\u003e16\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"classes\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.classes\"\u003e Classes (\u003cspan v-text=\"munchkinLClassesNumber\"\u003e12\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"stuffs\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.stuffs\"\u003e Équipements (\u003cspan v-text=\"munchkinLStuffsNumber\"\u003e32\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"slaves\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.slaves\"\u003e Fidèles Serviteurs (\u003cspan v-text=\"munchkinLSlavesNumber\"\u003e1\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"levels\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.levels\"\u003e Gains de Niveaux (\u003cspan v-text=\"munchkinLLevelsNumber\"\u003e7\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"curses\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.curses\"\u003e Malédictions (\u003cspan v-text=\"munchkinLCursesNumber\"\u003e20\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"monsters\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.monsters\"\u003e Monstres (\u003cspan v-text=\"munchkinLMonstersNumber\"\u003e37\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"objects\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.objects\"\u003e Objets (\u003cspan v-text=\"munchkinLObjectsNumber\"\u003e30\u003c/span\u003e)\n                    \u003c/label\u003e\u003cbr\u003e\n                    \u003clabel class=\"races\"\u003e\n                        \u003cinput type=\"checkbox\" value=\"on\" v-model=\"munchkinL.races\"\u003e Races (\u003cspan v-text=\"munchkinLRacesNumber\"\u003e11\u003c/span\u003e)\n                    \u003c/label\u003e\n                \u003c/p\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-number\"\u003e\n            \u003ch3 id=\"munchkin-l-details\"\u003eDétails\u003c/h3\u003e\n            \u003cp\u003e\u003cimg src=\"media/images/upload/m7.gif\" alt=\"Munchkin Légendes\"\u003e Cette icone en bas à droite d'une carte marque l'appartenance à cette extension.\u003c/p\u003e\n            \u003cp\u003e**Nombre total de cartes : \u003cspan v-text=\"munchkinLCardsNumber\"\u003e168\u003c/span\u003e**\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"card-list\"\u003e\n            \u003cdiv class=\"doors\"\u003e\n                \u003ch3 id=\"munchkin-l-portes\"\u003ePortes\u003c/h3\u003e\n                \u003cp\u003eNombre total de portes : \u003cspan v-text=\"munchkinLDoorsNumber\"\u003e96\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"monsters color\"\u003eBaba Yaga\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBloody Mary\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eBoogarou\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCerbère\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eChétif\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eCroco des égouts\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDemi-dieu\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDiable de Jersey\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eDisparu dans la nuit des temps\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eDocteur Horroris Causa\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eElfe\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFenris\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFourmis Litaires\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eFuries\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eGuerrier\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGremlin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGrendel\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eGriffon\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eHalfelin\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eIvanausée\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eJack et la courgette magique\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eKraken\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'abdominal homme des neiges\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'oie aux oeufs d'or\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa cigogne\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLa méchante sorcière complètement à l'ouest\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLes Chocottes\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eLoki\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eL'homme sans visage\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eMagicien\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMa mère l'oie\u003c/li\u003e                    \n                    \u003cli class=\"curses color\"\u003eMalédiction ! Canard viking\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Cette voie vous est interdite\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Ch'a mal aux pieds\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Facture du Passeur\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Fallait pas reluquer la déesse...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Figure humaine\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Je suis sûr de l'avoir rangé là...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Jeté dans l'arène !\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Le Doigt Débilitant du Destin Diabolique\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Le Petit Peuple est offensé\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Légère égratignure sans gravité\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Lève la tête\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Mauvais présage\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Perdu pendant dix ans\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Sacrifice héroïque\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Scoumoune\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Votre vraie nature est révélée\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Vous avez offensé les dieux\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Vous n'en êtes pas digne...\u003c/li\u003e\n                    \u003cli class=\"curses color\"\u003eMalédiction ! Zzzzap !\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMinotaure\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMirage\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eMonstre du Lock Ness\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMonstre errant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMort-vivant\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eMythique\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eNain\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eOurs tsé-tsé\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eParade des lemmings\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePerce-oreille\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003ePluton\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003ePrêtre\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eQuetzalcoatl\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"races color\"\u003eSang-mêlé\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSanguinaire\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eScarabées\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eShiva le destructeur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSinges volants\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSire Mordred\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eSirènes\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eSuper Munchkin\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003e~~Titanic~~ Titanesque\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eTom Pouce\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur\u003c/li\u003e\n                    \u003cli class=\"actions color\"\u003eTricheur\u003c/li\u003e\n                    \u003cli class=\"monsters color\"\u003eValkyries\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eVoleur\u003c/li\u003e\n                    \u003cli class=\"classes color\"\u003eVoleur\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinL.doorsList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinL.version) !== -1) \u0026\u0026 ((munchkinL.curses \u0026\u0026 item.class.indexOf('curses') !== -1) || (munchkinL.actions \u0026\u0026 item.class.indexOf('actions') !== -1) || (munchkinL.classes \u0026\u0026 item.class.indexOf('classes') !== -1) || (munchkinL.races \u0026\u0026 item.class.indexOf('races') !== -1) || (munchkinL.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinL.version) !== -1) \u0026\u0026 all.munchkinLDoorsEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinLDoorsEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"treasures\"\u003e\n                \u003ch3 id=\"munchkin-l-tresors\"\u003eTrésors\u003c/h3\u003e\n                \u003cp\u003eNombre total de trésors : \u003cspan v-text=\"munchkinLTreasuresNumber\"\u003e72\u003c/span\u003e\u003c/p\u003e\n                \u003col\u003e\n                    \u003cli class=\"objects color\"\u003eAnneaux de souhait\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eAnneaux de souhait\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArc et flèches d'Hercule\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArc _vraiment_ long\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure d'écorce\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eArmure en peau de dragon\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eAventurez-vous à la découverte de l'arche perdue\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBasson magique\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBâton d'Esculape\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBénédiction des dieux\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBermuda d'invulnérabilité\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBonbecs et soda\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBottes de sept lieues\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eBouclier miroir\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBoule à neige\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBoule de cristal\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eBranche de gui\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eCadeau des dieux !\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCasque martial\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCoiffe à plumes\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eCouronne de lauriers\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eCrayon magique\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDécouvrez la fontaine de jouvence\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eDécouvrez l'Atlantide\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eD'une pierre ~~deux coups~~ d'Ankou\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eDents de dragon\u003c/li\u003e  \n                    \u003cli class=\"objects color\"\u003eDé pipé\u003c/li\u003e \n                    \u003cli class=\"objects color\"\u003eDé pipé\u003c/li\u003e \n                    \u003cli class=\"objects color\"\u003eDé ultrapipé\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉclair\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eÉclair au café\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eÉgide\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eÉlixir de crème glacée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eExcalibur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eFeu grégeois\u003c/li\u003e\n                    \u003cli class=\"slaves color\"\u003eFidèle serviteur\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eHache Majuscule\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eLampe merveilleuse\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eLyre d'Orphée\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMarteau de Thor\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMasque Mortuaire\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eMasse qu'a gaz\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eNectar des dieux\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eNeuneus gordiens\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eNuméricape\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePantoufles de verre\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePare-barbe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003ePeau de lion\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePetit moi sauteur\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePièce enchantée\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePierres levées\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePommes d'or\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de chaos\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de distraction\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de Midas\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de passion\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePotion de Sphinster\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003ePoton Magque (des \"i\" de ratés)\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eProtège-coudes pointus\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eQuelques fleurs dans un monde de brutes\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRa ! Ra ! Ra !\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eRésolvez le labyrinthe\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSaint Gruyèraal\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eSandwich de héros\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eSurvivez au Ragnarok\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTalons d'Achille\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eToison d'or\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eToutou\u003c/li\u003e\n                    \u003cli class=\"stuffs color\"\u003eTrident\u003c/li\u003e\n                    \u003cli class=\"objects color\"\u003eTrompe-la-mort\u003c/li\u003e\n                    \u003cli class=\"bonuses color\"\u003eVa te faire foudre !\u003c/li\u003e\n                    \u003cli class=\"levels color\"\u003eVolez le feu aux dieux\u003c/li\u003e\n                    \u003ctemplate v-for=\"(item, index) in munchkinL.treasuresList\"\u003e\n                        \u003cli v-bind:class=\"(item.class.indexOf(munchkinL.version) !== -1) \u0026\u0026 ((munchkinL.levels \u0026\u0026 item.class.indexOf('levels') !== -1) || (munchkinL.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) || (munchkinL.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) || (munchkinL.objects \u0026\u0026 item.class.indexOf('objects') !== -1) || (munchkinL.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : ''\"\u003e\n                            \u003cspan class=\"box\" v-bind:class=\"{ active: (item.class.indexOf(munchkinL.version) !== -1) \u0026\u0026 all.munchkinLTreasuresEach[index] }\"\u003e\n                                \u003cinput type=\"checkbox\" v-model=\"all.munchkinLTreasuresEach[index]\"\u003e\n                                \u003cspan class=\"item-title\" v-html=\"item.name\"\u003e\u003c/span\u003e\n                            \u003c/span\u003e\n                        \u003c/li\u003e\n                    \u003c/template\u003e\n                \u003c/ol\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/div\u003e","dates":{"published":{"$date":"2018-09-15T07:44:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"var script = document.createElement(\"script\");\nscript.type = \"text/javascript\";\nscript.src = \"https://unpkg.com/vue/dist/vue.min.js\";\n\nArray.prototype.shuffle = function (n) {\n    function randomInt(mini, maxi) {\n        var nb = mini + (maxi + 1 - mini) * Math.random();\n        return Math.floor(nb);\n    }\n\n    if (!n) {\n        n = this.length;\n    }\n\n    if (n \u003e 1) {\n        var i = randomInt(0, n - 1),\n            tmp = this[i];\n\n        this[i] = this[n - 1];\n        this[n - 1] = tmp;\n        this.shuffle(n - 1);\n    }\n};\n\nfunction munchkinList(selector) {\n    var doors = document.querySelectorAll(selector + \" .doors li\"),\n        treasures = document.querySelectorAll(selector + \" .treasures li\"),\n        donjons = document.querySelectorAll(selector + \" .donjons li\"),\n        seals = document.querySelectorAll(selector + \" .seals li\"),\n        spells = document.querySelectorAll(selector + \" .books li\"),\n        doorsList = [],\n        treasuresList = [],\n        donjonsList = [],\n        sealsList = [],\n        spellsList = [];\n\n    [].forEach.call(doors, function(item) {\n        doorsList.push({\n            name: item.innerHTML,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(treasures, function(item) {\n        treasuresList.push({\n            name: item.innerHTML,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(donjons, function(item) {\n        donjonsList.push({\n            name: item.innerHTML,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(seals, function(item) {\n        sealsList.push({\n            name: item.innerHTML,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    [].forEach.call(spells, function(item) {\n        spellsList.push({\n            name: item.innerHTML,\n            class: item.getAttribute(\"class\")\n        });\n        item.parentNode.removeChild(item);\n    });\n\n    return {\n        doorsList: doorsList,\n        treasuresList: treasuresList,\n        donjonsList: donjonsList,\n        sealsList: sealsList,\n        spellsList: spellsList\n    };\n}\n\nfunction doorsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n                ((self.classes \u0026\u0026 item.class.indexOf('classes') !== -1) ||\n                (self.races \u0026\u0026 item.class.indexOf('races') !== -1) ||\n                (self.powers \u0026\u0026 item.class.indexOf('powers') !== -1) ||\n                (self.origins \u0026\u0026 item.class.indexOf('origins') !== -1) ||\n                (self.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) ||\n                (self.mojos \u0026\u0026 item.class.indexOf('mojos') !== -1) ||\n                (self.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) ||\n                (self.monsters \u0026\u0026 item.class.indexOf('rooms') !== -1) ||\n                (self.curses \u0026\u0026 item.class.indexOf('curses') !== -1) ||\n                (self.madnesses \u0026\u0026 item.class.indexOf('madnesses') !== -1) ||\n                (self.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) ||\n                (self.warps \u0026\u0026 item.class.indexOf('warps') !== -1) ||\n                (self.actions \u0026\u0026 item.class.indexOf('actions') !== -1)) ? item.class : '';\n    }).length;\n}\nfunction actionsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.actions \u0026\u0026 item.class.indexOf('actions') !== -1) ? item.class : '';\n    }).length;\n}\nfunction cursesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.curses \u0026\u0026 item.class.indexOf('curses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction madnessesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.madnesses \u0026\u0026 item.class.indexOf('madnesses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction mojosCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.mojos \u0026\u0026 item.class.indexOf('mojos') !== -1) ? item.class : '';\n    }).length;\n}\nfunction roomsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.rooms \u0026\u0026 item.class.indexOf('rooms') !== -1) ? item.class : '';\n    }).length;\n}\nfunction classesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.classes \u0026\u0026 item.class.indexOf('classes') !== -1) ? item.class : '';\n    }).length;\n}\nfunction racesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.races \u0026\u0026 item.class.indexOf('races') !== -1) ? item.class : '';\n    }).length;\n}\nfunction acolytesCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.acolytes \u0026\u0026 item.class.indexOf('acolytes') !== -1) ? item.class : '';\n    }).length;\n}\nfunction originsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.origins \u0026\u0026 item.class.indexOf('origins') !== -1) ? item.class : '';\n    }).length;\n}\nfunction powersCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.powers \u0026\u0026 item.class.indexOf('powers') !== -1) ? item.class : '';\n    }).length;\n}\nfunction mountsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.mounts \u0026\u0026 item.class.indexOf('mounts') !== -1) ? item.class : '';\n    }).length;\n}\nfunction warpsCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.warps \u0026\u0026 item.class.indexOf('warps') !== -1) ? item.class : '';\n    }).length;\n}\nfunction monstersCardNumber(self, active, each) {\n    return self.doorsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.monsters \u0026\u0026 item.class.indexOf('monsters') !== -1) ? item.class : '';\n    }).length;\n}\nfunction treasuresCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n                ((self.munchkinomicon \u0026\u0026 item.class.indexOf('munchkinomicon') !== -1) ||\n                (self.objects \u0026\u0026 item.class.indexOf('objects') !== -1) ||\n                (self.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) ||\n                (self.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) ||\n                (self.levels \u0026\u0026 item.class.indexOf('levels') !== -1) ||\n                (self.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1)) ? item.class : '';\n    }).length;\n}\nfunction stuffsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n        (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.stuffs \u0026\u0026 item.class.indexOf('stuffs') !== -1) ? item.class : '';\n    }).length;\n}\nfunction objectsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.objects \u0026\u0026 item.class.indexOf('objects') !== -1) ? item.class : '';\n    }).length;\n}\nfunction bonusesCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.bonuses \u0026\u0026 item.class.indexOf('bonuses') !== -1) ? item.class : '';\n    }).length;\n}\nfunction slavesCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.slaves \u0026\u0026 item.class.indexOf('slaves') !== -1) ? item.class : '';\n    }).length;\n}\nfunction levelsCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.levels \u0026\u0026 item.class.indexOf('levels') !== -1) ? item.class : '';\n    }).length;\n}\nfunction munchkinomiconCardNumber(self, active, each) {\n    return self.treasuresList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.munchkinomicon \u0026\u0026 item.class.indexOf('munchkinomicon') !== -1) ? item.class : '';\n    }).length;\n}\nfunction donjonsCardNumber(self, active, each) {\n    return self.donjonsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.fields \u0026\u0026 item.class.indexOf('fields') !== -1) ? item.class : '';\n    }).length;\n}\nfunction sealsCardNumber(self, active, each) {\n    return self.sealsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.marks \u0026\u0026 item.class.indexOf('marks') !== -1) ? item.class : '';\n    }).length;\n}\nfunction spellsCardNumber(self, active, each) {\n    return self.spellsList.filter(function(item, i) {\n        return (each[i]) \u0026\u0026\n          (active) \u0026\u0026\n            (item.class.indexOf(self.version) !== -1) \u0026\u0026\n            (self.spells \u0026\u0026 item.class.indexOf('spells') !== -1) ? item.class : '';\n    }).length;\n}\n\nscript.addEventListener(\"load\", function() {\n    var munchkin = munchkinList(\".munchkin\"),\n        munchkin2 = munchkinList(\".munchkin-2\"),\n        munchkin3 = munchkinList(\".munchkin-3\"),\n        munchkin4 = munchkinList(\".munchkin-4\"),\n        munchkin5 = munchkinList(\".munchkin-5\"),\n        munchkin6 = munchkinList(\".munchkin-6\"),\n        munchkin7o = munchkinList(\".munchkin-7-o\"),\n        munchkin7 = munchkinList(\".munchkin-7\"),\n        munchkin8 = munchkinList(\".munchkin-8\"),\n        munchkinN = munchkinList(\".munchkin-n\"),\n        munchkinM = munchkinList(\".munchkin-m\"),\n        munchkinSt = munchkinList(\".munchkin-st\"),\n        munchkinSt2 = munchkinList(\".munchkin-st-2\"),\n        munchkinSu = munchkinList(\".munchkin-su\"),\n        munchkinZ = munchkinList(\".munchkin-z\"),\n        munchkinZ2 = munchkinList(\".munchkin-z-2\"),\n        munchkinC = munchkinList(\".munchkin-c\"),\n        munchkinC2 = munchkinList(\".munchkin-c-2\"),\n        munchkinC3 = munchkinList(\".munchkin-c-3\"),\n        munchkinC4 = munchkinList(\".munchkin-c-4\"),\n        munchkinA = munchkinList(\".munchkin-a\"),\n        munchkinL = munchkinList(\".munchkin-l\"),\n        doorsStackNext = [],\n        doorsStackDiscard = [],\n        donjonsStackNext = [],\n        donjonsStackDiscard = [],\n        sealsStackNext = [],\n        sealsStackDiscard = [],\n        booksStackNext = [],\n        booksStackDiscard = [],\n        treasuresStackNext = [],\n        treasuresStackDiscard = [];\n\n    new Vue({\n        el: \".all-cards\",\n        data: {\n            \"all\": {\n                \"filters\": false,\n                \"munchkin\": true,\n                \"munchkinDoorsEach\": new Array(munchkin.doorsList.length).fill(true),\n                \"munchkinTreasuresEach\": new Array(munchkin.treasuresList.length).fill(true),\n                \"munchkin2\": true,\n                \"munchkin2DoorsEach\": new Array(munchkin2.doorsList.length).fill(true),\n                \"munchkin2TreasuresEach\": new Array(munchkin2.treasuresList.length).fill(true),\n                \"munchkin3\": true,\n                \"munchkin3DoorsEach\": new Array(munchkin3.doorsList.length).fill(true),\n                \"munchkin3TreasuresEach\": new Array(munchkin3.treasuresList.length).fill(true),\n                \"munchkin4\": true,\n                \"munchkin4DoorsEach\": new Array(munchkin4.doorsList.length).fill(true),\n                \"munchkin4TreasuresEach\": new Array(munchkin4.treasuresList.length).fill(true),\n                \"munchkin5\": true,\n                \"munchkin5DoorsEach\": new Array(munchkin5.doorsList.length).fill(true),\n                \"munchkin5TreasuresEach\": new Array(munchkin5.treasuresList.length).fill(true),\n                \"munchkin6\": true,\n                \"munchkin6DoorsEach\": new Array(munchkin6.doorsList.length).fill(true),\n                \"munchkin6DonjonsEach\": new Array(munchkin6.donjonsList.length).fill(true),\n                \"munchkin7o\": false,\n                \"munchkin7oDoorsEach\": new Array(munchkin7o.doorsList.length).fill(true),\n                \"munchkin7oTreasuresEach\": new Array(munchkin7o.treasuresList.length).fill(true),\n                \"munchkin7\": true,\n                \"munchkin7DoorsEach\": new Array(munchkin7.doorsList.length).fill(true),\n                \"munchkin7TreasuresEach\": new Array(munchkin7.treasuresList.length).fill(true),\n                \"munchkin8\": true,\n                \"munchkin8DoorsEach\": new Array(munchkin8.doorsList.length).fill(true),\n                \"munchkin8TreasuresEach\": new Array(munchkin8.treasuresList.length).fill(true),\n                \"munchkinN\": true,\n                \"munchkinNDoorsEach\": new Array(munchkinN.doorsList.length).fill(true),\n                \"munchkinNTreasuresEach\": new Array(munchkinN.treasuresList.length).fill(true),\n                \"munchkinM\": true,\n                \"munchkinMDoorsEach\": new Array(munchkinM.doorsList.length).fill(true),\n                \"munchkinMTreasuresEach\": new Array(munchkinM.treasuresList.length).fill(true),\n                \"munchkinMSpellsEach\": new Array(munchkinM.spellsList.length).fill(true),\n                \"munchkinSu\": false,\n                \"munchkinSuDoorsEach\": new Array(munchkinSu.doorsList.length).fill(true),\n                \"munchkinSuTreasuresEach\": new Array(munchkinSu.treasuresList.length).fill(true),\n                \"munchkinSt\": false,\n                \"munchkinStDoorsEach\": new Array(munchkinSt.doorsList.length).fill(true),\n                \"munchkinStTreasuresEach\": new Array(munchkinSt.treasuresList.length).fill(true),\n                \"munchkinSt2\": false,\n                \"munchkinSt2DoorsEach\": new Array(munchkinSt2.doorsList.length).fill(true),\n                \"munchkinSt2TreasuresEach\": new Array(munchkinSt2.treasuresList.length).fill(true),\n                \"munchkinZ\": false,\n                \"munchkinZDoorsEach\": new Array(munchkinZ.doorsList.length).fill(true),\n                \"munchkinZTreasuresEach\": new Array(munchkinZ.treasuresList.length).fill(true),\n                \"munchkinZ2\": false,\n                \"munchkinZ2DoorsEach\": new Array(munchkinZ2.doorsList.length).fill(true),\n                \"munchkinZ2TreasuresEach\": new Array(munchkinZ2.treasuresList.length).fill(true),\n                \"munchkinC\": false,\n                \"munchkinCDoorsEach\": new Array(munchkinC.doorsList.length).fill(true),\n                \"munchkinCTreasuresEach\": new Array(munchkinC.treasuresList.length).fill(true),\n                \"munchkinC2\": false,\n                \"munchkinC2DoorsEach\": new Array(munchkinC2.doorsList.length).fill(true),\n                \"munchkinC2TreasuresEach\": new Array(munchkinC2.treasuresList.length).fill(true),\n                \"munchkinC3\": false,\n                \"munchkinC3DoorsEach\": new Array(munchkinC3.doorsList.length).fill(true),\n                \"munchkinC3TreasuresEach\": new Array(munchkinC3.treasuresList.length).fill(true),\n                \"munchkinC4\": false,\n                \"munchkinC4DoorsEach\": new Array(munchkinC4.doorsList.length).fill(true),\n                \"munchkinC4DonjonsEach\": new Array(munchkinC4.donjonsList.length).fill(true),\n                \"munchkinA\": false,\n                \"munchkinADoorsEach\": new Array(munchkinA.doorsList.length).fill(true),\n                \"munchkinATreasuresEach\": new Array(munchkinA.treasuresList.length).fill(true),\n                \"munchkinASealsEach\": new Array(munchkinA.sealsList.length).fill(true),\n                \"munchkinL\": false,\n                \"munchkinLDoorsEach\": new Array(munchkinL.doorsList.length).fill(true),\n                \"munchkinLTreasuresEach\": new Array(munchkinL.treasuresList.length).fill(true),\n            },\n            \"munchkin\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin.doorsList,\n              \"treasuresList\": munchkin.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"munchkinomicon\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin2.doorsList,\n              \"treasuresList\": munchkin2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin3\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin3.doorsList,\n              \"treasuresList\": munchkin3.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"stuffs\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin4\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin4.doorsList,\n              \"treasuresList\": munchkin4.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin5\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin5.doorsList,\n              \"treasuresList\": munchkin5.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin6\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin6.doorsList,\n              \"donjonsList\": munchkin6.donjonsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin7o\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin7o.doorsList,\n              \"treasuresList\": munchkin7o.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin7\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin7.doorsList,\n              \"treasuresList\": munchkin7.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkin8\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkin8.doorsList,\n              \"treasuresList\": munchkin8.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinN\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinN.doorsList,\n              \"treasuresList\": munchkinN.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinM\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinM.doorsList,\n              \"treasuresList\": munchkinM.treasuresList,\n              \"spellsList\": munchkinM.spellsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSu\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSu.doorsList,\n              \"treasuresList\": munchkinSu.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSt\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSt.doorsList,\n              \"treasuresList\": munchkinSt.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinSt2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinSt2.doorsList,\n              \"treasuresList\": munchkinSt2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinZ\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinZ.doorsList,\n              \"treasuresList\": munchkinZ.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinZ2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinZ2.doorsList,\n              \"treasuresList\": munchkinZ2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC.doorsList,\n              \"treasuresList\": munchkinC.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC2\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC2.doorsList,\n              \"treasuresList\": munchkinC2.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC3\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC3.doorsList,\n              \"treasuresList\": munchkinC3.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"spells\": true,\n              \"actions\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinC4\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinC4.doorsList,\n              \"donjonsList\": munchkinC4.donjonsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinA\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinA.doorsList,\n              \"treasuresList\": munchkinA.treasuresList,\n              \"sealsList\": munchkinA.sealsList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n            \"munchkinL\": {\n              \"filters\": false,\n              \"version\": \"color\",\n              \"doorsList\": munchkinL.doorsList,\n              \"treasuresList\": munchkinL.treasuresList,\n              \"classes\": true,\n              \"mojos\": true,\n              \"races\": true,\n              \"acolytes\": true,\n              \"slaves\": true,\n              \"origins\": true,\n              \"powers\": true,\n              \"monsters\": true,\n              \"curses\": true,\n              \"madnesses\": true,\n              \"actions\": true,\n              \"spells\": true,\n              \"warps\": true,\n              \"levels\": true,\n              \"munchkinomicon\": true,\n              \"stuffs\": true,\n              \"mounts\": true,\n              \"fields\": true,\n              \"marks\": true,\n              \"bonuses\": true,\n              \"rooms\": true,\n              \"objects\": true\n            },\n        },\n        computed: {\n            munchkinDoorsNumber: function () {\n                return doorsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinActionsNumber: function () {\n                return actionsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinClassesNumber: function () {\n                return classesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinRacesNumber: function () {\n                return racesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinMonstersNumber: function () {\n                return monstersCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinCursesNumber: function () {\n                return cursesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinDoorsEach);\n            },\n            munchkinTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinSlavesNumber: function () {\n                return slavesCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinLevelsNumber: function () {\n                return levelsCardNumber(this.munchkin, this.all.munchkin, this.all.munchkinTreasuresEach);\n            },\n            munchkinCardsNumber: function() {\n                return this.munchkinDoorsNumber + this.munchkinTreasuresNumber;\n            },\n            munchkin2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2ClassesNumber: function () {\n                return classesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2RacesNumber: function () {\n                return racesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2CursesNumber: function () {\n                return cursesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2DoorsEach);\n            },\n            munchkin2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin2, this.all.munchkin2, this.all.munchkin2TreasuresEach);\n            },\n            munchkin2CardsNumber: function() {\n                return this.munchkin2DoorsNumber + this.munchkin2TreasuresNumber;\n            },\n            munchkin3DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3ClassesNumber: function () {\n                return classesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3RacesNumber: function () {\n                return racesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3CursesNumber: function () {\n                return cursesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3DoorsEach);\n            },\n            munchkin3TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3SlavesNumber: function () {\n                return slavesCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin3, this.all.munchkin3, this.all.munchkin3TreasuresEach);\n            },\n            munchkin3CardsNumber: function() {\n                return this.munchkin3DoorsNumber + this.munchkin3TreasuresNumber;\n            },\n            munchkin4DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4ClassesNumber: function () {\n                return classesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4RacesNumber: function () {\n                return racesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4MountsNumber: function () {\n                return mountsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4CursesNumber: function () {\n                return cursesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4DoorsEach);\n            },\n            munchkin4TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin4, this.all.munchkin4, this.all.munchkin4TreasuresEach);\n            },\n            munchkin4CardsNumber: function() {\n                return this.munchkin4DoorsNumber + this.munchkin4TreasuresNumber;\n            },\n            munchkin5DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5ClassesNumber: function () {\n                return classesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5RacesNumber: function () {\n                return racesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5MountsNumber: function () {\n                return mountsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5CursesNumber: function () {\n                return cursesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5DoorsEach);\n            },\n            munchkin5TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin5, this.all.munchkin5, this.all.munchkin5TreasuresEach);\n            },\n            munchkin5CardsNumber: function() {\n                return this.munchkin5DoorsNumber + this.munchkin5TreasuresNumber;\n            },\n            munchkin6DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DoorsEach);\n            },\n            munchkin6WarpsNumber: function () {\n                return warpsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DoorsEach);\n            },\n            munchkin6DonjonsNumber: function () {\n                return donjonsCardNumber(this.munchkin6, this.all.munchkin6, this.all.munchkin6DonjonsEach);\n            },\n            munchkin6CardsNumber: function() {\n                return this.munchkin6DoorsNumber + this.munchkin6DonjonsNumber;\n            },\n            munchkin7oDoorsNumber: function () {\n                return doorsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oActionsNumber: function () {\n                return actionsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oRacesNumber: function () {\n                return racesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oCursesNumber: function () {\n                return cursesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oDoorsEach);\n            },\n            munchkin7oTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin7o, this.all.munchkin7o, this.all.munchkin7oTreasuresEach);\n            },\n            munchkin7oCardsNumber: function() {\n                return this.munchkin7oDoorsNumber + this.munchkin7oTreasuresNumber;\n            },\n            munchkin7DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7RacesNumber: function () {\n                return racesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7CursesNumber: function () {\n                return cursesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7DoorsEach);\n            },\n            munchkin7TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin7, this.all.munchkin7, this.all.munchkin7TreasuresEach);\n            },\n            munchkin7CardsNumber: function() {\n                return this.munchkin7DoorsNumber + this.munchkin7TreasuresNumber;\n            },\n            munchkin8DoorsNumber: function () {\n                return doorsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8ActionsNumber: function () {\n                return actionsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8RacesNumber: function () {\n                return racesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8MountsNumber: function () {\n                return mountsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8CursesNumber: function () {\n                return cursesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8MonstersNumber: function () {\n                return monstersCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8DoorsEach);\n            },\n            munchkin8TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8LevelsNumber: function () {\n                return levelsCardNumber(this.munchkin8, this.all.munchkin8, this.all.munchkin8TreasuresEach);\n            },\n            munchkin8CardsNumber: function() {\n                return this.munchkin8DoorsNumber + this.munchkin8TreasuresNumber;\n            },\n            munchkinNDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNActionsNumber: function () {\n                return actionsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNCursesNumber: function () {\n                return cursesCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNDoorsEach);\n            },\n            munchkinNTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinN, this.all.munchkinN, this.all.munchkinNTreasuresEach);\n            },\n            munchkinNCardsNumber: function() {\n                return this.munchkinNDoorsNumber + this.munchkinNTreasuresNumber;\n            },\n            munchkinMDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMActionsNumber: function () {\n                return actionsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMClassesNumber: function () {\n                return classesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMRacesNumber: function () {\n                return racesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMCursesNumber: function () {\n                return cursesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMDoorsEach);\n            },\n            munchkinMTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMMunchkinomiconNumber: function () {\n                return munchkinomiconCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMTreasuresEach);\n            },\n            munchkinMSpellsNumber: function () {\n                return spellsCardNumber(this.munchkinM, this.all.munchkinM, this.all.munchkinMSpellsEach);\n            },\n            munchkinMCardsNumber: function() {\n                return this.munchkinMDoorsNumber + this.munchkinMTreasuresNumber + this.munchkinMSpellsNumber;\n            },\n            munchkinSuDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuClassesNumber: function () {\n                return classesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuPowersNumber: function () {\n                return powersCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuOriginsNumber: function () {\n                return originsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuCursesNumber: function () {\n                return cursesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuAcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuDoorsEach);\n            },\n            munchkinSuTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuSlavesNumber: function () {\n                return slavesCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSu, this.all.munchkinSu, this.all.munchkinSuTreasuresEach);\n            },\n            munchkinSuCardsNumber: function() {\n                return this.munchkinSuDoorsNumber + this.munchkinSuTreasuresNumber;\n            },\n            munchkinStDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStClassesNumber: function () {\n                return classesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStRacesNumber: function () {\n                return racesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStCursesNumber: function () {\n                return cursesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStAcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStDoorsEach);\n            },\n            munchkinStTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSt, this.all.munchkinSt, this.all.munchkinStTreasuresEach);\n            },\n            munchkinStCardsNumber: function() {\n                return this.munchkinStDoorsNumber + this.munchkinStTreasuresNumber;\n            },\n            munchkinSt2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2RoomsNumber: function () {\n                return roomsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2ClassesNumber: function () {\n                return classesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2RacesNumber: function () {\n                return racesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2CursesNumber: function () {\n                return cursesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2AcolytesNumber: function () {\n                return acolytesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2DoorsEach);\n            },\n            munchkinSt2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinSt2, this.all.munchkinSt2, this.all.munchkinSt2TreasuresEach);\n            },\n            munchkinSt2CardsNumber: function() {\n                return this.munchkinSt2DoorsNumber + this.munchkinSt2TreasuresNumber;\n            },\n            munchkinZDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZActionsNumber: function () {\n                return actionsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZMojosNumber: function () {\n                return mojosCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZPowersNumber: function () {\n                return powersCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZCursesNumber: function () {\n                return cursesCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZDoorsEach);\n            },\n            munchkinZTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinZ, this.all.munchkinZ, this.all.munchkinZTreasuresEach);\n            },\n            munchkinZCardsNumber: function() {\n                return this.munchkinZDoorsNumber + this.munchkinZTreasuresNumber;\n            },\n            munchkinZ2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2MojosNumber: function () {\n                return mojosCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2PowersNumber: function () {\n                return powersCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2CursesNumber: function () {\n                return cursesCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2DoorsEach);\n            },\n            munchkinZ2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinZ2, this.all.munchkinZ2, this.all.munchkinZ2TreasuresEach);\n            },\n            munchkinZ2CardsNumber: function() {\n                return this.munchkinZ2DoorsNumber + this.munchkinZ2TreasuresNumber;\n            },\n            munchkinCDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCClassesNumber: function () {\n                return classesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCCursesNumber: function () {\n                return cursesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCDoorsEach);\n            },\n            munchkinCTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC, this.all.munchkinC, this.all.munchkinCTreasuresEach);\n            },\n            munchkinCCardsNumber: function() {\n                return this.munchkinCDoorsNumber + this.munchkinCTreasuresNumber;\n            },\n            munchkinC2DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2ClassesNumber: function () {\n                return classesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2MadnessesNumber: function () {\n                return madnessesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2DoorsEach);\n            },\n            munchkinC2TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC2, this.all.munchkinC2, this.all.munchkinC2TreasuresEach);\n            },\n            munchkinC2CardsNumber: function() {\n                return this.munchkinC2DoorsNumber + this.munchkinC2TreasuresNumber;\n            },\n            munchkinC3DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3ActionsNumber: function () {\n                return actionsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3ClassesNumber: function () {\n                return classesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3MadnessesNumber: function () {\n                return madnessesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3MonstersNumber: function () {\n                return monstersCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3DoorsEach);\n            },\n            munchkinC3TreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3StuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3ObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3BonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3LevelsNumber: function () {\n                return levelsCardNumber(this.munchkinC3, this.all.munchkinC3, this.all.munchkinC3TreasuresEach);\n            },\n            munchkinC3CardsNumber: function() {\n                return this.munchkinC3DoorsNumber + this.munchkinC3TreasuresNumber;\n            },\n            munchkinC4DoorsNumber: function () {\n                return doorsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DoorsEach);\n            },\n            munchkinC4WarpsNumber: function () {\n                return warpsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DoorsEach);\n            },\n            munchkinC4DonjonsNumber: function () {\n                return donjonsCardNumber(this.munchkinC4, this.all.munchkinC4, this.all.munchkinC4DonjonsEach);\n            },\n            munchkinC4CardsNumber: function() {\n                return this.munchkinC4DoorsNumber + this.munchkinC4DonjonsNumber;\n            },\n            munchkinADoorsNumber: function () {\n                return doorsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinADoorsEach);\n            },\n            munchkinAMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinADoorsEach);\n            },\n            munchkinACursesNumber: function () {\n                return cursesCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinADoorsEach);\n            },\n            munchkinAActionsNumber: function () {\n                return actionsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinADoorsEach);\n            },\n            munchkinAClassesNumber: function () {\n                return classesCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinADoorsEach);\n            },\n            munchkinATreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinATreasuresEach);\n            },\n            munchkinAStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinATreasuresEach);\n            },\n            munchkinAObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinATreasuresEach);\n            },\n            munchkinABonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinATreasuresEach);\n            },\n            munchkinALevelsNumber: function () {\n                return levelsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinATreasuresEach);\n            },\n            munchkinASealsNumber: function () {\n                return sealsCardNumber(this.munchkinA, this.all.munchkinA, this.all.munchkinASealsEach);\n            },\n            munchkinACardsNumber: function() {\n                return this.munchkinADoorsNumber + this.munchkinATreasuresNumber + this.munchkinASealsNumber;\n            },\n            munchkinLDoorsNumber: function () {\n                return doorsCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLActionsNumber: function () {\n                return actionsCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLRacesNumber: function () {\n                return racesCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLClassesNumber: function () {\n                return classesCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLCursesNumber: function () {\n                return cursesCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLMonstersNumber: function () {\n                return monstersCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLDoorsEach);\n            },\n            munchkinLTreasuresNumber: function () {\n                return treasuresCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLStuffsNumber: function () {\n                return stuffsCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLObjectsNumber: function () {\n                return objectsCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLBonusesNumber: function () {\n                return bonusesCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLLevelsNumber: function () {\n                return levelsCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLSlavesNumber: function () {\n                return slavesCardNumber(this.munchkinL, this.all.munchkinL, this.all.munchkinLTreasuresEach);\n            },\n            munchkinLCardsNumber: function() {\n                return this.munchkinLDoorsNumber + this.munchkinLTreasuresNumber;\n            },\n            allDoorsNumber: function() {\n                return this.munchkinDoorsNumber\n                    + this.munchkin2DoorsNumber\n                    + this.munchkin3DoorsNumber\n                    + this.munchkin4DoorsNumber\n                    + this.munchkin5DoorsNumber\n                    + this.munchkin6DoorsNumber\n                    + this.munchkin7oDoorsNumber\n                    + this.munchkin7DoorsNumber\n                    + this.munchkin8DoorsNumber\n                    + this.munchkinNDoorsNumber\n                    + this.munchkinMDoorsNumber\n                    + this.munchkinSuDoorsNumber\n                    + this.munchkinStDoorsNumber\n                    + this.munchkinSt2DoorsNumber\n                    + this.munchkinZDoorsNumber\n                    + this.munchkinZ2DoorsNumber\n                    + this.munchkinCDoorsNumber\n                    + this.munchkinC2DoorsNumber\n                    + this.munchkinC3DoorsNumber\n                    + this.munchkinC4DoorsNumber\n                    + this.munchkinADoorsNumber\n                    + this.munchkinLDoorsNumber;\n            },\n            allActionsNumber: function () {\n                return this.munchkinActionsNumber\n                    + this.munchkin2ActionsNumber\n                    + this.munchkin3ActionsNumber\n                    + this.munchkin4ActionsNumber\n                    + this.munchkin5ActionsNumber\n                    + this.munchkin7oActionsNumber\n                    + this.munchkin7ActionsNumber\n                    + this.munchkin8ActionsNumber\n                    + this.munchkinNActionsNumber\n                    + this.munchkinMActionsNumber\n                    + this.munchkinSuActionsNumber\n                    + this.munchkinStActionsNumber\n                    + this.munchkinSt2ActionsNumber\n                    + this.munchkinZ2ActionsNumber\n                    + this.munchkinZActionsNumber\n                    + this.munchkinCActionsNumber\n                    + this.munchkinC2ActionsNumber\n                    + this.munchkinC3ActionsNumber\n                    + this.munchkinAActionsNumber\n                    + this.munchkinLActionsNumber;\n            },\n            allActionsPercent: function () {\n                return Math.round((this.allActionsNumber / this.allDoorsNumber) * 100);\n            },\n            allAcolytesNumber: function () {\n                return this.munchkin4AcolytesNumber\n                   + this.munchkin5AcolytesNumber\n                   + this.munchkin8AcolytesNumber\n                   + this.munchkinSuAcolytesNumber\n                   + this.munchkinStAcolytesNumber\n                   + this.munchkinSt2AcolytesNumber;\n            },\n            allAcolytesPercent: function () {\n                return Math.round((this.allAcolytesNumber / this.allDoorsNumber) * 100);\n            },\n            allClassesNumber: function () {\n                return this.munchkinClassesNumber\n                    + this.munchkin2ClassesNumber\n                    + this.munchkin3ClassesNumber\n                    + this.munchkin4ClassesNumber\n                    + this.munchkin5ClassesNumber\n                    + this.munchkinMClassesNumber\n                    + this.munchkinSuClassesNumber\n                    + this.munchkinStClassesNumber\n                    + this.munchkinSt2ClassesNumber\n                    + this.munchkinCClassesNumber\n                    + this.munchkinC2ClassesNumber\n                    + this.munchkinC3ClassesNumber\n                    + this.munchkinAClassesNumber\n                    + this.munchkinLClassesNumber;\n            },\n            allClassesPercent: function () {\n                return Math.round((this.allClassesNumber / this.allDoorsNumber) * 100);\n            },\n            allRacesNumber: function () {\n                return this.munchkinRacesNumber\n                    + this.munchkin2RacesNumber\n                    + this.munchkin3RacesNumber\n                    + this.munchkin4RacesNumber\n                    + this.munchkin5RacesNumber\n                    + this.munchkin7oRacesNumber\n                    + this.munchkin7RacesNumber\n                    + this.munchkin8RacesNumber\n                    + this.munchkinMRacesNumber\n                    + this.munchkinStRacesNumber\n                    + this.munchkinSt2RacesNumber\n                    + this.munchkinLRacesNumber;\n            },\n            allRacesPercent: function () {\n                return Math.round((this.allRacesNumber / this.allDoorsNumber) * 100);\n            },\n            allPowersNumber: function () {\n                return this.munchkinSuPowersNumber\n                  + this.munchkinZPowersNumber\n                  + this.munchkinZ2PowersNumber;\n            },\n            allPowersPercent: function () {\n                return Math.round((this.allPowersNumber / this.allDoorsNumber) * 100);\n            },\n            allRoomsNumber: function () {\n                return this.munchkinSt2RoomsNumber;\n            },\n            allRoomsPercent: function () {\n                return Math.round((this.allRoomsNumber / this.allDoorsNumber) * 100);\n            },\n            allMojosNumber: function () {\n                return this.munchkinZMojosNumber\n                     + this.munchkinZ2MojosNumber;\n            },\n            allMojosPercent: function () {\n                return Math.round((this.allMojosNumber / this.allDoorsNumber) * 100);\n            },\n            allOriginsNumber: function () {\n                return this.munchkinSuOriginsNumber;\n            },\n            allOriginsPercent: function () {\n                return Math.round((this.allOriginsNumber / this.allDoorsNumber) * 100);\n            },\n            allMountsNumber: function () {\n                return this.munchkin4MountsNumber\n                    + this.munchkin5MountsNumber\n                    + this.munchkin8MountsNumber;\n            },\n            allMountsPercent: function () {\n                return Math.round((this.allMountsNumber / this.allDoorsNumber) * 100);\n            },\n            allMonstersNumber: function () {\n                return this.munchkinMonstersNumber\n                    + this.munchkin2MonstersNumber\n                    + this.munchkin3MonstersNumber\n                    + this.munchkin4MonstersNumber\n                    + this.munchkin5MonstersNumber\n                    + this.munchkin7MonstersNumber\n                    + this.munchkin8MonstersNumber\n                    + this.munchkinNMonstersNumber\n                    + this.munchkinMMonstersNumber\n                    + this.munchkinSuMonstersNumber\n                    + this.munchkinStMonstersNumber\n                    + this.munchkinSt2MonstersNumber\n                    + this.munchkinZMonstersNumber\n                    + this.munchkinZ2MonstersNumber\n                    + this.munchkinCMonstersNumber\n                    + this.munchkinC2MonstersNumber\n                    + this.munchkinC3MonstersNumber\n                    + this.munchkinAMonstersNumber\n                    + this.munchkinLMonstersNumber;\n            },\n            allMonstersPercent: function () {\n                return Math.round((this.allMonstersNumber / this.allDoorsNumber) * 100);\n            },\n            allCursesNumber: function () {\n                return this.munchkinCursesNumber\n                    + this.munchkin2CursesNumber\n                    + this.munchkin3CursesNumber\n                    + this.munchkin4CursesNumber\n                    + this.munchkin5CursesNumber\n                    + this.munchkin7oCursesNumber\n                    + this.munchkin7CursesNumber\n                    + this.munchkin8CursesNumber\n                    + this.munchkinMCursesNumber\n                    + this.munchkinNCursesNumber\n                    + this.munchkinSuCursesNumber\n                    + this.munchkinStCursesNumber\n                    + this.munchkinSt2CursesNumber\n                    + this.munchkinZCursesNumber\n                    + this.munchkinZ2CursesNumber\n                    + this.munchkinCCursesNumber\n                    + this.munchkinACursesNumber\n                    + this.munchkinLCursesNumber;\n            },\n            allCursesPercent: function () {\n                return Math.round((this.allCursesNumber / this.allDoorsNumber) * 100);\n            },\n            allMadnessesNumber: function () {\n                return this.munchkinC2MadnessesNumber\n                    + this.munchkinC3MadnessesNumber;\n            },\n            allMadnessesPercent: function () {\n                return Math.round((this.allMadnessesNumber / this.allDoorsNumber) * 100);\n            },\n            allWarpsNumber: function () {\n                return this.munchkin6WarpsNumber\n                    + this.munchkinC4WarpsNumber;\n            },\n            allWarpsPercent: function () {\n                return Math.round((this.allWarpsNumber / this.allDoorsNumber) * 100);\n            },\n            allTreasuresNumber: function() {\n                return this.munchkinTreasuresNumber\n                    + this.munchkin2TreasuresNumber\n                    + this.munchkin3TreasuresNumber\n                    + this.munchkin4TreasuresNumber\n                    + this.munchkin5TreasuresNumber\n                    + this.munchkin7oTreasuresNumber\n                    + this.munchkin7TreasuresNumber\n                    + this.munchkin8TreasuresNumber\n                    + this.munchkinNTreasuresNumber\n                    + this.munchkinMTreasuresNumber\n                    + this.munchkinSuTreasuresNumber\n                    + this.munchkinStTreasuresNumber\n                    + this.munchkinSt2TreasuresNumber\n                    + this.munchkinZTreasuresNumber\n                    + this.munchkinZ2TreasuresNumber\n                    + this.munchkinCTreasuresNumber\n                    + this.munchkinC2TreasuresNumber\n                    + this.munchkinC3TreasuresNumber\n                    + this.munchkinATreasuresNumber\n                    + this.munchkinLTreasuresNumber;\n            },\n            allStuffsNumber: function () {\n                return this.munchkinStuffsNumber\n                    + this.munchkin2StuffsNumber\n                    + this.munchkin3StuffsNumber\n                    + this.munchkin4StuffsNumber\n                    + this.munchkin5StuffsNumber\n                    + this.munchkin7oStuffsNumber\n                    + this.munchkin7StuffsNumber\n                    + this.munchkin8StuffsNumber\n                    + this.munchkinNStuffsNumber\n                    + this.munchkinMStuffsNumber\n                    + this.munchkinSuStuffsNumber\n                    + this.munchkinStStuffsNumber\n                    + this.munchkinSt2StuffsNumber\n                    + this.munchkinZStuffsNumber\n                    + this.munchkinZ2StuffsNumber\n                    + this.munchkinCStuffsNumber\n                    + this.munchkinC2StuffsNumber\n                    + this.munchkinC3StuffsNumber\n                    + this.munchkinAStuffsNumber\n                    + this.munchkinLStuffsNumber;\n            },\n            allStuffsPercent: function () {\n                return Math.round((this.allStuffsNumber / this.allTreasuresNumber) * 100);\n            },\n            allObjectsNumber: function () {\n                return this.munchkinObjectsNumber\n                    + this.munchkin2ObjectsNumber\n                    + this.munchkin3ObjectsNumber\n                    + this.munchkin4ObjectsNumber\n                    + this.munchkin5ObjectsNumber\n                    + this.munchkin7oObjectsNumber\n                    + this.munchkin7ObjectsNumber\n                    + this.munchkin8ObjectsNumber\n                    + this.munchkinNObjectsNumber\n                    + this.munchkinMObjectsNumber\n                    + this.munchkinSuObjectsNumber\n                    + this.munchkinStObjectsNumber\n                    + this.munchkinSt2ObjectsNumber\n                    + this.munchkinZObjectsNumber\n                    + this.munchkinZ2ObjectsNumber\n                    + this.munchkinCObjectsNumber\n                    + this.munchkinC2ObjectsNumber\n                    + this.munchkinC3ObjectsNumber\n                    + this.munchkinAObjectsNumber\n                    + this.munchkinLObjectsNumber;\n            },\n            allObjectsPercent: function () {\n                return Math.round((this.allObjectsNumber / this.allTreasuresNumber) * 100);\n            },\n            allBonusesNumber: function () {\n                return this.munchkinBonusesNumber\n                    + this.munchkin2BonusesNumber\n                    + this.munchkin3BonusesNumber\n                    + this.munchkin4BonusesNumber\n                    + this.munchkin5BonusesNumber\n                    + this.munchkin7oBonusesNumber\n                    + this.munchkin7BonusesNumber\n                    + this.munchkin8BonusesNumber\n                    + this.munchkinMBonusesNumber\n                    + this.munchkinSuBonusesNumber\n                    + this.munchkinStBonusesNumber\n                    + this.munchkinSt2BonusesNumber\n                    + this.munchkinZBonusesNumber\n                    + this.munchkinZ2BonusesNumber\n                    + this.munchkinCBonusesNumber\n                    + this.munchkinC2BonusesNumber\n                    + this.munchkinC3BonusesNumber\n                    + this.munchkinABonusesNumber\n                    + this.munchkinLBonusesNumber;\n            },\n            allBonusesPercent: function () {\n                return Math.round((this.allBonusesNumber / this.allTreasuresNumber) * 100);\n            },\n            allSlavesNumber: function () {\n                return this.munchkinSlavesNumber\n                    + this.munchkin3SlavesNumber\n                    + this.munchkinSuSlavesNumber\n                    + this.munchkinLSlavesNumber;\n            },\n            allSlavesPercent: function () {\n                return Math.round((this.allSlavesNumber / this.allTreasuresNumber) * 100);\n            },\n            allLevelsNumber: function () {\n                return this.munchkinLevelsNumber\n                  + this.munchkin2LevelsNumber\n                  + this.munchkin3LevelsNumber\n                  + this.munchkin4LevelsNumber\n                  + this.munchkin5LevelsNumber\n                  + this.munchkin7LevelsNumber\n                  + this.munchkin8LevelsNumber\n                  + this.munchkinNLevelsNumber\n                  + this.munchkinMLevelsNumber\n                  + this.munchkinSuLevelsNumber\n                  + this.munchkinStLevelsNumber\n                  + this.munchkinSt2LevelsNumber\n                  + this.munchkinZLevelsNumber\n                  + this.munchkinZ2LevelsNumber\n                  + this.munchkinCLevelsNumber\n                  + this.munchkinC2LevelsNumber\n                  + this.munchkinC3LevelsNumber\n                  + this.munchkinALevelsNumber\n                  + this.munchkinLLevelsNumber;\n            },\n            allLevelsPercent: function () {\n                return Math.round((this.allLevelsNumber / this.allTreasuresNumber) * 100);\n            },\n            allMunchkinomiconPercent: function () {\n                return Math.round((this.munchkinMMunchkinomiconNumber / this.allTreasuresNumber) * 100);\n            },\n            allDonjonsNumber: function() {\n                return this.munchkin6DonjonsNumber\n                    + this.munchkinC4DonjonsNumber;\n            },\n            allSpellsNumber: function() {\n                return this.munchkinMSpellsNumber;\n            },\n            allSealsNumber: function() {\n                return this.munchkinASealsNumber;\n            },\n            allCardsNumber: function() {\n                return this.allDoorsNumber +\n                    this.allTreasuresNumber +\n                    this.allDonjonsNumber +\n                    this.allSealsNumber +\n                    this.allSpellsNumber;\n            }\n        },\n        methods: {\n            allToggleFilters: function() {\n                this.all.filters = !this.all.filters;\n            },\n            munchkinToggleFilters: function() {\n                this.munchkin.filters = !this.munchkin.filters;\n            },\n            munchkin2ToggleFilters: function() {\n                this.munchkin2.filters = !this.munchkin2.filters;\n            },\n            munchkin3ToggleFilters: function() {\n                this.munchkin3.filters = !this.munchkin3.filters;\n            },\n            munchkin4ToggleFilters: function() {\n                this.munchkin4.filters = !this.munchkin4.filters;\n            },\n            munchkin5ToggleFilters: function() {\n                this.munchkin5.filters = !this.munchkin5.filters;\n            },\n            munchkin6ToggleFilters: function() {\n                this.munchkin6.filters = !this.munchkin6.filters;\n            },\n            munchkin7oToggleFilters: function() {\n                this.munchkin7o.filters = !this.munchkin7o.filters;\n            },\n            munchkin7ToggleFilters: function() {\n                this.munchkin7.filters = !this.munchkin7.filters;\n            },\n            munchkin8ToggleFilters: function() {\n                this.munchkin8.filters = !this.munchkin8.filters;\n            },\n            munchkinNToggleFilters: function() {\n                this.munchkinN.filters = !this.munchkinN.filters;\n            },\n            munchkinMToggleFilters: function() {\n                this.munchkinM.filters = !this.munchkinM.filters;\n            },\n            munchkinSuToggleFilters: function() {\n                this.munchkinSu.filters = !this.munchkinSu.filters;\n            },\n            munchkinStToggleFilters: function() {\n                this.munchkinSt.filters = !this.munchkinSt.filters;\n            },\n            munchkinSt2ToggleFilters: function() {\n                this.munchkinSt2.filters = !this.munchkinSt2.filters;\n            },\n            munchkinZToggleFilters: function() {\n                this.munchkinZ.filters = !this.munchkinZ.filters;\n            },\n            munchkinZ2ToggleFilters: function() {\n                this.munchkinZ2.filters = !this.munchkinZ2.filters;\n            },\n            munchkinCToggleFilters: function() {\n                this.munchkinC.filters = !this.munchkinC.filters;\n            },\n            munchkinC2ToggleFilters: function() {\n                this.munchkinC2.filters = !this.munchkinC2.filters;\n            },\n            munchkinC3ToggleFilters: function() {\n                this.munchkinC3.filters = !this.munchkinC3.filters;\n            },\n            munchkinC4ToggleFilters: function() {\n                this.munchkinC4.filters = !this.munchkinC4.filters;\n            },\n            munchkinAToggleFilters: function() {\n                this.munchkinA.filters = !this.munchkinA.filters;\n            },\n            munchkinLToggleFilters: function() {\n                this.munchkinL.filters = !this.munchkinL.filters;\n            },\n            munchkinSuAcolytesGroup: function () {\n              if (this.munchkinSu.slaves) {\n                this.munchkinSu.acolytes = false;\n                this.munchkinSu.slaves = false;\n              } else {\n                this.munchkinSu.acolytes = true;\n                this.munchkinSu.slaves = true;\n              }\n            }\n        }\n    });\n\n    new Vue({\n        el: \".shuffle\",\n        data: {\n            \"doorsLastDiscard\": false,\n            \"donjonsLastDiscard\": false,\n            \"sealsLastDiscard\": false,\n            \"treasuresLastDiscard\": false,\n            \"booksLastDiscard\": false,\n            \"munchkinomicon\": false,\n            \"donjonsLength\": 0,\n            \"sealsLength\": 0,\n            \"booksLength\": 0\n        },\n        methods: {\n            initShuffle: function () {\n                var temp,\n                    self = this,\n                    shuffle = self.$el;\n\n                shuffle.classList.add(\"running\");\n\n                console.log(\"Donjons\");\n                donjonsStackNext = [];\n                donjonsStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .donjons .color .active .item-title\"), function (card) {\n                    donjonsStackNext.push({\n                        title: card.innerHTML,\n                        extension: \"munchkin-6\",\n                        stack: \"donjons\",\n                        type: \"fields\"\n                    });\n                });\n                donjonsStackNext.shuffle();\n                this.donjonsLength = donjonsStackNext.length;\n                console.log(donjonsStackNext);\n\n\n                console.log(\"Sceaux\");\n                sealsStackNext = [];\n                sealsStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .seals .color .active .item-title\"), function (card) {\n                    sealsStackNext.push({\n                        title: card.innerHTML,\n                        extension: \"munchkin-6\",\n                        stack: \"seals\",\n                        type: \"marks\"\n                    });\n                });\n                sealsStackNext.shuffle();\n                this.sealsLength = sealsStackNext.length;\n                console.log(sealsStackNext);\n\n\n                console.log(\"Books\");\n                booksStackNext = [];\n                booksStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .books .color .active .item-title\"), function (card) {\n                    booksStackNext.push({\n                        title: card.innerHTML,\n                        extension: \"munchkin-m\",\n                        stack: \"books\",\n                        type: \"spells\"\n                    });\n                });\n                booksStackNext.shuffle();\n                this.booksLength = booksStackNext.length;\n                console.log(booksStackNext);\n\n\n                console.log(\"Treasures\");\n                treasuresStackNext = [];\n                treasuresStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .treasures .color .active .item-title\"), function (card) {\n                    var type = card.parentNode.parentNode.classList.value.split(' ')[0];\n                    if (type === \"munchkinomicon\") {\n                        self.munchkinomicon = true;\n                        treasuresStackNext.unshift({\n                          title: card.innerHTML,\n                          extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                          stack: \"treasures\",\n                      type: type\n                        });\n                    } else {\n                        treasuresStackNext.push({\n                        title: card.innerHTML,\n                          extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                          stack: \"treasures\",\n                          type: type\n                        });\n                    }\n                });\n                if (this.munchkinomicon) { temp = treasuresStackNext.shift(); }\n                treasuresStackNext.shuffle();\n                if (this.munchkinomicon) { treasuresStackNext.unshift(temp); }\n                console.log(treasuresStackNext);\n\n\n                console.log(\"Doors\");\n                doorsStackNext = [];\n                doorsStackDiscard = [];\n                Array.prototype.forEach.call(document.querySelectorAll(\".is-visible .doors .color .active .item-title\"), function (card) {\n                  doorsStackNext.push({\n                      title: card.innerHTML,\n                    extension: card.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.classList.value.split(' ')[0],\n                    stack: \"doors\",\n                    type: card.parentNode.parentNode.classList.value.split(' ')[0]\n                  });\n                });\n                doorsStackNext.shuffle();\n                console.log(doorsStackNext);\n            },\n            openDoors: function () {\n                console.log(\"Open Doors\");\n                var first = doorsStackNext.shift(),\n                    card = document.querySelector(\".stack-doors .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    doorsStackNext = doorsStackDiscard;\n                    doorsStackDiscard = [];\n                    doorsStackNext.shuffle();\n                    this.doorsLastDiscard = false;\n                    return false;\n                }\n\n                doorsStackDiscard.unshift(first);\n                this.doorsLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\").replace(\"SU\", \"Su\");\n                progress.innerHTML = doorsStackDiscard.length + \"/\" + parseInt(doorsStackDiscard.length + doorsStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"monsters\", \"Monstre\")\n                    .replace(\"mounts\", \"Monture\")\n                    .replace(\"rooms\", \"Pièce\")\n                    .replace(\"origins\", \"Origine\")\n                    .replace(\"powers\", \"Pouvoir\")\n                    .replace(\"mojos\", \"Mojos\")\n                    .replace(\"races\", \"Race\")\n                    .replace(\"acolytes\", \"Serviteur\")\n                    .replace(\"curses\", \"Malédiction\")\n                    .replace(\"madnesses\", \"Démence\")\n                    .replace(\"classes\", \"Classe\")\n                    .replace(\"actions\", \"Amélioration\")\n                    .replace(\"warps\", \"Portail\");\n\n                console.log(doorsStackNext);\n                console.log(doorsStackDiscard);\n            },\n            openTreasures: function () {\n                console.log(\"Open Treasures\");\n                var temp,\n                    first = treasuresStackNext.shift(),\n                    card = document.querySelector(\".stack-treasures .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    treasuresStackNext = treasuresStackDiscard;\n                    treasuresStackDiscard = [];\n                    if (this.munchkinomicon) { temp = treasuresStackNext.pop(); }\n                    treasuresStackNext.shuffle();\n                    if (this.munchkinomicon) { treasuresStackNext.unshift(temp); }\n                    this.treasuresLastDiscard = false;\n                    return false;\n                }\n\n                if (type === \"munchkinomicon\") {\n                    treasuresStackDiscard.push(first);\n                } else {\n                    treasuresStackDiscard.unshift(first);\n                }\n                this.treasuresLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = treasuresStackDiscard.length + \"/\" + parseInt(treasuresStackDiscard.length + treasuresStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"objects\", \"Objet\")\n                    .replace(\"bonuses\", \"Action\")\n                    .replace(\"levels\", \"Niveau\")\n                    .replace(\"slaves\", \"Serviteur\")\n                    .replace(\"munchkinomicon\", \"Munchkinomicon\")\n                    .replace(\"stuffs\", \"Équipement\");\n\n                console.log(treasuresStackNext);\n                console.log(treasuresStackDiscard);\n            },\n            openDonjons: function () {\n                console.log(\"Open Donjons\");\n                var first = donjonsStackNext.shift(),\n                    card = document.querySelector(\".stack-donjons .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    donjonsStackNext = donjonsStackDiscard;\n                    donjonsStackDiscard = [];\n                    donjonsStackNext.shuffle();\n                    this.donjonsLastDiscard = false;\n                    return false;\n                }\n\n                donjonsStackDiscard.unshift(first);\n                this.donjonsLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = donjonsStackDiscard.length + \"/\" + parseInt(donjonsStackDiscard.length + donjonsStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"fields\", \"Donjon\");\n\n                console.log(donjonsStackNext);\n                console.log(donjonsStackDiscard);\n            },\n            openSeals: function () {\n                console.log(\"Open Seals\");\n                var first = sealsStackNext.shift(),\n                    card = document.querySelector(\".stack-seals .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    sealsStackNext = sealsStackDiscard;\n                    sealsStackDiscard = [];\n                    sealsStackNext.shuffle();\n                    this.sealsLastDiscard = false;\n                    return false;\n                }\n\n                sealsStackDiscard.unshift(first);\n                this.sealsLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = sealsStackDiscard.length + \"/\" + parseInt(sealsStackDiscard.length + sealsStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"marks\", \"Sceaux\");\n\n                console.log(sealsStackNext);\n                console.log(sealsStackDiscard);\n            },\n            openBooks: function () {\n                console.log(\"Open Books\");\n                var first = booksStackNext.shift(),\n                    card = document.querySelector(\".stack-books .discard\"),\n                    title = card.getElementsByClassName(\"title\")[0],\n                    extension = card.getElementsByClassName(\"extension\")[0],\n                    type = card.getElementsByClassName(\"type\")[0],\n                    progress = card.getElementsByClassName(\"progress\")[0];\n\n                if (!first) {\n                    booksStackNext = booksStackDiscard;\n                    booksStackDiscard = [];\n                    booksStackNext.shuffle();\n                    this.booksLastDiscard = false;\n                    return false;\n                }\n\n                booksStackDiscard.unshift(first);\n                this.booksLastDiscard = true;\n\n                title.innerHTML = first.title;\n                title.setAttribute(\"class\", \"title \" + first.type);\n                extension.innerHTML = first.extension.replace(\"munchkin-\", \"\").replace(\"munchkin\", \"1\").toUpperCase().replace(\"7-O\", \"7o\");\n                progress.innerHTML = booksStackDiscard.length + \"/\" + parseInt(booksStackDiscard.length + booksStackNext.length);\n                type.innerHTML = first.type\n                    .replace(\"spells\", \"Sorts\");\n\n                console.log(booksStackNext);\n                console.log(booksStackDiscard);\n            },\n            stopShuffle: function () {\n                var self = this,\n                    shuffle = self.$el;\n\n                this.doorsLastDiscard = false;\n                this.donjonsLastDiscard = false;\n                this.sealsLastDiscard = false;\n                this.treasuresLastDiscard = false;\n                this.booksLastDiscard = false;\n                this.munchkinomicon = false;\n                doorsStackNext = [];\n                doorsStackDiscard = [];\n                donjonsStackNext = [];\n                donjonsStackDiscard = [];\n                sealsStackNext = [];\n                sealsStackDiscard = [];\n                booksStackNext = [];\n                booksStackDiscard = [];\n                treasuresStackNext = [];\n                treasuresStackDiscard = [];\n                shuffle.classList.remove(\"running\");\n            }\n        }\n    });\n});\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(script);","stylesheet":"@font-face {\n  font-family: 'caslantr';\n  src: url('./media/fonts/caslantr.eot?#iefix') format('embedded-opentype'),\n       url('./media/fonts/caslantr.woff') format('woff'),\n       url('./media/fonts/caslantr.ttf')  format('truetype'),\n       url('./media/fonts/caslantr.svg#cursive2') format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n\nul ul {\nmargin-top: 0;\nmargin-bottom: 0;\n}\n\nul img { margin-top: 0; }\n\n.shuffle .shuffle-card {\n  display: none;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(255, 255, 255, 0.8);\n  top: 0;\n  left: 0;\n  z-index: 6;\n}\n.shuffle .shuffle-card-inner {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n}\n.shuffle.running .shuffle-card {\n  display: block;\n}\n\n.shuffle .stack-doors,\n.shuffle .stack-treasures,\n.shuffle .stack-donjons,\n.shuffle .stack-seals,\n.shuffle .stack-books {\n  position: relative;\n  margin: 10px;\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n}\n\n.shuffle .stack-doors.is-disabled,\n.shuffle .stack-treasures.is-disabled,\n.shuffle .stack-donjons.is-disabled,\n.shuffle .stack-seals.is-disabled,\n.shuffle .stack-books.is-disabled {\n  opacity: .2;\n}\n\n.shuffle .discard,\n.shuffle .open {\n  background-color: #fff;\n  margin: 10px auto;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  border: 1px solid #000;\n  max-width: 280px;\n  -webkit-box-sizing: border-box;\n     -moz-box-sizing: border-box;\n          box-sizing: border-box;\n    -webkit-border-radius: 16px;\n            border-radius: 16px;\n    cursor: pointer;\n}\n\n@media (min-height: 730px) AND (min-width: 730px) {\n  .shuffle .stack-doors,\n  .shuffle .stack-treasures {\n    float: left;\n    width: calc(50% - 20px);\n    height: calc(50% - 20px);\n  }\n\n  .shuffle .stack-donjons,\n  .shuffle .stack-seals,\n  .shuffle .stack-books {\n    float: left;\n    width: calc(33.33333333% - 20px);\n    height: calc(50% - 20px);\n  }\n\n  .shuffle .shuffle-card-inner {\n    overflow-y: hidden;\n  }\n\n  .shuffle .discard,\n  .shuffle .open {\n    margin: 0;\n    position: absolute;\n    left: 50%;\n    top: 25%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n.shuffle .discard {\n  display: none;\n  top: 75%;\n  cursor: default;\n}\n.shuffle .discard.is-visible {\n  display: block;\n}\n.shuffle .discard:before,\n.shuffle .open:before {\n  content: \"\";\n  display: block;\n  padding-top: 64.14%;\n}\n.shuffle .discard .title,\n.shuffle .open .title {\n  position: absolute;\n  font-size: 1.4em;\n  font-family: caslantr;\n  font-variant: small-caps;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  max-width: 100%;\n}\n\n.shuffle .discard .stack {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n.shuffle .discard .extension {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\n.shuffle .discard .type {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n}\n.shuffle .discard .progress {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n}\n\n.shuffle .discard strong,\n.shuffle .open strong {\n  font-size: 2em;\n  display: block;\n  line-height: 1;\n}\n\n.shuffle .stop {\n  position: absolute;\n  right: 8px;\n  top: 8px;\n  z-index: 3;\n  cursor: pointer;\n}\n.shuffle .twelve {\n  position: absolute;\n  left: 8px;\n  top: 8px;\n  z-index: 3;\n  cursor: pointer;\n  display: none;\n}\n.shuffle .init,\n.shuffle .stop {\n  color: blue;\n  cursor: pointer;\n}\n.shuffle .init:hover,\n.shuffle .stop:hover {\n  text-decoration: underline;\n}\n\n.details::after,\n.card-number::after,\n.card-list::after {\n  content: \"\";\n  clear: left;\n  display: block;\n}\n\n.details button del,\n.details button ins {\n  text-decoration: none;\n}\n\n.details .filters {\n    display: none;\n}\n\n.is-displayed .filters {\n    display: block;\n}\n\n.details button del {\n  display: none;\n}\n.is-displayed button ins {\n  display: none;\n}\n.is-displayed button del {\n  display: inline-block;\n}\n\n.munchkin-all {\n    display: none;\n}\n.munchkin-all.is-visible {\n    display: block;\n}\n\n.munchkin-all em {\n  color: inherit;\n}\n.munchkin-all h2 {\n    margin-top: 0;\n}\n.munchkin-all h3 {\n    margin-top: 16px;\n}\n.books li,\n.donjons li,\n.seals li,\n.doors li,\n.treasures li,\n.munchkin-all h2,\n.munchkin-all h3 {\n    font-family: caslantr;\n    font-variant: small-caps;\n}\n.munchkin-all {\n  margin-top: 16px;\n  padding: 24px;\n  background-color: #f6f1df;\n  background-image:\n    url(\"media/images/upload/cornerTR.jpg\"),\n    url(\"media/images/upload/cornerTL.jpg\"),\n    url(\"media/images/upload/cornerBR.jpg\"),\n    url(\"media/images/upload/cornerBL.jpg\"),\n    url(\"media/images/upload/sideRight.jpg\"),\n    url(\"media/images/upload/sideLeft.jpg\"),\n    url(\"media/images/upload/sideBottom.jpg\"),\n    url(\"media/images/upload/sideTop.jpg\");\n  background-position: top right, top left, bottom right, bottom left, center right, center left, bottom center, top center;\n  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat-y, repeat-y, repeat-x, repeat-x;\n}\n\n.munchkin-all label {\n  white-space: nowrap;\n  margin-left: 1em;\n}\n\n.text-center {\n  text-align: center;\n}\n.munchkin-all ol {\n    padding-left: 10px;\n}\n.munchkin-all ol {counter-reset: number;}\n.munchkin-all ol li {\n    list-style-type: none;\n}\n.munchkin-all ol li .box.active {\n    counter-increment: number;\n}\n.munchkin-all ol li .box.active::before {\n    content: counter(number) \".\";\n    color: #000;\n    font-familly: Arial;\n    font-size: 0.8em;\n    margin-right: 6px;\n    width: 2em;\n    text-align: right;\n    display: inline-block;\n}\n.munchkin-all ol li .box::before {\n    content: \"\";\n    color: #000;\n    font-familly: Arial;\n    font-size: 0.8em;\n    margin-right: 6px;\n    width: 2em;\n    text-align: right;\n    display: inline-block;\n}\n\n.books,\n.donjons,\n.seals,\n.treasures,\n.doors {\n  box-sizing: border-box;\n  width: 50%;\n  float: left;\n}\n\n.card-list li {\n  display: none;\n}\n.card-list li .box {\n  opacity: 0.2;\n}\n.card-list li input {\n  display: none;\n}\n.card-list li:hover input {\n  display: inline-block;\n}\n.card-list li .box.active {\n  opacity: 1;\n}\n\n.card-number img {\n    float: left;\n    max-width: 30px;\n    margin-right: 10px;\n    margin-top: 0;\n}\n\n.card-list .levels,\n.card-list .madnesses,\n.card-list .curses,\n.card-list .slaves,\n.card-list .acolytes,\n.card-list .powers,\n.card-list .origins,\n.card-list .munchkinomicon,\n.card-list .spells,\n.card-list .rooms,\n.card-list .fields,\n.card-list .marks,\n.card-list .warps,\n.card-list .mounts,\n.card-list .mojos,\n.card-list .classes,\n.card-list .races,\n.card-list .monsters,\n.card-list .actions,\n.card-list .stuffs,\n.card-list .objects,\n.card-list .bonuses {\n  display: list-item;\n}\n\n.rooms,\n.marks,\n.fields {\n  color: indianred;\n}\n\n.mojos,\n.classes {\n  color: brown;\n}\n\n.powers,\n.origins {\n  color: deepskyblue;\n}\n\n.races {\n  color: grey;\n}\n\n.monsters {\n  color: orange;\n}\n\n.mounts,\n.stuffs {\n  color: purple;\n}\n\n.objects {\n  color: blue;\n}\n\n.warps {\n  color: goldenrod;\n}\n\n.munchkinomicon {\n    color: red;\n}\n\n.slaves,\n.levels,\n.madnesses,\n.curses,\n.acolytes,\n.spells,\n.actions,\n.bonuses {\n  color: green;\n}\n\n.demo {\n    float: right;\n    height: 150px;\n}\n\n.init {\n    text-align: center;\n    font-size: 1.5em;\n}","title":"Outil Munchkin : Listez, Mélangez, Classez, Triez et Créez vos Jeux !","urn":"liste-des-cartes-munchkin-editions-francaises","description":"J'ai créé ce petit outil qui va vous permettre de gérer votre jeu Munchkin ainsi que ses extensions plus facilement !","image":"http://www.regledujeu.fr/wp-content/uploads/munchkin-regle-du-jeu.jpg"}
{"_id":{"$oid":"577ca385d1b7fe136fc20061"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"J'entends tous les jours qu'une « version mobile n'est pas une option », sous entendu que l'on souhaite créer une version de site pour mobile et une version de site pour desktop « en même temps » et derrière la même adresse. J'entends aussi qu'il serait bien de s'occuper d'une « version tablette » pendant qu'on n'y est !\n\nPour réaliser cela, quoi de mieux que l'utilisation du [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/) !\n\nJusque là tout va bien me direz-vous ? **Pas du tout...**. Une « Version Desktop », c'est tactile ? Une « Version Mobile », ça a pas de bande passante ? Et bon sang, c'est quoi une « Version Tablette » ?\n\n\u003cp\u003e\u003cimg width=\"1038\" height=\"587\" style=\"max-width: 100%;height: auto;\" src=\"media/images/upload/final.jpg\" alt=\"Stop version desktop et mobile !\"\u003e\u003c/p\u003e\n\nMême si dans la théorie tout le monde croit se comprendre —avec des histoires de tailles—, je me sens contraint et forcer de faire du « Gloubi-boulga » quand j'utilise les spécifications ~~imposées~~ proposées par un client ou pire parfois... par un professionnel. Et cela au lieu de faire ce qu'on me demande en premier lieu, du [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/).\n\nLa simple évocation de « Mobile vs. Desktop » est une preuve flagrante de l'incompréhension total de la chose. De la même manière que certain pensant utiliser une méthode Agile s'y prennent en réalité à [La RACHE](http://www.la-rache.com/) ; il est intéressant de s'assurer ici qu'on ne confond pas tout.\n\n\n\n\n\n## Du web adapté aux périphériques, c'est quoi ? ##\n\nIl serait temps d'arrêter de parler de « Version Mobile », « Version Desktop », « Version Réfrigérateur », etc... et s’intéresser aux périphériques :\n - avec Souris ou/**et** Gestion tactile,\n - à Bas débit ou/**et** Haut débit,\n - à affichage Portrait ou/**et** Paysage\n - à résolution Basse ou/**et** Haute.\n\nCar :\n- Non, une fenêtre de navigateur rétrécie sur le côté **N'est Pas** une « Version Mobile » à qui l'on doit interdire les interactions de la souris.\n- Non, un smartphone sur le réseau Wifi **N'est Pas** un périphérique à qui l'on doit interdire « l'auto-chargement » de vidéo.\n- Oui, **un PC tactile ou une tablette avec clavier** ça gère **la souris et le tactile**.\n- Oui, un **smartphone sur le réseau Wifi** a une **excellente connexion** alors qu'un **PC utilisant le partage de connexion** d'un smartphone sur un réseau Edge **n'en a pas**.\n- Oui, un appareil qui se tient dans la/les main(s) peut **être orienté** et afficher **la même page en largeur ou hauteur**.\n- Oui, un **zoom à 200%** sur PC c'est possible, et afficher **un site sans viewport spécifique sur smartphone**, ça l'est aussi.\n- ...\n\nC'est parti pour vous présenter la liste non-exhaustive d'implémentations qu'on ~~m'oblige à~~ **me demande de** faire et qui posent problème ainsi que des explications et exemples sur ce qu'il faut alors conseiller.\n\n\n\n\n\n## On ne fait pas... ##\n\n### **Une image pour la version Desktop et une image pour la version Mobile** ###\n\n![Non](media/images/upload/example-1.jpg)\n\n\u003e *`NON et`* **Non**, il ne faut absolument pas que pour un contenu il existe plusieurs images avec des représentations différentes de celle-ci. En d'autres termes, il ne doit pas y avoir deux fichiers différents pour représenter la même photo ou une partie de la photo initiale.\n\u003e \n\u003e **Pourquoi ?**\n\u003e - Il n'est pas possible d'adresser toutes les résolutions d'écran en faisant un switch « mobile / desktop » si votre image mobile n'est pas assez large, d'où l'inutilité même de cette image.\n\u003e - Il y a deux requêtes et deux chargement d'image même si l'une des deux images n'est pas affichée car une balise `\u003cimg\u003e` fait automatiquement une requête au réseau. Même en utilisant une image de background, une fenêtre mise sur le côté qui passerait ensuite en plein écran chargerait une seconde image.\n\u003e - Il y a plusieurs versions de la même image à gérer pour les pousseurs de contenus.\n\n![Oui](media/images/upload/example-2.jpg)\n\n\u003e **`OUI et`** **Oui,** un même contenu peut posséder **autant de version** de lui-même dans des **résolutions différentes** avec un **ratio identique**.\n\u003e \n\u003e C'est ensuite, avec des règles CSS que l'on affichera en fonction de la résolution les bonnes parties de l'image.\n\u003e \n\u003e En ce qui concerne la résolution de l'image et son poids, on délivrera en fonction de la bande passante du réseau et de la résolution d'écran des versions de l'images de plus en plus lourde.\n\n#### Techniques ####\n\n- Conservation du Ratio (CSS) : http://codepen.io/Haeresis/pen/NAgQoE\n- Hauteur fixe (CSS) : http://codepen.io/Haeresis/pen/qNjZGR\n- Chargement progressif (JS) : http://codepen.io/Haeresis/pen/GqvKEw\n\n\n\n\n\n### **Un survole / clique souris en desktop et un touché en mobile** ###\n\n\u003e *`NON et`* **Non**, il faut arrêter de penser que seul les mobiles sont tactiles ! Il existe bien des ordinateurs et grandes tablettes tactiles ou des périphériques de basse résolution qui ne le sont pas.\n\u003e \n\u003e Il faut également penser qu'on ne peut pas mettre une action importante au survol de la souris et une action importante au clique de la souris car elles se résumeront être la même action sur beaucoup d'appareil tactile.\n\n![Piège](media/images/upload/example-3.jpg)\n\n\u003e **`OUI et`** **Oui,** on peut gérer la souris et le tactile pour tous les périphériques et de manière complémentaire quelque soit la résolution.\n\u003e \n\u003e Si vous ne gérez pas vous-même les événements, vous pouvez associer \n\u003e - un comportement au survole de la souris dont l'action n'est pas importante ou décorative (car il n'est pas sûr que l'appareil s'en préoccupe si l'action est effectuée avec le doigt) et\n\u003e - un comportement au `click` / `tap` qui sera l'action réelle que vous souhaitez effectuer sur cet élément.\n\u003e \n\u003e **Cependant, si vous gérez vous-même ces événements** à l'aide de `click`, `mouseenter`, `mouseout`, `touchstart`, `touchmove` et `touchend` il est possible d'associer un comportement au `click` / `tap` différent de celui du `hover` / `swap`. Dans ces cas là ce qu'il faut se rappeler c'est que :\n - Chrome : cumule la gestion souris en plus du tactile quand vous touché.\n - Firefox, Edge / IE, Safari : simulent un click au touché.\n - Android (Chrome), iOS (Safari) : gère le tactile au touché.\n\u003e \n\u003e Il faut alors faire en sorte pour Chrome que la souris soit associée au clique, que le tactile soit associée *uniquement* au touché et laisser les autres gérer clique, simulation de clique au touché, ou touché réel. Vous n'aurez plus qu'à lancer les mêmes fonctions pour un `click` ou un `tap` et les mêmes fonctions pour un `hover` ou un `swap` afin de couvrir tous les navigateurs de la même manière.\n\n#### Techniques ####\n\n- Click, Tap, Hover et Swap Cross-Browser (JS) : http://codepen.io/Haeresis/pen/KrvpQd\n- Touch Event Détection avec Modernizr (JS) : http://codepen.io/Haeresis/pen/bZANNY\n\n\n\n\n### Un chargement automatique de fichiers lourds ###\n\n![Non](media/images/upload/example-4.jpg)\n\n\u003e *`NON et`* **Non**, vous ne devez pas pré-supposer de l'expérience utilisateur en vous basant uniquement sur la taille de l'écran, **il ne faut donc pas se baser sur la taille de l'écran pour** :\n\u003e \n\u003e - Charger automatiquement un fichier lourds au chargement.\n\u003e - Charger un fichier lourd au survole de la souris ou au swap du doigt.\n\u003e - Charger un fichier lourd au défilement de la page.\n\u003e \n\u003e Garder à l'esprit qu'un rendu sur PC ou mobile sur une connexion nomade bas débit est lent, et qu'un rendu PC ou mobile sur un réseau wifi haut débit est rapide.\n\n![Oui](media/images/upload/example-5.jpg)\n\n\u003e **`OUI et`** **Oui,** il faut prendre en compte le débit de l'utilisateur. Sans entrer dans des calculs savant, on peut assez facilement savoir si l'utilisateur charge à plus de 500Ko/s ou non. À partir de là, on prend la décision ou non de charger « automatiquement » les gros fichiers. En cas de réseau lent et si l'utilisateur le souhaite **avec une action de sa part**, il peut afficher/télécharger les fichiers lourds. Donc :\n\u003e \n\u003e - Si la taille de l'écran et le débit le permettent, j'affiche les fichier gros et / ou prenant de la place automatiquement.\n\u003e - Si la taille de l'écran le permet mais pas le débit, j'affiche les fichier gros et / ou prenant de la place après une action de l'utilisateur.\n\u003e - Si ni la taille de l'écran et ni le débit ne le permettent, j'ouvre une page pour télécharger le fichier ou l'afficher avec quelque chose de plus adapté après une action de l'utilisateur.\n\n#### Technique ####\n\n- Détection de Bande Passante (JS) : http://codepen.io/Haeresis/pen/ZOJGjL\n\n\n\n\n\n### **Du déblayage d'information sur mobile, sous prétexte qu'il n'y a pas de place** ###\n\n\u003e *`NON et`* **Non**, il ne faut pas retirer des parties de la page pour les écrans les plus petits sous prétexte qu'il n'y a pas de place ! Il ne faut pas non plus placer des « accordéons » à tous les coins de rue sous prétexte qu'il n'y a pas de place mais que l'on ne souhaite rien retirer.\n\u003e \n\u003e N'ayez pas peur d'exploiter la page dans sa longueur car « scroller » avec le pouce ou la molette souris est un jeu d'enfant.\n\n![Doigt Facile](media/images/upload/example-6.jpg)\n\n\u003e **`OUI et`** **Oui,** quoi qu'il arrive, laissez **tout ce qui est important accessible sur la page**, ne le caché pas pour garder une page complète qui tiens dans votre petit écran en mode portrait.\n\u003e \n\u003e Il n'est pas grave de laisser l'utilisateur naviguer de haut en bas dans une longue page, surtout si vous laissez des ancres vers un menu. Multiplier les écrans à ouvrir à l'aide de clique sur des zones précises de l'écran est fatiguant sur des appareils qui demande parfois d'étirer le pouce là ou un simple balayage de haut en bas est naturel.\n\u003e \n\u003e À l'inverse, passer son temps à attraper la barre de défilement pour descendre dans une page est gênant avec une souris. Si vous avez donc de la place sur votre écran, exploité donc cette fois les accordéons et autres sections entre « tab » qui sont facilement cliquable avec un mouvement simple du poignet : la souris est faites pour ça !\n\n#### Techniques ####\n- Gestion d'affichage Portrait / Paysage (CSS) : http://codepen.io/Haeresis/pen/meOGWz\n- Rem au lieu de Pixel (CSS) : http://codepen.io/Haeresis/pen/ZGyGWm\n- Contenu en dossier (CSS et JS) : http://codepen.io/Haeresis/pen/aORrxx\n- Disposition Responsive (CSS) : http://codepen.io/Haeresis/pen/bdXymY\n\n\n\n\n\n## Et vous ? ##\n\nSi vous aussi vous souhaitez partager vos techniques pour des sites pleinement [Responsive Web Design]( https://blog.lesieur.name/les-concepts-autour-du-responsive-web-design/), n'hésitez pas !","dates":{"published":{"$date":"2016-07-08T10:21:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".article img {\n max-width: 100%;\ndisplay: block;\nmargin: 8px auto;\nborder: 1px solid #000;\n}","title":"Version mobile et version desktop : ça n existe pas !","urn":"version-mobile-et-version-desktop-ca-n-existe-pas","description":"C'est parti pour vous présenter la liste non-exhaustive d'implémentations qui posent problème ainsi que des explications et exemples sur ce qu'il est alors conseiller.","image":"https://blog.lesieur.name/media/images/upload/final.jpg"}
{"_id":{"$oid":"5819fd2a99480e4e24e3d0cd"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"581cb31dbe08b018d7e9a3bf"}],"content":"Si Svn (Subversion) est la version « client-server » d'un système de gestion de version, alors Git en est sans conteste la version « peer-to-peer ».\n\nSi vous découvrez le système de gestion de version Git et que vous l'utilisez seul et occasionnellement, il existe peut-être encore beaucoup de zones d'ombre pour vous sur son utilisation ainsi que sur la totalité des possibilités offertes. D'ailleurs, êtes-vous réellement sûr de comprendre la portée de ce système de gestion de version distant et distribué ?\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/networkDesign_xkl_com.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/networkDesign_xkl_com-mini.jpg\" alt=\"Bien que le contexte de vie soit détruit, les zombis vivent toujours, enfermés, tel des variables dans une fermeture.\" width=\"658\" height=\"500\" style=\"max-width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eRéseau distribué : xkl.com\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nC'était également mon cas. Tout le long de mon amélioration continue de l'utilisation de Git, je vais maintenir cet aide-mémoire. Il abordera :\n\n- la raison d'être de Git par l'exemple,\n- la description des actions de Git pour un travail sur une branche,\n- la description d'une méthode de travail multi-branche avec Git et\n- le description de Git avec de multiples sources via GitHub.\n\n\u003e Si vous ne connaissez vraiment pas grand chose à Git n'hésitez pas à lire : [Démarrage rapide de GIT](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-%C3%80-propos-de-la-gestion-de-version) et particulièrement :\n- [À propos de la gestion de version](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-%C3%80-propos-de-la-gestion-de-version) et\n- [Rudiments de Git](https://git-scm.com/book/fr/v2/D%C3%A9marrage-rapide-Rudiments-de-Git)\n\n\n\n\n\n## Git, comment ça marche ?\n\n### Créons un système de version local\n\nImaginons que je crée un dossier `website` et que je décide d'y créer divers fichiers destinés à être ouverts dans un navigateur. Actuellement je travail seul sur ce projet dans ma société et avec mon propre ordinateur.\n\n![Git étape 1](media/images/upload/git-1.png)\n\n-----\n\nS'il me venait l'envie de modifier le site, mais de toujours être capable de revenir à sa version antérieur, je peux adopter une approche d'historisation dans un dossier annexe `historique`. Dans ce dossier, je placerais une copie du site appelé `version-1`. Ensuite je modifierais l'original.\n\n![Git étape 2](media/images/upload/git-2.png)\n\n-----\n\nPour permettre au site visionné dans le navigateur d'être toujours dans le même dossier, nous pourrions également décider de créer un dossier `courante` qui représenterait toujours la version du site la plus récente. En faisant cela je pourrais mettre mon dossier `website` dans l'état de la `version-1` et je sais que je pourrais revenir à l'état de la version `courante` puisque j'en ai une copie dans l'historisation des versions.\n\n![Git étape 3](media/images/upload/git-3.png)\n\n-----\n\nAinsi après plusieurs versions du site, mon dossier d'historisation pourrait ressembler à celui ci-dessous. Mon dossier de travail serait sur la version courante.\n\n![Git étape 4](media/images/upload/git-4.png)\n\n-----\n\nNous venons de créer un système de version rudimentaire !\n\n\n\n### Créons un système de version centralisé\n\nImaginons maintenant qu'une seconde personne dans ma société rejoigne le développement du site. Pour travailler sur le même site que moi (Bruno), cette personne (Bob) copierait intégralement mon dossier `website`.\n\n![Git étape 5](media/images/upload/git-5.png)\n\n-----\n\nBruno pourrait très bien créer une version du site soleil pendant que Bob continuerait une version du site lune. Les deux dossiers pourraient donc ressembler respectivement à l'image ci-dessous. Bruno serait dans la version de travail `courante` et Bob serait revenu dans une version de travail `version-lune` pour une raison quelconque.\n\n![Git étape 6](media/images/upload/git-6.png)\n\n-----\n\nSi à présent nous souhaitions chacun pouvoir afficher l'état du travail de l'autre, nous devrions pouvoir différencier nos historiques de version, et chacun nous partager notre historique. Nous devrions alors adopter une structure comme celle ci-dessous. Nous pouvons d'ailleurs voir que si nous souhaitions afficher la `version-4` nous pourrions la prendre depuis n'importe quel historique puisque « les versions » `version-4` sont identiques.\n\n![Git étape 7](media/images/upload/git-7.png)\n\n-----\n\nPour ne pas avoir à chaque fois à copier le projet d'un ordinateur à l'autre (en prévisions des autres ordinateurs qui pourraient nous rejoindre), nous décidons de copier nos deux historiques de projet sur un serveur distant qui servirait de référence. À présent nous pouvons supprimer ce que nous voulons sur nos machines, il suffira à chaque fois d'aller récupérer l'original sur le serveur. À chaque fois que nous ferrons des modifications sur les historiques, nous prendrons soin de les monter sur le serveur. Pour avoir nos historiques à jour, il nous faudra également le demander au serveur. Pour finir, le serveur n'a pas d'espace de travail, il ne contient en fait que les historiques. C'est Bruno ou Bob qui choisissent ce qu'ils vont souhaiter afficher sur leur PC.\n\n![Git étape 8](media/images/upload/git-8.png)\n\n-----\n\nNous venons de créer Svn (Subversion), un système de version centralisé !\n\n\n\n### Créons un système de version distribué\n\nÀ présent un troisième développeur (Alice) veut également accéder au code du site pour le modifier. Alice ne fait pas partie de la société. La société ne souhaite pas qu'Alice puisse ajouter son historique au sien. La société souhaite cependant qu'elle puisse non seulement partir de son travail, mais aussi avoir accès à toutes les versions de celui-ci dans tous les historiques ! La société lui permet donc de copier l'intégralité du serveur... chez elle ! Dans l'exemple ci-dessous, Bruno ne travail par exemple plus sur la dernière version de son historique mais sur `version-soleil` et Alice travail sur la version `courante` de Bruno.\n\n![Git étape 9](media/images/upload/git-9.png)\n\n-----\n\nComme Alice travail maintenant sur son propre serveur, elle peut aménager ses historiques comme elle le souhaite. Tout le travail effectué après la copie sera versionner comme elle l'entend. Par exemple Alice pourra renommer l'historique `bruno` en historique `base`. Elle pourra supprimer l'historique de `bob` de son serveur ou encore copier l'historique `base` en historique `solune` et continuer son travail dans cet historique !\n\n![Git étape 10](media/images/upload/git-10.png)\n\n-----\n\nAjoutons à cela la possibilité\n\n- de reverser le travail effectué par Alice sur le serveur copié dans le serveur source ou de synchroniser le serveur copié avec les nouveautés du serveur source,\n- de directement se connecter à d'autres serveurs pour mettre à jour différents historiques ou encore\n- de fusionner le travail entre des historiques sur le même serveur ou même de serveur à serveur,\n\net vous venez de créer Git !\n\n![Réseau distribué](media/images/upload/networkDesign_xkl_com-mini.jpg)\n\nImaginez qu'il y a pleins de dépôts distants différents pour un même projet avec des tas de répliques et que sur chaque poste de travail on en trouve des clones avec une version de travail précise. Un poste de travail peut très bien avoir plusieurs dossiers provenant d'un même dépôt distant et dans des états de version différents.\n\nPour finir, en réalité, sur vos postes machines, ce que vous voyez en réalité ce n'est pas cela :\n\n![Git étape 2](media/images/upload/git-2.png)\n\nmais cela :\n\n![Git local](media/images/upload/git.png)\n\ncar tout est optimisé et rangé de manière à ne pas avoir la copie de toutes les versions, mais de pouvoir en sortir n'importe laquelle à partir des informations de « différence » d'un instantané (révision) à l'autre. On remarque d'ailleurs qu'une même révision peut exister dans deux branches différentes si celle-ci est une copie de l'autre à un certain point. Cela signifie que les branches « n'existe pas » mais sont une vue de Git pour présenter un groupement de révision. Il existe aussi des étiquettes (« tags ») qui permettent de réellement indiquer à partir de quel instantané on peut estimer qu'on en est à la version `vX.X.X` d'un dépôt ou utiliser des livrables (« release ») par exemple avec GitHub.\n\n\n\n\n\n## Gérer son projet Git avec une branche ##\n\nAvant de commencer, il me semble important de se rappeler que Git copie l'intégralité d'un dépôt (« repository ») distant (« remote ») en local et que la majorité des actions effectuées par l'outil de commande reviendra en réalité à uniquement changer votre dépôt local. Ainsi recherche, changement de version, changement de branche, tout sera très rapide !\n\nVoici un schéma interactif de toutes les interactions dans le système de gestion de version de Git, vous pourrez aisément constater les actions en local bien plus nombreuse que les autres. Cliquez sur un élément pour accéder à son descriptif ci-après.\n\n\u003cdiv class=\"transport\"\u003e\n  \u003cdiv class=\"commit-complete\" data-id=\"commit-a\"\u003e\n    \u003cspan\u003ecommit -a\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"add\" data-id=\"add\"\u003e\n    \u003cspan\u003eadd\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"commit\" data-id=\"commit\"\u003e\n    \u003cspan\u003ecommit\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"push\" data-id=\"push\"\u003e\n    \u003cspan\u003epush\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"pull\" data-id=\"pull-r-\"\u003e\n    \u003cspan\u003epull [-r]\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"fetch\" data-id=\"fetch\"\u003e\n    \u003cspan\u003efetch\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"merge\" data-id=\"merge-ou-rebase\"\u003e\n    \u003cspan\u003emerge \u003cem\u003eor\u003c/em\u003e rebase\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"checkout-head\" data-id=\"checkout\"\u003e\n    \u003cspan\u003echeckout HEAD\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"checkout\" data-id=\"checkout\"\u003e\n    \u003cspan\u003echeckout\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"reset\" data-id=\"reset\"\u003e\n    \u003cspan\u003ereset\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"reset-complete\" data-id=\"reset\"\u003e\n    \u003cspan\u003ereset\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"diff-head\" data-id=\"status-ou-diff\"\u003e\n    \u003cspan\u003ediff HEAD\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"diff\" data-id=\"status-ou-diff\"\u003e\n    \u003cspan\u003ediff\u003c/span\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"before-workspace\"\u003e\u003c/div\u003e\n  \u003cdiv class=\"workspace\"\u003e\n    \u003cdiv class=\"local\"\u003eLocal\u003c/div\u003e\n    \u003cdiv class=\"workspace-box\" data-id=\"workspace\"\u003e\n      \u003cspan\u003eWorkspace\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"index\"\u003e\n    \u003cdiv class=\"index-box\" data-id=\"index\"\u003e\n      \u003cspan\u003eIndex\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"local-repository\"\u003e\n    \u003cdiv class=\"internet\"\u003eInternet\u003c/div\u003e\n    \u003cdiv class=\"local-box\" data-id=\"local-repository\"\u003e\n      \u003cspan\u003eLocal Repository\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n  \u003cdiv class=\"remote-repository\"\u003e\n    \u003cdiv class=\"remote-box\" data-id=\"remote-repository\"\u003e\n      \u003cspan\u003eRemote Repository\u003c/span\u003e\n    \u003c/div\u003e\n  \u003c/div\u003e\n\u003c/div\u003e\n\n### Workspace ###\n\nLe *Workspace* ou *Working Tree* ou *Working Directory* est l'**espace de travail**. C'est une extraction unique d'une version du projet à partir de laquelle vous pouvez travailler. Ce dossier est stocké sur votre machine. Les fichiers ici sont soit identiques à la dernière révision enregistrée dans le dépôt local soit à l'état « Modifié ».\n\n### Index ###\n\nL'**index** ou *Staging Area* correspond à la liste complète des fichiers présents physiquement dans votre espace de travail qui ont été déclarés comme faisant partie de la prochaine révision que vous allez enregistrer. Il est donc possible qu'un fichier présent dans l'espace de travail ne soit pas présent dans l'index si vous ne l'avez pas ajouté. Les fichiers indexés sont dans un état « Indexé ».\n\n### Local Repository ###\n\nLe *Local Repository* est le **dépôt local**. C'est le dossier `.git` stocké dans votre espace de travail. C'est une réplique totale, sur votre machine, du dépôt distant. C'est dans le dépôt local que vous aller stocker vos révisions du projet. Le couple « .git » et l'espace de travail constitue ce que l'on appel le clone du dépôt distant. Les fichiers ici sont dans un état « Validé ».\n\n### Remote Repository ###\n\nLe *Remote Repository* est le **dépôt distant**. C'est le dossier dans lequel est stocké le projet sur le serveur qui fait office de référant. Vous ne pouvez pas directement modifier ces fichiers. C'est la référence lorsque vous clonez un projet sur votre environnement afin d'en créer une réplique local et d'en initialiser la révision la plus récente en tant qu'état des fichiers de l'espace de travail.\n\n### add ###\n\nUtiliser `add` permet d'ajouter des fichiers présent dans votre espace de travail vers l'index en prévisions d'une action futur vers un dépôt. Chaque fichier passe donc de l'état « Modifié » à « Indexé ».\n\n### reset ###\n\nUtiliser `reset` permet de retirer des fichiers de l'index ou annuler un instantané dans le dépôt local tout en conservant (ou non) les modifications faites. Pour annuler les modifications faites tout en laissant les index et dépôt local en place il faut utiliser `revert`.\n\n### commit ###\n\nUtiliser `commit` permet d'acter l'intégralité des fichiers de votre index dans le dépôt local en tant que nouvel révision. Chaque fichier passe donc d'« Indexé » à « Validé ».\n\n### commit -a ###\n\nUtiliser `commit -a` pour ajouter automatiquement la totalité des nouveaux fichiers à l'index puis les acter dans le dépôt local.\n\n### push ###\n\nUtiliser `push` pour monter et aligner l'intégralité des fichiers du dépôt local sur le dépôt distant.\n\n### fetch ###\n\nUtiliser `fetch` pour descendre et aligner l'intégralité des fichiers du dépôt local depuis votre dépôt distant.\n\n### merge ou rebase ###\n\nUtiliser `merge` pour fusionner les modifications présentent entre les fichiers de votre dernière révision et ceux rapatrier du dépôt distant (pour plus d'information sur la différence entre `merge` et `rebase` [voir ici](http://labs.excilys.com/2012/02/28/preparez-vous-a-reecrire-lhistoire-avec-git-rebase/)).\n\n### pull [-r] ###\n\nUtiliser `pull` pour descendre et ré-aligner les modifications présentent entre l'espace de travail, le dépôt local et le dépôt distant. En cas de conflit, l'action `fetch` aura été effectuée et vous devrez résoudre les conflits et utiliser `merge` vous même.\n\n### checkout ###\n\nUtiliser `checkout` permet d'extraire un instantané (une révision) et d'aligner l'espace de travail avec cet instantané du dépôt local depuis : la branche courante, une autre branche ou l'index.\n\n### status ou diff ###\n\nUtiliser `status` ou `diff` permet de comparer vos fichiers de l'espace de travail avec ceux de l'index ou du dépôt local. Vous pouvez ainsi voir ce qui a changé dans un comparateur de version.\n\n### stash ###\n\nUtiliser `stash` pour remiser l'état de votre espace de travail et de votre index dans la remise afin de ne pas perdre votre travail lors d'une extraction. Cela vous permet de ne pas acter un travail à moitié fini.\n\n\u003e Pour en savoir plus, vous pouvez lire [Les Bases de GIT](https://git-scm.com/book/fr/v2/Les-bases-de-Git-D%C3%A9marrer-un-d%C3%A9p%C3%B4t-Git) et plus particulièrement :\n- [Enregistrer des modifications dans le dépôt](https://git-scm.com/book/fr/v2/Les-bases-de-Git-Enregistrer-des-modifications-dans-le-d%C3%A9p%C3%B4t) et\n- [Travailler avec des dépôts distants](https://git-scm.com/book/fr/v2/Les-bases-de-Git-Travailler-avec-des-d%C3%A9p%C3%B4ts-distants)\n\n\n\n\n\n## Gérer son projet Git sur plusieurs branches ##\n\nComme créer une branche ne revient qu'à créer des aiguillages d'instantanés, cette opération est très rapide. Il ne faut donc pas hésiter à le faire ! Je vous propose ici une structure de travail avec plusieurs branches pour un projet afin de vous organiser en équipe.\n\nIl me semble que [la structure proposée par SmartGit](https://blogs.endjin.com/2015/01/using-smartgit-to-follow-the-gitflow-branching-and-workflow-model/) est pertinente aussi vais-je la décrire juste après ce schéma.\n\n![Model à plusieurs Branches](media/images/upload/GitFlowworkflow_thumb2.png)\n\nLe but d'une branche et sa position dans l'avancement du travail sur le projet depuis le développement jusqu'aux livrables doit être indiqué dans son nom, c'est pourquoi nous utiliserons les noms suivants :\n\n- **release/{nom de branche}** – chaque livrable est associé à une branche correspondant à une version final de l'application.\n- **master** – une branche permanente comme référence correspondant à la version définitive des modifications entre chaque version de l'application. Elle correspond donc à chaque instant à la dernière version de l'application.\n- **develop** – une branche permanente contenant l'avancement de l'application dans son ensemble au file des versions, avec des branches de fonctionnalités créées à partir de cette version et reversées dedans.\n- **feature/{nom de branche}** – chaque fonctionnalité correspond au travail sur un sujet particulier (ex: une correction de bug, une nouvelle fonctionnalité...).\n- **hotfix/{nom de branche}** – des branches pour s'occuper des fixes urgent à apporter qui seront prioritairement reversés dans le `master` puis reversés dans la `develop` en attendant de finir dans le prochain livrable.\n\n\u003e Pour en savoir plus, vous pouvez lire [Les Branches avec GIT](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Les-branches-en-bref).\net plus particulièrement :\n- [Branches et fusions](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Branches-et-fusions%C2%A0%3A-les-bases) et\n- [Rebaser](https://git-scm.com/book/fr/v2/Les-branches-avec-Git-Rebaser-Rebasing)\n\n\n\n\n\n## Partagez avec le monde : bienvenue sur GitHub\n\nParce que mettre en place des serveurs Git vous-même est fastidieux, vous pouvez utiliser le plus grand réseau distribué de projet au monde, GitHub. Pour utiliser Git et GitHub au mieux il va être nécessaire de bien associer le vocabulaire de Git avec les exemples que nous avons précédemment décrit.\n\n![Git étape 10](media/images/upload/git-10.png)\n\nFaisons comme si tous les serveurs de notre exemple précédent était sur GitHub. Une société quelconque partage un projet sur GitHub et vous découvrez Git et GitHub en tant qu'Alice pour travailler avec le projet de cette société.\n\n![Réseau GitHub](media/images/upload/github.png)\n\nVoici ce que nous pouvons dire de l'image ci-dessus avec le vocabulaire Git(Hub) :\n\n- Nous sommes l'utilisateur Alice.\n- Sur notre PC, notre dépôt local (« local repository ») dans le dossier `website` à un espace de travail (« workspace ») qui pointe sur la révision (« commit ») `9696190` de la branche (« branch ») `solune`.\n- La dernière révision de la branche `solune` est `9696190`, c'est pourquoi on peut également dire que c'est `HEAD`.\n- Comme le pointeur du dossier est sur `HEAD`, cela signifie que nous sommes sur la branche `solune` en elle-même (sa version la plus à jour).\n- Depuis le poste d'Alice, la source (« remote ») depuis laquelle elle a fait un clone sur son poste est `www.github.com/alice/website`.\n- Un alias de `www.github.com/alice/website` pour le dépôt local d'Alice est `origin`.\n- Alice a fait une réplique (« fork ») de `www.github.com/society/website` vers `www.github.com/alice/website`\n- Le dépôt distant de Alice (aliasé « origin » pour son poste) possède les branches `base` et `solune`. Elle a donc ajouté/supprimé des branches après la réplication (sinon elle aurait les mêmes que celle de `www.github.com/society/website`).\n- Depuis le poste d'Alice, le dépôt distant `www.github.com/society/website` a pour alias `upstream`.\n- Si Alice monte (« push ») les modifications actés (« commited ») en local, une nouvelle révision va s'ajouter. Sa `HEAD` va être déplacée sur cette nouvelle révision.\n- Si Alice précise le serveur `upstream` comme destination de la monté, alors sa branche `solune` sera ajoutée aux branches sur le serveur `www.github.com/society/website` et pas sur `www.github.com/alice/website`.\n- Comme Bruno est sur une révision qui n'est pas une `HEAD`, il n'est pas sur une branche. Il est sur une branche détachée (« detached branch »). S'il modifie des choses ici, il devra les acter dans une `HEAD` et donc créer une nouvelle branche pour avoir une nouvelle `HEAD`.\n- Si la branche `bruno` reçoit de nouvelles révisions, alors si Alice veut mettre à jour sa branche `base`, elle devra faire une récupération (« fetch ») puis une fusion sur sa `HEAD` pour créer une nouvelle révision. Il faudra ensuite acter cela sous un nouvelle révision (ce qui déplacera la `HEAD` dessus).\n- Si Alice veut proposer des changements de sa branche `origin/base` à ré-introduire dans la branche `upstream/bruno` elle peut faire une proposition de fusion (« pull request »). Bruno pourra ensuite décider d'accepter ou refuser sa proposition, ou de lui demander des ajustements.\n\nEtc.\n\n\n\n### Index de termes\n\nIl existe encore énormément de cas de figure et voici un petit index pour mieux appréhender ceux-ci en fonction de la langue de votre interlocuteur.\n\n- **dépôt** (repository/*repo*) : ensemble de données constituant un projet et la totalité de ses historiques de modification.\n- **dépôt local** (local repository) : ensemble des historiques (`.git`) et de l'espace de travail sur une machine cliente.\n- **dépôt distant** (remote repository) : ensemble des historiques sur une machine serveur.\n- **révision/instantané** (commit) : entrée d'historisation créant un instantané de l'état du projet à un moment donné.\n- **acter** (to commit/*commiter*) : action de créer un instantané.\n- **branche** (branch) : ensemble de révisions formant un historique.\n- **branche principale** (master branch) : nom donné à la branche par défaut lors de la création d'un dépôt.\n- **réplique** (fork) : copie d'un dépôt distant à une autre adresse serveur. Cette copie pourra ensuite avoir des divergences avec l'original et recouper des similitudes.\n- **répliquer** (to fork/*forker*) : action de faire une réplique.\n- **clone** : copie d'un dépôt distant sur une machine en local. Créer le `.git` et l'espace de travail sur la révision courante.\n- **cloner** (to clone) : action de faire un clone.\n- **récupérer** (to fetch) : action de descendre l'état du dépôt distant dans le dépôt local `.git`.\n- **fusionner** (to merge/*merger* — to rebase/*rebaser*) : action de fusionner deux branches (local ou distante) sur une machine cliente.\n- **descendre** (to pull/*puller*) : action de récupérer l'état du dépôt distant et de fusionner la branche de travail avec.\n- **monter** (to push/*pusher*) : action d'aligner les révisions du dépôt distant avec les derniers ajouts de révision de votre dépôt local.\n- **proposition de fusion** (pull request/PR) : proposer la fusion de deux branches différentes (du même projet ou entre réplique).\n- **origine** (origin) : alias attribué à la réplique depuis laquelle vous avez fait un clone.\n- **référent** (upstream) : alias attribué à la réplique originale depuis laquelle la votre a été faites.\n- **HEAD** : alias de la révision utilisé comme état courant d'une branche.\n\n\n\n\n\n## Avant de finir\n\nCette article étant également un aide mémoire, toute remarque pertinente que vous souhaiteriez y apporter peut-être discuté dans les commentaires ci-dessous ! N'hésitez pas !","dates":{"published":{"$date":"2017-05-30T13:10:00.000Z"},"updated":[]},"description":"Si Svn (Subversion) est la version « client-server » d'un système de gestion de version, alors Git en est sans conteste la version « peer-to-peer ».","image":"https://blog.lesieur.name/media/images/upload/networkDesign_xkl_com.jpg","others":{"markdown":true,"published":true},"script":"var links = document.querySelectorAll(\".workspace-box, .index-box, .local-box, .remote-box, .add, .commit-complete, .commit, .push, .pull, .merge, .fetch, .checkout, .checkout-head, .diff, .diff-head, .reset, .reset-complete\");\n\n[].forEach.call(links, function (link) {\n  link.addEventListener(\"click\", function () {\n    location.href = \"./comprendre-et-utiliser-git-avec-vos-projets/#\" + link.getAttribute(\"data-id\");\n  });\n});","stylesheet":"body {\n  overflow-x: hidden;\n}\n.article img {\n  max-width: 100%;\n}\nspan {\n  text-shadow: -1px -1px 2px #fff, 1px 1px 2px #fff, -1px 1px 2px #fff, 1px -1px 2px #fff;\n}\n.transport {\n  position: relative;\n  width: 100%;\n  height: 600px;\n}\n.before-workspace,\n.workspace,\n.index,\n.local-repository,\n.remote-repository {\n  border-right: 4px solid #9b9b9b;\n  position: absolute;\n  top: 2%;\n  height: 96%;\n}\n.before-workspace,\n.remote-repository {\n  width: calc(5% - 4px);\n}\n.workspace,\n.index,\n.local-repository {\n  width: calc(30% - 4px);\n}\n.workspace::before,\n.index::before,\n.local-repository::before,\n.remote-repository::before {\n  content: \"\";\n  width: 100px;\n  height: 30px;\n  border-radius: 50% 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  top: calc(41% + 30px);\n}\n.workspace {\n  left: 5%;\n  border-right: 4px dashed #ccc;\n}\n.workspace::before {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n}\n.index {\n  left: 35%;\n  top: 0;\n  height: 100%;\n}\n.index::before {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n}\n.local-repository {\n  left: 65%;\n  background-color: #eee;\n}\n.local-repository::before {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n}\n.local,\n.internet {\n  text-align: center;\n  margin-top: 5px;\n  font-weight: bold;\n}\n.local {\n  position: absolute;\n  left: 100%;\n  transform: translateX(-50%);\n}\n.remote-repository {\n  left: 95%;\n  border-right: 0;\n}\n.remote-repository::before {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n}\n.workspace-box,\n.index-box,\n.local-box,\n.remote-box {\n  position: absolute;\n  height: 60px;\n  width: 100px;\n  top: 41%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n}\n.workspace-box:hover,\n.index-box:hover,\n.local-box:hover,\n.remote-box:hover {\n  box-shadow: 0 -3px 5px #555;\n  cursor: pointer;\n}\n.workspace-box:hover::before,\n.index-box:hover::before,\n.local-box:hover::before,\n.remote-box:hover::before {\n  box-shadow: 0 -2px 2px #999;\n}\n.workspace-box::before,\n.index-box::before,\n.local-box::before,\n.remote-box::before {\n  content: \"\";\n  width: 100%;\n  height: 30px;\n  border-radius: 50% 50%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n}\n.workspace-box span,\n.index-box span,\n.local-box span,\n.remote-box span {\n  position: absolute;\n  top: calc(50% + 10px);\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.workspace-box {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.workspace-box::before {\n  background-color: #e6e6e6;\n  border: 2px solid #9b9b9b;\n}\n.index-box {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.index-box::before {\n  background-color: #91ffff;\n  border: 2px solid #9b9b9b;\n}\n.local-box {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.local-box::before {\n  background-color: #8ffab6;\n  border: 2px solid #9b9b9b;\n}\n.remote-box {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n  border-bottom: 0;\n}\n.remote-box::before {\n  background-color: #fff7a1;\n  border: 2px solid #9b9b9b;\n}\n.push,\n.add,\n.commit,\n.commit-complete {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.push:hover,\n.add:hover,\n.commit:hover,\n.commit-complete:hover {\n  box-shadow: -2px 0 5px #555;\n  cursor: pointer;\n}\n.push:hover::before,\n.add:hover::before,\n.commit:hover::before,\n.commit-complete:hover::before {\n  box-shadow: 2px -2px 2px #999;\n}\n.push::before,\n.add::before,\n.commit::before,\n.commit-complete::before {\n  content: \"\";\n  position: absolute;\n  border-top: 1px solid #9b9b9b;\n  border-right: 1px solid #9b9b9b;\n  width: 30px;\n  height: 30px;\n  transform: translateY(-50%) rotate(45deg);\n  top: 50%;\n  right: -10px;\n}\n.push span,\n.add span,\n.commit span,\n.commit-complete span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.diff-branch,\n.diff-head,\n.diff {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.diff-branch:hover,\n.diff-head:hover,\n.diff:hover {\n  box-shadow: 2px 0 5px #555;\n  cursor: pointer;\n}\n.diff-branch:hover::before,\n.diff-head:hover::before,\n.diff:hover::before {\n  box-shadow: -2px 2px 2px #999;\n}\n.diff-branch span,\n.diff-head span,\n.diff span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.reset-complete,\n.reset,\n.merge,\n.checkout-head,\n.checkout,\n.fetch,\n.pull {\n  border-top: 1px solid #9b9b9b;\n  border-bottom: 1px solid #9b9b9b;\n  z-index: 2;\n  height: 25px;\n  position: absolute;\n}\n.reset-complete:hover,\n.reset:hover,\n.merge:hover,\n.checkout-head:hover,\n.checkout:hover,\n.fetch:hover,\n.pull:hover {\n  box-shadow: 2px 0 5px #555;\n  cursor: pointer;\n}\n.reset-complete:hover::before,\n.reset:hover::before,\n.merge:hover::before,\n.checkout-head:hover::before,\n.checkout:hover::before,\n.fetch:hover::before,\n.pull:hover::before {\n  box-shadow: -2px 2px 2px #999;\n}\n.reset-complete::before,\n.reset::before,\n.merge::before,\n.checkout-head::before,\n.checkout::before,\n.fetch::before,\n.pull::before {\n  content: \"\";\n  position: absolute;\n  border-bottom: 1px solid #9b9b9b;\n  border-left: 1px solid #9b9b9b;\n  width: 30px;\n  height: 30px;\n  transform: translateY(-50%) rotate(45deg);\n  top: 50%;\n  left: -10px;\n}\n.reset-complete span,\n.reset span,\n.merge span,\n.checkout-head span,\n.checkout span,\n.fetch span,\n.pull span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.commit-complete {\n  width: calc(60% - 14px);\n  top: 7%;\n  background-color: #8ffab6;\n  left: calc(5% - 2px);\n}\n.commit-complete::before {\n  background-color: #8ffab6;\n}\n.add {\n  width: calc(30% - 14px);\n  top: 21%;\n  background-color: #91ffff;\n  left: calc(5% - 2px);\n}\n.add::before {\n  background-color: #91ffff;\n}\n.commit {\n  width: calc(30% - 14px);\n  top: 24%;\n  background-color: #8ffab6;\n  left: calc(35% - 2px);\n}\n.commit::before {\n  background-color: #8ffab6;\n}\n.push {\n  width: calc(30% - 14px);\n  top: 16%;\n  background-color: #fff7a1;\n  left: calc(65% - 2px);\n}\n.push::before {\n  background-color: #fff7a1;\n}\n.pull {\n  width: calc(90% - 14px);\n  top: 60%;\n  background-color: #fff7a1;\n  left: calc(5% + 12px);\n}\n.pull::before {\n  background-color: #fff7a1;\n}\n.fetch {\n  width: calc(30% - 14px);\n  top: 52%;\n  background-color: #fff7a1;\n  left: calc(65% + 12px);\n}\n.fetch::before {\n  background-color: #fff7a1;\n}\n.merge {\n  width: calc(60% - 14px);\n  top: 52%;\n  background-color: #8ffab6;\n  left: calc(5% + 12px);\n}\n.merge::before {\n  background-color: #8ffab6;\n}\n.checkout-head {\n  width: calc(60% - 14px);\n  top: 76%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.checkout-head::before {\n  background-color: #f68183;\n}\n.reset {\n  width: calc(30% - 14px);\n  top: 27%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.reset::before {\n  background-color: #f68183;\n}\n.reset-complete {\n  width: calc(60% - 14px);\n  top: 13%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.reset-complete::before {\n  background-color: #f68183;\n}\n.checkout {\n  width: calc(30% - 14px);\n  top: 68%;\n  background-color: #f68183;\n  left: calc(5% + 12px);\n}\n.checkout::before {\n  background-color: #f68183;\n}\n.diff-head {\n  width: calc(60%);\n  top: 90%;\n  background-color: #ccc;\n  left: calc(5% - 2px);\n}\n.diff-head::before {\n  background-color: #ccc;\n}\n.diff {\n  width: calc(30%);\n  top: 83%;\n  background-color: #ccc;\n  left: calc(5% - 2px);\n}\n.diff::before {\n  background-color: #ccc;\n}","title":"Et si vous compreniez enfin Git et GitHub ?","urn":"comprendre-et-utiliser-git-avec-vos-projets"}
{"_id":{"$oid":"58218758e24e70605a985109"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"J'en vois déjà venir d'assez loin : « les iFrames c'est old school ». Ça me rappel l'époque ou les Frames « c'était old school ». Pour les gars du fond, une iFrame permet d'insérer dans la page courante d'un site le contenu complet d'une autre page. Et si vous ne vous y intéressez plus car vous n'en voyez pas l'intérêt, sachez que d'autres peuvent le voir.\n\nEffectivement, vous n'êtes pas à l'abri de retrouver une page de votre site dans l'iFrame d'un autre site. À partir de là, pas mal de scénarios sont envisageables ; du moins dérangeant comme la solicitiation de votre serveur à chaque fois que la page du site embarquant votre page est réclamée aux plus génants comme le [détournement de clic](https://fr.wikipedia.org/wiki/D%C3%A9tournement_de_clic) (clickjacking).\n\n\n\n\n\n## Contenu d'un site distant dans une iFrame ##\n\nPour illustrer le cas de figure par défault (on ne demande rien de précis au serveur contre les iFrames), nous allons utiliser le simple code suivant qui va embarquer une page de [Wikipedia](https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal) :\n\n**HTML**\n\n```html\n\u003ciframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"\u003e\u003c/iframe\u003e\n```\n\n**Résultat**\n\n\u003e \u003ciframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"\u003e\u003c/iframe\u003e\n\nCela signifie qu'à chaque fois que vous lirez cet article, des requêtes seront faites aux serveurs hébergeant Wikipedia pour l'afficher dans cette page. Pas très génant (sauf si le site en question n'a pas une bande passante illimité par mois).\n\n### Petit exemple de détournement de clic ###\n\nAvec le changement de code suivant, nous allons nous amuser à modifier la page. Nous allons voir facilement en haut à gauche le texte « WikiMOI HA HA ! » et cliquer dessus reviendra sur cet article. Mais on pourrait tout aussi bien vous faire croire que vous allez faire un don à Wikipedia...\n\nPour voir cela, il faudra au préalable cliquer sur « Tricher ! ».\n\n**HTML**\n\n```html\n\u003cbutton\u003eTricher !\u003c/button\u003e\n\u003cdiv\u003eWikiMOI\u003cbr\u003eHA HA !\u003c/div\u003e\n\u003ciframe src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"\u003e\u003c/iframe\u003e\n```\n\n**CSS**\n\n```css\ndiv {\n\u0009display: none;\n}\n.fake {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    left: 0;\n}\n.fake-div {\n    display: block;\n    position: fixed;\n    width: 160px;\n    top: 119px;\n    left: 2px;\n    z-index: 1001;\n    background-color: #f6f6f6;\n    text-align: center;\n    font-weight: bold;\n    color: #f00;\n    font-family: arial;\n    font-size: 20px;\n    cursor: pointer;\n}\n```\n\n**JS**\n\n```js\n// Mettre en place la triche.\ndocument.getElementsByTagName(\"button\")[0].addEventListener(\"click\", function () {\n\u0009document.getElementsByTagName(\"iframe\")[0].classList.add(\"fake\");\n\u0009document.getElementsByTagName(\"div\")[0].classList.add(\"fake-div\");\n});\n// Détournement de clique !!! (Ici on revient en arrière)\ndocument.getElementsByTagName(\"div\")[0].addEventListener(\"click\", function () {\n\u0009document.getElementsByTagName(\"iframe\")[0].classList.remove(\"fake\");\n\u0009document.getElementsByTagName(\"div\")[0].classList.remove(\"fake-div\");\n});\n```\n\n**Résultat**\n\n**Cliquez sur le bouton « Tricher ! »**\n\n\u003e \u003cbutton class=\"example-button\"\u003eTricher !\u003c/button\u003e\n\u003e \u003cdiv class=\"example-div\"\u003eWikiMOI\u003cbr\u003eHA HA !\u003c/div\u003e\n\u003e \u003ciframe class=\"example-iframe\" src=\"https://fr.wikipedia.org/wiki/Wikip%C3%A9dia:Accueil_principal\" width=\"100%\" height=\"200px\" scrolling=\"no\"\u003e\u003c/iframe\u003e\n\nOn constate assez facilement que permettre l'affichage de votre site par d'autre site peut poser problème si vous n'avez pas confiance en ces sites.\n\n\n\n\n\n## X-Frame-Options : afficher votre site dans une iFrame ##\n\nPour décider vous même quels sont les sites qui vont pouvoir ou non afficher une de vos pages dans une iFrame, vous aller pouvoir utiliser l'en-tête HTTP `X-Frame-Options` ([RFC 7034](https://datatracker.ietf.org/doc/rfc7034/)).\n\n`X-Frame-Options` est une en-tête HTTP, ce qui signifie qu'il se trouvera dans la réponse HTTP du serveur quand celui-ci répondra à la requête d'un navigateur pour afficher une page.\n\nDonc, dans le cas précédent, c'est au site Wikipedia d'ajouter cette en-tête sur ses pages pour que, si elles sont réclamées dans une iFrame, celles-ci ne puissent pas s'afficher.\n\n\n\n### Valeurs de X-Frame-Options ###\n\nLes deux options de base sont `SAMEORIGIN` et `DENY` et sont supportées par :\n\n- Google Chrome 4+\n- Internet Explorer 8+\n- Safari 4+\n- Mozilla Firefox 3.6+\n\nIl existe une troisième option `ALLOW-FROM` qui permet de choisir exactement qui peut ou non afficher le contenu. Voyons cela en détail.\n\n#### SAMEORIGIN ####\n\nL'en-tête suivante `X-Frame-Options: SAMEORIGIN` ajouter aux en-têtes HTTP d'une réponse de page va autoriser celle-ci à être affichée dans une iFrame uniquement si la page l'appelant se trouve sur le même nom de domaine. Dans notre cas précédent, si Wikipédia utilisait cette en-tête, seule une page de Wikipedia pourrait l'afficher dans une iFrame et aucun autre site.\n\n#### DENY ####\n\nL'en-tête suivante `X-Frame-Options: DENY` ajouter aux en-têtes HTTP d'une réponse de page est rédibitoire. Elle signifie que peut importe qui demande à afficher la page dans une iFrame, celle-ci ne s'affichera pas, même si elle appartient au même domaine.\n\n#### ALLOW-FROM ####\n\nL'en-tête suivante `X-Frame-Options: ALLOW-FROM www.domain.com` ajouter aux en-têtes HTTP d'une réponse de page va autoriser celle-ci à être affichée dans une iFrame du site `www.domain.com`. Cela est effectivement le cas pour mon blog.\n\n![Exemple sur ce Blog](media/images/upload/x-frame-options.jpg)\n\nSi vous vérifiez les en-têtes HTTP de la réponse de [l'article « NodeAtlas, le Framework JavaScript MVC(2), SEO et W3C compliant »](https://blog.lesieur.name/nodeatlas-le-framework-nodejs-mvc2-oriente-front-end/), vous constaterez qu'il y a bien une en-tête HTTP `X-Frame-Options: ALLOW-FROM https://www.lesieur.name/` ce qui permet à [la page de présentation de NodeAtlas](https://www.lesieur.name/node-atlas/) de mon portfolio de l'afficher dans une iFrame.\n\n\n\n### Les navigateurs refusent l'affichage ###\n\nComprenez bien que ce mécanisme fonctionne car les navigateurs ont pour ordre de ne pas afficher un contenu dans une iFrame s'ils ne trouvent pas l'en-tête HTTP `X-Frame-Options` autorisant l'affichage de se contenu (ou aucune en-tête `X-Frame-Options`). Cela est donc une sécurité pour le client final en ce qui concerne le détournement de clic mais pas pour la charge serveur puisque quoi qu'il arrive, il répondra au navigateur.\n\n\n\n### Différent comportement par navigateur ###\n\nÀ titre d'exemple, Firefox n'affichera rien mais indiquera dans la console le soucis alors que Edge affichera un message comme celui-ci : « Nous ne pouvons pas afficher ce contenu dans un cadre ».\n\n\n\n\n\n## Content-Security-Policy et Webkit ##\n\nCependant `ALLOW-FROM` n'est pas reconnue par Webkit ce qui conduit à l'erreur suivante `Invalid 'X-Frame-Options' header encountered when loading 'www.domain.com/example': 'ALLOW-FROM www.domain.com' is not a recognized directive. The header will be ignored.` et donc autorise l'affichage de l'iFrame par tout le monde.\n\nIl faut dans ce cas se tourner vers l'en-tête HTTP `Content-Security-Policy: frame-ancestors www.domain.com` pour qu'un mécanisme similaire fonctionne.\n\n\n\n\n\n## Exemple d'utilisation avec NodeAtlas ##\n\nVous pouvez bien entendu utiliser ses en-têtes avec Apache, nginx ou directement dans votre code PHP, Ruby, etc.\n\nNous allons voir ici comment cela se traduit en JavaScript côté serveur avec le module npm [node-atlas](https://www.npmjs.com/package/node-atlas) de [Node.js](https://nodejs.org/).\n\n[NodeAtlas](https://node-atlas.js.org/) est un Framework JavaScript MVC(2) côté serveur vous permettant de créer des sites évolutifs, SEO-compliant et W3C-compliant. À ce titre il peut également utiliser les mécanismes précédemment cités, voici comment :\n\n### Par page, avec le webconfig ###\n\n**webconfig.json** par exemple\n\n```json\n{\n\u0009\"routes\": {\n\u0009\u0009\"/\": {\u0009\n\u0009\u0009\u0009\"view\": \"index.htm\",\n\u0009\u0009\u0009\"headers\": {\n\u0009        \u0009\"X-Frame-Origins\": \"ALLOW-FROM www.lesieur.name\",\n\u0009            \"Content-Security-Policy\": \"frame-ancestors www.lesieur.name\"\n\u0009        }\n\u0009\u0009}\n\u0009}\n}\n```\n\n### Tout le site, avec le webconfig ###\n\n```json\n{\n\u0009\"headers\": {\n    \u0009\"X-Frame-Origins\": \"ALLOW-FROM www.lesieur.name\",\n        \"Content-Security-Policy\": \"frame-ancestors www.lesieur.name\"\n    }\n\u0009\"routes\": {\n\u0009\u0009\"/\": \"index.htm\"\n\u0009}\n}\n```\n\n### Par page, avec le contrôleur spécifique ###\n\n**controllers/index.js** par exemple\n\n```js\nexports.changeVariations = function (next, locals, request, response) {\n\n\u0009response.setHeader(\"X-Frame-Options\", \"ALLOW-FROM www.lesieur.name\");\n\u0009response.setHeader(\"Content-Security-Policy\", \"frame-ancestors www.lesieur.name\");\n\n\u0009next();\n};\n```\n\n### Tout le site, avec le contrôleur commun ###\n\n**controllers/common.js** par exemple\n\n```js\nexports.setConfigurations = function (next) {\n\u0009var NA = this;\n\n\u0009NA.express.use(function (request, response, next) {\n\u0009\u0009response.setHeader(\"X-Frame-Options\", \"ALLOW-FROM www.lesieur.name\");\n\u0009\u0009response.setHeader(\"Content-Security-Policy\", \"frame-ancestors www.lesieur.name\");\n\u0009\u0009next();\n\u0009});\n\n\u0009next();\n};\n```","dates":{"published":{"$date":"2016-11-08T10:05:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"document.getElementsByClassName(\"example-button\")[0].addEventListener(\"click\", function () {\n\u0009document.getElementsByClassName(\"example-iframe\")[0].classList.add(\"example-fake\");\n\u0009document.getElementsByClassName(\"example-div\")[0].classList.add(\"example-div-fake\");\n});\ndocument.getElementsByClassName(\"example-div\")[0].addEventListener(\"click\", function () {\n\u0009document.getElementsByClassName(\"example-iframe\")[0].classList.remove(\"example-fake\");\n\u0009document.getElementsByClassName(\"example-div\")[0].classList.remove(\"example-div-fake\");\n});","stylesheet":".article img {\n    max-width: 100%;\n}\n.example-div {\n        display: none;\n}\n.example-fake {\n        display: block;\n\u0009width: 100%;\n\u0009height: 100%;\n\u0009overflow: hidden;\n\u0009position: fixed;\n\u0009top: 0;\n\u0009left: 0;\n\u0009z-index: 1000;\n}\n.example-div-fake {\n    position: fixed;\n    width: 160px;\n    top: 119px;\n    left: 2px;\n    z-index: 1001;\n    display: block;\n    background-color: #f6f6f6;\n    text-align: center;\n    font-weight: bold;\n    color: #f00;\n    font-family: arial;\n    font-size: 20px;\n    cursor: pointer;\n}","title":"Éviter le détournement de clic par iFrame de votre site","urn":"manager-les-iframes-sortantes-de-votre-site"}
{"_id":{"$oid":"582af36766270c792a24409a"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cc"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"582b242b05a1bb41c727277a"},{"$oid":"56c4ad05675345bb2d63fcec"},{"$oid":"582b2197ac185f8972f30bcb"},{"$oid":"59fdacbd2b61d5b1b9125d8d"}],"content":"Vue.js est un framework JavaScript client progressif permettant de créer, maintenir et évoluer des interfaces utilisateurs en liant les données utilisées entre la Vue et le Model. C'est une alternative sérieuse à React, Angular et les autres frameworks MVVM (Modèle Vue VueModèle).\n\n\u003cimg src=\"./media/images/upload/vue.png\" width=\"400\" height=\"400\" alt=\"Vue.js\" style=\"max-width: 100%;height: auto;\"\u003e\n\nJ'ai eut l'occasion d'[essayer Vue.js dans sa version 1](https://blog.lesieur.name/liste-des-cartes-munchkin-editions-francaises/) et son extrême simplicité et flexibilité m'a séduite. À l’instar de [NodeAtlas], sa puissance vient de ses fonctionnalités intégrables de manière évolutives et versatiles ; on peut tout aussi bien utiliser [Vue] simplement sur le formulaire d'une page ou à plus grande échelle avec des composants et du routage à travers l'architecture d'un site complet.\n\nCependant, là où en version 1, [Vue] paraissait une alternative séduisante à [AngularJS] (aka Angular 1) ou [Knockout], dans sa version 2 il devient de plus une alternative sérieuse à [Angular] (aka Angular 2), [React] et les autres frameworks MVVM tant sur le plan des fonctionnalités que des performances.\n\n**Pour faire simple —si vous débarquez dans le monde des framework JavaScript client MVVM et que vous ne savez pas quoi choisir— vous devriez choisir [Vue] ! Quoi qu'il arrive, il sera un choix pertinent pour les cas d'utilisation que vous en ferrez.**\n\nNous allons dans cet article :\n\n1. rapidement exposer pourquoi vous devriez utiliser [Vue] en lieu et place de [Angular] ou [React] dès maintenant et\n2. lire la traduction des explications approfondies à propos des différences entre [Vue] et les autres frameworks.\n\n[Vue]: https://vuejs.org/ \"Vue.js version 2\"\n[Weex]: https://alibaba.github.io/weex/ \"Weex\"\n[NodeAtlas]: http://haeresis.github.io/NodeAtlas/ \"NodeAtlas\"\n[AngularJS]: https://angularjs.org/ \"Angular version 1\"\n[Angular]: https://angular.io/ \"Angular version 2\"\n[React]: https://facebook.github.io/react/ \"React\"\n[ReactNative]: https://facebook.github.io/react-native/ \"React Native\"\n[Knockout]: http://knockoutjs.com/ \"Knockout\"\n[Vuex]: http://vuex.vuejs.org/en/intro.html \"Vuex\"\n[Redux]: http://redux.js.org/ \"Redux\"\n\n\n\n\n\n## tl;dr - Pourquoi Vue.js ? ##\n\nRapidement, [Vue] version 2 c'est de :\n\n- la **Performance** : un DOM virtuel comme [React] pour augmenter sa réactivité à un taux de performance inégalable.\n- la **Versatilité** : une manipulation des Vues avec des directives\n   - comme [AngularJS] compatibles avec une utilisation de templates directement basé sur le DOM réel ou sur une représentation en chaines de caractères JavaScript du DOM réel.\n   - comme [React] directement via la manipulation d'objet JavaScript de DOM virtuel ou même avec JSX.\n- la **Simpliticé** : une utilisation simple et indépendante comme c'est le cas pour [AngularJS] ou [Knockout].\n- la **Robustesse** : une utilisation complexe et structuré comme c'est le cas pour [Angular] ou [React].\n- l'**Évolutivité** : une compatibilité entre version 1 et version 2 très proche là où [AngularJS] vs [Angular] sont difficilement compatibles.\n- la **Complémentarité** : un modèle de gestion des états à l’instar des couples [React] / [Redux] nous avons [Vue] / [Vuex].\n- la **Mobilité** : Un activateur de rendu de code mobile natif sur iOS et Android pour [Vue] avec [Weex] ou [NativeScript Vue](https://nativescript-vue.org/) comme [React Native] l'est pour [React].\n- la **Maintenabilité** : [Vue] vient avec des outils lui permettant, entre autre, d'être déboguer, de créer des squelettes de site tout près, etc. comme [React] ou [Angular].\n\n\n\n\n\n## Vue.js : comparaison avec les autres Frameworks ##\n\nJe vous laisse profiter de la traduction française du très intéressant billet de [Vue] concernant Vue comparer aux autres Frameworks JavaScript MVVM.\n\n\u003e [Vue : Comparaison avec les autres Frameworks](https://fr.vuejs.org/v2/guide/comparison.html)","dates":{"published":{"$date":"2016-11-15T09:37:00.000Z"},"updated":[]},"description":"Vue.js est un framework JavaScript client progressif permettant de créer, maintenir et évoluer des interfaces utilisateurs en liant les données utilisées entre la Vue et le Model.","image":"https://blog.lesieur.name/media/images/upload/vue.png","others":{"markdown":true,"published":true},"script":"","stylesheet":".article img {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 100%;\n    display: block;\n}\n.article ul ul {\n    margin-top: 0;\n}","title":"Vue.js vs React vs Angular vs les autres MVVM","urn":"vuejs-versus-angular-versus-react-versus-les-autres-mvvm"}
{"_id":{"$oid":"583ea37f66270c792a24409b"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"582b242b05a1bb41c727277a"},{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"5310456355dfd5f7698d48ce"},{"$oid":"54f042102ae5a068f260dae2"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"582b22f1fa290e086423e837"}],"content":"Nous allons voir dans cet article comment faire du rendu côté serveur ou *__SSR__ (Server-Side Render)* avec le framework JavaScript client *__MVVM__ (Modèle-Vue-Vue Modèle)* __[Vue]__ couplé au framework JavaScript serveur *__MVC(2)__ (Model View Controller)* __[NodeAtlas]__ !\n\n[Vue]: https://vuejs.org/ \"Partie Cliente pour le SSR\"\n[NodeAtlas]: https://node-atlas.js.org/ \"Partie Serveur pour le SSR\"\n[jQuery]: https://jquery.com/ \"Manipulateur de DOM\"\n[Vanilla JS]: https://blog.lesieur.name/vanilla-js-france/ \"Manipulateur de DOM\"\n\nAlors ce titre parle peut-être aux habitués des architectures clientes MVVM qui ont des difficultés avec le référencement et semble peut-être barbare pour d'autres. Lançons-nous dans une petite explication histoire de rendre cet article intéressant également pour les néophytes : comprenons le problème et trouvons la solution à travers cette page.\n\n\u003e **Quel est le problème traité dans cet article ?**\n\u003e \n\u003e Le problème avec les frameworks MVVM client est qu'ils construisent le site *à partir de rien*. Fouillez la source du code de la réponse HTTP de la page courante, celle lue par les indexeurs de contenus ou les navigateurs sans JavaScript ; il n'y a rien. Aussi, si je crée une liste d'actions futures pour la *roadmap* de ma super App, et que je souhaite pouvoir manipuler aisément (ajout et retrait) ses éléments grâce à un coupleur de données vue-modèle ; le revers de la médaille sera que les informations utilisées pour cette construction proviendront de fichiers JavaScript ou morceaux de HTML qui ne veulent rien dire pour les indexeurs où même les validateurs de page. Vos sites sont donc souvent « SEO merdiques » et « W3C bancales ».\n\u003e \n\u003e **Quelle solution ?**\n\u003e \n\u003e Le SSR ou Rendu Côté Serveur. Voyons ça au travers de cette page exemple avec [Vue] et [NodeAtlas] !\n\n\n\n\n\n## Vue et NodeAtlas ##\n\nTout d'abord [Vue] et [NodeAtlas] sont tous les deux écrits en JavaScript et tournent avec un moteur JavaScript. [Vue] tourne grâce au moteur JS embarqué dans les navigateurs, [NodeAtlas] tourne grâce au moteur serveur JS installé avec Node.js. Oui, on parle bien ici d'un développement intégral avec HTML, CSS et JavaScript **seulement**.\n\nNous avons ici deux frameworks aux rôles complémentaires :\n\n![Vue](https://fr.vuejs.org/images/logo.png)\n\n- [Vue] (**vue.js**) est un *data-binder* simple (équivalent à Angular ou Riot mais bien plus performant) dont la versatilité et la suite d'outils lui permettent de devenir un puissant système MVVM (équivalent à Angular2 ou React mais plus performant **bis**). Attention, il ne remplace pas [jQuery] (ou [Vanilla JS]) qui servent avant tout à **manipuler le DOM**. [Vue] lie les données en provenance de fichiers JavaScript au HTML de sorte qu'une modification des données se reflète directement dans le HTML sans aucune manipulation de votre part. Là où faire ce travail avec [jQuery] demanderait *de trouver une liste, de récupérer un élément de liste, d'insérer la nouvelle donnée dans l'élément de liste, d’insérer l'élément de liste à la fin de la liste, de trouver le compteur qui compte les lignes, de l'incrémenter de 1, etc.* ; il suffit avec [Vue] de simplement ajouter une donnée dans le tableau JavaScript **lié** et tout est « re-calculé ».\n\n![NodeAtlas](https://www.lesieur.name/media/images/node-atlas.png)\n\n- [NodeAtlas] (**node-atlas.js**) est un serveur HTTP simple dans sa forme la plus basique (équivalent à Express) par **référencement de route** dont le point commun avec [Vue] est l'évolutivité et la versatilité. Cela signifie que l'on peut faire tourner des sites multilingues performants avec un nombre conséquent de pages uniquement avec une partie route et vue active (parfait pour débuter en Node.js). Les parties modèle et contrôleur sont à activer au besoin (parfait pour les experts). Il suit une architecture MVC dans sa pleine utilisation (équivalent d'un Sails.js) avec des contrôleurs dédiés ou une architecture MVC2 avec un contrôleur commun (ou les deux, ou aucun) et permet de créer des sites orientés composants si souhaité et des architectures orientées service (Site Front simple + Collection d'API distantes + Serveur d'authentification + ...).\n\n\n\n\n\n## [NodeAtlas] - Sans MVVM, les bons vieux sites habituels ##\n\nLançons nous dans une petite page HTML sans prétention que vous auriez faite dans les règles de l'art avec tout ce qui va bien. Ici nous allons rester minimalistes, le but de l'article étant de comprendre et de résoudre le problème de référencement.\n\nAvec [NodeAtlas], créons-nous une page qui liste des actions futures à entreprendre. Nous allons faire cela en utilisant une vue dans le dossier `views` et en utilisant une variation dans le dossier `variations` comme source de données.\n\nCe qu'il faut retenir c'est que l'injection des données dans le HTML va se faire « côté serveur ». La réponse HTTP contient donc les données pour l'indexeur de contenus. C'est typiquement le cas avec n'importe quelle techno serveur (PHP, Ruby, C#, etc.).\n\nNous avons donc l'architecture [NodeAtlas] suivante :\n\n```\n├─ variations/\n│  └─ data.json\n├─ views/\n│  └─ show.htm\n└─ webconfig.json\n```\n\navec le contenu des fichiers suivants :\n\n**webconfig.json**\n\nNous créons une page `a-faire` composée du HTML de `show.htm` et des données de `data.json`.\n\n```json\n{\n    \"routes\": {\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\n**variations/data.json**\n\nNous ajoutons trois entrées dans la variation spécifique derrière la propriété `todos`.\n\n```json\n{\n    \"todos\": [{\n        \"title\": \"v1.0\",\n        \"description\": \"Il va falloir faire la v1.0 !\"\n    }, {\n        \"title\": \"v2.0\",\n        \"description\": \"Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas.\"\n    }, {\n        \"title\": \"v3.0\",\n        \"description\": \"Il faudra faire la v3.0 parce que une fois la v2.0 finie, on voudra encore changer ce qui va pas !\"\n    }]\n}\n```\n\n**views/show.htm**\n\nIci on alimente notre HTML avec les données en provenance du fichier de variation en utilisant le moteur de template de [NodeAtlas].\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"todo-list\"\u003e\n            \u003ch1\u003eDans le futur\u003c/h1\u003e\n            \u003c? if (specific.todos.length) { ?\u003e\n            \u003cul\u003e\n                \u003c? for (var i = 0; i \u003c specific.todos.length; i++) { ?\u003e\n                \u003cli\u003e\u003cstrong\u003e\u003c?- specific.todos[i].title ?\u003e\u003c/strong\u003e : \u003c?- specific.todos[i].description ?\u003e\u003c/li\u003e\n                \u003c? } ?\u003e\n            \u003c/ul\u003e\n            \u003c? } ?\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\nMaintenant, lançons notre instance serveur [NodeAtlas] que l'on va afficher en français avec la commande suivante :\n\n```bash\n\\\u003e node-atlas --browse a-faire --lang fr-fr\n```\n\nNotre navigateur par défaut s'ouvre à l'adresse `http://localhost/a-faire` et le code source, celui mangé par les indexeurs, ressemblera à ceci :\n\n**http://localhost/a-faire**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"todo-list\"\u003e\n            \u003ch1\u003eDans le futur\u003c/h1\u003e\n            \u003cul\u003e\n                \u003cli\u003e\u003cstrong\u003ev1.0\u003c/strong\u003e : Il va falloir faire la v1.0 !\u003c/li\u003e\n                \u003cli\u003e\u003cstrong\u003ev2.0\u003c/strong\u003e : Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas.\u003c/li\u003e\n                \u003cli\u003e\u003cstrong\u003ev3.0\u003c/strong\u003e : Il faudra faire la v3.0 parce que une fois la v2.0 finie, on voudra encore changer ce qui va pas !\u003c/li\u003e\n            \u003c/ul\u003e\n        \u003c/div\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e Jusque-là tout va bien, tout est indexable. C'est assez simple étant donné que nous n'avons pas besoin de manipuler les données depuis le navigateur, nous n'avons donc pas besoin d'un système MVVM.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step1](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step1).\n\n\n\n\n\n## Vue - Avec MVVM, l’interaction facile à mettre en place ! ##\n\nNous allons maintenant utiliser [Vue] ! Cela signifie que nous allons injecter les données dans le HTML côté client pour permettre à [Vue] de savoir quelles données sont liées à quelles parties du HTML : cela va nous permettre d'ajouter ou de retirer des entrées simplement ! Pour réaliser cela, nous allons ajouter un fichier `assets/javascripts/todo-list.js` accessible côté client et créer une nouvelle page basée sur `views/update.htm`.\n\n```\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nEn ce qui concerne `variations/data.json`, rien ne va bouger, il va servir de source de données aussi bien pour les pages `views/show.htm` que `views/update.htm`.\n\n**webconfig.json**\n\nAjoutons notre nouvelle page :\n\n```json\n{\n    \"routes\": {\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        },\n        \"/gerer-a-faire\": {\n            \"view\": \"update.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\n**views/update.htm**\n\nNous allons maintenant :\n- Changer l'implémentation en remplaçant les tags [NodeAtlas] par les tags [Vue]. Il ne seront donc pas touché lors de l'analyse du rendu côté serveur et le code sera envoyé côté client tel quel.\n- Glisser les données en provenance de `variations/data.json` dans un attribut `data-model` sur la balise `todo-list` afin de pouvoir alimenter notre vue quand elle s'initialisera dans le navigateur côté client.\n- Nous allons ajouter une partie destinée à ajouter ou supprimer des entrées.\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"todo-list\" data-model=\"\u003c?= JSON.stringify(specific.todos) ?\u003e\"\u003e\n            \u003cdiv class=\"todo-list--content\"\u003e\n                \u003ch1\u003eDans le futur\u003c/h1\u003e\n                \u003cul v-if=\"todos.length\"\u003e\n                    \u003cli v-for=\"todo in todos\"\u003e\n                        \u003cstrong\u003e{{ todo.title }}\u003c/strong\u003e : {{ todo.description }} \u003cspan v-on:click=\"removeTodo(index)\"\u003e[X]\u003c/span\u003e\n                    \u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"todo-list--form\"\u003e\n                Nouveau:\n                \u003cinput v-model=\"newTitle\" placeholder=\"Titre\"\u003e\n                \u003cinput v-model=\"newDescription\" placeholder=\"Description\"\u003e\n                \u003cbutton v-on:click=\"addTodo\"\u003eAjouter\u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"javascripts/todo-list.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n**assets/javascripts/todo-list.js**\n\nNous créons donc la partie modèle de [Vue]. Nous allons l'associer à l'élément `\u003cdiv class=\"todo-list\"\u003e`. Pour cela nous allons le chercher dans le DOM avec la variable `todosSource`. Ensuite nous allons alimenter notre `new Vue()` avec l'élément en question pour `el`, avec les données en provenance de `data-model` pour `data.todos`. Nous créons ensuite tout ce qu'il faut pour ajouter ou supprimer des entrées.\n\n```js\nvar todosSource = document.getElementsByClassName(\"todo-list\")[0];\n\nnew Vue({\n    el: todosSource,\n    data: {\n        \"todos\": JSON.parse(todosSource.getAttribute(\"data-model\")),\n        \"newTitle\": \"\",\n        \"newDescription\": \"\"\n    },\n    methods: {\n        addTodo: function () {\n            this.todos.push({\n                \"title\": this.newTitle,\n                \"description\": this.newDescription\n            });\n            this.newTitle = \"\";\n            this.newDescription = \"\";\n        },\n        removeTodo: function (index) {\n            this.todos.splice(index, 1);\n        }\n    }\n});\n```\n\nEn coupant l'instance précédente (`Ctrl + c`) et en lançant notre instance serveur [NodeAtlas] avec la commande suivante ([NodeAtlas] est maintenant déjà en français) :\n\n```bash\n\\\u003e node-atlas --browse gerer-a-faire\n```\n\nL'adresse `http://localhost/gerer-a-faire` s'ouvre de nouveau dans le navigateur et le code source ressemblera à ceci :\n\n**http://localhost/gerer-a-faire**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"todo-list\" data-model=\"[{\u0026#34;title\u0026#34;:\u0026#34;v1.0\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Il va falloir faire la v1.0 !\u0026#34;},{\u0026#34;title\u0026#34;:\u0026#34;v2.0\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas.\u0026#34;},{\u0026#34;title\u0026#34;:\u0026#34;v3.0\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Il faudra faire la v3.0 parce que une fois la v2.0 finie, on voudra encore changer ce qui va pas !\u0026#34;}]\"\u003e\n            \u003ch1\u003eDans le futur\u003c/h1\u003e\n            \u003cdiv class=\"todo-list--content\"\u003e\n                \u003cul v-if=\"todos.length\"\u003e\n                    \u003cli v-for=\"(todo, index) in todos\"\u003e\n                        \u003cstrong\u003e{{ todo.title }}\u003c/strong\u003e : {{ todo.description }} \u003cspan v-on:click=\"removeTodo(index)\"\u003e[X]\u003c/span\u003e\n                    \u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"todo-list--form\"\u003e\n                Nouveau:\n                \u003cinput v-model=\"newTitle\" placeholder=\"Titre\"\u003e\n                \u003cinput v-model=\"newDescription\" placeholder=\"Description\"\u003e\n                \u003cbutton v-on:click=\"addTodo\"\u003eAjouter\u003c/button\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"javascripts/todo-list.js\"\u003e\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e C'est là que les bactéries attaquent ! Le code source de notre page est (presque) équivalent à ce que nous avons pu voir côté serveur. Car le code ici écrit est fait pour être rendu par le moteur de [Vue] côté client, et non par le moteur de [NodeAtlas] côté serveur. Cela ne ressemble donc à rien pour les indexeurs de contenus. Il y a bien l'attribut HTML « data-model » dont nous nous servons pour alimenter [Vue] qui est dans la source, mais rien d'exploitable…\n\u003e \n\u003e Une solution coûteuse en temps est donc de délivrer le contenu statique sur une page pour les indexeurs (ex :`a-faire`), et de permettre aux utilisateurs d'ajouter des éléments depuis une autre page (ex :`gerer-a-faire`). Une solution coûteuse en temps donc puisque l'implémentation de la page est **à écrire deux fois**.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step2](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step2).\n\n\n\n\n## Vue + NodeAtlas - Avec SSR, les avantages des deux mondes ! ##\n\nNous allons maintenant résoudre le problème en permettant aux fichiers [Vue] d'être exécutés côté serveur. Pour permettre cela à [Vue], il va falloir dans un premier temps rendre accessible [Vue] côté serveur et utiliser en plus Vue Server Renderer en utilisant npm :\n\nInstallons cela avec les commandes suivantes dans la console de notre OS.\n\n```bash\n\\\u003e npm install vue\n```\n\net\n\n```bash\n\\\u003e npm install vue-server-renderer\n```\n\nNous allons également mettre nos données sources dans un dossier `data` car les variations de [NodeAtlas] ne sont normalement pas faites pour cela.\n\n**data/todo-list.json**\n\n```json\n[{\n    \"title\": \"v1.0\",\n    \"description\": \"Il va falloir faire la v1.0 !\"\n}, {\n    \"title\": \"v2.0\",\n    \"description\": \"Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas.\"\n}, {\n    \"title\": \"v3.0\",\n    \"description\": \"Il faudra faire la v3.0 parce que une fois la v2.0 finie, on voudra encore changer ce qui va pas !\"\n}]\n```\n\nCe qui nous donne, avec les fichiers rémanents des deux exemples précédents l'arborescence suivante :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nPour que [Vue] puisse s'exécuter des deux côtés, nous allons utiliser le contrôleur `all.js` en plus du côté client avec la vue [NodeAtlas] `all.htm`. Il faut également que le vue-modèle de [Vue] soit disponible sur le serveur et le client. Nous allons le faire en abonnant les fichiers nécessaires à la liste des fichiers statiques de [NodeAtlas] et en ajoutant une nouvelle route `/`.\n\n**webconfig.json**\n\n```\n{\n    \"statics\": {\n        \"/view-model\": \"views/partials\",\n        \"/data\": \"/data\"\n    },\n    \"routes\": {\n        \"/\": {\n            \"view\": \"all.htm\",\n            \"controller\": \"all.js\"\n        },\n        \"/a-faire\": {\n            \"view\": \"show.htm\",\n            \"variation\": \"data.json\"\n        },\n        \"/gerer-a-faire\": {\n            \"view\": \"update.htm\",\n            \"variation\": \"data.json\"\n        }\n    }\n}\n```\n\nMaintenant, depuis le navigateur, nous aurons accès aux fichiers :\n- données : `http://localhost/data/todo-list.json` (accessible sur le serveur via `data/todo-list.json`),\n- modèle : `http://localhost/view-model/todo-list.js` (accessible sur le serveur via `views/partials/todo-list.js`) et\n- vue : `http://localhost/view-model/todo-list.htm` (accessible sur le serveur via `views/partials/todo-list.htm`).\n\nLes contenus de `views/partials/todo-list.js` et `views/partials/todo-list.htm` sont les suivants :\n\n**views/partials/todo-list.htm**\n\nAvec `v-if=\"client\"` permettant de piloter ce qui ne doit apparaître que lors du rendu client (et donc ne pas être dans la source de la réponse HTTP).\n\n```html\n\u003cdiv class=\"todo-list\"\u003e\n    \u003ch1\u003eDans le futur\u003c/h1\u003e\n    \u003cdiv class=\"todo-list--content\"\u003e\n        \u003cul v-if=\"todos.length\"\u003e\n            \u003cli v-for=\"(todo, index) in todos\"\u003e\n                \u003cstrong\u003e{{ todo.title }}\u003c/strong\u003e : {{ todo.description }} \u003cspan v-if=\"client\" v-on:click=\"removeTodo(index)\"\u003e[X]\u003c/span\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n    \u003cdiv v-if=\"client\" class=\"todo-list--form\"\u003e\n        Nouveau:\n        \u003cinput v-model=\"newTitle\" placeholder=\"Titre\"\u003e\n        \u003cinput v-model=\"newDescription\" placeholder=\"Description\"\u003e\n        \u003cbutton v-on:click=\"addTodo\"\u003eAjouter\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\n**views/partials/todo-list.js**\n\nAvec un code encapsulant la fonctionnalité pour lui permettre d'être exécutable côté navigateur et côté Node.js.\n\n```js\n(function () {\n    var setTodos = function (view, model, client) {\n        return new Vue({\n            template: view,\n            data: {\n                \"todos\": model,\n                \"newTitle\": \"\",\n                \"newDescription\": \"\",\n                \"client\": client\n            },\n            methods: {\n                addTodo: function () {\n                    this.todos.push({\n                        \"title\": this.newTitle,\n                        \"description\": this.newDescription\n                    });\n                    this.newTitle = \"\";\n                    this.newDescription = \"\";\n                },\n                removeTodo: function (index) {\n                    this.todos.splice(index, 1);\n                }\n            }\n        });\n    };\n    if (typeof module !== 'undefined' \u0026\u0026 module.exports) {\n        module.exports = setTodos;\n    } else {\n        this.setTodos = setTodos;\n    }\n}).call(this);\n```\n\nCette vue-modèle est ensuite appelée côté client depuis `/` grâce à la vue [NodeAtlas] suivante :\n\n**views/all.htm**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003csection class=\"todo-list\"\u003e\u003c/section\u003e\n        \u003cscript src=\"https://code.jquery.com/jquery-3.1.1.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"view-model/todo-list.js\"\u003e\u003c/script\u003e\n        \u003cscript\u003e\n        $.ajax({\n          url: \"data/todo-list.json\"\n        }).done(function (model) {\n            $.ajax({\n              url: \"view-model/todo-list.htm\"\n            }).done(function (view) {\n                var todos = setTodos(view, model, true);\n                todos.$mount(\".todo-list\");\n            });\n        });\n        \u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\net le contrôleur [NodeAtlas] suivant pour utiliser [Vue] côté serveur :\n\n**controllers/all.js**\n\n```js\nexports.changeDom = function (next, locals) {\n    var NA = this,\n        Vue = require(\"vue\"),\n        ServerRenderer = require(\"vue-server-renderer\"),\n        renderer = ServerRenderer.createRenderer(),\n        path = NA.modules.path,\n        fs = NA.modules.fs,\n        view = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.htm\"),\n        model = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.js\"),\n        data = path.join(NA.serverPath, \"data/todo-list.json\");\n\n    global.Vue = Vue;\n\n    fs.readFile(view, \"utf-8\", function (error, view) {\n        fs.readFile(data, \"utf-8\", function (error, data) {\n            renderer.renderToString(require(model)(view, JSON.parse(data)), function (error, html) {\n                locals.dom = locals.dom.replace(\"\u003csection class=\"todo-list\"\u003e\u003c/section\u003e\", html.replace('server-rendered=\"true\"', \"\"));\n            });\n        });\n    });\n};\n```\nce qui nous donne l'arborescence complète suivante :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ todo-list.js\n├─ controllers/\n│  └─ all.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  └─ data.json\n├─ views/\n│  ├─ partials/\n│  │  ├─ todo-list.htm\n│  │  └─ todo-list.js\n│  ├─ all.htm\n│  ├─ update.htm\n│  └─ show.htm\n└─ webconfig.json\n```\n\nEn lançant notre instance serveur [NodeAtlas] avec la commande suivante :\n\n```bash\n\\\u003e node-atlas --browse\n```\n\nNotre navigateur par défaut s'ouvre à l'adresse `http://localhost/` et le code source (celui mangé par les indexeurs), ressemblera à ceci :\n\n**http://localhost/**\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003cdiv class=\"todo-list\"\u003e\n            \u003ch1\u003eDans le futur\u003c/h1\u003e\n            \u003cdiv class=\"todo-list--content\"\u003e\n                \u003cul\u003e\n                    \u003cli\u003e\u003cstrong\u003ev1.0\u003c/strong\u003e : Il va falloir faire la v1.0 ! \u003c!----\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003cstrong\u003ev2.0\u003c/strong\u003e : Puis faudra faire la v2.0, parce que la v1.0 on la sent déjà pas. \u003c!----\u003e\u003c/li\u003e\n                    \u003cli\u003e\u003cstrong\u003ev3.0\u003c/strong\u003e : Il faudra faire la v3.0 parce que une fois la v2.0 finie, on voudra encore changer ce qui va pas ! \u003c!----\u003e\u003c/li\u003e\n                \u003c/ul\u003e\n            \u003c/div\u003e \u003c!----\u003e\n        \u003c/div\u003e\n        \u003cscript src=\"https://code.jquery.com/jquery-3.1.1.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"view-model/todo-list.js\"\u003e\u003c/script\u003e\n        \u003cscript\u003e\n        $.ajax({\n          url: \"data/todo-list.json\"\n        }).done(function (model) {\n            $.ajax({\n              url: \"view-model/todo-list.htm\"\n            }).done(function (view) {\n                var todos = setTodos(view, model, true);\n                todos.$mount(\".todo-list\");\n            });\n        });\n        \u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n```\n\n\u003e Bingo !\n\u003e - Vue est fonctionnel côté serveur :\n\u003e    - votre document est valide W3C,\n\u003e    - votre document est complètement SEO indexable (avec les formulaires retirés de la source).\n\u003e - Vue est fonctionnel côté client (avec les formulaires inclus dans le DOM de ce côté).\n\u003e - Vous n'avez écrit qu'une seule fois le code pour le rendu client et serveur.\n\nVous pouvez retrouver l'intégralité des fichiers de cet exemple dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) partie [step/step3](https://github.com/NodeAtlas/VueAtlas/tree/master/steps/step3).\n\n\n\n\n\n## Bonus - Enregistrement côté serveur et mise à jour temps réel ##\n\nCet article à atteint son objectif puisque nous avons une architecture qui démontre comment faire du Rendu côté serveur avec [Vue] et [NodeAtlas]. Afin de finir cet article correctement, nous allons :\n- épurer le code pour ne garder que l'exemple final,\n- enregistrer les modifications faites côté serveur pour que l'ouverture d'une page affiche toutes les entrées et\n- utiliser les Websockets de [NodeAtlas] pour mettre à jour la liste en temps réel dans toutes les pages déjà ouvertes !\n\nFinalement notre arborescence va ressembler à cela :\n\n```\n├─ node_modules/\n│  ├─ vue/\n│  └─ vue-server-renderer/\n├─ assets/\n│  └─ javascripts/\n│     └─ index.js\n├─ controllers/\n│  └─ index.js\n├─ data/\n│  └─ todo-list.json\n├─ variations/\n│  ├─ edit.json\n│  └─ show.json\n├─ views/\n│  ├─ partials/\n│  │  ├─ todo-list.htm\n│  │  └─ todo-list.js\n│  └─ index.htm\n└─ webconfig.json\n```\n\nPour information, nous avons procédé, par rapport aux trois exemples précédents, aux modifications suivantes :\n - `controllers/all.js` qui devient `controllers/index.js`,\n - `views/all.htm` qui devient `views/index.htm`,\n - `views/show.htm` et `views/update.htm` qui sont supprimés,\n - `variations/data.json` qui est supprimé,\n - `variations/show.json` et `variations/edit.json` qui sont ajoutés,\n - `assets/javascripts/todo-list.js` qui est supprimé.\n - `assets/javascripts/index.js` qui est ajouté.\n\nVoici le contenu de chaque fichier restant après modification.\n\n**webconfig.json**\n\nUne page en lecture seule `http://localhost/` et une page de modification `http://localhost/editer`.\n\n```json\n{\n    \"statics\": {\n        \"/view-model\": \"views/partials\",\n        \"/data\": \"/data\"\n    },\n    \"routes\": {\n        \"/\": {\n            \"view\": \"index.htm\",\n            \"variation\": \"show.json\",\n            \"controller\": \"index.js\"\n        },\n        \"/editer\": {\n            \"view\": \"index.htm\",\n            \"variation\": \"edit.json\",\n            \"controller\": \"index.js\"\n        }\n    }\n}\n```\n\nAvec la vue [NodeAtlas] unique suivante :\n\n**views/index.htm**\n\nVous remarquerez que nous avons ajouté les fichiers `socket.io/socket.io.js` et `node-atlas/socket.io.js` fournis par [NodeAtlas] pour faire fonctionner les échanges Websockets temps réel plus loin.\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n    \u003chead\u003e\n        \u003cmeta charset=\"utf-8\"\u003e\n        \u003ctitle\u003eSSR\u003c/title\u003e\n    \u003c/head\u003e\n    \u003cbody\u003e\n        \u003csection class=\"todo-list\"\u003e\u003c/section\u003e\n        \u003cscript src=\"https://code.jquery.com/jquery-3.1.1.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.3/vue.min.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"socket.io/socket.io.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"node-atlas/socket.io.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"view-model/todo-list.js\"\u003e\u003c/script\u003e\n        \u003cscript src=\"javascripts/index.js\"\u003e\u003c/script\u003e\n        \u003cscript\u003etodoList(\u003c?- specific.editable ?\u003e);\u003c/script\u003e\n    \u003c/body\u003e\n\u003c/html\u003e\n ```\n\nQui utilise les vue-modèle [Vue] suivantes :\n\n**views/partials/todo-list.js**\n\n```js\n(function () {\n    var setTodos = function (view, model, editable, callback) {\n        return new Vue({\n            template: view,\n            data: {\n                \"todos\": model,\n                \"newTitle\": \"\",\n                \"newDescription\": \"\",\n                \"editable\": editable\n            },\n            methods: {\n                addTodo: function () {\n                    this.todos.push({\n                        \"title\": this.newTitle,\n                        \"description\": this.newDescription\n                    });\n                    this.newTitle = \"\";\n                    this.newDescription = \"\";\n                    if (callback) {\n                        callback(this.todos);\n                    }\n                },\n                removeTodo: function (index) {\n                    this.todos.splice(index, 1);\n                    if (callback) {\n                        callback(this.todos);\n                    }\n                }\n            }\n        });\n    };\n    if (typeof module !== 'undefined' \u0026\u0026 module.exports) {\n        module.exports = setTodos;\n    } else {\n        this.setTodos = setTodos;\n    }\n}).call(this);\n```\n\n**views/partials/todo-list.htm**\n\n```html\n\u003cdiv class=\"todo-list\"\u003e\n    \u003ch1\u003eTodo list\u003c/h1\u003e\n    \u003cdiv class=\"todo-list--content\"\u003e\n        \u003cul v-if=\"todos.length\"\u003e\n            \u003cli v-for=\"(todo, index) in todos\"\u003e\n                \u003cstrong\u003e{{ todo.title }}\u003c/strong\u003e : {{ todo.description }} \u003cspan v-if=\"editable\" v-on:click=\"removeTodo(index)\"\u003e[X]\u003c/span\u003e\n            \u003c/li\u003e\n        \u003c/ul\u003e\n    \u003c/div\u003e\n    \u003cdiv v-if=\"editable\" class=\"todo-list--form\"\u003e\n        Nouveau:\n        \u003cinput v-model=\"newTitle\" placeholder=\"Titre\"\u003e\n        \u003cinput v-model=\"newDescription\" placeholder=\"Description\"\u003e\n        \u003cbutton v-on:click=\"addTodo\"\u003eAjouter\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n```\n\nQui ne varie que de la variable `specific.editable` qui sert à indiquer si la page est en lecture seule ou éditable :\n\n**variations/show.json**\n\n```json\n{\n    \"editable\": \"false\"\n}\n```\n\n**variations/edit.json**\n\n```json\n{\n    \"editable\": \"true\"\n}\n```\n\nAvec toujours le même jeu de données pour `data/todo-list.json`.\n\nAttaquons-nous à présent aux deux fichiers qui vont permettre :\n- les échanges client-serveur temps réel côté client et serveur respectivement grâce au fichier `node-atlas/socket.io.js` et au point d'ancrage `setSockets()` ainsi que,\n- l'enregistrement côté serveur grâce à `writeFile`.\n\n**controllers/index.js**\n\n```js\nexports.changeDom = function (next, locals) {\n    var NA = this,\n        Vue = require(\"vue\"),\n        renderers = require(\"vue-server-renderer\"),\n        renderer = renderers.createRenderer(),\n        path = NA.modules.path,\n        fs = NA.modules.fs,\n        view = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.htm\"),\n        model = path.join(NA.serverPath, NA.webconfig.viewsRelativePath, \"partials/todo-list.js\"),\n        data = path.join(NA.serverPath, \"data/todo-list.json\");\n\n    global.Vue = Vue;\n\n    fs.readFile(view, \"utf-8\", function (error, view) {\n        fs.readFile(data, \"utf-8\", function (error, data) {\n            renderer.renderToString(require(model)(view, JSON.parse(data)), function (error, html) {\n                locals.dom = locals.dom.replace('\u003csection class=\"todo-list\"\u003e\u003c/section\u003e', html.replace('server-rendered=\"true\"', \"\"));\n                next();\n            });\n        });\n    });\n};\n\nexports.setSockets = function () {\n    var NA = this,\n        fs = NA.modules.fs,\n        io = NA.io;\n\n    io.sockets.on(\"connection\", function (socket) {\n        socket.on(\"update-todo\", function (todos) {\n            fs.writeFile(\"data/todo-list.json\", JSON.stringify(todos), function () {\n                socket.broadcast.emit(\"update-todo\", todos);\n            });\n        });\n    });\n};\n```\n\n**assets/javascripts/index.js**\n\n```js\nvar todoList = function (editable) {\n    $.ajax({\n      url: \"data/todo-list.json\"\n    }).done(function (model) {\n        $.ajax({\n          url: \"view-model/todo-list.htm\"\n        }).done(function (view) {\n            var todos = setTodos(view, model, editable, function (value) {\n                NA.socket.emit(\"update-todo\", value);\n            });\n            todos.$mount(\".todo-list\");\n            NA.socket.on(\"update-todo\", function (value) {\n                todos.todos = value;\n            });\n        });\n    });\n};\n```\n\n\u003e Et voilà un exemple simple et fonctionnel !\n\n\u003e En lançant la commande suivante :\n\n```bash\nnode-atlas --browse\n```\n\nVous ouvrirez le site sur la page en lecture seule `http://localhost/`.\n\n\u003e Ouvrez donc plusieurs onglets aux pages `http://localhost/` et `http://localhost/editer` et même dans plusieurs navigateurs ! Ensuite, modifiez la liste via une de vos pages `http://localhost/editer` et magie, tout est actualisé partout ! En ouvrant une nouvelle page `http://localhost/` ou `http://localhost/editer` à partir d'ici, vous verrez les nouvelles entrées.\n\nVous pouvez retrouver l'intégralité des fichiers de cet article dans le dépôt [VueAtlas](https://github.com/NodeAtlas/VueAtlas) sur GitHub.\n\n\n\n\n\n## Bonus 2 - Pour aller plus loin ##\n\nQuelques nouveautés ont fait leurs apparition côté Vue depuis la première publication de cet article, aussi je trouve que cela peut faire partie de quelques travaux supplémentaires que vous pouvez essayer d'appliquer vous-même !\n\n### `vue-ssr-outlet` ###\n\nNous gérons nous même le remplacement dans le DOM de `\u003csection class=\"todo-list\"\u003e\u003c/section\u003e` avec la ligne `locals.dom = locals.dom.replace(\"\u003csection class=\"todo-list\"\u003e\u003c/section\u003e\", html.replace('server-rendered=\"true\"', \"\"));`. Cependant Vue Server Renderer est capable de s'en charger lui même avec le commentaire HTML `\u003c!-- vue-ssr-outlet --\u003e`. [Plus d'information sur la documentation officielle de Vue Server Renderer](https://ssr.vuejs.org/fr/basic.html#utiliser-un-modèle-de-page). À vous de jouer !\n\n\n\n### Bonnes pratiques Vue ###\n\nUn guide de bonne pratique est sortie listant toutes les bonnes pratiques dont il faut tenir compte pour conserver un code maintenable et propre. [Vous trouverrez ce guide ici](https://fr.vuejs.org/v2/style-guide/). Pourquoi ne pas appliquer toutes ces bonnes pratiques sur ce tutoriel !","dates":{"published":{"$date":"2016-12-30T03:01:00.000Z"},"updated":[]},"others":{"markdown":true,"published":true},"script":"","stylesheet":".article img {\n    float: right;\n    max-width: 200px;\n    margin-left: 10px;\n    margin-right: 10px;\n}\n.article img:nth-child(1) {\n    max-width: 100px;\n}","title":"Vue + NodeAtlas : de l'art du SSR ou Rendu Côte Serveur avec JavaScript","urn":"ssr-ou-du-rendu-cote-serveur-a-l-aide-de-javascript-avec-vue-et-nodeatlas","description":"Nous allons voir dans cet article comment faire du rendu côté serveur ou avec le framework JavaScript Vue et NodeAtlas !","image":""}
{"_id":{"$oid":"588353f9c833701abaaea3a2"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48ba"}],"content":"Si vous faites du JavaScript régulièrement —et il est de plus en plus difficile d'y couper si vous êtes développeur web—, vous vous êtes peut-être déjà posé cette question : « _Quelle est la différence entre la valeur `null` et la valeur `undefined` ?_ ». Question qu'on ne se pose pas quand on vient d'un autre langage.\n\u003cimg width=\"620\" height=\"300\" style=\"max-width: 100%;height: auto;\" src=\"https://blog.lesieur.name/media/images/upload/null-vs-undefined.png\" alt=\"Null vs Undefined\"\u003e\n\nSi nous résumons ensemble nous pouvons tomber d'accord sur le fait que :\n\n- *Null* et *Undefined* sont tous les deux des types ne possédant qu'une seule valeur ; les constantes respectives `null` et `undefined`.\n- Ils s'utilisent tous les deux pour indiquer « l'absence ».\n- Ils sont tous les deux évalués à `false` dans un contexte booléen (ex. : dans une structure de contrôle conditionnelle `if`, avec l'opérateur binaire d'égalité `a == b`, avec l'opérateur ternaire conditionnel `a ? b : c`, etc.).\n\nEn gros, ils servent donc à la même chose non ? Cette réponse ne me convient pas car, même s'il est vrai qu'à chaque première vu les comportements JavaScript semblent « loufoque », l'expérience m'a toujours montré que « c'était moi » qui n'avait pas compris correctement le JavaScript. Si les deux types existes, il y a probablement une distinction. Voici ce qui en est concrètement dit :\n\n\u003e La valeur `undefined` appartient au type primitif *Undefined* et est utilisée quand aucune valeur typée n'a été assignée à une variable.\n\n\u003e La valeur `null` appartient au type primitif *Null* et représente l'absence de valeur, la non-existence d'une référence dans une variable.\n\nLa distinction est plus clair ainsi non ? Pas vraiment... On va retrousser nos manches et regarder un peu ce qu'on peut éclaircir. Si vous n'avez pas le temps de suivre l'explication exhaustive (et intéressante je l'espère) qui va suivre, je vous laisse [filer à la conclusion](./difference-entre-type-null-et-type-undefined-en-javascript/#tl-dr) qui répond à cette question. Si par contre vous êtes curieux et/ou avez le temps de comprendre les différences, c'est juste en dessous !\n\n\n\n\n\n## Faible mais tout de même dynamique ##\n\nPour répondre à notre question, nous allons faire un petit tour d'horizon du typage en JavaScript pour qu'il soit plus clair et simple ensuite d'aborder la question principale.\n\n### Typage faible ###\n\nLes développeurs ayant une grosse dent contre JavaScript l'on souvent car c'est un langage que les moins intéressés qualifieront de non typé et que les plus avertis qualifieront de langage à **typage faible** (par opposition aux langages à typage fort). Cela signifie que vous ne verrez jamais clairement écrit devant une variable qu'elle est de type `int num = 45` ou `bool bool = false` ou `String str = \"Hello World\"`, mais seulement qu'elle est `var num = 45` ou `var bool = false` ou `var str = \"Hello World\"`.\n\n\n\n### Typage dynamique ###\n\nEn fait en JavaScript, les variables n'ont pas de type : ce sont les opérandes ou les expressions (composition d'opérandes et d'opérateurs) qui sont typées (qui renvoi un type à l'exécution). On peut grossièrement dire qu'en JavaStript `num`, `bool` et `str` sont des conteneurs qui contiennent un élément typé. Cela permet a une variable d'accueillir tout au long de son cycle de vie dans l'application des valeurs d'opérande/d'expression de différent type, c'est ce qu'on appel le **typage dynamique**. C'est donc le développeur qui décide dans quelle mesure il souhaite afficher clairement le type de contenu qui sera utilisé par ses variables (ex. par leur nom, par leurs commentaires ou par leurs valeurs d'initialisation).\n\n\n\n### Comment ça marche ? ###\n\nNous allons donc voir en quelques exemples que ce qui est porteur du type n'est pas la variable en elle-même, mais l'opérande ou l'expression (groupe d'opérandes et d'opérateurs). Pour bien comprendre nos exemples, nous allons vérifier que nous parlons bien de la même chose quand nous parlons de variables, d'opérandes, d'opérateurs, d'expressions ou de structure de contrôle. Vous trouverez plus de détail à ce propos dans le billet [Expression versus structure de contrôle en JavaScript](https://blog.lesieur.name/expression-versus-structure-de-controle-en-javascript/).\n\nAinsi les instructions suivantes :\n\n```js\nvar num = 20 + true,\n    bool;\nstr = 'Hello World';\ndelete str;\nif (num === 21) {\n    bool = true;\n} else {\n    bool = false;\n    num = 0;\n}\n```\n\nse décomposent ainsi :\n\n```\n┌──────────────────────────────────────────────────┬───────────────────────────────┬──────────────────────────────┬───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Instruction                                      │ Instruction                   │ Instruction                  │ Instruction                                                                                                                       │\n├──────────────────────────────────────────────────┼───────────────────────────────┼──────────────────────────────┼───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\n│ Structure de contrôle                            │ Structure de contrôle         │ Structure de contrôle        │ Structure de contrôle                                                                                                             │\n│ de déclaration de variables                      │ d'évaluation d'expression     │ d'évaluation d'expression    │ conditionnelle de bloc if — else                                                                                                  │\n├─────┬───────────────────────────────────────┬────┼──────────────────────────┬────┼─────────────────────────┬────┼──────┬────────────────┬─────┬───────────────────────────┬──────────┬───────────────────────────┬──────────────────────────────┬───┤\n│     │ Expression                            │    │ Expression               │    │ Expression              │    │      │ Expression     │     │ Instruction               │          │ Instruction               │ Instruction                  │   │\n│     ├─────┬────┬────┬────┬──────┬────┬──────┤    ├─────┬────┬───────────────┤    ├───────────┬─────────────┤    │      ├─────┬─────┬────┤     ├───────────────────────────┤          ├───────────────────────────┼───────────────────────────┬──┤   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     │ Structure de contrôle     │          │ Structure de contrôle     │ Structure de contrôle     │  │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     │ d'évaluation d'expression │          │ d'évaluation d'expression │ d'évaluation d'expression │  │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     ├─────────────────┬─────────┤          ├──────────────────┬────────┼────────────────┬──────────┤  │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     │ Expression      │         │          │ Expression       │        │ Expression     │          │  │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     ├─────┬────┬──────┤         │          ├──────┬────┬──────┤        ├─────┬────┬─────┤          │  │   │\n│     │ var │ op │ od │ op │ od   │ op │ var  │ sc │ prp │ op │ opérande      │ sc │ opérateur │ variable    │ sc │      │ od  │ op  │ od │     │ var │ op │ od   │ sc      │          │ var  │ op │ od   │ sc     │ var │ op │ od  │ sc       │  │   │\n│     │     │    │    │    │      │    │      │    │     │    │               │    │           │             │    │      │     │     │    │     │     │    │      │         │          │      │    │      │        │     │    │     │          │  │   │\n│ var   num   =    20   +    true   ,    bool   ;    str   =    'Hello World'   ;    delete      str           ;    if (   num   ===   21   ) {   bool  =    true   ;         } else {   bool   =    true   ;        num   =    0     ;             } │\n└─────┴─────┴────┴────┴────┴──────┴────┴──────┴────┴─────┴────┴───────────────┴────┴───────────┴─────────────┴────┴──────┴─────┴─────┴────┴─────┴─────────────────┴─────────┴──────────┴──────────────────┴────────┴────────────────┴──────────┴──┴───┘\n```\n\n\u003e Légende :\n- od = Opérande\n- op = Opérateur\n- var = Variable\n- prp = Propriété d'objet\n- sc = Point-virgule (Semicolon)\n- ins = Instruction\n\nNous voyons ici que l'opérande `20` renvoi `20` qui est un opérande de type *Number*.\n\n```js\n\u003e  20\n\u003c· 20\n```\n\nNous voyons également que l'opérande `true` renvoi `true` qui est un opérande de type *Boolean* :\n\n```js\n\u003e  true\n\u003c· true\n```\n\nCependant, dès que ces opérandes sont couplés à des opérateurs, l'expression en question ne retourne pas nécessairement le même type. Cela est le cas de l'expression `20 + true` ou\n\n- `20` (type *Number*) couplé à\n- `true` (type *Boolean*) par l'opérateur binaire d'addition `+`\n\nretourne un opérande `21` de type *Number* :\n\n```js\n\u003e  20 + true\n\u003c· 21\n```\n\nDans ce cas de figure, `true` a été coercisé (converti implicitement) par le système en *Number* (valant `1`) et additionné à `20`. C'est en cela que le typage est dynamique, ce sont les couples d'opérateurs et d'opérandes selon des règles bien précises qui décident du type de l'opérande retourné.\n\nVoyons un autre exemple avec\n\n- l'opérande de type *Number* contenu dans la variable `num` ainsi que\n- l'opérande `21` de type *Number*\n\ncouplé à l'opérateur binaire d'égalité stricte `===` :\n\n```js\n\u003e  num === 21\n\u003c· true\n```\n\nOn voit que cette expression renvoi un opérande de type *Boolean* alors que les deux opérandes originaux était de type *Number*.\n\n\n\n#### Undefined, le retour ####\n\nRevenons à notre expression `20 + true`. En ajoutant un opérateur d'affectation à gauche `=` à cette expression, nous affectons à `num` un opérande de type *Number* valant 21. Consommer `num` retourne son opérande.\n\n```js\n\u003e  num = 20 + true\n\u003c· 21\n```\n\nAvec le mot clé `var` ajouté, notre expression passe de la simple structure de contrôle d'évaluation d'expresion à une structure de contrôle de déclaration de variable. L'expression initiale reste la même mais notre instruction n'est plus utilisable dans les zones accueillant *uniquement* des expressions (il faudra l'utiliser dans les zone accueillant des déclarations, comme avec `for`). Dans ce cas de figure, la structure de contrôle ne retourne rien et le moteur remplace cela par une opérande de type *Undefined* (sous entendu une valeur représentant l'« absence » de type).\n\n```js\n\u003e  var num = 20 + true\n\u003c· undefined\n```\n\nCependant la variable `num` contient bien l'opérande `21` (c'est le rôle de `=` ça).\n\n```js\n\u003e  num\n\u003c· 21\n```\n\n#### Undefined 3, le retour 2 ####\n\n`undefined` est également une valeur qui peut être attribuée à la variable lors de l'utilisation d'une déclaration de variable. La variable n'ayant pas d'opérateur d'affectation à gauche `=` se voit attribué un opérande de type *Undefined*.\n\n```js\n\u003e  bool\n\u003c· « Uncaught ReferenceError: bool is not defined »\n```\n\n```js\n\u003e  var bool;\n   bool\n\u003c· undefined\n```\n\n\u003e Tout ceci pour dire que **le type d'opérande de retour d'une déclaration (ou d'une structure de contrôle) est** _Undefined_. Ce type peut également s'obtenir avec l'opérateur `void`. Ainsi dans l'expression `void {opérande de n'importe quel type}`, l'opérande de retour sera toujours du type *Undefined*.\n\n\u003e Cela n'est __pas le cas du type__ *Null* __qui est un opérande que l'on peut uniquement déclarer manuellement__.\n\n\n\n\n\n## C'est l'histoire de 7 types ##\n\nLa première chose qui diffère entre le JavaScript et d'autres langages, hors mis le fait qu'il n'y ai pas que la valeur `null` qui représente « l'absence », est que cette valeur est elle même un type à part entier. En d'autres termes, les 3 types primitifs chaîne de caractère, nombre et booléen —respectivement *String*, *Number* et *Boolean*— ne peuvent pas avoir pour valeur `null`, à priori seul le type *Null* peut valoir `null`. Et de la même manière, seul le type *Undefined* peut valoir `undefined`. Vous pourrez entrer plus en détail dans le typage en JavaScript avec ce billet : [Les types en JavaScript : pour tout savoir !](https://blog.lesieur.name/les-types-en-javascript-pour-tout-savoir/).\n\nNous pouvons donc affirmer dans un premier temps que le JavaScript possède 6 types (7 depuis ES2015 / ES6) dont 5 types primitifs dont 2 types spéciaux que nous pouvons résumé dans le tableau ci-après :\n\n```\n┌────────────────────────────────────────────────────────────────┐\n│ Opérandes                                                      │\n├────────┬───────────────────────────────────────────────────────┤\n│ ES6    │ ES5                                                   │\n├────────┴──────────────────────────────────────────────┬────────┤\n│ Primitives                                            │        │\n├────────┬────────┬────────┬─────────┬──────────────────┤        │\n│        │        │        │         │ Spéciaux         │        │\n│        │        │        │         ├───────────┬──────┤        │\n│ Symbol │ String │ Number │ Boolean │ Undefined │ Null │ Object │\n└────────┴────────┴────────┴─────────┴───────────┴──────┴────────┘\n```\n\nNous n'allons pas aborder le type **Symbol** dans cet article qui n'aidera pas à comprendre la différence entre `null` et `undefined`, et reviendrons au type **Object** plus loin.\n\n\n\n### Quelque chose de primitif ###\n\nJusque là, nous n'avons pas encore répondu à la question. Nous allons creuser un peu plus en détail le fonctionnement des opérandes avant de s'intéresser à la question principale. Puisque nous allons uniquement nous intéresser dans cette partie aux types primitifs, les opérandes peuvent être appelés ici des primitives.\n\nComme nous avons pu le voir précédemment, chaque primitive peut en renvoyer une autre avec l'aide d'un opérateur. On peut ainsi dire que n'importe quel type peut se « transformer » en un autre type. Par exemple pour nos 3 primitives vedettes nous avons :\n\n**String**\n\nqui devient un **Number** grâce à l'aide de l'opérateur unaire `+` :\n\n```js\n\u003e  +'42'\n\u003c· 42\n```\n\n```js\n\u003e  +'Hello World'\n\u003c· NaN\n```\n\n```js\n\u003e  +''\n\u003c· 0\n```\n\n*Note : `NaN` (Not A Number) est bien de type *Number* (Si, si...), il est généré par des convertions de type qui ne peuvent pas devenir des valeurs numériques usuelles.*\n\nou qui devient un **Boolean** grâce à l'aide de l'opérateur unaire `!` (x2) :\n\n```js\n\u003e  !!''\n\u003c· false\n```\n\n```js\n\u003e  !!'Hello World'\n\u003c· true\n```\n\n```js\n\u003e  !!'0'\n\u003c· true\n```\n\n**Number**\n\nqui devient un **String** grâce à l'aide de l'opérateur binaire `+` et d'un opérande de type *String* :\n\n```js\n\u003e  42 + ''\n\u003c· \"42\"\n```\n\n```js\n\u003e  -0 + ''\n\u003c· \"0\"\n```\n\n```js\n\u003e  NaN + ''\n\u003c· \"NaN\"\n```\n\nou qui devient un **Boolean** grâce à l'aide de l'opérateur unaire `!` (x2) :\n\n```js\n\u003e  !!42\n\u003c· true\n```\n\n```js\n\u003e  !!0\n\u003c· false\n```\n\n```js\n\u003e  !!NaN\n\u003c· false\n```\n\n**Boolean**\n\nqui devient un **String** grâce à l'aide de l'opérateur binaire `+` et d'un opérande de type *String* :\n\n```js\n\u003e  false + ''\n\u003c· \"false\"\n```\n\n```js\n\u003e  true + ''\n\u003c· \"true\"\n```\n\nou qui devient un **Number** grâce à l'aide de l'opérateur unaire `+` :\n\n```js\n\u003e  +true\n\u003c· 1\n```\n\n```js\n\u003e  +false\n\u003c· 0\n```\n\n#### « Faux ! » ####\n\nCes transformations signifient que n'importe quelle valeur de primitive à forcément un équivalent de type *Boolean*, et donc une équivalence `true` ou `false`. Voyons cela à travers les tableaux suivants :\n\n**String**\n\n```\n┌──────────────────────────────────────────────────────────────────────────────────────────┐\n│ String vers Boolean                                                                      │\n├───────┬─────┬─────┬───────────────┬─────┬──────┬────────┬─────────┬────────┬─────────────┤\n│ ''    │ ' ' │ 'a' │ 'Hello World' │ '0' │ '42' │ 'true' │ 'false' │ 'null' │ 'undefined' │\n├───────┼─────┴─────┴───────────────┴─────┴──────┴────────┴─────────┴────────┴─────────────┤\n│ false │ true                                                                             │\n└───────┴──────────────────────────────────────────────────────────────────────────────────┘\n```\n\n**Number**\n\n```\n┌───────────────────────────────────────────────────────────────┐\n│ Number vers Boolean                                           │\n├───┬─────┬────┬─────┬─────┬─────┬───────┬──────────┬───────────┤\n│ 0 │ NaN │ -0 │ 1   │ -1  │ 789 │ -1789 │ Infinity │ -Infinity │\n├───┴─────┴────┼─────┴─────┴─────┴───────┴──────────┴───────────┤\n│ false        │ true                                           │\n└──────────────┴────────────────────────────────────────────────┘\n```\n\n**Boolean**\n\n```\n┌──────────────────────┐\n│ Boolean vers Boolean │\n├───────┬──────────────┤\n│ false │ true         │\n├───────┼──────────────┤\n│ false │ true         │\n└───────┴──────────────┘\n```\n\n**Null**\n\n```\n┌───────────────────┐\n│ Null vers Boolean │\n├───────────────────┤\n│ null              │\n├───────────────────┤\n│ false             │\n└───────────────────┘\n```\n\n**Undefined**\n\n```\n┌────────────────────────┐\n│ Undefined vers Boolean │\n├────────────────────────┤\n│ undefined              │\n├────────────────────────┤\n│ false                  │\n└────────────────────────┘\n```\n\n\u003e Ce qui signifie que dans la totalité de tous les types et valeurs possible des opérandes, **les 7 uniques valeurs pouvant être** `false` **dans une condition** sont :\n\n\u003e - `false`,\n\u003e - `0`, `-0`, `NaN`,\n\u003e - `''`,\n\u003e - `null` et\n\u003e - `undefined`.\n\n\u003e Tout le reste est obligatoirement `true`, et c'est aussi le cas de notre dernier type : le type _Object_.\n\n\n\n### Tout n'est qu'Objet ###\n\nPenchons nous à présent du côté du dernier type. Celui-ci contient la totalité du reste en JavaScript ! Les objets sont de type *Object*, les functions sont de type *Object*, les tableaux sont de type *Object*. Math, RegExp, JSON, etc. sont de type *Object*.\n\nÀ ce titre, ils ont donc tous la capacité d'accueillir des propriétés :\n\n```js\n\u003e  var obj = new Object();\n   obj.test = 'Bruno';\n\u003c· \"Bruno\"\n```\n\n```js\n\u003e  var obj = {};\n   obj.test = 'Bruno';\n\u003c· \"Bruno\"\n```\n\n```js\n\u003e  var fn = new Function();\n   fn.test = 'Bruno';\n\u003c· \"Bruno\"\n```\n\n```js\n\u003e  var fn = function () {};\n   fn.test = 'Bruno';\n\u003c· \"Bruno\"\n```\n\n```js\n\u003e  var arr = new Array();\n   arr.test = 'Bruno'\n\u003c· \"Bruno\"\n```\n\n```js\n\u003e  var arr = [];\n   arr.test = 'Bruno';\n\u003c· \"Bruno\"\n```\n\nmême s'ils y a une différence entre un objet utilisé uniquement comme agrégateur de valeur et ceux pouvant être exécuté :\n\n```js\n\u003e  typeof {}\n\u003c· \"object\"\n```\n\n```js\n\u003e  typeof []\n\u003c· \"object\"\n```\n\n```js\n\u003e  typeof (function () {})\n\u003c· \"function\"\n```\n\n#### Quels sont vos références ? ####\n\nLà ou un opérande de type objet diffère fondamentalement d'un opérande de type primitif c'est qu'il est stocké dans les variables et les propriétés d'autres objets par référence. Cela signifie qu'il ne retourne pas un opérande lorsqu'il est analysé seul mais qu'il retourne une référence vers lui-même.\n\n**Cas d'une primitive qui copie son contenu**\n\n```js\n\u003e  var value = 'a';\n\n   (function (val) {\n       val = 'b';\n   }(value));\n\n   value;\n\u003c· \"a\"\n```\n\n**Cas d'un objet qui partage une référence**\n\n```js\n\u003e  var ref = { name: 'a' };\n\n   (function (obj) {\n       obj.name = 'b';\n   }(ref))\n\n   ref;\n\u003c· Object {name: 'b'}\n```\n\n\u003e Cela induit une chose : un objet, qu'il soit remplit de propriété ou vide, **est toujours évalué à** `true` **dans un contexte de booléen**. Il n'existe donc aucun moyen pour un objet d'être `false` dans une condition.\n\n\n\n\n\n## Batnull vs. Superundefined ##\n\nBien, je pense que nous en savons assez pour dégager l'utilisé de `null`, `undefined` et de répondre à la question « _Quelle est la différence entre la valeur `null` et la valeur `undefined` ?_ ». Mais ce n'est pas tout, nous allons également pouvoir identifier les différences avec `false`, `''`, `-0`, `0`, `NaN`, `null` et `undefined` : 7 valeurs qui au final sont évaluées à `false`.\n\n\n\n### C'est bien de rester neutre... ###\n\nSachez que même si `null` et `undefined` sont censés représenté « l'absence » de quelque chose ; s'ils sont évalués avec des opérateurs réclamant une transformation en *String*, ils ne représentent pas nécessairement l'élément neutre.\n\n```js\n\u003e  var str1,\n       str2 = 'Hello';\n   str1 + str2\n\u003c· \"undefinedHello\"\n```\n\n```js\n\u003e  var str1 = null,\n       str2 = 'Hello';\n   str1 + str2\n\u003c· \"nullHello\"\n```\n\nAinsi au lieu d'obtenir `\"Hello\"` en sortie nous obtenons `\"undefinedHello\"` ou `\"nullHello\"`\n\nÉgalement, s'ils sont utilisés avec des opérateurs réclamant une transformation en *Number*, `null` et `undefined` ne sont pas consistant l'un l'autre :\n\n```js\n\u003e  var num;\n   +num\n\u003c· NaN\n```\n\n```js\n\u003e  var num = null;\n   +num\n\u003c· 0\n```\n\nLe plus intéressant va donc être de définir les variables de type *String*, *Number* et *Boolean* en les initialisant avec leur éléments neutre c'est à dire :\n\n- Celui qui va être évalué à `false` dans un contexte de condition,\n- Celui qui va être ignoré lors de l'utilisation de l'opérateur `+` (concaténation), `+` (addition) ou `\u0026\u0026`.\n\nLe fait de les définir de cette manière va également permettre aux développeurs de comprendre quels types d'opérande doivent contenir la variable tout au long de son cycle de vie s'ils sont adeptes du typage fort (ou dans un soucis de lisibilité) :\n\n```js\nvar str = '',\n    num = 0,\n    bool = false;\n```\n\nAinsi les opérations suivantes seront consistantes pour :\n\n*une chaîne de caractère*\n\n```js\n\u003e  (str) ? true : false\n\u003c· false\n```\n```js\n\u003e  'Hello World' + str\n\u003c· \"Hello World\"\n```\n```js\n\u003e  typeof str\n\u003c· \"string\"\n```\n```js\n\u003e  str = 'Hello World';\n   typeof str;\n\u003c· \"string\"\n```\n\n*pour un nombre*\n\n```js\n\u003e  (num) ? true : false\n\u003c· false\n```\n```js\n\u003e  1 + num\n\u003c· 1\n```\n```js\n\u003e  typeof num\n\u003c· \"number\"\n```\n```js\n\u003e  num = 42;\n   typeof num;\n\u003c· \"number\"\n```\n\n*pour un Boolean*\n\n```js\n\u003e  (bool) ? true : false\n\u003c· false\n```\n```js\n\u003e  bool \u0026\u0026 true\n\u003c· false\n```\n```js\n\u003e  typeof bool\n\u003c· \"boolean\"\n```\n```js\n\u003e  bool = true;\n   typeof bool;\n\u003c· \"boolean\"\n```\n\nIl va donc être intéressant de laisser le système fournir un opérande de type *Undefined* à une variable uniquement si elle peut changer de type au cours de son cycle de vie et donc le définir en tant que tel.\n\n```js\nvar anything, // var anything = undefined,\n    str = '',\n    num = 0,\n    bool = false;\n```\n\n\n\n### ...mais c'est null pour un Objet ###\n\nEt c'est là qu'intervient notre type *Null*. Puisque le type *Object* est quoi qu'il arrive évalué à `true` dans un contexte booléen, il est impossible d'initialiser sa référence à « vide ». Or la valeur `null` est justement évalué à `false` et... **révélation**... retourne `object` quand on utilise l'opérateur `typeof`. De plus, il n'y a pas d’ambiguïté possible car seul vous (manuellement) pouvez affecter un opérande `null` sachant qu'aucune expression ne retourne cette valeur : on fait forcément référence à un objet non encore initialisé.\n\nAinsi définir\n\n```js\nvar obj = null;\n```\n\nsignifie que `obj` accueillera un objet :\n\n```js\n\u003e  (obj) ? true : false\n\u003c· false\n```\n```js\n\u003e  typeof obj\n\u003c· \"object\"\n```\n```js\n\u003e  +obj // +''\n\u003c· 0    // 0\n```\n```js\n\u003e  obj = {};\n   typeof obj;\n\u003c· \"object\"\n```\n```js\n\u003e  +obj // +'Hello World'\n\u003c· NaN  // NaN\n```\n\n\n\n#### NaN : Null avec Number ####\n\nQuid de l'utilisation de `null` comme initialisation des types *Number* voir même *Boolean* ? C'est vrai, on a vu que `null` se transformait en `0` qui est neutre pour le type *Number* et en `false` qui est neutre pour le type *Boolean*. Rien n'est impossible ! Et c'est une éventualité mais gardez à l'esprit que cela fait perdre de la consistance et de la compréhension à votre code.\n\nEffectivement, si pour une raison ou une autre vous ne souhaitez pas utiliser `0` comme élément neutre car il fait tout de même partis des valeurs numériques, vous pouvez le remplacer par `NaN` qui renvoi bien `\"number\"` avec l'opérateur `typeof` (contrairement à `null` qui renvoi `\"object\"`...).\n\nEn ce qui concerne le type *Boolean*, ça raison d'être est le fait de n'avoir que deux, et uniquement deux états possibles, aucun intérêt donc de ne pas le mettre à `false` (ou voir à `true`) plutôt qu'à `null`.\n\nEt pour finir, puisque les variables n'ont pas de type à proprement parlé, les définir par défaut avec `null` empêche de ce fait de saisir le type que vous souhaitez y voir placer par la suite...\n\n\n\n#### Undefined n'est pas Not Defined ####\n\nIl y a encore une joie du JavaScript qui vient complexifier tout ça, une variable peut à première vue contenir an opérande de type *Undefined* ou *Null* mais également ne pas contenir d'opérande ce qui lève l'exception `ReferenceError`. On va essayer de comprendre ça tout de suite avant de conclure.\n\nUtilisons `str` qui contient un opérande de type *String* :\n\n```js\n\u003e  str\n\u003c· \"Hello World\"\n```\n\nCouplé à l'opérateur `delete`, cet expression retourne comme opérande un type *Boolean* pour signifier si l'opération à réussi :\n\n```js\n\u003e  delete str\n\u003c· true\n```\n\nOpération qui a pour conséquence de vider la propriété `str` de l'objet global `window` de son opérande et donc de la laisser sans rien :\n\n```js\n\u003e  str\n\u003c· « Uncaught ReferenceError: str is not defined »\n```\n\nIl ne faut pas confondre `str = 'Hello World'` qui affecte à la propriété de l'objet global `window.str` un opérande de type *String* et `var str = 'Hello World'` qui affecte à une variable locale un opérande de type *String* (voir le billet sur [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/)).\n\nEffectivement, une variable locale ne peut jamais être vidée de son opérande et l'expression :\n\n```js\n\u003e  var str = 'Hello World'\n\u003c· \"undefined\"\n```\n\n```js\n\u003e  delete str\n\u003c· false\n```\n\n```js\n\u003e  str\n\u003c· \"Hello World\"\n```\n\nn'efface pas la valeur d'une variable. Ainsi une variable initialisée dans le champ lexical local doit être mise à `undefined` si vous souhaitez signifier qu'elle n'est plus utilisée.\n\n#### « Euh... Pourquoi ? » ####\n\nEn fait, quand vous utilisez `str = 'Hello World'` alors qu'il n'a pas été défini au préalable par l'opérateur `var`, vous faites exactement la même chose que `window.str = 'Hello World'` dans un navigateur ou `global.str = 'Hello World'` en Node.js par exemple. Cela signifie donc que vous n'affectez pas un opérande à une variable, mais vous affectez un opérande à la propriété d'un objet : exactement de la même manière qu'avec cette déclaration `{ str: 'Hello World'; }`. L'opérateur `delete` sert donc à « retirer » la propriété d'un objet là ou le mettre à `undefined` signifie simplement que la propriété n'a pas réellement d'opérande primitif ou objet.\n\nDans cet exemple, la propriété ne disparaît pas :\n\n```js\n\u003e  var obj = {\n       str: 'Hello World',\n       str2: 'Bye!'\n   };\n   obj.str2 = undefined;\n   obj;\n\u003c· Object {str: 'Hello World', str2: undefined}\n```\n\nAlors que dans celui-ci, si :\n\n```js\n\u003e  var obj = {\n       str: 'Hello World',\n       str2: 'Bye!'\n   };\n   delete obj.str2;\n   obj;\n\u003c· Object {str: \"Hello World\"}\n```\n\nEn d'autre terme, quand vous sollicitez une variable ainsi : `myVar`,\n\n- si celle-ci existe en tant que variable local vous obtiendrez au moins : `undefined` (sauf si elle contient un autre opérande).\n- si elle n'existe pas en local mais existe en tant que propriété de l'objet global vous obtiendrez au moins : `undefined` (sauf si elle contient un autre opérande).\n- sinon vous obtiendrez « Uncaught ReferenceError: myVar n'est pas définie ».\n\nIl faut bien comprendre que ce message concerne la variable en elle même et non l'opérande qui pour le coup n'existe pas du tout : une sorte de « vrai undefined ».\n\n\n\n\n\n## tl;dr ##\n\nVoici mon utilisation des 5 types primitifs et du type *Object* et quel est la différence d'utilisation entre les constantes `undefined` ou `null`.\n\n**String**\n\nSi vous savez qu'une variable sera uniquement de type chaîne de caractère durant son cycle de vie, vous pouvez l'initialiser à `''` :\n\n```js\n\u003e ('') ? true : false; // false\n  typeof ''; // \"string\";\n  ('Hello World') ? true : false; // true\n  typeof 'Hello World'; // \"string\"\n\n  function (str) {\n      str = str || \"\";\n  }\n```\n\n**Number**\n\nSi vous savez qu'une variable sera uniquement de type numérique durant son cycle de vie, vous pouvez l'initialiser à `NaN` (ou `0` (neutre pour l'addition), ou `1` (neutre pour le produit)) :\n\n```js\n\u003e (NaN) ? true : false; // false\n  typeof NaN; // \"number\";\n  (42) ? true : false; // true\n  typeof 42; // \"number\"\n\n  function (num) {\n      num = num || NaN;\n  }\n```\n\n**Boolean**\n\nSi vous savez qu'une variable sera uniquement de type booléen durant son cycle de vie, vous pouvez l'initialiser à `false` :\n\n```js\n\u003e (false) ? true : false; // false\n  typeof false; // \"boolean\";\n  (true) ? true : false; // true\n  typeof true; // \"boolean\"\n\n  function (bool) {\n      bool = bool || false;\n  }\n```\n\n**Object**\n\nSi vous savez qu'une variable sera uniquement de type objet, par convention, vous pouvez l'initialiser à `null` :\n\n```js\n\u003e (null) ? true : false; // false\n  typeof null; // \"object\";\n  ({}) ? true : false; // true\n  typeof {}; // \"object\"\n\n  function (obj) {\n      obj = obj || null;\n  }\n```\n\n*Note: l'utilisation pratique de `null` est d'être la version évalué à `false` d'un type Object car un objet est toujours `true`, et parce que `typeof null` retourne `object`. Cela signifie que `typeof myVarObject` retourne une valeur consistante pour les deux types Object et Null.*\n\n**Types multiples**\n\nSi vous savez qu'une variable peu être de plusieurs types (tout au long de son cycle de vie), par convention, vous pouvez l'initialiser à `undefined`.\n\n```js\n\u003e (undefined) ? true : false; // false\n  typeof undefined; // \"undefined\";\n  function (value) {\n      // value = value || undefined;\n  }\n```","dates":{"published":{"$date":"2017-01-25T15:28:00.000Z"},"updated":[]},"description":"Pour enfin comprendre les bons usages en JavaScript de null vs undefined.","image":"https://blog.lesieur.name/media/images/upload/null-vs-undefined.png","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Est-il si null cet undefined ?","urn":"difference-entre-type-null-et-type-undefined-en-javascript"}
{"_id":{"$oid":"5889c6e10b30ed1cc1db02ed"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"ES7 est déjà dans nos chaumières et, en plus d'être « à peu près au point » avec ES5, vous n'avez toujours pas digéré ES6 !\n\n\u003cfigure\u003e\n    \u003ca href=\"https://blog.lesieur.name/media/images/upload/javascript-vs-typescript.png\"\u003e\u003cimg class=\"openable\" src=\"https://blog.lesieur.name/media/images/upload/javascript-vs-typescript.jpg\" alt=\"Quelle est concrètement la différence entre TypeScript et JavaScript ?\" width=\"1306\" height=\"436\" style=\"max-width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eQuelle est concrètement la différence entre TypeScript et JavaScript ?\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nIl va être temps de nous y pencher de plus près sur ce blog pour aborder la suite de l'aventure JavaScript sereinement. Cet article à pour but, de vous en apprendre plus sur les versions ES3 et ES5 de JavaScript dites « Vanilla JavaScript » tout en les comparant à des équivalences ES6 dites « Harmony JavaScript ». Cela nous permettra de comprendre en quoi ces améliorations peuvent nous aider au quotidien.\n\nNous allons éplucher les fonctionnalités dans un ordre logique d'apprentissage et explorer les mécaniques sous-jacentes. Nous allons même nous permettre, en amont, de réviser un peu les bases. Ça risque d'être long alors, de la même manière que cet article va être publié en plusieurs mise à jour, n'hésitez pas à le lire en plusieurs fois !\n\n\n\n\n## A *curious* JavaScript Story ##\n\nC'est l'histoire d'un gars, *Netscape*, qui se dit : « ok, quand on va écrire des lignes dans un fichier, et qu'on va faire lire ce fichier à un programme, celui-ci va faire les trucs cool que les lignes lui disent de faire. » ; idée *presque* révolutionnaire puisque c'est déjà ce que fait n'importe quel programme concurrent. « Certe, mais mon code, il sera pas transformé en charabia pour machine à l'avance ; il sera lu et pris en compte directement ! ».\n\nNotre *Nets* l'invente pas pour rien ce programme (ou langage comme est appelé cette idée par ceux qui y ont pensé avant lui). Son idée à lui, c'est de le placer dans son navigateur, qui permet de surfer sur Internet, pour faire des trucs cool dedans, comme interagir avec le contenu d'une page ; ce qu'il fait. Le gars sait pas trop comment appeler ça et fini par l'appeler *JavaScript* car à l'époque, ça lui permet de se faire un peu de publicité sur le dos de son collègue *Java* (ou inversement proportionnel).\n\nL'idée du gars est tellement cool que *Microsoft* se dit qu'il va faire pareil, et appelle ça du *JScript* (histoire de se faire de la pub aussi quoi), et de le placer dans son navigateur fétiche à lui, appelé *Internet Explorer*. Mais *Nets* a autant les boules qu'il est sympa. Il décide, pour éviter que d'autres gars comme *Mic* fassent n'importe quoi avec son *JavaScript*, de demander à son pote *Ecma International* (de son petit nom *Ecma*) d'expliquer et d'user de son réseau pour faire savoir que le *JavaScript* « ça marche comme ça, et pas autrement », chose que *Ecma* fait et consigne dans un papier sobrement intitulé : *Standard ECMA-262*. Dans ce papier naît alors le nouveau standard *ECMAScript*. Grâce à ça, des mecs peuvent inventer des trucs sympa comme le *Flash* et les gens comme *Mic* peuvent arrêter de faire n'importe quoi.\n\n*Nets* était fier de son *JavaScript* car il avait inventé « un modèle objet orienté prototype, à typage faible mais dynamique et a portée statique » méga performant pour du langage de script (comprenez ici « non compilé »). Après moult rebondissements cela s'est soldé par une version *ECMASript 3*. Appelons là, *ES3* pour faire plus intime. Cependant, des proches de *Ecma*, la Team4, qui avaient pas trop pigé le coup du prototypage, décida de faire évoluer la spécification pour que ça ressemble plus à de l'objet fondé sur les classes comme ces bons langages compilés (*miam !*) et d'en faire à terme *ES4*.\n\nMais holà ! Les puristes se sont levés, la Team5. La Team5 a dit « l'ES, c'est avant tout du prototypage ! De diou ! » Ce qui l'amena à écrire en parallèle la même chose, mais en pas pareil. Cela donna naissance à *ES5* que nous avons tous connu et qui vit dans *Chrome*, *Firefox*, *Edge*, *Safari*, *Opera*, et feu (en fait pas encore tout à fait) Internet Explorer.\n\nNotre *Mic* a beau dire qu'il « a compris qu'il faut suivre les spécifications de *Ecma* », il galère quand même pas mal en se traînant ses versions antérieures incrustées à la cloueuse. *Mic*, *ES4*, *ES5*, etc. : ils ont perdu tout le monde. Les gens inventent des abstractions en *JavaScript* pour faire du *JavaScript* qui marche chez tout le monde. Les gars « nous, on aime les prototypes » se sont mis à chier des bibliothèques comme *Prototype* (qu'on comprenne bien qu'ils aiment les prototypes) tandis que les gars « nous, on aime les classes et le typage fort » se sont mis à chier des transpileurs et truc à la TypeScript parce que selon eux, quand tu croises un type faible mais dynamique, : on se dit que « le gars est louche ». Du coup, maintenant _**Le gars qui passait par là**_ jette un œil à tout ce beau monde et se dit : « et bah putain... quel merdier ».\n\nES6 est alors en marche et réconcilie gentiment les gars des prototypes et des classes en prenant le parti suivant : « on va dire que ça marche par prototype, ok ? Mais on va faire en sorte de planquer ça sous de la classe... Malin ! Hein ? ».\n\nPar dessus ça, y a un mec, *Joyent*, qui se dit que même si JavaScript a besoin d'un hôte pour fonctionner, pourquoi ça serait forcément un navigateur ; l'hôte ? « Et si j'invitais ce bon vieux *JavaScript* à travailler... sur mon OS ? Que dis-je sur tous les OS ! ». Hop là ! Ni une, ni deux... un peu de HTTP par ci, un peu de lecture/écriture de fichier par là, le tout à la sauce V8 de chez Google et plop : *Node.js* est né. Du *JavaScript* côté serveur. À ce niveau, je vous parle pas de _**Le gars qui passait par là**_ qui, lui, à surement abandonné l'affaire...\n\nEn tout cas *Joy* se laisse pas abattre et met à jour *Node.js* en intégrant les nouveautés ES6 et plus du moteur V8. Le gars il s'en fout ; il est tout seul (genre le mec, même pas effrayé par *IO.js* avec lequel il fusionne à « la Dragon Ball Z »). Le gars il fait ce qu'il veut et surtout : il suit scrupuleusement les bons conseils d'*Ecma* contrairement à un certain *Mic*. *Mic*, qui clame haut et fort à présent que « si, si. dans mon *Edge*, maintenant, je fais tout bien » ; mais sans succès.\n\nRésultat des courses ? La norme *HTML5* propulse *JavaScript*, le code serveur *Node.js* propulse *JavaScript*, les nouveautés *ES6* propulsent *JavaScript*, les technos concurrentes utilisant *npm* propulsent *JavaScript*, des trucs boiteux comme *TypeScript* propulsent *JavaScript*, des trucs swag comme *React* propulsent *JavaScript* et des super-héros comme *Vue* propulsent *JavaScript* ! Bref, le train roule sacrément vite...\n\nIl est peut-être venu le temps d'essayer de rattraper les wagons si vous êtes restés sur le quai !\n\n\n\n\n\n## Quelles différences entre ES3 et ES5  ?\n\nAvant de continuer plus en avant avec des fonctionnalités ES6 (voir ES7), je vous invite, si vous le souhaitez, à vous attarder sur divers articles mettant en avant les grands concepts du JavaScript pour « enfin » le comprendre et savoir en quoi il différe des autres langages.\n\n### Des fondamentaux à ES3\n\nC'est pourquoi je vous invite à commencer par comprendre les bases ES3. Tout d'abord, je vous invite à comprendre comment s'exécute un programme grâce [aux contextes d'exécutions](https://blog.lesieur.name/les-contextes-d-execution/). Une fois cela clairement établi, nous entrerons dans le détail en décrivant les éléments qui composent un contexte comme [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/), [la valeur de this](https://blog.lesieur.name/la-valeur-de-this/) ou encore [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/). Avec ces nouvelles connaissances, vous serez armé pour bien comprendre [tous les types de fonctions](https://blog.lesieur.name/les-fonctions/) et en quoi [elles sont toutes des fermetures](https://blog.lesieur.name/les-fermetures/). Il ne vous restera plus qu'à, pour boucler les fondamentaux ES3, dévorer les vrais tenant et aboutissant d'[un langage à typage faible](https://blog.lesieur.name/les-types/) et aux [objets basés sur des prototypes](https://blog.lesieur.name/les-constructeurs-et-les-prototypes/). Pour finir, nous lèverons une idée reçu selon laquelle le JavaScript passe ses paramètres par référence en étudiant [la stratégie d'évaluation en JavaScript](https://blog.lesieur.name/la-strategie-d-evaluation/).\n\n### Les ajouts ES5\n\nPour compléter les révisions (ou la découverte) des bases, vous pourrez achever votre remise en ordre ES5 en étudiant [la capacité de décrire les propriétés d'objet](https://blog.lesieur.name/les-proprietes-et-descripteurs-de-proprietes/) ainsi que _les nouveautés du mode strict (prochainement)_. Nous finirons les révisions avec le _nouveau concept d'environnement lexical (prochainement)_.\n\n\n\n\n\n## Liste des fonctionnalités ES6+ ##\n\nLe schéma sera le suivant : on tente d'expliquer ce qu'on aurait pu faire en ES3-ES5, on le fait en ES6 et supérieur en constatant les différences et en pointant du doigt la valeur ajoutée.\n\n\n\n### Constantes `const` ###\n\n**Constants \u003e Constants**\n\nES6 ajoute un support pour les variables immuables. Sous ce jolie nom se cache simplement le concept de constante : une variable à laquelle aucun nouveau contenu ne peut être assigné après sa déclaration (en utilisant l'opérateur d'affectation à gauche `=`). À noter que c'est le conteneur et non le contenu qui est immuable, cela signifie qu'un objet qui serait affecté à une variable immuable ne peut pas être remplacé (sa référence ne peut pas être changée), mais son contenu, lui, peut bouger (ajout, modification et suppression de propriétés). Un petit rappel entre, [les objets qui sont stockés par référence et les primitives qui sont directement stockées, se trouve ici](./difference-entre-type-null-et-type-undefined-en-javascript/).\n\n\u003e *`En`* **ES5** : D'après cette description, un des moyens de créer une constante avec ES5 est d'utiliser la fonction `Object.defineProperty()`. Cette fonction permet d'attribuer à des propriétés d'objet un comportement immuable. Créons ainsi la constante `PI`.\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * `PI` en tant que variable locale ou\n\u003e     * `window.PI` en tant que variable globale n'existe pas.\n\u003e     */\n\u003e    PI;\n\u003e \u003c· « Uncaught ReferenceError: PI is not defined »\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * On va créer une propriété se comportant « comme » une constante.\n\u003e     * p1 : Affectation de la propriété à l'objet global `window` (navigateur)\n\u003e     *      ou à l'objet global `global` (Node.js).\n\u003e     * p2 : Définition de la clé de la propriété en tant que l'opérande `\"PI\"`.\n\u003e     * p3 : Options attribuant sa valeur avec l'opérande `3.141593`,\n\u003e     *      expliquant qu'il apparaît lors de l'utilisation d'une boucle et surtout\n\u003e     *      qu'aucun opérande ne peut-être affecté après sa définition\n\u003e     */\n\u003e    Object.defineProperty(window ? window : global, \"PI\", {\n\u003e        value:        3.141593,\n\u003e        enumerable:   true,\n\u003e        writable:     false\n\u003e    });\n\u003e \u003c· Window {…}\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /* `PI` est maintenant défini et vaut `3.141593`. */\n\u003e    PI;\n\u003e \u003c· 3.141593\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Affecter `PI` va effectivement renvoyer\n\u003e     * l'opérande que vous avez choisi d'affecter.\n\u003e     */\n\u003e    PI = 'Nombre PI';\n\u003e \u003c· \"Nombre PI\"\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /* Cependant la valeur `PI` n'aura pas bougé d'un iota. */\n\u003e    PI;\n\u003e \u003c· 3.141593\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Ce qu'il faut bien comprendre dans notre cas de figure\n\u003e     * c'est que PI est une variable globale (ou propriété de l'objet global).\n\u003e     */\n\u003e    PI === window.PI;\n\u003e \u003c· true\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Le moyen de réellement créer une constante est d'utiliser l'opérateur `const`.\n\u003e ```js\n\u003e \u003e  /**\n\u003e     * `PI` en tant que variable locale ou\n\u003e     * `window.PI` en tant que variable globale n'existe pas.\n\u003e     */\n\u003e    PI;\n\u003e \u003c· « Uncaught ReferenceError: PI is not defined »\n\u003e ```\n\u003e ```js\n\u003e \u003e  /**\n\u003e     * On va créer une constante `PI` avec la valeur `3.141593`.\n\u003e     */\n\u003e    const PI = 3.141593;\n\u003e \u003c· undefined\n\u003e ```\n\u003e ```js\n\u003e \u003e  /* `PI` est maintenant défini et vaut `3.141593`. */\n\u003e    PI;\n\u003e \u003c· 3.141593\n\u003e ```\n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Affecter `PI` va cette fois lancer une exception.\n\u003e     */\n\u003e    PI = \"Nombre PI\";\n\u003e \u003c· « Uncaught TypeError: Assignment to constant variable. »\n\u003e ```\n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Cependant, ce n'est ici pas l'équivalence de notre exemple ES5 car ici\n\u003e     * `PI` est une variable locale immuable (constante) et\n\u003e     * non une propriété de l'objet global.\n\u003e     */\n\u003e    PI === window.PI;\n\u003e \u003c· false\n\u003e ```\n\nEn conclusion l'opérateur `const` qui crée une constante (une variable locale immuable) n'est pas la même chose que la fonction `Object.defineProperty()` qui crée une propriété d'objet immuable, une sorte de *propstante* !\n\n\n\n### Variable à portée limitée `let` ###\n\n**Scoping \u003e Block-Scoped Variables**\n\nContrairement à beaucoup de langage, en JavaScript ES5, la portée des variables déclarées avec l'opérateur `var` n'est pas limitée à un bloc d'accolade. Ainsi, si je défini une variable à l'intérieur d'une structure de contrôle de flux comme `if`, ma variable sera également disponible à l'extérieur. Cela n'est plus le cas si ma variable est déclarée avec `let` (et également avec `const`). Cela signifie qu'une variable déclarée dans l'instruction `if` ou `for` n'existe pas en dehors.\n\n\u003e *`En`* **ES5** : Voici le comportement induit par les variables déclarées avec l'opérateur `var` que ce soit entre les accolades mais également dans les boucles.\n\u003e \n\u003e ```js\n\u003e \u003e  if ('1' == 1) {\n\u003e        /* Bien qu'elle soit créée dans un bloc... */\n\u003e        var str = 'Hello World';\n\u003e    }\n\u003e    /* ...la variable `str` est accessible en dehors de ce bloc. */\n\u003e    str;\n\u003e \u003c· \"Hello World\"\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  if (+'1' === 1) {\n\u003e        /* Seules les fonctions enferment la portée des variables... */\n\u003e        (function () {\n\u003e            var str = \"Hello World\";\n\u003e        }());\n\u003e    }\n\u003e    /* ...et les empêches d'être accessibles de l'extérieur `str`. */\n\u003e    str;\n\u003e \u003c· « Uncaught ReferenceError: str is not defined »\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Le fait que les variables ne soient pas limitées aux accolades empêche\n\u003e     * cette liste de fonction de fonctionner comme on le souhaiterait.\n\u003e     */\n\u003e    var callbacks = [];\n\u003e    for (var i = 0; i \u003c 3; i++) {\n\u003e        /**\n\u003e         * Ainsi le problème est que à l'instant ou chaque fonction\n\u003e         * est assignée dans le tableau `callbacks` à l'indice `i`,\n\u003e         * `i` vaut la valeur actuelle de la boucle.\n\u003e         */\n\u003e        callbacks[i] = function() { return i * 2; };\n\u003e    }\n\u003e    /**\n\u003e     * Cependant, lorsque `callbacks[0]()`, `callbacks[1]()` et `callbacks[2]()` sont exécutées\n\u003e     * la valeur de `i` est de `3`, ce qui donne pour l'exemple courant au lieu de `0 2 4`...\n\u003e     */\n\u003e    callbacks[0]() + ' ' + callbacks[1]() + ' '  + callbacks[2]();\n\u003e \u003c· 6 6 6\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Pour solutionner le problème il faut faire un instantané\n\u003e     * de la valeur de `i` en passant `i` en paramètre d'une fonction,\n\u003e     * ce qui copie sa valeur et la conserve pour la suite puisque\n\u003e     * `i` est une primitive et que les primitives sont assignées par copie.\n\u003e     */\n\u003e    var callbacks = [];\n\u003e    for (var i = 0; i \u003c 3; i++) {\n\u003e        (function (i) {\n\u003e            /* Ainsi le paramètre `i` est figé à sa valeur lors de son assignation. */\n\u003e            callbacks[i] = function() { return i * 2; };\n\u003e        }(i));\n\u003e    }\n\u003e    /* Et le résultat est cette fois bien celui attendu. */\n\u003e    callbacks[0]() + ' ' + callbacks[1]() + ' ' + callbacks[2]();\n\u003e \u003c· 0 2 4\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Tous nos problèmes sont résolus ici par ce fameux `let`. Non seulement celui-ci nous permet de vraiment cloisonner une variable dans un bloc, mais également de créer des boucles sans gérer nous même le cloisonnement de la variable d'itération.\n\u003e \n\u003e ```js\n\u003e \u003e  if (+'1' === 1) {\n\u003e       /* Cette fois ci une variable créée dans un bloc... */\n\u003e       let str = \"Hello World\";\n\u003e    }\n\u003e    str;\n\u003e    /* ...n'est pas accessible en dehors de ce bloc. */\n\u003e \u003c· « Uncaught ReferenceError: str is not defined »\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Et le fait que les variables soient cette fois limitées aux accolades, et donc\n\u003e     * à un seul tour de boucle permet à notre liste de fonctionner comme prévue.\n\u003e     */\n\u003e    var callbacks = [];\n\u003e    for (let i = 0; i \u003c 3; i++) {\n\u003e        /* Grâce à `let`, `i` est un instantané à chaque tour de boucle. */\n\u003e        callbacks[i] = function() { return i * 2; };\n\u003e    }\n\u003e    /* Cela permet à nos fonctions de fonctionner comme souhaité. */\n\u003e    callbacks[0]() + ' ' + callbacks[1]() + ' ' + callbacks[2]();\n\u003e \u003c· 0 2 4\n\u003e ```\n\nEn conclusion l'opérateur `let` est parfait pour permettre des variables locales à un bloc d'être consommées sans impacter le reste du champ lexical. Il permet également de créer des instantanés à chaque tour de boucle pour éviter le cloisonnement.\n\n\n\n### Fonction à portée limitée `{}` ###\n\n**Scoping \u003e Block-Scoped Functions**\n\nDe la même manière qu'il est possible de limiter une variable à un bloc en ES6, il est également possible de limiter une fonction à un bloc. Cela grâce à l'ajout des accolades `{` et `}` autour de la zone dont les fonctions doivent être à portée limitée.\n\n\u003e *`En`* **ES5** : Voici le comportement d'une fonction définie puis redéfinie dans un bloc.\n\u003e \n\u003e ```js\n\u003e \u003e  /* Si je définie une variable dans le flux... */\n\u003e    function test() { return 'external'; }\n\u003e    /* ...puis que je la redéfinie ensuite dans un bloc... */\n\u003e    {\n\u003e        function test() { return 'internal'; }\n\u003e    }\n\u003e    /**\n\u003e     * ... `test()` va retourner `'internal'` puisqu'en JavaScript\n\u003e     * les blocs ne cloisonnent pas les variables et fonctions.\n\u003e     */\n\u003e    test();\n\u003e \u003c· \"internal\"\n\u003e ```\n\u003e \n\u003e ```js\n\u003e \u003e  function test() { return 'external'; }\n\u003e    /**\n\u003e     * Il faut faire appel à une fonction anonyme auto-exécutée\n\u003e     * pour induire un nouveau champ lexical et cloisonner\n\u003e     * la valeur.\n\u003e     */\n\u003e    (function () {\n\u003e        function test() { return 'internal'; }\n\u003e    }());\n\u003e    test();\n\u003e \u003c· \"external\"\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Cependant avec ES6, il est possible de limiter la portée des fonctions déclarées à un bloc et non à une fonction en entourant le tout avec des accolades `{` *et* `}`.\n\u003e \n\u003e ```js\n\u003e \u003e  /* Si j'englobe les fonctions avec des accolades... */\n\u003e    {\n\u003e        function test() { return 'external'; }\n\u003e        /* ...les futures accolades internes seront cloisonnantes... */\n\u003e        {\n\u003e            function test() { return 'internal'; }\n\u003e        }\n\u003e        /**\n\u003e         * ... et ainsi la fonction redéfinie dans un sous bloc\n\u003e         * ne sera pas prise en compte dans le bloc du dessus.\n\u003e         */\n\u003e        test();\n\u003e    }\n\u003e \u003c· \"external\"\n\u003e ```\n\u003e \u003e \n\u003e ```js\n\u003e \u003e  /**\n\u003e     * Il faut bien comprendre que ce comportement ne fonctionne qu'avec\n\u003e     * le mot-clé `function` aussi pour les variables, il faut utiliser `let`\n\u003e     */\n\u003e    {\n\u003e        var withVar = 'var external';\n\u003e        let withLet = 'let external';\n\u003e        {\n\u003e            var withVar = 'var internal';\n\u003e            let withLet = 'let internal';\n\u003e        }\n\u003e        withVar + ' | ' + withLet;\n\u003e    }\n\u003e \u003c· 'var internal | let external'\n\u003e ```\n\nEn conclusion les fonctions cloisonnées permettent de limiter l'utilisation d'une fonction à un bloc sans créer de nouveau champ lexical. Le fait que ce mécanisme soit limité au mot clé `function` le rend difficilement appréhendable tout de même.\n\n\n\n### Valeurs de paramètre par défaut ###\n\n**Extended Parameter Handling \u003e Default Parameter Values**\n\nQuand on déclare une fonction en JavaScript, on indique les paramètres qu'on lui passe entre ses parenthèses et... c'est tout. On ne précise pas le type attendu, on ne précise pas de valeur par défaut. Si on souhaite faire cela afin d'indiquer de quel type est une variable ou d'attribuer une valeur autre que `undefined` en cas de non passage de paramètre, il faut le faire à la main !\n\nÇa c'était avant, car ES6 implémente les paramètres auxquelles ont peut passer des valeurs par défaut en cas d'absence lors de l'appel.\n\n\u003e *`En`* **ES5** : Par défaut, une valeur non passée s'attribut la valeur de type Undefined : `undefined`.\n\u003e \n\u003e ```js\n\u003e \u003e  function fn(str, nbr, bool, obj) {\n\u003e        return {\n\u003e            str:  str,\n\u003e            nbr:  nbr,\n\u003e            bool: bool,\n\u003e            obj:  obj\n\u003e        };\n\u003e    };\n\u003e    fn('Hello World');\n\u003e \u003c· Object {str: \"Hello World\", nbr: undefined, bool: undefined, obj: undefined}\n\u003e ```\n\u003e \n\u003e Pour donner plus d'indication sur les valeurs à passer, ou affecter une valeur différente de `undefined` aux paramètres non passés on fait donc ainsi :\n\u003e \n\u003e ```js\n\u003e \u003e  function fn(str, nbr, bool, obj) {\n\u003e        return {\n\u003e            str:  str || ',\n\u003e            nbr:  nbr || NaN, // (nbr === 0 || nbr === -0) ? nbr : (nbr || NaN),\n\u003e            bool: bool || false,\n\u003e            obj:  obj || null\n\u003e        };\n\u003e    };\n\u003e    fn('Hello World');\n\u003e \u003c· Object {str: \"Hello World\", nbr: NaN, bool: false, obj: null}\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Cependant avec ES6, il est directement possible d'affecter ces valeurs lors de la déclaration des paramètres.\n\u003e \n\u003e ```js\n\u003e \u003e  function fn(str = '', nbr = NaN, bool = false, obj = null) {\n\u003e        return {\n\u003e            str:  str,\n\u003e            nbr:  nbr,\n\u003e            bool: bool,\n\u003e            obj:  obj\n\u003e        };\n\u003e    };\n\u003e    fn('Hello World');\n\u003e \u003c· Object {str: \"Hello World\", nbr: NaN, bool: false, obj: null}\n\u003e ```\n\n\n\n### Portée de fonction étendue `=\u003e` ###\n\n**Arrow Functions \u003e Lexical this**\n\nL'utilisation de `this` est un très vaste chapitre. Nous l'avons déjà traité sur ce blog dans [la valeur de this](https://blog.lesieur.name/la-valeur-de-this/). Ici nous allons étudier son comportement lorsqu'il est utilisé dans un contexte qui le redéfini.\n\n\u003e *`En`* **ES5** : Voici le comportement standard des propriétés associées à `this` après l'utilisation de fonction utilisant leur propre valeur de `this`, ce qui est par exemple le cas de `setTimeout`.\n\u003e \n\u003e ```js\n\u003e \u003e  /* Nous allons créer une fonction que nous allons utiliser comme constructeur */\n\u003e    var Character = function (name) {\n\u003e            /* À sa création, l'objet prendra un nom dans sa propriété `name` */\n\u003e            this.name = name;\n\u003e            this.displayNameTwice = function () {\n\u003e                /* Si bien que lors de l'utilisation de `this.name` */\n\u003e                /* c'est ce nom qui s'affichera. */\n\u003e                console.log('0s', this.name);\n\u003e                /* Mais... */\n\u003e                setTimeout(function () {\n\u003e                    /* il ne s'affichera pas... */\n\u003e                    console.log('1s', this.name);\n\u003e                /* une seconde plus tard. */\n\u003e                }, 1000);\n\u003e            };\n\u003e        },\n\u003e        /* Initialisation d'un objet `Character` */\n\u003e        cloud = new Character('Cloud Strife');\n\u003e \n\u003e \u003e  /* Appel de la méthode */\n\u003e    cloud.displayNameTwice();\n\u003e \u003c· undefined\n\u003e ```\n\u003e \n\u003e avec en sortie de console imédiate\n\u003e \n\u003e ```js\n\u003e    0s Cloud Strife\n\u003e ```\n\u003e \n\u003e et une seconde plus tard\n\u003e \n\u003e ```js\n\u003e    1s\n\u003e ```\n\u003e \n\u003e Nous nous apercevons que `this.name` n'a rien retourné dans le `setTimeout` car `setTimeout` possède son propre objet `this`. Les deux moyens les plus courant pour contourner **se comportement normal** de JavaScript est\n\u003e \n\u003e 1. de créer une variable contenant la référence au bon `this` (ES3) :\n\u003e   ```js\n\u003e    /* ... */\n\u003e    this.displayNameTwice = function () {\n\u003e        /* On crée une variable contenant la\n\u003e        référence vers le `this` souhaité... */\n\u003e        var self = this;\n\u003e        console.log('0s', this.name);\n\u003e        setTimeout(function () {\n\u003e            /* ...et on utilise cette variable. */\n\u003e            console.log('1s', self.name);\n\u003e        }, 1000);\n\u003e    };\n\u003e    /* ... */\n\u003e ```\n\u003e ou\n\u003e \n\u003e 2. de lier la valeur qui devra servir de `this` avec `bind` (ES5) :\n\u003e   ```js\n\u003e    /* ... */\n\u003e    this.displayNameTwice = function () {\n\u003e        console.log('0s', this.name);\n\u003e        setTimeout(function () {\n\u003e            console.log('1s', this.name);\n\u003e        /* On lie lors de la définition de la fonction\n\u003e        la valeur de `this` qu'elle devra utiliser. */\n\u003e        }.bind(this), 1000);\n\u003e    };\n\u003e    /* ... */\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Grâce à la nouvelle fonction fléchée `=\u003e`, il est maintenant possible de conserver le `this` de la portée appelante quelque soit le cas de figure. La fonction fléchée est donc votre meilleure alliée pour tout ce qui va être de l'ordre de l'utilisation de fonction de rappel (« callback »).\n\u003e \n\u003e ```js\n\u003e \u003e  var Character = function (name) {\n\u003e            this.name = name;\n\u003e            this.displayNameTwice = function () {\n\u003e                console.log('0s', this.name);\n\u003e                /* utilisation d'une fonction fléchée\n\u003e                avec `=\u003e` */\n\u003e                setTimeout(() =\u003e {\n\u003e                    console.log('1s', this.name);\n\u003e                }, 1000);\n\u003e            };\n\u003e        },\n\u003e        cloud = new Character('Cloud Strife');\n\u003e \n\u003e \u003e  cloud.displayNameTwice();\n\u003e \u003c· undefined\n\u003e ```\n\u003e \n\u003e avec en sortie de console imédiate\n\u003e \n\u003e```js\n\u003e    0s Cloud Strife\n\u003e ```\n\u003e \n\u003e et une seconde plus tard\n\u003e \n\u003e ```js\n\u003e    1s Cloud Strife\n\u003e ```\n\u003e \n\u003e Parfait !\n\n\n\n### Abréviation d'expression de fonction `=\u003e` ###\n\n**Arrow Functions \u003e Expression and statement bodies**\n\nPartout ou une expression de fonction est utilisable, c'est-à-dire dans toutes expressions valides, une fonction fléchée peut-être utilisée à la place afin d'écrire de manière plus condensé quelque chose de très verbeux. Voici des exemples ES5 transformé en ES6.\n\n\u003e *`En`* **ES5** : Voici ce que l'on pourrait écrire en ES5 :\n\u003e \n\u003e Trier un tableau ou `a` est l'entrée courante et `b` la suivante. En fonction du retour négatif ou positif du résultat, les éléments vont être interverti ou non.\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].sort(function (a, b) {\n\u003e        return a - b;\n\u003e    });\n\u003e \u003c· [0, 3, 7, 8]\n\u003e ```\n\u003e \n\u003e Filtrer l'élément courant `c` du tableau. Si la fonction renvoi `true` ou garde l'éntrée dans le résultat, sinon, on l'exclue.\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].filter(function (c) {\n\u003e        if (c % 2 === 0) {\n\u003e            return true;\n\u003e        } else {\n\u003e            return false;\n\u003e        }\n\u003e    });\n\u003e \u003c· [0, 8]\n\u003e ```\n\u003e \n\u003e Associer un résultat de corps vide à chaque élément du tableau.\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].map(function () {});\n\u003e \u003c· [undefined, undefined, undefined, undefined]\n\u003e ```\n\u003e \n\u003e Associer un nouvel objet `{}` à chaque élément du tableau.\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].map(function () {\n\u003e        return {};\n\u003e    });\n\u003e \u003c· [Object, Object, Object, Object]\n\u003e ```\n\n-----\n\n\u003e **`En`** **ES6** : Et la même chose en ES6 avec la fonction fléchée.\n\u003e \n\u003e S'il n'y a qu'une ligne dans le corps de la fonction (`return a - b`), le mot clé `return` doit être omis, ainsi que les accolades `{`, `}` après `=\u003e` (ou le tout conservé, mais l'un ne va pas sans l'autre).\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].sort((a, b) =\u003e a - b);\n\u003e \u003c· [0, 3, 7, 8]\n\u003e ```\n\u003e \n\u003e S'il y a un seul paramètre, les parenthèses `(` et `)` peuvent être omises avant la `=\u003e`. Si le corps de la fonction contient plus d'une ligne, les accolades `{` et `}` restent et le corps de la fonction reste non changé.\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].filter(c =\u003e {\n\u003e        if (c % 2 === 0) {\n\u003e            return true;\n\u003e        } else {\n\u003e            return false;\n\u003e        }\n\u003e    });\n\u003e \u003c· [0, 8]\n\u003e ```\n\u003e \n\u003e S'il n'y a pas d'arguments pour la fonction, les parenthèses `(` et `)` sont obligatoires à gauche de `=\u003e`. Si le corps de fonction est vide, les accolades `{` et `}` sont obligatoire à droite de `=\u003e`\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].map(() =\u003e {});\n\u003e \u003c· [undefined, undefined, undefined, undefined]\n\u003e ```\n\u003e \n\u003e Pour retourner l'objet `{}` (ou `{ test: \"test\" }` par exemple) et qu'il ne soit pas confondu avec un corp de fonction vide, il faut des parenthèses `(` et `)` à droite de `=\u003e`\n\u003e \n\u003e ```js\n\u003e \u003e  [7, 0, 8, 3].map(() =\u003e ({}));\n\u003e \u003c· [Object, Object, Object, Object]\n\u003e ```\n\n## En cours de rédaction... ##","dates":{"published":{"$date":"2017-06-29T06:52:00.000Z"},"updated":[]},"description":"Êtes-vous réellement sure de bien connaître le JavaScript ? ","image":"https://blog.lesieur.name/media/images/upload/javascript-vs-typescript.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Enfin apprendre et comprendre le JavaScript !","urn":"apprendre-et-comprendre-javascript-version-es6"}
{"_id":{"$oid":"58d6815a7ec3e92863770963"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Ce billet fait partie de la collection _[ES3 dans le détail](https://blog.lesieur.name/categories/ecma-script/)_ et en constitue le Chapitre 1.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/execution-context.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/execution-context-mini.png\" alt=\"Comme dans Inception, les contextes s'empilent les uns au-dessus des autres.\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eComme dans Inception, les contextes s'empilent les uns au-dessus des autres.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans ce billet nous évoquerons les contextes d'exécution en JavaScript, ainsi que leurs différentes déclinaisons.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/l-objet-des-variables/\"\u003eChapitre 2 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Définition\n\nChaque fois que du code JavaScript est exécuté, nous entrons dans un _contexte d'exécution_.\n\nLe _contexte d'exécution (dont la forme abrégée sera `EC` pour « execution context »)_ est un concept abstrait décrit par la spécification [ECMA-262-3](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf) pour classifier et différentier différents types de code exécutable.\n\nCe standard ne définit aucune structure ni aucune déclinaison en terme d'implémentation technique des contextes d'exécution. C'est un problème qui doit être traité par les moteurs qui implémentent le standard.\n\nPour résumer, un groupe de contexte d'exécution forme une pile (nommée « stack »). Le bas de cette pile est toujours le _contexte global (« global context »)_ alors que le sommet est le contexte d'exécution courant (« active context »). La pile est augmentée (« pushed  ») lors de l'entrée dans un contexte d'exécution et diminuée (« popped  ») lors de sa sortie.\n\n\n\n\n\n## Les différentes déclinaisons de code exécutable\n\nLe concept de _déclinaison de code exécutable_ est directement lié au concept abstrait de contexte d'exécution. Il y a le code global, le code des fonctions et le code d'évaluation intégrée. Voyons cela plus en détails.\n\nNous pouvons définir la pile des contextes d'exécution comme un tableau :\n\n*Pseudo-code*\n\n```js\nECStack = []\n```\n\nLa pile est augmentée chaque fois que nous entrons dans une fonction (même si la fonction est appelée _récursivement_ ou en tant que _constructeur_). Cela est également le cas lors de l'utilisation de la fonction d'évaluation intégrée `eval`.\n\n\n\n### Code global\n\nCe type de code est traité au niveau _Programme_ : c.-à-d. en chargeant un fichier externe `.js` ou un code se trouvant dans des balises `\u003cscript\u003e\u003c/script\u003e`. Aucune partie de code qui se trouve à l'intérieur d'une fonction n'est du code global. Le code activé ici fait parti du _contexte global_.\n\nÀ l'initialisation (démarrage du programme), la pile `ECStack` ressemble à ceci :\n\n*Pseudo-code*\n\n```js\nECStack = [\n    globalContext\n]\n```\n\n\n\n### Code de fonction\n\nEn entrant dans un code de fonction (quel qu'il soit), la pile `ECStack` est augmentée avec un nouvel élément. Il est important de préciser qu'aucune partie de code définie dans une sous-fonction n'appartient à la fonction courante. Le code activé dans des fonctions forme un _contexte de fonction_.\n\nPrenons l'exemple d'une fonction qui va s'appeler elle-même de manière récursive juste une seule fois :\n\n*Code JavaScript*\n\n```js\n(function dream(flag) {\n    if (flag) {\n        return;\n    }\n    dream(true);\n})(false);\n```\n\nEt bien, la pile `ECStack` est modifiée comme suit :\n\n*Pseudo-code*\n\n```js\n// première activation de `dream`\nECStack = [\n    \u003cdream\u003e functionContext,\n    globalContext\n]\n\n// activation récursive de `dream`\nECStack = [\n    \u003cdream\u003e functionContext (récursivement),\n    \u003cdream\u003e functionContext,\n    globalContext\n]\n```\n\nChaque `return` implicite ou explicite d'une fonction fait quitter le contexte d'exécution courant et diminue la pile `ECStack` en conséquence, refermant la pile de haut en bas. Une fois que l'exécution de ces codes est terminée, `ECStack` contient de nouveau uniquement le `globalContext` jusqu'à ce que le programme se termine.\n\nUne exception lancée mais non interceptée peut aussi mettre fin à un ou plusieurs contextes d'exécution :\n\n*Code JavaScript*\n\n```js\n(function chase() {\n    (function hotel() {\n        (function fortress() {\n            throw 'Sort des contextes de `fortress` puis `hotel` puis `chase`';\n        })();\n    })();\n})();\n```\n\n\n\n### Code d'évaluation intégrée\n\nLes choses sont plus intéressantes avec du code d'évaluation intégrée. Dans ce cas, il y a un concept de _contexte appelant (« calling context »)_, c.-à-d. un contexte depuis lequel la fonction `eval` est _appelée_.\n\nLes actions réalisées par `eval`, comme la définition de variable ou de fonction, influence le _contexte appelant_ :\n\n*Code JavaScript*\n\n```js\n// influence le contexte global\neval('var x = 10');\n\n(function limbo() {\n    // ici, la variable `y`\n    // est créée dans le contexte local\n    // de la fonction `limbo`\n    eval('var y = 20');\n})();\n\nalert(x); // `10`\nalert(y); // `y` n'est pas défini(e)\n```\n\n\u003e Notons qu'en mode strict à partir de ES5, `eval` n'influence plus le contexte appelant mais évalue son code dans un _bac à sable_ local.\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e \"use strict\";\n\u003e\n\u003e // influence le contexte global\n\u003e eval('var x = 10');\n\u003e \n\u003e alert(x); // `x` n'est pas défini(e)\n\u003e ```\n\nPour l'exemple ci-dessus, nous avons les modifications de la pile `ECStack` suivantes :\n\n*Pseudo-code*\n\n```js\nECStack = [\n    globalContext\n]\n\n// eval('var x = 10');\nECStack.pushContext({\n    context: evalContext,\n    callingContext: globalContext\n})\n\n// sortie du contexte `evalContext`\nECStack.popContext()\n\n// appel de la fonction `limbo`\nECStack.pushContext(\u003climbo\u003e functionContext);\n\n// eval('var y = 20');\nECStack.pushContext({\n    context: evalContext,\n    callingContext: \u003climbo\u003e functionContext\n})\n\n// sortie du contexte `evalContext`\nECStack.popContext()\n\n// sortie de foo\nECStack.popContext()\n```\n\nCeci est une représentation de la logique de la _pile d'appels (« call-stack »)_.\n\n\u003e Dans de vieilles implémentations de Mozilla Firefox, et ceux jusqu'à la version 1.7 de son moteur JavaScript (SpiderMonkey), il était possible de passer un contexte appelant en tant que _second paramètre_ pour la fonction `eval`. Ainsi, quand le contexte existait toujours, il était possible d'en influencer les variables _privées_ :\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e function reality() {\n\u003e     var x = 1;\n\u003e     return function () { alert(x); };\n\u003e };\n\u003e \n\u003e var dream = reality();\n\u003e \n\u003e dream(); // `1`\n\u003e \n\u003e eval('x = 2', dream); // contexte passé et qui influence la variable interne `x`\n\u003e \n\u003e dream(); // `2`\n\u003e ```\n\u003e \n\u003e Cependant, pour des raisons de sécurité, les moteurs modernes ne permettent plus cela désormais.\n\n\n\n### Code de module\n\nPour finir, notons qu'en ES6+ (ou ES2015+), il existe un quatrième type de code qui est le code de module.\n\n\n\n\n\n## Code global et implémentation dans les navigateurs\n\nNous avons vu plus haut que le code global s'exécutait au niveau _Programme_. Cela signifie que le code global est le code qui s'active dès l'entrée dans un script et qui crée le contexte global. Mais dans un navigateur ? Il y a « plusieurs » balises `\u003cscript\u003e`. Font-elles toutes partie d'un même contexte global ?\n\nEn réalité il y a plusieurs contextes globaux exécutés dans un navigateur. Un pour chaque script JavaScript rencontré qu'il soit dans les balises `\u003cscript\u003e` ou dans un attribut HTML demandant à être analysé en tant que JavaScript. Cependant, tous ces contextes globaux partage un seul et même objet global : [plus de détails dans le prochain chapitre](https://blog.lesieur.name/l-objet-des-variables/).\n\n\u003e Notons qu'en ce qui concerne Node.js il n'y a qu'un seul contexte global par commande exécutée avec `node` et c'est celui du script appelé. Ainsi tous les appels par le mécanisme `require/export` à l'intérieur du script est un code de fonction.\n\n\n\n\n\n## Conclusion ##\n\nC'est le minimum théorique requis pour analyser plus en profondeur des éléments liés au fonctionnement des contextes d'exécution comme [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/) ou la [chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/) dont vous trouverez plus de détails dans les chapitres appropriés.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/l-objet-des-variables/\"\u003eChapitre 2 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 — [10. Execution Contexts](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l'excellent billet [Тонкости ECMA-262-3. Часть 1. Контексты исполнения.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-1-execution-contexts/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-03-25T11:40:00.000Z"},"updated":[]},"description":"Dans ce billet nous évoquerons les contextes d'exécution en JavaScript ainsi que leurs différentes déclinaisons.","image":"https://blog.lesieur.name/media/images/upload/execution-context-mini.png","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap. 1 — Les contextes d'exécution en JavaScript","urn":"les-contextes-d-execution"}
{"_id":{"$oid":"58d93a8c7924c16f049756ac"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Ce billet fait partie de la collection _[ES3 dans le détail](https://blog.lesieur.name/categories/ecma-script/)_ et en constitue le Chapitre 2.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/entree-execution.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/entree-execution-mini.png\" alt=\"Les Précogs sont aussi capable de voir à l'avance les variables pour la phase d'exécution !\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eLes Précogs sont aussi capable de voir à l'avance les variables pour la phase d'exécution !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nNous déclarons des variables et des fonctions avec lesquels tournent nos programmes. Mais comment, et quand l'interpréteur trouve ces données ? Que se passe t-il quand une référence à un objet est demandée ?\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-contextes-d-execution/\"\u003e\u0026lt; Chapitre 1\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-valeur-de-this/\"\u003eChapitre 3 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nNous déclarons dans nos programmes des fonctions et des variables qui sont utilisés lors de l'exécution afin de produire les résultats souhaités. Mais comment et où l'interpréteur trouve-t-il nos données (fonctions, variables) ? Que se passe-t-il lorsque nous faisons référence à des objets ?\n\nBeaucoup de développeurs JavaScript savent que les variables sont intimement liées au contexte d'exécution :\n\n*Code JavaScript*\n\n```js\nvar reportA = 10; // variable du contexte global\n\n(function () {\n    var reportB = 20; // variable locale d'un contexte de fonction\n})();\n\nalert(reportA); // 10\nalert(reportB); // `reportB` n'est pas défini(e)\n```\n\nBeaucoup de développeurs savent également que la portée des variables est définie et limitée à l'exécution des contextes de fonctions. C.-à-d. que contrairement au C/C++, pour les structures de contrôle de bloc (`{…}`), d'alternatives (`if`, `if—else`, `if—else-if—…—else`, `switch`…) ou de boucles (`while`, `do—while`, `for`…), aucun contexte local n'est créé en JavaScript. Seul la structure de contrôle de fonction créé un contexte d'exécution. Un exemple avec la boucle `for` :\n\n*Code JavaScript*\n\n```js\nfor (var report in { reportA: 1, reportB: 2 }) {\n    alert(report);\n}\n\nalert(report); // la variable `report` est toujours dans la portée même si la boucle est terminée\n```\n\nRegardons plus en détail ce qu'il se passe quand nous déclarons nos données.\n\n\n\n\n\n## Déclaration de données\n\nSi les variables sont liées à leur contexte d'exécution, il doit être possible de savoir où leurs données sont stockées et comment y accéder. Le mécanisme permettant cela est appelé l'_objet des variables_.\n\nL'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_ est un objet spécial lié à un contexte d'exécution et qui stocke :\n\n- _les déclarations de variables_ (dont la forme abrégée sera `VD` pour « variable declaration »),\n- _les déclarations de fonctions_ (dont la forme abrégée sera `FD` pour « function declaration »)\n- _les paramètres formels de fonctions_ (dont la forme abrégée sera `FP` pour « formal parameters »)\n\ndéclarés dans un contexte.\n\n\u003e À noter qu'en ES5 le concept d'_objet des variables_ est remplacé par le modèle des _environnements lexicaux_ qui seront plus détaillés dans [le chapitre approprié](https://blog.lesieur.name/environnements-lexicaux/).\n\nDe façon schématique dans ces exemples, il est possible de présenter l'objet des variables comme un objet JavaScript standard :\n\n*Pseudo-code*\n\n```js\nVO = {}\n```\n\nEt comme nous l'avons dit, l'objet des variables est une propriété d'un contexte d'exécution :\n\n*Pseudo-code*\n\n```js\nactiveExecutionContext = {\n    VO: {\n        \u003c...\u003e // données du contexte `VD`, `FD` (et `FP`)\n    }\n}\n```\n\nIl est possible d'avoir accès à l'objet des variables du _contexte global_ par l'intermédiaire de l'objet global (car l'objet global est lui-même l'objet des variables dans ce cas). Pour tous les autres contextes, faire référence à l'objet des variables est impossible, c'est un mécanisme du moteur.\n\nQuand nous déclarons une variable ou une fonction dans le contexte global, ce n'est rien d'autre que la création d'une nouvelle propriété au sein de l'objet des variables avec le nom et la valeur de notre variable (ou fonction).\n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar reportA = 10;\n\nfunction precogs(minorityReport) {\n    var reportB = 20;\n};\n\nprecogs(30);\n```\n\nAvec les objets des variables correspondant :\n\n*Pseudo-code*\n\n```js\n// Objet des variables du contexte global\nVO(globalContext) = {\n    reportA: 10,\n    precogs: \u003créférence à la `FD` `precogs`\u003e\n}\n\n// Objet des variables du contexte de la fonction `precogs`\nVO(\u003cprecogs\u003e functionContext) = {\n    minorityReport: 30,\n    reportB: 20\n}\n```\n\nVoilà pour une vision théorique. Il faut juste être conscient qu'au niveau de l'implémentation réelle, l'objet des variables est quelque chose d'abstrait. Dans un contexte d'exécution réel, `VO` porte un autre nom et à une structure probablement différente.\n\n\n\n\n\n## L'objet des variables dans différents contextes d'exécution\n\nCertaines opérations (comme l'affectation des variables) et comportement de l'objet des variables sont identiques pour toutes [les déclinaisons de contexte d'exécution](https://blog.lesieur.name/les-contextes-d-execution/).\n\nPour expliquer cela, il va être nécessaire de présenter une partie de l'objet des variables comme commun à toutes les déclinaisons et une partie définissant des éléments et comportements additionnels.\n\n*Schéma*\n\n```js\nVO // contient des `VD` et des `FD`\n║\n╠══\u003e VO(globalContext) === GO === this\n║\n╚══\u003e VO(functionContext) === AO // contient des `FP` et l'`ArgO`\n```\n\nVoyons cela plus en détail.\n\n\n\n### L'objet des variables dans le contexte global\n\nTout d'abord il est nécessaire de donner une définition de l'_objet global_.\n\nL'_objet global (dont la forme abrégée sera `GO` pour « global object »)_ est un objet qui est déjà existant avant l'entrée dans n'importe quel contexte d'exécution car il est créé au démarrage du programme. Cet objet existe en un unique exemplaire, et ses propriétés sont accessibles depuis n'importe quel endroit du programme. Le cycle de vie de l'objet global s'arrête quand le programme se termine.\n\n\u003e Notons que dans un environnement navigateur hôte, chaque script (utilisé avec la balise `\u003cscript\u003e` ou dans un attribut à JavaScript) a son propre contexte d'exécution global. Cela signifie que pour une page web donnée, il existe « des » contexte d'_exécution globaux_. Cependant, comme expliqué juste au dessus, l'_objet global_ est déjà existant dès qu'un script est exécuté et tous les contextes d'exécution globaux utilise un même objet global unique. Cependant, dans ce cas, le cycle de vie de l'objet global s'arrête seulement quand _tous_ les programmes sont terminés. Nous verrons cela plus en détail plus loin.\n\nÀ sa création, l'objet global est initialisé avec des propriétés comme `Math`, `String`, `Date`, `parseInt`, etc. Il possède parmi toutes ses propriétés une propriété circulaire faisant directement référence à lui-même. Dans le model objet des navigateurs, la propriété de l'objet global faisant référence à lui même se nomme `window` :\n\n*Pseudo-code*\n\nObjet global urique\n\n```js\nGO = {\n    Math: \u003c...\u003e,\n    String: \u003c...\u003e,\n    document: \u003c...\u003e,\n    \u003c...\u003e,\n    window: GO\n}\n```\n\nUne balise `\u003cscript\u003e`\n\n```js\nactiveGlobalContext1 = {\n    GO: {\n    \u0009...GO, // objet global unique\n        \u003c.1.\u003e, // données du contexte 1 (`VD` et `FD`)\n    }\n}\n```\n\nUne autre balise `\u003cscript\u003e`\n\n```js\nactiveGlobalContext2 = {\n    GO: {\n    \u0009...GO, // objet global unique et données du contexte 1\n        \u003c.2.\u003e, // données du contexte 2 (`VD` et `FD`)\n    }\n}\n```\n\nou encore dans Node.js, elle se nomme `global` :\n\n*Pseudo-code*\n\n```js\nactiveGlobalContext = {\n    GO: {\n        Math: \u003c...\u003e,\n        String: \u003c...\u003e,\n        process: \u003c...\u003e,\n        \u003c...\u003e,\n        global: GO,\n        \u003c...\u003e, // données du contexte global (`VD` et `FD`)\n    }\n}\n```\n\nCela dépend de l'implémentation.\n\nQuand nous faisons référence à une propriété de l'objet global nous n'utilisons aucun préfixe, juste son nom, car l'objet global n'est pas accessible. Cependant, il est possible d'en récupérer le contenu à travers sa référence circulaire à lui-même (`window` ou `global`) ou même à l'aide de [la valeur `this`](https://blog.lesieur.name/la-valeur-de-this/) dans le contexte global. Voyons cela :\n\n*Code JavaScript*\n\n```js\n// sans préfixe\nString(10); // === `GO.String(10)` mais `GO` n'est pas accessible\n\n// avec préfixes\nwindow.a = 10; // === `GO.window.a = 10` === `GO.a = 10`\nthis.b = 20; // === `GO.b = 20` === `GO.window.b = 20`\n```\n\nNous avons dit plus haut que l'objet des variables dans le contexte global est l'objet global lui-même :\n\n*Pseudo-code*\n\n```js\nVO(globalContext) === GO\n```\n\nIl est nécessaire de bien comprendre cela car c'est pour cette raison qu'il est possible d'accéder à une variable déclarée avec le mot clé `var` en accédant à une propriété de l'objet global :\n\n*Code JavaScript*\n\n```js\nvar mr = new String('test');\n\nalert(mr); // accès direct, elle est trouvée dans `VO(globalContext)['mr']` =\u003e `'test'`\n\nalert(window['mr']); // accès indirect via `GO.window['mr']` === `GO['mr']` === `VO(globalContext)['mr']` =\u003e `'test'`\nalert(mr === this.mr); // `true`\n\nvar mrKey = 'mr';\nalert(window[mrKey]); // accès indirect avec la résolution d'identifiant dynamique de propriété =\u003e `'test'`\n```\n\nL'objet global ne possède que des déclarations de variables et des déclarations de fonctions mais pas de paramètres formels.\n\n\n\n### L'objet des variables dans un contexte de fonction\n\nEn ce qui concerne les contextes d'exécution de fonctions l'objet des variables est inaccessible ni directement, ni indirectement. Il existe une équivalence de l'objet global pour le contexte de fonction qui est l'_objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\n*Pseudo-code*\n\n```js\nVO(functionContext) === AO\n```\n\nUn _objet d'activation_ est créé en entrant dans le contexte d'une fonction et initialisé avec la propriété `arguments` dont la valeur est l'_objet des arguments (dont la forme abrégée sera `ArgO` pour « arguments object »)_ :\n\n*Pseudo-code*\n\n```js\nactiveFunctionContext = {\n    AO: {\n        arguments: \u003cArgO\u003e,\n        \u003c...\u003e // données du contexte (`VD`, `FD` et `FP`)\n    }\n}\n```\n\nL'objet des arguments est une propriété de l'objet d'activation. Il contient les propriétés suivantes :\n\n- `callee` — une référence à la fonction courante,\n- `length` — la quantité d'arguments réellement passés,\n- `[array-index]` — des nombres (convertis en chaîne de caractère) dont les valeurs sont les mêmes que celles des paramètres formels (de gauche à droite dans la liste des paramètres). La taille de `[array-index]` est celle de `arguments.length`. Les valeurs de `[array-index]` (arguments réellement passés) de l'objet des arguments et celle des paramètres formels (paramètres définis) sont _partagées_.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nfunction precogs(xReport, yReport, zReport) {\n\n  // quantité de paramètres définis : xReport, yReport et zReport\n  alert(precogs.length); // `3`\n\n  // quantité d'arguments réellement passés : seulement xReport et yReport\n  alert(arguments.length); // `2`\n\n  // référence de la fonction à elle-même\n  alert(arguments.callee === precogs); // `true`\n\n  // paramètres partagés\n\n  alert(xReport === arguments[0]); // `true`\n  alert(xReport); // 10\n\n  arguments[0] = 20;\n  alert(xReport); // `20`\n\n  xReport = 30;\n  alert(arguments[0]); // `30`\n\n  // cependant, pour l'argument non passé zReport,\n  // le array-index de l'objet\n  // des arguments n'est pas partagée\n\n  zReport = 40;\n  alert(arguments[2]); // `undefined`\n\n  arguments[2] = 50;\n  alert(zReport); // `40`\n\n}\n\nprecogs(10, 20);\n```\n\nEn ce qui concerne le dernier cas, dans les anciennes versions de Google Chrome (moteur V8) il y avait un bug — où les paramètres `zReport` et `arguments[2]` étaient aussi partagés.\n\n\u003e En ES5 le concept d'objet d'activation est également remplacé par l'unique concept des _environnements lexicaux_ qui seront plus détaillés dans [le chapitre approprié](https://blog.lesieur.name/environnements-lexicaux/).\n\n\n\n\n\n## Phases de traitement du code des contextes d'exécution\n\nAprès quelques mises au point, nous avons enfin atteint le sujet principal de cet article : le traitement du code des contextes d'exécution. Ce traitement est divisé en deux phases :\n\n1. Entrée dans le contexte d'exécution ;\n2. Exécution du code.\n\n\n\n### Entrée dans le contexte d'exécution\n\nEn entrant dans le contexte d'exécution (mais _avant_ l'exécution du code), l'objet des variables est rempli avec les propriétés suivantes (elles ont déjà été décrite au début) :\n\n_uniquement pour les contextes de fonctions_\n\n- pour chaque paramètre formel d'une fonction,\n   - une propriété de l'objet des variables avec le nom et la valeur du paramètre formel est créée,\n   - et pour les arguments non passés une propriété de l'objet des variables avec le nom et la valeur `undefined` est créée ;\n\n_pour le contexte global et les contextes de fonctions_\n\n- pour chaque déclaration de fonction,\n   - une propriété de l'objet des variables avec le nom et la valeur de l'objet fonction est créée (si l'objet des variables contient déjà une propriété avec ce nom, sa valeur est _remplacée_),\n- pour chaque déclaration de variable,\n   - une propriété de l'objet des variables avec le nom et la valeur `undefined` est créée. Si le nom de la variable est le même que celui d'un paramètre formel ou qu'une déclaration de fonction cela _n'affecte pas_ la propriété existante.\n\nVoyons cela avec l'exemple suivant :\n\n*Code JavaScript*\n\n```js\nfunction precogs(reportA, reportB) {\n    var minorityReport = 10;\n    function agatha() {}\n    var dashiell = function dash() {};\n    (function arthur() {});\n}\n\nprecogs(10); // appel\n```\n\nEn _entrant_ dans le contexte de la fonction `precogs` avec le paramètre `10`, l'objet d'activation est le suivant :\n\n*Pseudo-code*\n\n```js\nAO(\u003cprecogs\u003e) = {\n\u0009arguments: \u003cArgO\u003e, // propriété de l'objet d'activation\n    reportA: 10,\n    reportB: undefined,\n    minorityReport: undefined,\n    agatha: \u003créférence à la FD `agatha`\u003e\n    dashiell: undefined\n}\n```\n\nNotons que cet objet d'activation ne contient pas la fonction `arthur`. Cela est dû au fait que `arthur` n'est pas une déclaration de fonction mais une _expression de fonction (dont la forme abrégée sera `FE` pour « function expression »)_. Les expressions de fonction n'affecte pas l'objet des variables.\n\nCependant la fonction `dash` est également une expression de fonction, mais comme nous le verrons plus bas, parce qu'elle est assignée à la variable `dashiell`, elle devient accessible via le paramètre `dashiell` de l'objet des variables. La différence entre une déclaration de fonction et une expression de fonction sera vu plus en détail dans le [chapitre approprié](https://blog.lesieur.name/les-fonctions/).\n\nEt maintenant attaquons nous à la seconde phase du traitement du code d'un contexte d'exécution — la phase d'_exécution du code_.\n\n\n\n### Exécution du code\n\nÀ ce stade un objet d'activation (ou l'objet global) est déjà rempli de ses propriétés (cependant, elles n'ont pas toutes leurs vraies valeurs car la plupart on encore la valeur `undefined`).\n\nConsidérez que tous les exemples fonctionnent pareil pour un objet d'activation ou l'objet global. Durant cette phase d'exécution, les valeurs sont alors modifiées comme suit :\n\n*Pseudo-code*\n\n```js\nAO['minorityReport'] = 10\nAO['dashiell'] = \u003créference à la `FE` `dash`\u003e\n```\n\nRappelons encore que l'expression de fonction `dash` est encore en mémoire _seulement parce qu'elle a été sauvée dans la déclaration de variable `dashiell`. Mais l'expression de fonction `arthur` n'est pas dans l'objet d'activation. Si nous essayons d'appeler la fonction `arthur` _avant_ ou _même après_ sa définition, nous auront l'erreur `\"arthur\" n'est pas défini(e)`. Les fonctions d'expression qui ne sont pas sauvées dans des variables ne peuvent être appelées qu'immédiatement ou à l'intérieur d'elles-même de manière récursive.\n\nVoici un autre exemple classique :\n\n*Code JavaScript*\n\n```js\nalert(john); // `function john() {}`\n\nvar john = 10;\nalert(john); // `10`\n\njohn = 20;\n\nfunction john() {}\n\nalert(john); // `20`\n```\n\nPourquoi dans la première alerte `john` est une fonction qui est accessible _avant_ sa déclaration ? Pourquoi ce n'est pas `10` ou `20` ? Parce que, selon les règles, l'objet des variables est rempli avec les déclarations de fonction en entrant dans le contexte. Pendant cette phase d'entrée dans le contexte il y a aussi une déclaration de variable `john`. Mais comme mentionné plus haut, cette étape est réalisée _après_ les déclarations de fonction et les paramètres formels et cette phase _n'affecte pas les propriétés existantes de même nom_ que ce soit pour les déclarations de fonction ou les paramètres formels. Donc en entrant dans le contexte l'objet des variables est rempli ainsi :\n\n*Pseudo-code*\n\n```js\nVO = {}\n\nVO['john'] = \u003créference à la `FD` `john`\u003e\n\n// `var john = 10;` trouvée\n// si la fonction `john` n'avait pas déjà été définie\n// et bien `john` aurait été `undefined`, mais dans notre cas\n// la déclaration de variable n'affecte pas\n// la valeur de la fonction avec le même nom\n\nVO['john'] = \u003cla valeur n'ai pas affectée, toujours la `FD`\u003e\n```\n\nEt ensuite, en entrant dans la phase d'exécution, l'objet des variables est modifié ainsi :\n\n*Pseudo-code*\n\n```js\nVO['john'] = 10\nVO['john'] = 20\n```\n\nc'est ce que nous pouvons voir dans la deuxième et troisième alerte.\n\nDans l'exemple ci-dessous nous voyons de nouveau que les variables sont mises dans l'objet des variables pendant la phase d'entrée dans le contexte (ainsi la structure `else` n'est jamais exécutée, mais, la variable `b` existe dans l'objet des variables) :\n\n*Code JavaScript*\n\n```js\nif (true) {\n    var reportA = 1;\n} else {\n    var reportB = 2;\n}\n\nalert(reportA); // `1`\nalert(reportB); // `undefined`, mais pas « erreur : `reportB` n'est pas défini(e) »\n```\n\nNotez que les paramètres formels sont les premiers à être ajouté à l'objet des variables (dans le cas d'un objet d'activation) lors de la phase d'entrée dans la fonction.\n\n\n\n\n\n## Fonctionnalité des navigateurs : les contextes globaux\n\nComme dit plus haut, une page web n'exécute pas un _Programme_ JavaScript mais autant de programmes qu'elle rencontre de balise `\u003cscript\u003e`, d'éléments `HTMLScriptElement` ou encore de code à exécuté en tant que JavaScript (attribut `onclick`, `href=\"javascripst: ...\"`, etc.). Il en résulte qu'il n'existe pas « un » contexte global mais des contextes globaux. Cependant, tous ces contextes utilisent le même _objet global_.\n\nLes phases d'entrée dans le contexte global et d'exécution du code global sont donc ré-itérées pour chaque nouveau programme (`\u003cscript\u003e`, etc). Mais a chaque fois, l'objet global (déjà disponible dès l'entrée dans le contexte) contient les déclarations de variables récupérées des contextes globaux précédents. Parceque les contextes globaux sont activés dans le même ordre que les programmes sont trouvés et qu'il n'existe pas de phase « d'entrée dans la page web », toute déclaration de variables venant du contexte global d'un programme qui sera exécuté plus tard n'est pas accessible dans le contexte global courant. À l'inverse, toutes déclarations de variables venant du contexte global d'un programme qui a déjà été exécuté est disponible et accessible. C'est la même chose pour les déclarations de fonctions. Voyons cela avec ces exemples :\n\n*Code HTML*\n\n```html\n\u003cscript\u003e\n    // Le script `echo1` sera analysé en premier\n\n    console.log(arthur); // `function arthur() {}`\n    console.log(agatha); // « error : `agatha` n'est pas défini(e) »\n    console.log(dashiell); // « error : `dashiell` n'est pas défini(e) »\n\n    function arthur() {}\n\u003c/script\u003e\n\u003cscript\u003e\n    // Le script `echo2` sera analysé en second\n\n    console.log(arthur); // `function arthur() {}`\n    console.log(agatha); // `10`\n    console.log(dashiell); // `function dashiell() {}`\n\n    var agatha = 10;\n    function dashiell() {}\n\u003c/script\u003e\n```\n\nCela remplit notre objet global consécutivement des manières suivantes : pour le premier script\n\n*Pseudo-code*\n\n```js\nGO(\u003cecho1\u003e) = {\n    \u003c...\u003e, // propriétés de l'objet global\n    arthur: \u003créférence à la FD `arthur`\u003e\n}\n```\n\net pour le second script\n\n```js\nGO(\u003cecho2\u003e) = {\n    \u003c...\u003e, // propriétés de l'objet global\n    arthur: \u003créférence à la FD `arthur`\u003e, // déjà présent dans l'objet global et trouvé d'un précédent programme\n    agatha: undefined,\n    dashiell: \u003créférence à la FD `dashiell`\u003e\n}\n```\n\nNous voyons donc pourquoi lors de la phase d'exécution, le premier script `echo1` retourne une erreur pour `agatha` et `dashiell` qui n'existeront dans l'objet global qu'après la phase d'entrée dans le contexte du script `echo2`.\n\nNotez également que par conséquent, de la même manière que l'ordre des instructions d'un code est important, l'ordre dans lequel les scripts sont appelés l'est aussi car il peut changer le fonctionnement d'un programme.\n\n*Code HTML*\n\n```html\n\u003cscript\u003e\n    // Ce script `echo2` sera analysé en premier\n\n    console.log(arthur); // « error : `arthur` n'est pas défini(e) »\n    console.log(agatha); // `10`\n    console.log(dashiell); // `function dashiell() {}`\n\n    var agatha = 10;\n    function dashiell() {}\n\u003c/script\u003e\n\u003cscript\u003e\n    // Ce script `echo1` sera analysé en second\n\n    console.log(arthur); // `function arthur() {}`\n    console.log(agatha); // `10`\n    console.log(dashiell); // `function dashiell() {}`\n\n    function arthur() {}\n\u003c/script\u003e\n```\n\nà cause de l'état de l'objet global évoluant ainsi :\n\n*Pseudo-code*\n\n```js\nGO(\u003cecho2\u003e) = {\n    \u003c...\u003e, // propriétés de l'objet global\n    agatha: 10,\n    dashiell: \u003créférence à la FD `dashiell`\u003e\n}\n```\n\net\n\n```js\nGO(\u003cecho1\u003e) = {\n    \u003c...\u003e, // propriétés de l'objet global\n    agatha: 10, // déjà présent dans l'objet global et trouvé d'un précédent programme\n    dashiell: \u003créférence à la FD `dashiell`\u003e  // déjà présent dans l'objet global et trouvé d'un précédent programme\n    arthur: \u003créférence à la FD `arthur`\u003e\n}\n```\n\n\n\n\n\n## À propos des variables\n\nOn voit souvent dans différents articles (et même livres) sur le JavaScript l'affirmation suivante : « il est possible de déclarer une variable globale en utilisant le mot-clé `var` (dans le contexte globale) et sans le mot-clé `var` (depuis n'importe quel contexte) ». Ce n'est pas exactement ça. Soyez assuré de cela :\n\n_Les variables se déclarent **uniquement** avec le mot-clé `var` (en ES3)._\n\nEt des affectations comme ci-dessous :\n\n*Code JavaScript*\n\n```js\nreportA = 10;\n```\n\ncréent simplement une nouvelle _propriété_ dans l'objet global mais _pas une variable_. « Pas une variable » mais pas dans le sens qu'elle ne pourra pas être changée lors de la phase d'exécution (on pourra y accéder car `VO(globalContext) === GO`) mais « pas une variable » dans le sens qu'elle n'est pas dans l'objet des variables lors de la phase d'entrée.\n\nRegardons cet exemple pour tester la différence :\n\n*Code JavaScript*\n\n```js\nalert(reportA); // `undefined`\nalert(reportB); // « erreur, `reportB` n'est pas défini(e) »\n\nreportB = 10;\nvar reportA = 20;\n```\n\nLa différence vient de l'objet des variables et des phases où il est modifié (phase d'_entrée dans le contexte_ et phase d'_exécution de code_) :\n\nPour l'entrée dans le contexte :\n\n*Pseudo-code*\n\n```js\nVO = {\n\u0009\u003c...\u003e, // propriétés de l'objet global\n    reportA: undefined\n}\n```\n\nNous voyons qu'il n'existe aucune variable `reportB`. `reportB` n'apparaîtra que lors de la phase d'exécution du code (et dans notre cas `reportB` n'apparaîtra pas car il va y avoir une erreur).\n\nChangeons le code :\n\n*Code JavaScript*\n\n```js\nalert(reportA); // `undefined`, nous savons pourquoi\n\nreportB = 10;\nalert(reportB); // `10`, créée lors de l'exécution du code\n\nvar reportA = 20;\nalert(reportA); // `20`, modifiée lors de l'exécution du code\n```\n\nVoici le point important en ce qui concerne les variables. Les variables, par opposition aux simples propriétés, ont un attribut `{DontDelete}`, ce qui signifie qu'il est impossible de les supprimer avec l'opérateur `delete` :\n\n*Code JavaScript*\n\n```js\nreportA = 10;\nalert(window.reportA); // `10`\n\nalert(delete reportA); // `true`\n\nalert(window.reportA); // `undefined`\n\nvar reportB = 20;\nalert(window.reportB); // `20`\n\nalert(delete reportB); // `false`\n\nalert(window.reportB); // toujours `20`\n```\n\n\u003e Notons qu'en ES5 `{DontDelete}` a été renommé en `[[Configurable]]` et peut être manuellement gérer via l'utilisation de la méthode `Object.defineProperty`.\n\nCependant il y a un contexte d'exécution ou cette règle n'a pas d'effet. C'est le contexte `eval` : l'attribut `{DontDelete}` n'est pas appliqué pour les variables :\n\n*Code JavaScript*\n\n```js\neval('var minorityReport = 10;');\nalert(window.minorityReport); // `10`\n\nalert(delete minorityReport); // `true`\n\nalert(window.minorityReport); // `undefined`\n```\n\nSi en essayant votre code dans une console JavaScript vous pouvez supprimer une variable, c'est que cette console utilise `eval` pour évaluer votre code.\n\n\n\n\n\n## Fonctionnalité des moteurs : la propriété `__parent__`\n\nComme nous l'avons déjà mentionné, conformément au standard, accéder directement à l'objet d'activation est impossible. Cependant, dans plusieurs moteurs comme SpiderMonkey ou Rhino les fonctions ont une propriété spéciale `__parent__` qui est une référence à l'objet d'activation (ou à l'objet global) dans lequel ces fonctions ont été créées.\n\nExemple (SpiderMonkey et Rhino) :\n\n*Code JavaScript*\n\n```js\nvar GO = this;\nvar minorityReport = 10;\n\nfunction agatha() {}\n\nalert(agatha.__parent__); // `GO`\n\nvar VO = agatha.__parent__;\n\nalert(VO.minorityReport); // `10`\nalert(VO === GO); // `true`\n```\n\nDans l'exemple ci-dessus nous voyons que `agatha` est créée dans le contexte global et sa propriété `__parent__` est ajoutée à l'objet des variables du contexte global, c.-à-d. à l'objet global.\n\nCependant obtenir l'objet d'activation dans SpiderMonkey de la même manière n'est pas possible : cela dépendra de la version, mais `__parent__` pour des fonctions dans des fonctions retournera `null` ou l'objet global.\n\nDans Rhino, l'accès à l'objet d'activation est permis et disponible de cette manière :\n\nExemple (Rhino) :\n\n*Code JavaScript*\n\n```js\nvar GO = this;\nvar reportA = 10;\n\n(function dashiell() {\n\n    var reportB = 20;\n\n    // l'objet d'activation du contexte `dashiell`\n    var AO = (function () {}).__parent__;\n\n    console.log(AO.reportB); // 20\n\n    // `__parent__` de l'objet d'activation\n    // courant est déjà l'objet global,\n    // c.-à-d. qu'une chaîne spéciale d'objets des variables est formée,\n    // on la nomme : chaîne des portées\n    console.log(AO.__parent__ === GO); // `true`\n\n    console.log(AO.__parent__.reportA); // `10`\n\n})();\n```\n\n\n\n\n\n## Conclusion ##\n\nDans cet article nous avons vu plus en détail l'étude des objets relatifs aux contextes d'exécution. Les prochains chapitres seront dévoués à [la résolution des identifiants](https://blog.lesieur.name/la-valeur-de-this/), [aux chaînes des portées](https://blog.lesieur.name/la-chaine-des-portees/) et, par conséquent, [aux fermetures](https://blog.lesieur.name/les-fermetures/) en JavaScript.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-contextes-d-execution/\"\u003e\u0026lt; Chapitre 1\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-valeur-de-this/\"\u003eChapitre 3 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [10.1.3 – Variable Instantiation](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.5 – Global Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.6 – Activation Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.8 – Arguments Object](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l'excellent billet [Тонкости ECMA-262-3. Часть 2. Объект переменных.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-2-variable-object/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-03-27T16:15:00.000Z"},"updated":[]},"description":"Comment, et quand l'interpréteur trouve les variables ? Que se passe t-il quand une référence à un objet est demandée ?","image":"https://blog.lesieur.name/media/images/upload/entree-execution.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap. 2 — L'objet des variables en JavaScript","urn":"l-objet-des-variables"}
{"_id":{"$oid":"58dcb6417924c16f049756ae"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cd"}],"content":"Ce billet fait partie de la collection _[ES3 dans le détail](https://blog.lesieur.name/categories/ecma-script/)_ et en constitue le Chapitre 3.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/what-is-this.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/what-is-this-mini.png\" alt=\"Jack Skellington cherche la valeur de `this`\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eJack Skellington cherche la valeur de `this`\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans cet article nous allons discuter d'une propriété supplémentaire liée aux contextes d'exécution : le mot-clé `this`.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/l-objet-des-variables/\"\u003e\u0026lt; Chapitre 2\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-chaine-des-portees/\"\u003eChapitre 4 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nBeaucoup de développeurs associent le mot-clé `this` à ce qu'il est dans la programmation orientée objet, à savoir, une référence à un objet nouvellement créé par un constructeur. En JavaScript ce concept existe aussi, cependant il ne se limite pas uniquement à la référence d'un objet instancié.\n\nComme la pratique le montre, ce sujet est assez difficile et trouver quelle est la valeur de `this` à travers les différents contextes d'exécution est bien souvent problématique.\n\nVoyons plus en détail toutes les possibilités offertes par le mot-clé `this` en JavaScript.\n\n\n\n\n\n## Définitions\n\n`this` est une propriété du _contexte d'exécution_. C'est un objet spécial du contexte dans lequel le code est exécuté.\n\n*Pseudo-code*\n\n```js\nactiveExecutionContext = {\n    VO: {\n        \u003c...\u003e\n    },\n    this: \u003cobjet dédiée ou GO\u003e\n}\n```\n\nIl y a l'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_ dont nous avons discuté dans [le chapitre précédent](https://blog.lesieur.name/l-objet-des-variables/).\n\nQuant à `this`, il est directement lié aux [types de codes exécutables](https://blog.lesieur.name/les-contextes-d-execution/) des contextes. La valeur de `this` est déterminée pendant la phase d'_entrée dans le contexte_ et est _immuable_ pendant que le code du contexte est exécuté.\n\nExaminons les différents cas en détail.\n\n\n\n\n\n## La valeur de `this` dans le code global\n\nDans le code du contexte global, la valeur de `this` est _toujours_ l'_objet global (dont la forme abrégée sera `GO` pour « global object »)_. Il est donc possible d'y faire référence indirectement comme suit :\n\n*Code JavaScript*\n\n```js\n// Définition explicite d'une propriété de `this`\nthis.jack = 10; // === (GO.jack = 10)\nconsole.log(jack); // `10`\n\n// Définition implicite via l'assignation d'une propriété de l'objet global\nsally = 20;\nconsole.log(this.sally); // `20`\n\n// Définition implicite via la déclaration d'une variable\n// car l'objet des variables du contexte global est l'objet global lui-même\nvar zero = 30;\nconsole.log(this.zero); // `30`\n```\n\n\n\n\n\n## La valeur de `this` dans le code des fonctions\n\nLes choses sont plus intéressantes quand `this` est utilisé à l'intérieur d'une fonction. Ce cas est le plus compliqué et est la cause de beaucoup de problèmes.\n\nLa première (et surement la plus importante) chose à savoir sur le mot-clé `this` dans ce type de code est qu'ici elle _n'est pas statiquement liée_ à la fonction.\n\nComme mentionné plus haut, la valeur de `this` est déterminée pendant la phase d'entrée dans le contexte et dans le cas d'une fonction, cette valeur peut être _complètement différente à chaque fois (à chaque appel)_.\n\nCependant, une fois la phase d'exécution du code en cours, la valeur de `this` est _immuable_. C.-à-d. qu'il n'est pas possible de lui affecter une nouvelle valeur car _ce n'est pas une variable_ (par opposition au langage de programmation _Python_, par exemple, dont l'objet `self` est explicitement défini et peut donc être redéfini à souhait pendant la phase d'exécution) :\n\n*Code JavaScript*\n\n```js\nvar nightmare = { gift: 10 };\n\nvar christmas = {\n    gift: 20,\n    party: function () {\n\n        console.log(this === christmas); // `true`\n        console.log(this.gift); // `20`\n\n        this = nightmare; // « erreur : cette valeur ne peut être changée »\n\n        // console.log(this.gift); // `20`\n        // S'il n'y avait pas eu d'erreur, cette valeur aurait pu être `10` à la place\n\n    }\n\n};\n\n// pendant la phase d'entrée dans le contexte la valeur de `this`\n// est déterminée comme se référent à `christmas` ; pourquoi ?\n// nous en discuterons plus en détail plus bas\n\nchristmas.party(); // `true`, `20`\n\nnightmare.party = christmas.party;\n\n// cependant juste après, la valeur de `this` se réfère\n// à `nightmare`, même si nous appelons la même fonction\n\nnightmare.party(); // `false`, `10`\n```\n\nAlors qu'est-ce qui fait varier la valeur de `this` dans le code d'une fonction ? Sa façon d'être activée.\n\nDans une fonction appelée de manière standard, `this` est fourni par l'_appelant (« caller »)_ qui active le code du contexte, c.-à-d. _le contexte parent qui appelle la fonction_. Et la valeur de `this` est déterminée par _la forme de l'expression appelante_ (en d'autres mots, par la forme _syntaxique_ avec laquelle la fonction est appelée).\n\n\u003e C'est réellement un point _important_ aussi nous allons encore insister sur ce point une nouvelle fois afin de déterminer sans problèmes la valeur de `this` dans chaque contexte. **La forme de l'expression appelante, c.-à-d. la manière dont la fonction est appelée, est la seule chose qui influence la valeur de `this` dans le contexte appelé.**\n\nCela signifie donc que si vous avez pu lire dans différents articles (et même livres) sur le JavaScript ceci :\n\n\u003e _« La valeur de `this` dépend de la manière dont la fonction est définie._\n- _Si c'est une fonction globale, `this` se réfère à l'objet global, et_\n- _Si cette fonction est la méthode d'un objet, la valeur de `this` est toujours cet objet »._\n\nHé bien ces articles se trompaient.\n\nNous allons voir que même une fonction globale peut être activée avec _différentes formes d'expression appelante_ qui influence tout autant la valeur de `this` :\n\n*Code JavaScript*\n\n```js\nfunction gift() {\n    console.log(this);\n}\n\ngift(); // `GO`\n\nconsole.log(gift === gift.prototype.constructor); // `true`\n\n// mais en exécutant notre fonction sous une forme d'expression appelante différente,\n// pour la même fonction, la valeur de `this` est différente\n\ngift.prototype.constructor(); // vaut le prototype de la fonction soit `gift.prototype`.\n```\n\nAutre exemple. Il est aussi possible d'appeler une fonction définie en tant que méthode d'un objet, mais que la valeur de `this` ne fasse pas référence à cet objet :\n\n*Code JavaScript*\n\n```js\nvar gift = {\n    toy: function () {\n        console.log(this);\n        console.log(this === gift);\n    }\n};\n\ngift.toy(); // `gift`, `true`\n\nvar present = gift.toy;\n\nconsole.log(present === gift.toy); // `true`\n\n// cependant une fois encore sous une nouvelle forme d'expression appelante\n// à partir de la même fonction, nous avons une valeur de `this` différente\n\npresent(); // `GO`, `false`\n```\n\nMaintenant que la vérité est (r)établie, voyons comment concrètement la forme de l'expression appelante influence la valeur de `this`.\n\nAfin d'y répondre, il faut d'abord comprendre par quel mécanisme interne est déterminée la valeur de `this`. Pour cela il est nécessaire de voir plus en détail un type interne du JavaScript — le type `Reference`.\n\n\n\n### Le type `Reference`\n\nEn utilisant du pseudo-code, une valeur de type `Reference` peut être représentée comme un objet avec deux propriétés : _la base_ (c.-à-d. l'objet auquel appartient la propriété) et _le nom de la propriété_ pour cette base :\n\n*Pseudo-code*\n\n```js\nvalueOfReferenceType = {\n    base: \u003cobjet de la propriété\u003e,\n    propertyName: \u003cnom de la propriété\u003e\n}\n```\n\n\u003e Notons que depuis ES5 une référence contient également une propriété nommée `strict` qui est une valeur indiquant si la référence doit être résolue en mode strict ou non.\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e 'use strict';\n\u003e \n\u003e // Accès à `jack`.\n\u003e jack;\n\u003e ```\n\u003e \n\u003e *Pseudo-code*\n\u003e \n\u003e ```js\n\u003e // Référence pour `jack`.\n\u003e jackReference = {\n\u003e     base: GO,\n\u003e     propertyName: 'jack',\n\u003e     strict: true\n\u003e }\n\u003e ```\n\nLa valeur d'un type `Reference` peut _seulement être de deux sortes_ :\n\n1. Récupérée à partir d'un identifiant,\n2. Récupérée à partir d'un accesseur de propriété.\n\n#### Les identifiants\n\nLes identifiants sont pris en charge par le processus de résolution d'identifiant qui sera vu plus en détail dans le chapitre sur [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/). Nous allons tout de même voir ici que cet algorithme de résolution retourne toujours une valeur de type `Reference` (qui est un élément important pour trouver la valeur de `this`).\n\nLes identifiants sont des noms de variables, des noms de fonctions, des noms de paramètres et des noms de propriétés non qualifiées (des propriétés de l'objet global accédées sans préfix). Par exemple, en ce qui concerne les valeurs des identifiants suivants :\n\n*Code JavaScript*\n\n```js\nvar jack = 10; // variable\nfunction sally() {}; // fonction\nzero = 'ghost'; // propriété non qualifiée\n```\n\nun résultat intermédiaires des opérations de résolution, correspondant au type `Reference` serait le suivant :\n\n*Pseudo-code*\n\n```js\njackReference = {\n    base: GO,\n    propertyName: 'jack'\n}\n\nsallyReference = {\n    base: GO,\n    propertyName: 'sally'\n}\n\nzeroReference = {\n    base: GO,\n    propertyName: 'zero'\n}\n```\n\nEt pour obtenir la _valeur réelle_ d'un objet depuis sa valeur de type `Reference`, il y a une méthode interne `GetValue` qui peut-être décrite en pseudo-code comme suit :\n\n*Pseudo-code*\n\n```js\nfunction GetValue(value) {\n\n    // Quand on ne demande pas la valeur d'un type `Reference`\n    if (Type(value) !== Reference) {\n        return value;\n    }\n\n    // Obtenir ce sur quoi pointe la référence\n    base = GetBase(value);\n\n    // Vérifier qu'elle ne pointe pas dans le vide\n    if (base === null) {\n       throw new ReferenceError;\n    }\n\n    // Obtenir cette valeur\n    return base.[[Get]](GetPropertyName(value));\n\n}\n```\n\nil y a une méthode interne `[[Get]]` qui retourne _la valeur réelle_ de la propriété d'un objet, incluant au préalable l'analyse de l'héritage de cette valeur vis-à-vis de la chaîne des prototypes :\n\n*Pseudo-code*\n\n```js\nGetValue(jackReference) // `10`\nGetValue(sallyReference) // `function sally() {}`\nGetValue(zeroReference) // `'ghost'`\n```\n\n#### Les accesseurs de propriété\n\nLes accesseurs de propriété utilise aussi ce mécanisme : il y en a deux types : la _notation point (« dot »)_ (quand la propriété a un nom correct et connu à l'avance), ou la _notation crochet droit (« bracket »)_ :\n\n*Code JavaScript*\n\n```js\nvar barrel = {\n    lock: function shock() {}\n}\n\n// accesseurs\nbarrel.lock(); // accès direct\nbarrel['lock'](); // accès indirect dites la résolution d'identifiant dynamique de propriété\n```\n\nDont un retour de calcul intermédiaire de type `Reference` est :\n\n*Pseudo-code*\n\n```js\nbarrelLockReference = {\n    base: barrel,\n    propertyName: 'lock'\n}\n\nGetValue(barrelLockReference) // `function shock() {}`\n```\n\n#### Détermination de `this`\n\nDonc reposons la question une dernière fois : en quoi la valeur de type `Reference` est liée à la valeur de `this` du contexte de la fonction ? C'est parti pour la révélation principale de cet article.\n\nLa règle générale de la détermination de la valeur de `this` dans un contexte de fonction est la suivante :\n\nLa valeur de `this` dans un contexte de fonction est fournie par _l'appelant et déterminée en fonction de la forme de l'expression appelante_ (la manière dont la fonction est syntaxiquement appelée).\n\nSi sur la partie à gauche des parenthèses appelante `(...)`, il y a une valeur de type `Reference` alors la valeur de `this` associée est celle contenu dans _la base_ de cette valeur de type `Reference`.\n\n_Dans tous les autres cas_ (c.-à-d. avec _n'importe quelle autre_ valeur qui n'est pas un type `Reference`), la valeur de `this` est toujours mise à `null`. Mais comme il n'y a pas de sens à ce que la valeur de `this` soit `null`, cette valeur est implicitement remplacée par _l'objet global_.\n\nMontrons un exemple :\n\n*Code JavaScript*\n\n```js\nfunction barrel() {\n    return this;\n}\n\nbarrel(); // `this` vaut `GO`\n```\n\nNous voyons que dans la partie gauche des parenthèses appelantes il y a une valeur de type `Reference` (car _barrel_ est un identifiant (nom de fonction)) :\n\n*Pseudo-code*\n\n```js\nbarrelReference = {\n    base: GO,\n    propertyName: 'barrel'\n}\n```\n\nDonc, la valeur de `this` est définie comme étant celle de la base de la valeur du type `Reference`, c.-à-d. l'objet global.\n\nVoyons que cela est similaire avec un accesseur de propriété :\n\n*Code JavaScript*\n\n```js\nvar barrel = {\n    lock: function shock() {\n        return this;\n    }\n};\n\nbarrel.lock(); // `this` vaut `barrel`\n```\n\nNous avons de nouveau une valeur de type `Reference` avec pour base l'objet `barrel` qui va donc être utilisé comme valeur de `this` lors de la phase d'activation :\n\n*Pseudo-code*\n\n```js\nbarrelLockReference = {\n    base: barrel,\n    propertyName: 'lock'\n}\n```\n\nCependant, activer _la même fonction_ avec _une autre forme d'expression appelante_, nous montre que l'on a une autre valeur de `this` :\n\n*Code JavaScript*\n\n```js\nvar oogieBoogie = barrel.lock;\noogieBoogie(); // `this` vaut `GO`\n```\n\ncar `oogieBoogie` étant un identifiant, il produit une autre valeur de type `Reference`, utilisé comme base (l'objet global) et donc pour la valeur `this` :\n\n*Pseudo-code*\n\n```js\noogieBoogieReference = {\n    base: GO,\n    propertyName: 'oogieBoogie'\n}\n```\n\n\u003e Notons qu'en mode strict en ES5, la valeur de `this` n'est pas associée à l'objet global mais est mise à `undefined`.\n\nMaintenant nous pouvons exactement dire pourquoi la même fonction activée sous _différente forme d'expression appelante_ a différentes valeurs de `this`. La réponse est qu'il y a une valeur intermédiaire de type `Reference` différente :\n\n_Cas des identifiants_\n\n*Code JavaScript*\n\n```js\nfunction barrel() {\n    console.log(this);\n}\n\nbarrel(); // `GO`\n```\n\ncar\n\n*Pseudo-code*\n\n```js\nbarrelReference = {\n    base: GO,\n    propertyName: 'barrel'\n}\n```\n\n_Cas des accesseurs de propriété_\n\n*Code JavaScript*\n\n```js\nconsole.log(barrel === barrel.prototype.constructor); // true\n\n// autre forme d'expression appelante\n\nbarrel.prototype.constructor(); // `barrel.prototype`\n```\n\ncar\n\n*Pseudo-code*\n\n```js\nbarrelPrototypeConstructorReference = {\n    base: barrel.prototype,\n    propertyName: 'constructor'\n}\n```\n\nVoici encore un autre exemple classique avec une détermination dynamique de la valeur de `this` en fonction de la forme de l'expression appelante :\n\n*Code JavaScript*\n\n```js\nfunction barrel() {\n    console.log(this.lock);\n}\n\nvar nightmare = { lock: 10 };\nvar christmas = { lock: 20 };\n\nnightmare.gift = barrel;\nchristmas.gift = barrel;\n\nnightmare.gift(); // `10`\nchristmas.gift(); // `20`\n```\n\n\n\n### Appel de fonctions et types sans `Reference`\n\nNous avons noté plus haut que dans le cas ou la partie gauche des parenthèses appelantes est une valeur qui _n'est pas_ de type `Reference` (mais de _n'importe quel autre_ type), la valeur de `this` est automatiquement mise à `null` et, par conséquent, remplacée par l'_objet global_.\n\nImaginons un exemple avec une tel expression :\n\n*Code JavaScript*\n\n```js\n(function () {\n    console.log(this); // `null` =\u003e `GO`\n})();\n```\n\nDans ce cas, nous avons une fonction de type `Object` (d'instance `Function`) mais pas un type `Reference` (il n'y a aucun identifiant ou accesseur de propriété à résoudre) et donc la valeur de `this` est finalement remplacée par celle de l'objet global.\n\nVoici des exemples plus complexes :\n\n*Code JavaScript*\n\n```js\nvar barrel = {\n    lock: function () {\n        console.log(this);\n    }\n};\n\nbarrel.lock(); // Premier cas\n(barrel.lock)(); // Deuxième cas\n(barrel.lock = barrel.lock)(); // Troisième cas\n(false || barrel.lock)(); // Quatrième cas\n(barrel.lock, barrel.lock)(); // Cinquième cas\n```\n\nNous avons un _accesseur de propriété_ dont la valeur intermédiaire devrait normalement être une valeur de type `Reference` nous fournissant en base l'objet `barrel` (Premier cas) mais qui pourtant dans certains cas nous donne pour `this` une base valant `GO` (Autres cas ?).\n\nLe point ici c'est que les trois dernier appels (qui on bien une partie à gauche des parenthèses appelantes) _après l'application de certaines opérations_ ne retournent pas une valeur de type `Reference`.\n\n- Avec le premier cas tout est clair. Il n'y a sans l'ombre d'un doute un type `Reference` qui est résolu, et donc par conséquent, la valeur de `this` est la base de cette référence. C.-à-d. `barrel`.\n\n- Dans le deuxième cas, il y a un _opérateur de groupement_ qui _n'applique pas_, comme nous l'avons vu plus haut, la méthode pour aller chercher la valeur réel d'un objet depuis une valeur de type `Reference`, c.-à-d. qui n'applique pas `GetValue`. Sachant cela, après l'évaluation de l'opérateur de groupement qui dans ce cas retourne simplement `barrel.lock`, nous obtenons de nouveau une expression à gauche dont la valeur sera de type `Reference` et dont la base sera pour `this` l'objet `barrel`.\n\n- Dans le troisième cas, l'opération dans l'opérateur de groupement ce fait avec l'_opérateur d'affectation_, à la différence d'une opération réalisée uniquement avec un opérateur de groupement, l'_opérateur d'affectation_ appel la méthode `GetValue`. La conséquence est que cela nous ramène, une fois l'expression complètement évaluée, une fonction de type `Object` (mais pas une valeur de type `Reference`). Dans ce cas `this` vaut `null` et, par conséquent, vaut l'_objet global_.\n\n- De la même manière pour les quatrième et cinquième exemples, l'_opérateur virgule_ et l'_opérateur d'expression logique OU_ font appel à la méthode interne `GetValue`. Ils perdent leurs valeurs de type `Reference` pour retourner une valeur de type `Object` (une fonction). Donc `this` finit par valoir l'_objet global_.\n\n\n\n### Le type `Reference` et la valeur `null` de `this`\n\nNous avons vu qu'il y a des cas où l'appel de l'expression se situant sur la partie gauche des parenthèses retourne bien une valeur intermédiaire de type `Reference` mais qu'il y a aussi des cas ou la valeur de `this` est à `null` (et donc remplacée par l'_objet global_). C'est ce qui arrive quand la base de la valeur du type `Reference` est un _objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\nNous pouvons mettre en évidence cela dans un exemple avec une fonction interne à une fonction parente appelante. Comme nous l'avons vu dans le [deuxième chapitre](https://blog.lesieur.name/l-objet-des-variables/) ; les variables locales, les fonctions internes et les paramètres formels sont stockés dans l'_objet d'activation_ ce qui donne :\n\n*Code JavaScript*\n\n```js\nfunction jack() {\n    function sally() {\n        console.log(this); // `GO`\n    }\n    sally(); // Comme la base de `sally` est `AO(jack)`, `this` est remplacé par `GO`\n}\n```\n\nL'objet d'activation retourne toujours une valeur de `this` équivalente à `null` (c.-à-d. que le pseudo-code `AO(jack)` est équivalent à `null`). Ici encore nous en revenons à la description précédente indiquant que la valeur de `this` dans le cas où elle est `null` est l'_objet global_.\n\nUne exception demeure cependant avec une fonction qui serait appelée dans la structure de contrôle `with` dans le cas ou `with` contiendrait un nom de propriété de fonction. La structure de contrôle `with` ajoute ses objets en amont de la [chaîne de portées](https://blog.lesieur.name/la-chaine-des-portees/) c.-à-d. _avant_ l'objet d'activation. Par conséquent, la base de la valeur de type `Reference` (par un identifiant ou un accesseur de propriété) n'est pas l'objet d'activation mais l'objet de la structure de contrôle `with`. Au passage, cela n'est pas vrai uniquement pour des fonctions internes mais également pour des fonctions globales car l'objet `with` _masque_ les objets les plus hauts (objet global ou objet d'activation) dans la chaîne des portées :\n\n*Code JavaScript*\n\n```js\nvar gift = 10;\n\nwith ({\n\n    jack: function () {\n        console.log(this.gift);\n    },\n    gift: 20\n\n}) {\n\n    jack(); // 20\n\n}\n```\n\ncar\n\n*Pseudo-code*\n\n```js\njackReference = {\n    base: __withObject,\n    propertyName: 'jack'\n}\n```\n\nUne situation similaire intervient en appelant une fonction qui serait le premier argument de la structure de contrôle `catch` : dans ce cas, l'objet `catch` est aussi ajouté _en amont_ de la chaîne des portées c.-à-d. _avant_ l'objet d'activation ou l'objet global. Cependant, ce comportement est reconnu comme un bug dans ECMA-262-3 car la nouvelle version du standard ECMA-262-5 rectifie cela. C.-à-d. que la valeur de `this` pour un objet d'activation doit être équivalent à l'objet global et non plus à l'objet `catch` :\n\n*Code JavaScript*\n\n```js\ntry {\n    throw function () {\n        console.log(this);\n    };\n} catch (nightmare) {\n    nightmare(); // `__catchObject` en ES3, `GO` dans la version ES5\n}\n```\n\nc.-à-d. en ES3\n\n*Pseudo-code*\n\n```js\nnightmareReference = {\n    base: __catchObject,\n    propertyName: 'nightmare'\n}\n```\n\nmais en ES5\n\n*Pseudo-code*\n\n```js\nnightmareReference = {\n    base: GO,\n    propertyName: 'nightmare'\n}\n```\n\nOn a également la même situation avec un appel récursif d'[une expression de fonction nommée](https://blog.lesieur.name/les-fonctions/) (plus de détails à propos des fonctions seront données dans le [chapitre 5](https://blog.lesieur.name/les-fonctions/)). Au premier appel de la fonction, la base de la valeur intermédiaire de type `Reference` est l'objet d'activation parent (soit l'objet global), mais dans les appels récursifs — la base devrait être un objet spécial stockant le nom optionnel de l'expressions de fonction. Cependant, dans ce cas, la valeur de `this` associée est toujours l'objet global :\n\n*Code JavaScript*\n\n```js\n(function nightmare(jack) {\n\n    console.log(this);\n\n    !jack \u0026\u0026 nightmare(1); // « devrait » être un objet spécial, mais est toujours l'objet global\n\n})(); // `GO`\n```\n\n\n\n### La valeur de `this` dans une fonction appelée en tant que constructeur\n\nIl y a un cas de plus en rapport avec la valeur de `this` dans un contexte de fonction. On le nomme appel de fonction en tant que constructeur :\n\n*Code JavaScript*\n\n```js\nfunction Happy() {\n    console.log(this); // objet nouvellement créé plus bas et nommé `happy`\n    this.halloween = 10;\n}\n\nvar happy = new Happy();\nconsole.log(happy.halloween); // `10`\n```\n\nDans ce cas, l'opérateur `new` appel la méthode interne `[[Construct]]` de la fonction `Halloween` qui va appeler à son tour la méthode interne `[[Call]]` après chaque création d'un nouvel objet pour fournir une nouvelle valeur de `this` pour chacun d'eux.\n\n\n\n### Manuellement affecter la valeur de `this` à l'appel d'une fonction.\n\nIl y a deux méthodes définies dans `Function.prototype` (et donc accessibles par toutes les fonctions), permettant de spécifier la valeur de `this` manuellement lors de l'appel d'une fonction. Ces méthodes sont `apply` et `call`.\n\nChacune d'entre elles accepte en premier argument la valeur que va prendre `this` dans le contexte créé lors de l'appel. La différence entre ces deux méthodes est vraiment minime. Pour `apply` le second argument est obligatoirement un objet sous forme de tableau (ou un objet s'en rapprochant comme la propriété `arguments` de l'objet d'activation) dont chaque élément dans l'ordre sera associé à chaque paramètre de la fonction de gauche à droite. Pour `call` la méthode accepte n'importe quels arguments. Le seul paramètre obligatoire pour ces deux méthodes est le premier, c.-à-d. la valeur que prendra `this`.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar sally = 10;\n\nfunction halloween(jack) {\n    console.log(this.sally);\n    console.log(jack);\n}\n\nhalloween(20); // `this === GO`, `this.sally === 10` et `jack === 20`\n\nhalloween.call({ sally: 20 }, 30); // `this === \u003cpremier argument\u003e`, `this.sally === 20` et `jack === 30`\nhalloween.apply({ sally: 30 }, [40]) // `this === \u003cpremier argument\u003e`, `this.sally === 30` et `jack === 40`\n```\n\n\n\n\n\n## Conclusion\n\nDans cet article nous avons discuté des fonctionnalités du mot-clé `this` en JavaScript (qui est vraiment _une fonctionnalité_ par comparaison au C++ ou au Java). Dans le prochain chapitre de cette série, nous allons éclaircir un point plusieurs fois mentionné dans cet article : [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/).\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/l-objet-des-variables/\"\u003e\u0026lt; Chapitre 2\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-chaine-des-portees/\"\u003eChapitre 4 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [10.1.7 – This](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.1.1 – The this keyword](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.2.2 – The new operator](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.2.3 – Function calls](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre ré-écriture française de l'excellent billet [Тонкости ECMA-262-3. Часть 3. This.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-3-this/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-03-30T07:39:00.000Z"},"updated":[]},"description":"Dans cet article nous allons discuter d'une propriété supplémentaire liée aux contextes d'exécution : le mot-clé this.","image":"https://blog.lesieur.name/media/images/upload/what-is-this.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 3. — La valeur de this en JavaScript","urn":"la-valeur-de-this"}
{"_id":{"$oid":"58de49be7924c16f049756af"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"Ce billet fait partie de la collection _[ES3 dans le détail](https://blog.lesieur.name/categories/ecma-script/)_ et en constitue le Chapitre 4.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/scope-chain.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/scope-chain-mini.png\" alt=\"Tout comme l'Animus, la chaîne des portées nous permet de savoir de quel ancêtre nous vient une caractéristique !\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eTout comme l'Animus, la chaîne des portées nous permet de savoir de quel ancêtre nous vient une caractéristique !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nCe chapitre est dédié, encore une fois, à un mécanisme lié aux contextes d'exécution : j'ai nommé la _chaîne des portées_.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/la-valeur-de-this/\"\u003e\u0026lt; Chapitre 3\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fonctions/\"\u003eChapitre 5 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nComme nous l'avons vu dans [le deuxième chapitre](https://blog.lesieur.name/l-objet-des-variables/), les données d'un [contexte d'exécution](https://blog.lesieur.name/les-contextes-d-execution/) (variables, déclarations de fonctions et paramètres formels) sont stockés dans des propriétés de l'_objet des variables (dont la forme abrégée sera `VO` pour « variable object »)_.\n\nNous avons également vu qu'un objet des variables est créé et lié à chaque entrée dans un contexte d'exécution avec des valeurs initiales et que ces valeurs sont mises à jour pendant la phase d'exécution.\n\nVoyons à présent ce qu'il en est pour la chaîne des portées.\n\n\n\n\n\n## Définition\n\nLa chaîne des portées est intimement liée aux fonctions internes.\n\nComme nous le savons, il est permis en JavaScript de créer des fonctions à l'intérieur d'autres fonctions et il est même permis de faire retourner cette fonction interne par la fonction principale.\n\n*Code JavaScript*\n\n```js\nvar manuscripts = 20;\n\nfunction desmond() {\n\n    var letters = 20;\n\n    function edward() {\n        alert(manuscripts + letters);\n    }\n\n    return edward;\n\n}\n\ndesmond()(); // `40`\n```\n\nNous savons également que _chaque contexte d'exécution a son propre objet des variables_ :\n\n- pour le contexte global c'est l'_objet global (dont la forme abrégée sera `GO` pour « global object »)_ lui-même et\n- pour les contextes de fonctions c'est un _objet d'activation (dont la forme abrégée sera `AO` pour « activation object »)_.\n\nEt où vient se placer la chaîne des portées dans tout cela ?\n\nEh bien la chaîne des portées est très exactement _la liste de tous les objets des variables parents_ pour un contexte donné. C.-à-d., dans l'exemple précédent, que la chaîne des portées du contexte de `edward` inclut `VO(\u003cedward\u003e functionContext)`, `VO(\u003cdesmond\u003e functionContext)` et `VO(globalContext)` (ou écrit autrement : `AO(\u003cedward\u003e)`, `AO(\u003cdesmond\u003e)` et `GO`).\n\nExaminons cela plus en détail.\n\n\u003e La _chaîne des portées (dont la forme abrégée sera `Scope` pour « scope chain »)_ est liée à la _chaîne des objets des variables_ d'un contexte et est utilisée pour trouver en amont une variable, une fonction ou un paramètre lors de la _résolution d'identifiant_.\n\nLa chaîne des portées d'un contexte de fonction est créée lors de l'_appel_ de celle-ci et est une propriété de l'_objet d'activation_. La chaîne des portées est résolue grâce à la propriété interne `[[Scope]]` appartenant à la fonction elle-même. Nous discuterons plus en détail de cette propriété [[Scope]] plus bas.\n\nConcernant la chaîne des portées, elle peut-être décrite de la manière suivante avec du pseudo-code :\n\n*Pseudo-code*\n\n```js\nactiveExecutionContext = {\n    AO: { \u003c...\u003e }, // ou `VO`\n    this: \u003cvaleur de this\u003e,\n    Scope: [ // chaîne des portées\n      // liste de tous les objets des variables\n      // pour la résolution d'identifiant en amont\n    ]\n}\n```\n\noù `Scope` est par définition\n\n*Pseudo-code*\n\n```js\nScope = AO + [[Scope]]\n```\n\nNous pouvons représenter `Scope` et `[[Scope]]` comme un tableau standard en JavaScript :\n\n*Pseudo-code*\n\n```js\n// chaîne des objets des variables parents\n[[Scope]] = [VO1, VO2, ..., VOn] // propriété de l'objet de la fonction\n\n// chaîne des portées\nScope = AO + [[Scope]] // propriété du contexte d'exécution de la fonction\n```\n\nCe qui nous donne pour notre exemple précédent dans le cas de la fonction `edward` :\n\n*Pseudo-code*\n\n```js\nedward.[[Scope]] = [AO(\u003cdesmond\u003e), GO]\n\n// ou encore\n\nScope(\u003cedward\u003e functionContext) = [AO(\u003cedward\u003e)].concat(edward.[[Scope]])\n```\n\nUne vue alternative de la structure serait de représenter cela comme une chaîne d'objets hiérarchiques avec une référence à l'objet des variables parents pour chaque maillon de la chaîne. C'est le même concept utilisant la fonctionnalité `__parent__` implémentée dans certains moteurs JavaScript que nous avons vus dans le [chapitre 2](https://blog.lesieur.name/l-objet-des-variables/) dédié à l'objet des variables. Ce qui donnerait pour `edward` et `desmond` :\n\n*Pseudo-code*\n\n```js\nedward.[[Scope]] = {\n    letters: 20,\n    __parent__: desmond.[[Scope]]\n}\n\ndesmond.[[Scope]] = {\n    manuscripts: 20,\n    __parent__: null\n}\n```\n\nMais la représentation de la chaîne des portées sous forme de tableau étant la plus pratique, nous utiliserons cette représentation. C'est d'ailleurs l'abstraction qu'en fait la spécification elle-même (voir [10.1.4](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf)) : « une chaîne de portées est une _liste_ d'objets » indépendamment de ce qui sera fait au niveau de l'implémentation. Pour en revenir à notre article, le tableau est donc un bon candidat pour représenter ce concept de _liste_. Soit pour `edward` :\n\n\n*Pseudo-code*\n\n```js\nedward.[[Scope]] = [AO(\u003cdesmond\u003e), GO]\n```\nc.-à-d.\n\n*Pseudo-code*\n\n```js\nedward.[[Scope]] = [{\n    letters: 20\n}, {\n    manuscripts: 20\n}]\n```\n\nLa combinaison `AO + [[Scope]]` ainsi que le processus de _résolution d'identifiant_, dont nous allons parler plus loin, sont liés au cycle de vie des fonctions.\n\n\n\n\n\n## Cycle de vie des fonctions\n\nLe cycle de vie d'une fonction est divisé en une phase de _création de la fonction_ (avec `function`) et une phase d'_activation de la fonction_ (appel de la fonction avec `()`).\n\n### Création de la fonction\n\nComme nous le savons, les _déclarations de fonctions (dont la forme abrégée sera `FD` pour « function declaration »)_ sont mises dans les objets des variables (objet global ou objet d'activation) lors de la phase d'entrée dans le contexte. Voyons dans l'exemple ci-dessous une variable et une déclaration de fonction dans le contexte global (où l'objet des variables est l'objet global lui-même — pas d'objet d'activation) :\n\n*Code JavaScript*\n\n```js\nvar manuscripts = 20;\n\nfunction altaïr() {\n  var letters = 20;\n  alert(manuscripts + letters);\n}\n\naltaïr(); // `40`\n```\n\nLors de l'activation (l'appel) de la fonction `altaïr`, nous voyons le résultat `40`. Il y a une fonctionnalité très importante qui se cache là-dessous.\n\nLa variable `letters` est définie dans la fonction `altaïr` (cela signifie qu'elle est incluse dans l'objet d'activation du contexte de `altaïr`), mais la variable `manuscripts` n'est pas définie dans `altaïr` et donc n'est pas ajoutée dans `AO(\u003caltaïr\u003e)`. À première vue, la variable `manuscripts` n'existe pas du tout dans la fonction `altaïr`, mais comme nous allons le voir plus bas, seulement « à première vue ». Nous voyons dans l'objet d'activation du contexte de `altaïr` uniquement la propriété `letters` :\n\n*Pseudo-code*\n\n```js\nAO(\u003caltaïr\u003e) = {\n    letters: undefined // à l'entrée puis `20` lors de l'exécution\n}\n```\n\nComment la fonction `altaïr` a-t-elle accès à la variable `manuscripts` ? La logique voudrait que cette fonction ait accès aux objets des variables des contextes plus em amont de la pile (« stack »). C'est exactement le cas, et ce mécanisme est implémenté en utilisant la propriété interne `[[Scope]]` des fonctions.\n\n\u003e `[[Scope]]` est une chaîne hiérarchique contenant tous les objets des variables parents qui sont avant dans la pile des contextes d'exécution et cette chaîne est ajoutée dans la fonction à sa _création_.\n\nNotons ce point important : `[[Scope]]` est ajoutée lors de la _création_ de manière statique une seule fois jusqu'à ce que celle-ci soit détruite. Une fonction peut _ne jamais être appelée_ (activée), mais la propriété `[[Scope]]` est _déjà écrite et stockée_ dans la fonction.\n\nPrenons maintenant un moment pour considérer notre propriété `[[Scope]]` qui contrairement à la propriété `Scope` (la chaîne des portées) est une propriété inaccessible de la fonction elle-même et non du contexte :\n\n*Pseudo-code*\n\n```js\naltaïr.[[Scope]] = [\n    VO(globalContext) // === GO\n]\n```\n\nPar la suite, lors de l'appel de la fonction, nous entrons dans le contexte d'exécution de celle-ci. Alors l'_objet d'activation_ est créé puis `this` et `Scope` (la chaîne des portées) sont déterminés.\n\n\n\n### Activation de la fonction\n\nComme dit dans la définition, lors de la phase d'entrée dans le contexte, après la création de l'objet d'activation (c.-à-d. l'objet des variables), la propriété `Scope` du contexte d'exécution (qui est la chaîne des portées pour trouver en amont les variables) est définie comme suit :\n\n*Pseudo-code*\n\n```js\nScope = AO + [[Scope]]\n```\n\nOn voit ici que l'objet d'activation est le _premier_ élément du tableau de `Scope`, c.-à-d. qu'il est ajouté en amont de la chaîne des portées :\n\n*Pseudo-code*\n\n```js\nScope = [AO].concat([[Scope]])\n```\n\nCette fonctionnalité est très importante pour la _résolution d'identifiant_.\n\n\u003e La _résolution d'identifiant_ est un processus qui détermine à quel objet des variables, dans la chaîne des portées, une variable (ou une déclaration de fonction) appartient.\n\nEn retour de cet algorithme nous avons toujours une valeur de type `Reference` dont la _base_ est l'objet des variables correspondant (ou `null` si la variable n'est pas trouvée) et où le _nom de propriété_ est le nom de l'identifiant trouvé. Le type `Reference` est discuté plus en détail dans le [chapitre 3](https://blog.lesieur.name/la-valeur-de-this/).\n\nLe processus de résolution d'identifiant inclut une vérification en amont des propriétés correspondantes au nom de la variable, c.-à-d. qu'il y a une examination consécutive de chaque objet des variables à travers la chaîne des portées en commençant par le contexte du sommet de la pile en descendant jusqu'au plus profond (en commençant donc par `AO` (ou directement `VO` dans le contexte global) puis en continuant dans `[[Scope]]`).\n\nAinsi, les variables locales du contexte d'exécution ont une plus haute priorité que les variables en provenance des contextes d'exécution parents. Dans le cas où deux variables de même nom (mais de contextes différents) existent, c'est la première valeur trouvée (celle la plus haute dans la pile) qui est utilisée pour la résolution.\n\nCompliquons un peu l'exemple précédent et ajoutons de nouveaux niveaux de fonctions internes :\n\n*Code JavaScript*\n\n```js\nvar manuscripts = 20;\n\nfunction desmond() {\n\n    var letters = 20;\n\n    function edward() {\n        var songs = 24;\n        alert(manuscripts + letters + songs);\n    }\n\n    edward();\n}\n\ndesmond(); // `64`\n```\n\nPour cet exemple voici ci-dessous les _objets des variables_ (_objet global_ et _objets d'activation_) associés ainsi que les propriétés `[[Scope]]` des fonctions et leur _chaîne des portées_ des contextes lors de la phase d'exécution :\n\nL'_objet des variables_ du contexte global est :\n\n*Pseudo-code*\n\n```js\nVO(globalContext) === GO = {\n    manuscripts: 10\n    desmond: \u003créférence à la `FD`\u003e\n}\n```\n\nLors de la création de `desmond`, la propriété `[[Scope]]` de `desmond` est :\n\n*Pseudo-code*\n\n```js\ndesmond.[[Scope]] = [\n    GO\n]\n```\n\nLors de l'appel de la fonction `desmond`, l'_objet d'activation_ du contexte de `desmond` est :\n\n*Pseudo-code*\n\n```js\nVO(\u003cdesmond\u003e functionContext) === AO(\u003cdesmond\u003e) = {\n    letters: 20,\n    edward: \u003créférence à la `FD`\u003e\n}\n```\n\nEt la _chaîne des portées_ du contexte de `desmond` est :\n\n*Pseudo-code*\n\n```js\nScope(\u003cdesmond\u003e functionContext) = AO(\u003cdesmond\u003e) + desmond.[[Scope]]\n```\n\nc.-à-d.\n\n*Pseudo-code*\n\n```js\nScope(\u003cdesmond\u003e functionContext) = [\n    AO(\u003cdesmond\u003e),\n    GO\n]\n```\n\nLors de la création de la fonction interne `edward`, la propriété `[[Scope]]` de `edward` est :\n\n*Pseudo-code*\n\n```js\nedward.[[Scope]] = [\n    AO(\u003cdesmond\u003e),\n    GO\n]\n```\n\nLors de l'appel de la fonction `edward`, l'_objet d'activation_ du contexte de `edward` est :\n\n*Pseudo-code*\n\n```js\nVO(\u003cedward\u003e functionContext) === AO(\u003cedward\u003e) = {\n    songs: 24\n}\n```\n\nEt la _chaîne des portées_ du contexte de `edward` est :\n\n*Pseudo-code*\n\n```js\nScope(\u003cedward\u003e functionContext) = AO(\u003cedward\u003e) + edward.[[Scope]]\n```\n\nc.-à-d.\n\n*Pseudo-code*\n\n```js\nScope(\u003cedward\u003e functionContext) = [\n    AO(\u003cedward\u003e),\n    AO(\u003cdesmond\u003e),\n    GO\n]\n```\n\nEt les résolutions d'identifiants pour les noms `manuscripts`, `letters` et `songs` se font comme suit :\n\n*Schéma*\n\n```js\n`manuscripts`\n └─ AO(\u003cedward\u003e) // pas trouvé\n    └─ AO(\u003cdesmond\u003e) // pas trouvé\n       └─ GO // `20` trouvé\n```\n\n*Pseudo-code*\n\n```js\n`letters`\n └─ AO(\u003cedward\u003e) // pas trouvé\n    └─ AO(\u003cdesmond\u003e) `20` trouvé\n```\n\n*Pseudo-code*\n\n```js\n`songs`\n └─ AO(\u003cedward\u003e) // `24` trouvé\n```\n\n\n\n\n\n## Les fonctionnalités des portées\n\nEntrons maintenant plus en détail dans des fonctionnalités importantes liées aux chaînes des portées et à la propriété `[[Scope]]` des fonctions.\n\n### Fermetures\n\nLes fermetures (« closures ») en JavaScript ont un rapport direct avec la propriété `[[Scope]]` des fonctions. Comme nous l'avons déjà vu, `[[Scope]]` est ajoutée lors de la création de la fonction et existe jusqu'à ce qu'elle soit détruite. En fait, une _fermeture_ est la _combinaison entre le code d'une fonction et sa propriété_ `[[Scope]]`. Ainsi `[[Scope]]` contient l'_environnement lexical_ (les objets des variables des parents) quand sa fonction est _créée_. Les variables venant des contextes d'exécution plus bas dans la pile lors de l'activation (appel) des fonctions vont être cherchées dans la chaîne des portées (statiquement ajoutée lors de la création).\n\nExemples :\n\n*Code JavaScript*\n\n```js\nvar almanacs = 20;\n\nfunction connor() {\n    alert(almanacs);\n}\n\n(function () {\n    var almanacs = 16;\n    connor(); // `20`, mais pas `16`\n})();\n```\n\nNous voyons que la variable `almanacs` est trouvée dans le `[[Scope]]` de la fonction `connor`. Souvenons-nous que pour la résolution de variables, nous utilisons la chaîne des portées qui a été créée au moment de la _création_ de la fonction, et qui n'est pas _dynamiquement_ mise à jour lors de l'_appel_ (sinon la valeur `almanacs` aurait été résolue à `16`).\n\nUn autre exemple classique des fermetures :\n\n*Code JavaScript*\n\n```js\nfunction connor() {\n\n    var almanacs = 20;\n    var feathers = 100;\n\n    return function () {\n        alert([almanacs, feathers]);\n    };\n\n}\n\nvar almanacs = 36;\n\nvar ratonhnhakéton = connor(); // `function () { alert([almanacs, feathers]); }`\n\nratonhnhakéton(); // `[20, 100]`\n```\n\nEncore une fois, nous voyons que la résolution des identifiants dans la chaîne des portées (définie lors de la création) est utilisée — la variable `almanacs` est résolue à `20` mais pas à `36`. De plus, nous voyons clairement que la propriété `[[Scope]]` de la fonction (dans ce cas celui d'une fonction anonyme retournée par la fonction `connor`) continue d'exister _même si le contexte depuis lequel la fonction a été créée est déjà terminé_.\n\nPlus de détails à propos du concept des fermetures dans les implémentations JavaScript seront donnés dans le [chapitre 6](https://blog.lesieur.name/les-fermetures/).\n\n\n\n### `[[Scope]]` des fonctions créées par le constructeur `Function`\n\nÀ la création d'une fonction, la propriété interne `[[Scope]]` est ajoutée et via cette propriété, nous avons accès aux variables de tous les contextes parents. Cependant, il y a une exception importante à cette règle et elle concerne les fonctions créées via l'objet `Function`.\n\n*Code JavaScript*\n\n```js\nvar manuscripts = 20;\n\nfunction desmond() {\n\n    var feathers = 100;\n\n    function connor() { // déclaration de fonction\n        alert(manuscripts);\n        alert(feathers);\n    }\n\n    var edward = function () { // expression de fonction\n        alert(manuscripts);\n        alert(feathers);\n    };\n\n    var ezio = Function('alert(manuscripts); alert(feathers);');\n\n    connor(); // `20`, `100`\n    edward(); // `20`, `100`\n    ezio(); // `20`, « erreur : `feathers` n'est pas définie »\n\n}\n\ndesmond();\n```\n\nComme nous pouvons le voir avec la fonction `ezio`, qui est créée via le constructeur `Function`, `feathers` n'est pas accessible. Mais cela ne veut pas dire que la fonction `ezio` n'a pas de propriété `[[Scope]]` interne (sinon elle n'aurait pas accès à `manuscripts`). Le point ici c'est que la propriété `[[Scope]]` d'une fonction créée via le constructeur `Function` contient _uniquement l'objet global_. Considérez donc que créer une fermeture de contexte parent (sauf pour le contexte global) via `Function` n'est pas possible.\n\n\n\n### Identification bidirectionnelle en amont dans la chaîne des portées\n\nIl y a un autre point important pour la résolution d'identifiant en amont via la chaîne des portées. Ce sont les prototypes (s'il y en a) des objets des variables. Voici ce qu'on peut dire sur la nature prototypale du JavaScript : si une propriété n'est pas trouvée directement dans l'objet, la résolution d'identifiant en amont se fait dans la _chaîne des prototypes_. C.-à-d. qu'il y a une recherche bidirectionnelle : (1) à travers la chaîne des portées, (2) et sur chaque portée de la chaîne, à travers la chaîne des prototypes. Nous pouvons observer cet effet si nous définissons une propriété dans `Object.prototype` :\n\n\n*Code JavaScript*\n\n```js\nfunction altaïr() {\n    alert(creed);\n}\n\nObject.prototype.creed = 'Nous œuvrons dans les ténèbres pour servir la lumière.';\n\naltaïr(); // `Nous œuvrons dans les ténèbres pour servir la lumière.`\n```\n\nLes objets d'activation n'ont pas de prototype comme nous pouvons le voir dans l'exemple suivant :\n\n*Code JavaScript*\n\n```js\nfunction connor() {\n\n    var creed = 'Rien n'est vrai';\n\n    function edward() {\n        alert(creed);\n    }\n\n    edward();\n}\n\nObject.prototype.creed = 'Tout est permis';\n\nconnor(); // `'Rien n'est vrai'`\n```\n\nSi l'objet d'activation du contexte de la fonction `edward` avait un prototype, alors la propriété `creed` aurait été trouvée dans `Object.prototype`, car elle n'est pas trouvée directement dans l'objet d'activation. Par contre, dans le premier exemple au-dessus, en traversant la chaîne des portées pour la résolution d'identifiant, nous trouvons `creed` car l'objet global (dans beaucoup d'implémentations mais pas dans toutes) hérite bien de l'objet `Object.prototype` et, par conséquent, `creed` est résolue avec `Nous œuvrons dans les ténèbres pour servir la lumière.`.\n\nUne situation similaire peut être observée dans plusieurs versions de Mozilla Firefox (SpiderMonkey) avec les _expressions de fonctions nommées_, où un objet spécial d'activation qui enregistre le nom optionnel des expressions de fonction nommées hérite de `Object.prototype`. Mais ces fonctionnalités seront vues plus en détail dans le [chapitre 5](https://blog.lesieur.name/les-fonctions/).\n\n\n\n### Chaîne des portées des contextes global et de `eval`\n\nIci il n'y a rien de bien intéressant, mais il est nécessaire de le préciser. Il y a aussi une chaîne des portées pour le contexte global, mais elle contient _seulement l'objet global_. Les contextes de `eval` on la même chaîne des portées que le contexte appelant.\n\n*Pseudo-code*\n\n```js\nScope(globalContext) = [\n    GO\n]\n```\n\net\n\n*Pseudo-code*\n\n```js\nScope(evalContext) === Scope(callingContext)\n```\n\n\n\n### Affectation de la chaîne des portées lors de l'exécution du code\n\nEn JavaScript il y a deux instructions qui peuvent modifier la chaîne des portées pendant la phase d'exécution du code. Ce sont les structures de contrôle `with` et `catch`. Toutes les deux ajoutent en amont de la chaîne des portées l'objet nécessaire à la résolution des identifiants apparaissant à l'intérieur de ces instructions. C.-à-d. que si l'un de ces deux cas de figure intervient, la chaîne des portées est augmentée ainsi :\n\n*Pseudo-code*\n\n```js\nScope = __withObject + VO + [[Scope]]\n```\n\nou\n\n*Pseudo-code*\n\n```js\nScope = __catchObject + VO + [[Scope]]\n```\n\nLa structure de contrôle `with`, dans ce cas, ajoute l'objet qui est en paramètre (et les propriétés de cet objet deviennent accessibles sans préfixe) :\n\n*Code JavaScript*\n\n```js\nvar collectibles = { letters: 20, almanacs: 36 };\n\nwith (collectibles) {\n    alert(letters); // `20`\n    alert(almanacs); // `36`\n}\n```\n\nc.-à-d.\n\n*Pseudo-code*\n\n```js\nScope = collectibles + VO + [[Scope]]\n```\n\nMontrons une nouvelle fois comment la résolution d'identifiant s'effectue dans l'objet ajouté par la structure de contrôle `with` en amont de la chaîne des portées :\n\n*Code JavaScript*\n\n```js\nvar assassins = 10, templars = 10;\n\nwith ({ assassins: 20 }) {\n\n    var assassins = 30, templars = 30;\n\n    alert(assassins); // `30`\n    alert(templars); // `30`\n}\n\nalert(assassins); // `10`\nalert(templars); // `30`\n```\n\nQu'est-ce qu'il s'est passé ici ? Lors de la phase d'entrée dans le contexte, les identifiants `assassins` et `templars` sont ajoutés dans l'objet des variables. Plus tard, elles sont déjà présentes lors de la phase d'exécution du code, et les modifications suivantes sont faites :\n\n1. `assassins = 10`, `templars = 10`,\n2. l'objet `{ assassins: 20 }` est ajouté en amont de la chaîne des portées,\n3. la rencontre du mot-clé `var` dans `with` ne fait rien car toutes les variables ont été évaluée lors de la phase d'entrée dans le contexte,\n4. il n'y a que la modification de la valeur de `assassins` qui intervient, et `assassins` sera trouvée maintenant dans l'objet ajouté en amont de la chaîne des portées à l'étape 2. La valeur de `assassins` était `20` et devient `30`,\n5. il y a aussi une modification de `templars` qui est résolue depuis l'objet des variables initial et donc, qui de `10` devient `30`,\n6. quand la structure de contrôle `with` a fini d'être exécutée, son objet spécial est retiré de la chaîne des portées (et la valeur modifiée `assassins` est supprimée avec cet objet). C.-à-d. que la structure initiale de la chaîne des portées est restaurée à son état initial d'avant l'augmentation de `with`,\n7. et comme nous pouvons le voir dans les deux dernières alertes : la valeur de `assassins` de l'objet des variables courant reste le même et la valeur de `templars` est maintenant égale à `30` telle qu'elle a été changée dans la structure de contrôle `with`.\n\nC'est la même chose avec la structure de contrôle `catch` qui, dans le but d'avoir accès au paramètre d'exception, crée un objet de portée intermédiaire avec une unique propriété — le nom du paramètre d'exception. Cet objet est placé en amont de la chaîne des portées. Ce qui donne\n\n*Code JavaScript*\n\n```js\ntry {\n    /* ... */\n} catch (creed) {\n    alert(creed);\n}\n```\n\nla modification de chaîne des portées suivante :\n\n*Pseudo-code*\n\n```js\ncatchObject = {\n    creed: \u003cobjet de l'exeption\u003e\n}\n\nScope = __catchObject + VO + [[Scope]]\n```\n\nQuand le travail de la structure de contrôle `catch` est fini, la chaîne des portées est aussi restaurée à son état premier.\n\n\n\n\n\n## Conclusion\n\nÀ ce niveau, nous avons vu tous les concepts généraux concernant les contextes d'exécution et les détails associés. Nous allons maintenant entrer dans une analyse détaillée des fonctions comme leur type (déclaration de fonction ou expression de fonction) et les _fermetures_.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/la-valeur-de-this/\"\u003e\u0026lt; Chapitre 3\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fonctions/\"\u003eChapitre 5 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [8.6.2 – [[Scope]]](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [10.1.4 – Scope Chain and Identifier Resolution](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre adaptation française de l'excellent billet [Тонкости ECMA-262-3. Часть 4. Цепь областей видимости.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-4-scope-chain/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-03-31T12:21:00.000Z"},"updated":[]},"description":"Ce chapitre est dédié, encore une fois, à un mécanisme lié aux contextes d'exécution : j'ai nommé la chaîne des portées.","image":"https://blog.lesieur.name/media/images/upload/scope-chain.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 4. — La chaîne des portées en JavaScript","urn":"la-chaine-des-portees"}
{"_id":{"$oid":"5900a6a5ddbb9d5b188bb049"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 5.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/functions.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/functions-mini.png\" alt=\"Déclaration et Expression partagent un même monde mais sont totalement différent !\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eDéclaration et Expression partagent un même monde mais sont totalement différent !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans cet article nous allons parler de l'un des objets principal en JavaScript – les _fonctions_.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/la-chaine-des-portees/\"\u003e\u0026lt; Chapitre 4\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fermetures/\"\u003eChapitre 6 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nNous allons nous intéresser à différents types de fonctions, et définir comment chacun de ces types influence l'[objet des variables](https://blog.lesieur.name/l-objet-des-variables/) d'un contexte et ce qu'il y a à l'intérieur de chaque [chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/) de chaque fonction. Nous répondrons à la question fréquemment posée qui est : « qu'elle est la différence entre une fonction créée comme cela :\n\n*Code JavaScript*\n\n```js\nvar downBelow = function () {\n    /* ... */\n};\n```\n\net une fonction créée de la manière habituelle ? »\n\n*Code JavaScript*\n\n```js\nfunction upTop() {\n    /* ... */\n}\n```\n\nou encore, « pourquoi dans l'appel ci-dessous, la fonction est entourée avec des parenthèses ? » :\n\n*Code JavaScript*\n\n```js\n(function () {\n    /* ... */\n})();\n```\n\nParce que cet article va mentionner des éléments vus dans les précédents chapitres, il est préférable, pour une meilleure compréhension, d'en lire plus sur [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/) et [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/) dont nous utiliserons les terminologies dans le présent chapitre.\n\nNous allons également souvent évoquée « des positions ou une structure de contrôle est attendue » et « des positions ou une expression est attendue ». Si la différence entre ces deux types de positions n'est pas clair, vous pouvez consulter le billet sur [expression versus structure de contrôle](https://blog.lesieur.name/expression-versus-structure-de-controle-en-javascript/)\n\nC'est parti pour les types de fonctions.\n\n\n\n\n\n## Les types de fonctions\n\nIl y a trois types de fonction en JavaScript et chacun d'entre eux offres ses propres fonctionnalités.\n\n### Déclaration de fonction\n\nUne _déclaration de fonction (dont la forme abrégée sera `FD` pour « function declaration »)_ est structure de contrôle :\n\n- dont le nom est _obligatoire_,\n- dont le code source se trouve au niveau _Programme_ ou directement dans le corps d'une autre fonction en dehors d'une position attendant une expression.\n- qui est créée lors de la phase d'_entrée dans le contexte_,\n- qui _influence_ l'objet des variables,\n- et qui se déclare de la façon suivante\n\n*Code JavaScript*\n\n```js\nfunction upTop() {\n    /* ... */\n}\n```\n\nLa fonctionnalité principale de ce type de fonction est qu'il est _le seul a influencer l'objet des variables_ (car les variables sont stockées dans l'objet des variables des contextes). Cette fonctionnalité définie le second point important : la fonction est déjà _disponible_ lors de la phase d'_exécution du code_ (car les déclarations de fonctions sont stockées dans l'objet des variables lors de la phase d'entrée dans le contexte, avant que l'exécution ne commence).\n\nUne fonction peut donc être appelée _avant_ sa déclaration :\n\n*Code JavaScript*\n\n```js\nupTop(); // `\"Monde d'en haut\"`\n\nfunction upTop() {\n    console.log(\"Monde d'en haut\");\n}\n```\n\nCe qu'il est également important de noter c'est que ces fonctions ne peuvent être définie dans une instruction qu'en dehors de toutes expressions (comme nous allons le décrire ci-dessous) :\n\n*Code JavaScript*\n\n```js\n// une déclaration de fonction peut-être faites :\n\n// 1) directement dans le contexte global\nfunction upTop() {\n\n    // 2) ou à l'intérieur du corps\n    // d'une autre fonction\n    function eden() {}\n}\n```\n\nElles ne peuvent être définies qu'à ces deux types d'endroit et nul part ailleurs (c.-à-d. qu'il est impossible de déclarer une fonction à une position attendant une _expression_ ou dans une structure de contrôle `if`, `for`, etc.).\n\nIl existe une alternative à la déclaration de fonction qui est appelée l'_expression de fonction_, c'est ce dont nous allons parler à présent.\n\n\n\n### Expression de fonction\n\nUne _expression de fonction (dont la forme abrégée sera `FE` pour « function expression »)_ est une fonction :\n\n- qui peut seulement être définie à _une position attendant une expression_,\n- dont le nom est _facultatif_,\n- dont la définition n'a _aucun effet_ sur l'objet des variables,\n- et qui est créée lors de la phase d'_exécution du code_.\n\nLa fonctionnalité principale de ce type de fonction est qu'elle se trouvera toujours _dans une expression_. Voici ici un exemple avec expression d'affectation :\n\n*Code JavaScript*\n\n```js\nvar downBelow = function () {\n    /* ... */\n};\n```\n\nCet exemple montre comment une expression de fonction _anonyme_ est affectée à la variable `downBelow`. Après cela, la fonction sera disponible via l'identifiant `downBelow` et pourra être appelée (activée) avec `downBelow()`.\n\nIl est possible également pour les expressions de fonctions de posséder un nom mais celui-ci est _facultatif_ :\n\n*Code JavaScript*\n\n```js\nvar downBelow = function lowerWorld() {\n    /* ... */\n};\n```\n\nCe qu'il est important de noter ici c'est que depuis l'_extérieur_, l'expression de fonction de l'exemple ci-dessus peut être accéder via la variable `downBelow` (et appelée avec `downBelow()`) alors que depuis l'_intérieur_ de la fonction (dans le cas d'un _appel récursif_ par exemple), il est aussi possible d'utiliser le nom `lowerWorld` (et d'appeler `lowerWorld()`).\n\nQuand un nom est assigné à une expression de fonction, il devient difficile de la distinguer d'une déclaration de fonction pour un œil non averti. Cependant, si vous connaissez bien la définition, il est simple de les distinguer : _les expressions de fonctions se trouve toujours dans des expressions_. Dans les exemples suivant nous pouvons voir que toutes ces fonctions sont des expressions de fonctions car elles se trouvent dans des expressions :\n\n*Code JavaScript*\n\n```js\n// entre des parenthèses (opérateur de groupement) on ne peut placer que des expressions\n(function downBelow() {});\n\n// dans des initialiseurs de tableau il ne peut aussi y avoir que des expressions\n[function lowerWorld() {}];\n\n// l'opérateur virgule ne se trouve que dans des expressions (à ne pas confondre avec le séparateur d'instructions `;`)\n0, function poorSide() {};\n```\n\nUne expression de fonction n'est créée que pendant la phase d'exécution du code et n'est donc pas stockée dans l'objet des variables. Voyons un exemple induit par ce comportement :\n\n*Code JavaScript*\n\n```js\n// L'expression de fonction n'est pas disponible avant sa déclaration\n// (car elle est créée lors de la phase d'exécution du code),\n\nconsole.log(downBelow); // « erreur : `downBelow` n'est pas défini(e) »\n\n(function downBelow() {});\n\n// ni après (car elle n'est pas dans l'objet des variables)\n\nconsole.log(downBelow);  // « erreur : `downBelow` n'est pas défini(e) »\n```\n\nLa question logique est maintenant : « pourquoi avons-nous besoin de ce type de fonction ? ».\n\nLa réponse la plus simple, au dela du fait que ça permet de ne pas « polluer » l'objet des variables, est que c'est ce mécanisme qui permet au JavaScript de passer des fonctions à travers les paramètres des fonctions et qui permet l'utilisation des fonctions de rappel (« callback »). :\n\n*Code JavaScript*\n\n```js\n// Déclaration de fonction ajouté à l'objet des variables\nfunction downBelow(callback) {\n    callback();\n}\n\n// Expression de fonction...\ndownBelow(function adam() {\n    console.log('downBelow.adam');\n});\n// ...et exécution du downBelow avec cette `FE` en paramètre,\n// aussitôt « oubliée » après l'exécution.\n\n// Nouvelle expression de fonction\ndownBelow(function bob() {\n    console.log('downBelow.bob');\n});\n```\n\nDe plus ainsi, `adam` et `bob` ne polluent pas inutilement l'objet des variables.\n\nDans le cas ou une expression de fonction est affectée à une variable, la fonction reste accessible en mémoire et peut être utilisée ultérieurement via ce nom de variable (car les variables influencent l'objet des variables) :\n\n*Code JavaScript*\n\n```js\n// Cette expression de fonction est affectée à `downBelow`\n// qui elle est ajouté à l'objet des variables.\nvar downBelow = function () {\n    console.log(\"Monde d'en bas\");\n};\n\n// Ce qui permet plus tard d'appeler la fonction anonyme ci-dessus.\ndownBelow();\n```\n\nUn autre exemple est la création de portée encapsulée pour masquer aux contextes extérieurs les données utilisées pour la création d'une fonction (dans cet exemple, l'expression de fonction utilisée est appelée aussitôt qu'elle est créée) :\n\n*Code JavaScript*\n\n```js\nvar downBelow = {};\n\n(function prepare() {\n\n    var upMaterial = 10;\n\n    downBelow.adam = function () {\n        console.log(upMaterial);\n    };\n\n})();\n\ndownBelow.adam(); // `10`;\n\nconsole.log(upMaterial); // « erreur : `upMaterial` n'est pas défini(e) »\n```\n\nNous voyons que la fonction `downBelow.adam` (via sa propriété `[[Scope]]`) a accès à la variable `upMaterial` de l'expression de fonction `prepare`. D'un autre côté, cette variable `upMaterial` n'est pas accessible directement depuis l'extérieur. Cette stratégie est utilisée dans beaucoup de bibliothèque pour créer des données « privées » et masquer les éléments de construction. Souvent dans ce motif, le nom facultatif de la fonction est omis :\n\n*Code JavaScript*\n\n```js\n(function () {\n\n    // Portée d'initialisation\n\n})();\n```\n\n\u003e Notez qu'en ES6, déclarer une variable avec `let` dans une structure de contrôle de type bloc produit le même résultat.\n\u003e ```js\n\u003e var downBelow = {};\n\u003e \n\u003e {\n\u003e     let upMaterial = 10;\n\u003e \n\u003e     downBelow.adam = function () {\n\u003e         console.log(upMaterial);\n\u003e     };\n\u003e \n\u003e }\n\u003e \n\u003e downBelow.adam(); // `10`;\n\u003e \n\u003e console.log(upMaterial); // « erreur : `upMaterial` n'est pas défini(e) »\n\u003e ```\n\nVoici encore un autre exemple d'expression de fonction créée conditionnellement à l'exécution et qui ne pollue pas l'objet des variables :\n\n*Code JavaScript*\n\n```js\nvar upMaterial = 10;\n\nvar goOrStay = (upMaterial \u003e 5\n    ? function () { console.log(\"Aller dans le monde d'en haut !\"); }\n    : function () { console.log(\"Rester dans le monde d'en bas...\"); }\n);\n\ngoOrStay(); // `\"Aller dans le monde d'en haut !\"`\n```\n\n\u003e Notons que ES5 standardise les _fonctions liées_ (« bound function »). Ce type de fonction permet de définir [la valeur de this](https://blog.lesieur.name/la-valeur-de-this/) lors de la phase de création, bloquant sa valeur lors des futurs appels de la fonction.\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e var eternalLove = function () {\n\u003e     return this.love;\n\u003e }.bind({ love: true });\n\u003e \n\u003e eternalLove(); // `true`\n\u003e eternalLove.call({ love: false }); // toujours `true`\n\u003e ```\n\u003e \n\u003e L'usage le plus courant des fonctions liées est celui d'être attachée à des écouteurs d'évènements, ou des fonctions retardées (comme `setTimeout`) qui ont besoin de continuer des opérations sur l'élément `this` du contexte appelant.\n\u003e \n\u003e Vous pourrez trouver plus d'informations sur les fonctions liées dans le chapitre approprié de la collection [_ES5 dans le détail_](https://blog.lesieur.name/les-proprietes-et-descripteurs-de-proprietes/).\n\n#### À propos des parenthèses encadrantes dites opérateur de groupement\n\nRevenons donc à notre question du début d'article qui était « pourquoi dans l'appel ci-dessous, la fonction est entourée avec des parenthèses ? » :\n\n*Code JavaScript*\n\n```js\n(function () {\n    /* ... */\n})();\n```\n\nou encore « pourquoi avons-nous besoin de ces parenthèses autour d'une fonction si nous voulons l'exécuter juste après sa définition. Voici la réponse : c'est pour permettre à l'instruction d'être à « une position attendant une expression » qui est la condition requise pour créer une _expression de fonction_.\n\nD'après le standard, une instruction interprétée en tant qu'_expression_ ne peut pas commencer par l'accolade ouvrante `{` car on ne pourrait la distinguer d'une _structure de contrôle_ et de la même manière, elle ne peut commencer par le mot clé `function` car on ne pourrait la distinguer d'une _déclaration de fonction_. C.-à-d. que si nous essayons de définir une _fonction immédiatement appelée_ (qui ne peut l'être que si elle est de type expression de fonction) de cette manière (en commençant par le mot-clé `function`) :\n\n*Code JavaScript*\n\n```js\nfunction () {\n    /* ... */\n}();\n\n// ou même avec un nom\n\nfunction dualGravity() {\n    /* ... */\n}();\n```\n\ncela va entrer en conflit avec la manière dont les _déclaration de fonction_ sont créées. Les _raisons_ de ce conflit varies.\n\nSi nous prenons le cas d'un code global (c.-à-d. au niveau _Programme_), l'analyseur va traiter la fonction comme une _déclaration_, car l'instruction commence par le mot clé `function`.\n\nDans le premier cas nous obtiendrons une `SyntaxError` car la fonction n'a pas de _nom_ (une déclaration de fonction doit obligatoirement avoir un nom qui représente son identifiant dans l'objet des variables).\n\nDans le second cas, puisque nous avons un nom (`dualGravity`) la déclaration de fonction est créée normalement. Mais nous avons _de nouveau_ une erreur de syntaxe car nous avons un _opérateur de groupement sans expression_ à l'intérieur. Notez bien que dans ce cas nous avons un _opérateur de groupement_ qui suit la déclaration de fonction, _mais pas des parenthèses d'appel de fonction_ ! Aussi si nous avions la source suivante :\n\n*Code JavaScript*\n\n```js\n// `dualGravity` est une déclaration de fonction\n// et est créée à l'entrée dans le contexte\n\nconsole.log(dualGravity); // `function dualGravity(world) { console.log(world); }`\n\nfunction dualGravity(world) {\n    console.log(world);\n}('Upside Down'); // et ceci est juste un opérateur de groupement, pas un appel !\n\ndualGravity('Upside Down'); // et ceci est un appel qui retourne `'Upside Down'`\n```\n\nTout ce déroule bien ici car nous avons deux syntaxes valides — une _déclaration de fonction_ et un _opérateur de groupement_ contenant une expression composée de l'opérande `'Upside Down'` de type chaîne de caractères. L'exemple ci-dessous est donc identique !\n\n*Code JavaScript*\n\n```js\n// déclaration de fonction\nfunction dualGravity(world) {\n    console.log(world);\n}\n\n// un opérateur de groupement\n// avec une expression\n('Upside Down');\n\n// un autre opérateur de groupement\n// avec une expression (de fonction)\n(function () {});\n\n// ceci est aussi un opérateur de groupement\n// avec une expression composée d'un opérande\n// de type nombre\n(1);\n\n// etc.\n```\n\nDans le cas d'une définition à l'intérieur d'une _structure de contrôle_ à cause d'une ambiguïté nous pourrions craindre une erreur de syntaxe :\n\n*Code JavaScript*\n\n```js\nif (true) function dualGravity() { console.log('Upside Down'); }\n```\n\nLa construction ci-dessus _en accord avec les spécifications_ est devrait être syntaxiquement incorrecte (une expression ne peut commencer avec un mot-clé `function`), mais comme nous le verrons plus bas, chaque implémentation gérera ce cas de figure de sa propre manière (au lieu de renvoyer une erreur comme le voudrait la spécification).\n\nSachant tout cela, le meilleur moyen d'explicitement faire comprendre au moteur que nous souhaitons une _expression de fonction_ et _non_ une _déclaration de fonction_ est d'utiliser un opérateur de groupement (car à l'intérieur de celui-ci, il y a obligatoirement une _expression_). Ainsi, l'analyseur distingue le code comme une _expression de fonction_ et il n'y a aucune ambiguïté. La fonction va être créée pendant la phase d'_exécution du code_, puis exécutée, puis retirée (car il n'y a plus de référence sur-elle).\n\n*Code JavaScript*\n\n```js\n(function dualGravity(world) {\n    console.log(world);\n})('Upside Down'); // Ici, nous avons un appel avec en premier paramètre la valeur `'Upside Down'` et pas un opérateur de groupement.\n```\n\nDans l'exemple ci-dessus les parenthèses de fin exécute le retour de l'expression (à savoir une fonction) en lui passant un paramètre.\n\nNotons que dans l'exemple suivant, l'exécution immédiate de la fonction associée comme valeur de `adam` ne requière pas de parenthèse car le code de la fonction _est déjà dans un endroit réservé pour une expression_ et l'analyseur sait qu'à ce niveau il ne peut s'agir que d'une expression de fonction qui sera créée lors de la phase d'exécution du code :\n\n*Code JavaScript*\n\n```js\nvar downBelow = {\n\n    adam: function (love) {\n        return love ? 'oui' : 'non';\n    }(true)\n\n};\n\nconsole.log(downBelow.adam); // `'oui'`\n```\n\n`downBelow.adam` est donc une _chaîne de caractère_ et non une fonction comme nous pourrions nous y attendre à première vue. La fonction est utilisée ici uniquement comme initialiseur de propriété (dépendant d'un paramètre conditionnel) et est créée et exécutée juste après cela (puis perdue).\n\nDonc la réponse complète à propos des parenthèses est la suivante :\n\n\u003e Les parenthèses de l'opérateur de groupement sont requises quand une fonction _ne se trouve pas à une position attendant une expression_ si vous souhaitez _appeler immédiatement_ la fonction après sa création. Dans ce cas là nous transformons juste _manuellement une déclaration de fonction en expression de fonction_.\n\n\u003e Dans le cas ou l'analyseur sait déjà résoudre cette fonction comme une expression de fonction c.-à-d. que la fonction _est déjà à une position attendant une expression_, les parenthèses _ne_ sont _pas obligatoire_.\n\nComme l'opérateur de groupement n'est qu'un moyen d'indiquer à l'analyseur que le code en cours doit être analysé comme une expression, il est possible d'utiliser _tous les autres moyens_ pour transformer une instruction en une position nécessitant une expression pour créer une expression de fonction. Par exemple :\n\n*Code JavaScript*\n\n```js\n// Ceci indique que nous manipulons une expression de fonction\n(function () {\n    console.log('La gravité partagée');\n}());\n\n// mais ceci aussi\n0, function () {\n    console.log(\"Le monde d'en haut\");\n}();\n\n// ainsi que ceci\n!function () {\n     console.log(\"Le monde d'en bas\");\n}();\n\n// et n'importe quelles autres\n// transformations manuelles\n\n/* ... */\n```\n\nC'est juste que l'opérateur de groupement est la méthode la plus élégante et répendue.\n\nAu passage vous aurez peut-être remarqué que les parenthèses de groupement peuvent être placées autour de la déclaration de la fonction (sans inclure ses parenthèses appelantes) ou bien autour de la totalité, dans tous les cas l'instruction sera reconnue comme une expression de fonction que l'on souhaite appeler immédiatement.\n\n*Code JavaScript*\n\n```js\n// Deux expressions de fonctions toutes aussi valides\n(function () {})();\n(function () {}());\n```\n\nDans le premier cas, nous utilisons un opérateur de groupement pour indiquer que nous créons une expression de fonction `(function () {})`. Cet opération retourne à la syntaxe suivante sa référence. Puis nous utilisons les parenthèses d'appel `()` qui appliquée à la référence retournée exécute le code (car une paire de parenthèses suivants une référence demande un appel).\n\nDans le second cas, nous utilisons un opérateur de groupement pour indiquer que nous créons une expression de fonction que l'on exécute immédiatement `(function () {}())`.\n\n#### Implémentation : déclaration de fonction conditionnelle\n\nLes exemples suivants montrent qu'_aucunes des implémentations ne respectent les spécifications_ en matière de déclaration de fonction.\n\n*Code JavaScript*\n\n```js\nif (true) {\n\n    function dualGravity() {\n        console.log(0);\n    }\n\n} else {\n\n    function dualGravity() {\n        console.log(1);\n    }\n\n}\n\ndualGravity(); // `1` ou `0` ?\n```\n\nIl est important de noter que d'après le standard cette construction est syntaxiquement _incorrecte_, car comme nous l'avons vu, une déclaration de fonction _ne doit pas être faites à l'intérieur d'une structure de contrôle_ (alors qu'ici les structure de contrôle `if` et `else` les contiennent). Comme nous l'avons dit, les déclarations de fonctions ne peuvent apparaître qu'à deux endroits : au niveau _Programme_ ou directement à l'intérieur du corps d'une autre fonction.\n\nLe code ci-dessus est incorrect car les structures de contrôle ne doivent contenir que des expressions ou d'autres structures de contrôle mais pas des déclarations. Et le seul endroit ou une fonction peut apparaître dans une structure de contrôle est dans une expression. Mais par définition, elle ne peut pas commencer par le mot-clé `function` (sinon on ne peut la distinguer d'une déclaration de fonction).\n\nUne section consacrée aux erreurs d'analyses du standard couvre ce cas de figure (apparition d'une fonction dans une structure de contrôle). Mais aucune implémentation à ce jour ne lance d'exception. Elles y répondent chacune de leur propre manière.\n\n*Pourquoi cela est gênant d'avoir une déclaration de fonction dans une structure de contrôle ?*\n\nLa présence des structures `if` et `else` signifie qu'un choix va être fait entre deux fonctions qui vont être déclarée. Puisque cette décision ne se ferra que lors de la phase d'exécution, cela implique qu'une _expression de fonction_ doit être utilisée. Cependant _la majorité des implémentations_ vont plutôt créer une _déclaration de fonction_ dont la valeur sera la _dernière fonction déclarée_. Dans ce cas, notre exemple de fonction `dualGravity` va retourner `1` même si la structure `else` _n_'est _jamais exécutée_.\n\nVoyons par exemple comment Mozilla Firefox (SpiderMonkey) traite ce cas. D'un coté il ne considère pas ces fonctions comme des déclarations (c.-à-d. que la fonction est créée lors de la phase d'exécution du code) mais d'un autre côté se ne sont pas de vrai expression de fonction car elles ne pourrait pas être appelé ultérieurement (ou alors immédiatement avec des parenthèses) et _sont donc stockées dans l'objet des variables_.\n\nCette extension syntaxique est nommée _déclaration de fonction conditionnelle (dont la forme abrégée sera `FS` pour « function statement »)_ et est proposée par l'inventeur du JavaScript Brendan Eich comme un type de fonction supplémentaire (qui n'est pas l'un des trois types de fonction officiel).\n\n#### Fonctionnalité : l'expression de fonction nommée\n\nDans le cas ou une expression de fonction a un nom, elle est appelée une expression de fonction nommée (dont la forme abrégée sera `NFE` pour « named function expression »). Comme nous l'avons vu dans la définition (et vu dans des exemples plus haut) l'expression de fonction n'influence pas l'objet des variables d'un contexte (c'est à dire qu'il est impossible de l'activer en utilisant _son nom_ avant et après sa définition). Cependant, une expression de fonction peut être appelée elle-même par son nom dans un appel récursif interne :\n\n*Code JavaScript*\n\n```js\n(function edenAndAdam(love) {\n\n    if (love) {\n        return;\n    }\n\n    edenAndAdam(true); // le nom `edenAndAdam` est disponible\n\n})();\n\n// mais depuis l'extérieur ce n'est pas possible\n\nedenAndAdam(); // « erreur : `edenAndAdam` n'est pas défini(e) »\n```\n\nMais ou est stocké le nom `edenAndAdam` ? Dans l'objet d'activation de `edenAndAdam` ? Non, car personne n'a déclaré aucune fonction avec le nom `edenAndAdam`. Dans l'objet des variables du parent depuis lequel la fonction `edenAndAdam` a été créée ? Toujours pas, souvenez vous de la définition d'une expression de fonction : elle n'influence pas l'objet des variables et c'est pour cela qu'on ne peut pas appeler `edenAndAdam` depuis l'extérieur. Où alors ?\n\nVoici comment cela marche : quand l'analyseur rencontre l'expression de fonction nommée lors de l'exécution du code (avant sa création), il créé un objet supplémentaire spécial et l'_ajoute en amont de la chaîne des portées courante_. Puis l'expression de fonction nommée est créée par la fonction parente elle-même et obtient sa propriété interne `[[Scope]]` (comme nous l'avons vu dans le [chapitre 4](https://blog.lesieur.name/la-chaine-des-portees/)) qui contient la chaîne des portées de ce contexte parent. Après cela, _le nom de l'expression de fonction nommée est ajoutée à cet objet spécial_ en tant qu'unique propriété et sa valeur est une valeur de type `Reference` vers l'expression de fonction. Enfin, la dernière chose qui est faites est de retirer cet objet spécial de la chaîne des portées parente. Voyons voir cet algorithme :\n\n*Pseudo-code*\n\n```js\n__specialObject = {};\n\nScope.unshift(__specialObject) // ajout en amont\n\nfoo = new FunctionExpression()\n\nfoo.[[Scope]] = [].concat(Scope) // copie\n\nfoo.[[Scope]][0].foo = foo // {DontDelete}, {ReadOnly}\n\nScope.shift() // retrait en amont\n```\n\nAinsi depuis l'extérieur, cette fonction _n'est pas accessible_ par son nom (car il n'est pas présent dans la chaîne des portées parente) mais comme l'objet spécial a été sauvée dans la propriété interne `[[Scope]]` de la fonction, ce nom _sera accessible_ via sa propre chaîne des portées de son objet d'activation.\n\nIl est nécessaire de noter cependant, que dans beaucoup d'implémentation, comme par exemple dans Mozilla Firefox (Rhino), cet valeur est enregistrée dans l'_objet d'activation_ de l'expression de fonction. Où encore une implémentation dans Internet Explorer (JScript) brise complètement les règles des expressions de fonction et rend ce nom accessible dans l'_objet des variables parent_ et la fonction devient disponible à l'extérieur.\n\n##### Firefox et expression de fonction nommée\n\nJetons un œil sur différentes implémentions dédiées à cette problématique. Plusieurs versions de SpiderMonkey ont une fonctionnalité de l'objet spécial s'apparentant à un bug. Cela est lié au mécanisme de [résolution d'identifiants](https://blog.lesieur.name/la-chaine-des-portees/) : l'analyse de la chaîne est [bidirectionnelle](https://blog.lesieur.name/la-chaine-des-portees) et lors de la résolution, la chaîne des prototypes est également mise à contribution pour chaque objet dans la chaîne des portées.\n\nNous pouvons voir ce mécanisme en action si nous définissons une propriété dans `Object.prototype` et que nous utilisons une variable « non existante » dans le code. Dans l'exemple suivant, en résolvant le nom de `side` l'objet global est atteint sans que la variable `side` ne soit trouvée dans l'objet d'activation de la fonction. Cela est du au fait que dans SpiderMonkey l'objet global hérite de `Object.prototype` et le nom `side` est résolue :\n\n*Code JavaScript*\n\n```js\nObject.prototype.side = 2;\n\n(function () {\n    console.log(side); // `2`\n})();\n```\n\nL'objet d'activation n'a pas de prototype. Avec les mêmes conditions de départ, il est possible de voir le même comportement dans les fonctions internes. Si nous déclarons une variable locale `side` depuis une fonction interne (une déclaration de fonction ou une expression de fonction anonyme) et que nous faisons référence à `side` depuis cette fonction interne, cette variable devrait normalement être résolue dans le _contexte de la fonction parente_, au lieu de le résoudre dans `Object.prototype` :\n\n*Code JavaScript*\n\n```js\nObject.prototype.side = 3;\n\nfunction upSideDown() {\n\n    var side = 2;\n\n    // déclaration de fonction\n\n    function upTop() {\n        console.log(side);\n    }\n\n    upTop(); // `2`, depuis `AO(\u003cupSideDown\u003e)`\n\n    // la même chose avec une expression de fonction anonyme\n\n    (function () {\n        console.log(side); // `2`, aussi de `AO(\u003cupSideDown\u003e)`\n    })();\n\n}\n\nupSideDown();\n```\n\nCependant certaines implémentations _attachent un prototype aux objets d'activation_ comme dans l'implémentation de _Blackberry_. La valeur `side` de l'exemple précédent est alors résolue à `3`. C.-à-d. n'atteint jamais l'objet d'activation de `upSideDown` car la valeur dans `Object.prototype` est trouvée avant :\n\n*Pseudo-code*\n\n```js\nAO(\u003cupTop\u003e) // rien, puis\nAO(\u003cupTop\u003e).[[Prototype]] // trouvée, et vaut `3`. On s'arrête.\n```\n\nou\n\n```js\nAO(anonymous) // rien, puis\nAO(anonymous).[[Prototype]] // trouvée, et vaut `3`. On s'arrête.\n```\n\nEt nous pouvons voir exactement le même comportement dans les versions de SpiderMonkey (avant ES5) dans le cas de l'objet spécial des fonctions d'expressions nommées. Cet objet spécial (selon le standard) est un _objet normal_ « comme celui de l'expression `new Object()` », et donc qui devrait hérité de `Object.prototype`, c'est exactement ce que nous constatons dans l'implémentation de SpiderMonkey (mais uniquement jusqu'à la version 1.7) :\n\n*Code JavaScript*\n\n```js\nfunction upTop() {\n\n    var side = 2;\n\n    (function downBelow() {\n\n        console.log(side); // `3`, et non `2`, car AO(\u003cupTop\u003e) n'est jamais atteind.\n\n        // `side` est résolue ainsi :\n        // __specialObject(\u003cdownBelow\u003e) // rien puis\n        // __specialObject(\u003cdownBelow\u003e).[[Prototype]] // trouvée, et vaut 3. On s'arrête.\n\n    })();\n}\n\nObject.prototype.side = 3;\n\nupTop();\n```\n\nLes autres implémentations (et également les nouvelles versions de SpiderMonkey) n'attachent pas de prototype à cet objet spécial.\n\n\u003e Notons qu'en ES5 ce comportement a changé et les environnements des moteurs n'héritent plus de `Object.prototype`.\n\n##### JScript et expression de fonction nommée\n\nL'implémentation de ECMAScript par Microsoft, JScript (implémenté dans les versions de Internet Explorer jusqu'à IE8), a un certain nombre de bugs en rapport avec les expressions de fonctions nommées. Beaucoup de ses bugs contredisent complètement le standard ECMA-262-3 ; et certain d'entre eux causent de sérieuses erreurs.\n\nPremièrement, JScript brise la règle principale des expressions de fonctions nommées à savoir _qu'elles ne doivent pas stocker le nom dans l'objet des variables_. Le nom optionnel des expressions de fonctions nommées doit être stocké dans un _objet spécial_ et accessible _seulement à l'intérieur de la fonction nommée (et nul par ailleurs)_. Dans notre cas, elle se retrouve donc accessible directement dans l'_objet des variables parent_. Cependant, les expressions de fonctions sont traitées en JScript comme des _déclarations de fonctions_, c.-à-d. qu'elle sont créées pendant la phase d'_entrée dans le contexte_ et sont disponibles avant qu'elles ne soient définies dans le code source :\n\n*Code JavaScript*\n\n```js\n// Une expression de fonction est disponible dans l'objet des variables\n// via un nom optionnel\n// c'est une définition comme dans une déclaration de fonction\nupSideDown(); // `\"Le monde inversé\"`\n\n(function upSideDown() {\n    console.log(\"Le monde inversé\");\n});\n\n// elle est aussi disponible après sa définition\n// comme pour les déclarations de fonctions ; le nom optionnel\n// se trouve dans l'objet des variables\nupSideDown(); // `\"Le monde inversé\"`\n```\n\nComme nous l'avons vu, c'est une violation des règles.\n\nDeuxièmement, dans le cas ou l'on affecte une expression de fonction à une déclaration de variable, JScript créé _deux différents objets de fonction_. Il est difficil de dire que le comportement de ce nom est logique (surtout sachant qu'à l'extérieur de cette expression de fonction, ce nom ne devrait pas être accessible) :\n\n*Code JavaScript*\n\n```js\nvar upTop = function downBelow() {\n    console.log('upSideDown');\n};\n\n// L'expression de fonction est toujours dans l'objet des variables – première erreur.\n\nconsole.log(typeof downBelow); // `function downBelow() { console.log('upSideDown'); }`\n\n// mais, ceci est encore plus intéressant\nconsole.log(upTop === downBelow); // `false` !\n\nupTop.side = 1;\nconsole.log(downBelow.side); // `undefined`\n\n// mais les deux fonctions\n// font la même chose\n\nupTop(); // `'upSideDown'`\ndownBelow(); // `'upSideDown'`\n```\n\nIl est amusant de noter cependant que si la définition d'une expression de fonction nommée est faites séparément de son affectation à une variable (par exemple avec l'utilisation de l'opérateur de groupement), alors l'opérateur d'égalité stricte appliqué entre les deux noms de fonction donnera `true` :\n\n*Code JavaScript*\n\n```js\n(function downBelow() {});\n\nvar upTop = downBelow;\n\nconsole.log(upTop === downBelow); // `true`\n\nupTop.side = 1;\nconsole.log(downBelow.side); // `1`\n```\n\nCeci s'explique car _deux objets_ sont effectivement créés, mais après l'affectation, il n'en reste plus qu'_un_. Puisque les expressions de fonctions nommées sont considérées comme des déclarations de fonctions, pendant la phase d'entrée dans le contexte, `downBelow` est créée dans l'objet des variables. Après cela, lors de la phase d'exécution du code un second objet est créé : l'expression de fonction correspondant à `downBelow`. Aussitôt consommé, `downBelow` disparaît car il n'est pas attaché à l'objet des variables. Il ne reste plus que la déclaration de fonction `downBelow` qui est assignée par référence à la variable `upTop`.\n\nTroisièmement, en regardant la référence indirecte disponible via `arguments.callee`, on s'aperçoit que celle-ci prend la référence du nom par lequel la fonction est activée (la fonction a deux objets) :\n\n*Code JavaScript*\n\n```js\nvar upTop = function downBelow() {\n\n    console.log([\n        arguments.callee === downBelow,\n        arguments.callee === upTop\n    ]);\n\n};\n\ndownBelow(); // `[true, false]`\nupTop(); // `[false, true]`\n```\n\nQuatrièmement, comme JScript traite les expressions de fonctions nommées comme des déclarations de fonctions, il n'est pas soumis aux règles des opérateurs conditionnelles, c.-à-d. que tout comme les déclarations de fonctions, les expressions de fonctions nommées sont créées pendant la phase d'entrée dans le contexte et c'est la dernière définition dans le code qui est utilisée :\n\n*Code JavaScript*\n\n```js\nvar upTop = function downBelow() {\n    console.log(1);\n};\n\nif (false) {\n\n    upTop = function downBelow() {\n        console.log(2);\n    };\n\n}\ndownBelow(); // `2`\nupTop(); // `1`\n```\n\nCe comportement peut encore une fois être expliqué « logiquement ». Lors de la phase d'entrée dans le contexte, la dernière déclaration de fonction avec le nom `downBelow` est créée, c.-à-d. la fonction avec `console.log(2)`. Après cela, lors de la phase d'exécution du code, la nouvelle expression de fonction correspondant à `downBelow` est créée, et une référence est assignée à la variable `upTop`. Ensuite (car plus loin la structure de contrôle conditionnelle `if` avec l'expression `false` ne peut être atteinte), l'activation de `upTop` produit `console.log(1)`. La logique est clair, mais cela est considérée comme un bug IE. C'est pour cela que « logiquement » est entre guillemet car cette implémentation biaisée ne dépend que d'un bug IE.\n\nEt le cinquième bug de JScript est à propos de la création de propriétés dans l'objet global via l'affectation d'une valeur à un identifiant non qualifié (c.-à-d. sans le mot-clé `var`). Comme les expressions de fonctions nommées sont traitées comme des déclarations de fonctions, elles sont stockées dans l'objet des variables affecté à un identifiant non qualifié (c.-à-d. pas à une variable mais à une propriété de l'objet global) et dans le cas ou un _nom de fonction est le même qu'un identifiant non qualifié_, la propriété _ne devient pas globale_.\n\n*Code JavaScript*\n\n```js\n(function () {\n\n    // sans le mot-clé `var` ce n'est pas une variable du\n    // contexte local, mais une propriété de l'objet global\n\n    upTop = function upTop() {};\n\n})();\n\n// cependant de l'extérieur\n// l'expression de fonction nommée `upTop`\n// est indisponible\n\nconsole.log(typeof upTop); // `undefined`\n```\n\nEncore une fois la « logique » est clair : la déclaration de fonction `upTop` est ajoutée à l'objet d'activation du contexte locale lors de la phase d'_entrée dans le contexte_. Et lors de la phase d'_exécution du code, le nom `upTop` exsite déjà dans l'objet d'activation, c.-à-d., _qu'il est traité comme une variable locale_. D'après ECMA-262-3, l'affectation dans `upTop` est une opération de _mise à jour d'une propriété existante dans l'objet d'activation `upTop`_, mais pas une création de _nouvelle propriété dans l'objet global_.\n\n\n\n### Constructeur de fonction\n\nCe troisième type de fonction est traitée séparément des déclarations de fonctions et des expressions de fonctions car il a également ces propres fonctionnalités. Sa fonctionnalité principale est que sa propriété `[[Scope]]` ne contient que l'objet global :\n\n*Code JavaScript*\n\n```js\nvar adam = true;\n\nfunction upTop() {\n\n    var adam = false;\n    var eden = true;\n\n    var transWorld = new Function('console.log(adam); console.log(eden);');\n\n    transWorld(); // `true`, « erreur : `eden` n'est pas défini(e) »\n\n}\n```\n\nNous pouvons voir que la propriété interne `[[Scope]]` de la fonction `transWorld` ne contient pas l'objet d'activation du contexte de `upTop`. La variable `eden` n'est pas accessible et la variable `adam` est résolue depuis le contexte global. En passant, vous pouvez remarquer que le constructeur `Function` peut être utilisé avec et sans le mot-clé `new` de la même manière.\n\nL'autre particularité de ce type de fonction est lié aux productions de grammaires identiques (« equated grammar productions ») et aux objets joints (« joined objects »). Ce mécanisme est fourni par la spécification comme une suggestion d'optimisation (qui reste donc qu'une suggestion, non une obligation du standard). Par exemple, si vous avez un tableau de 100 éléments qui sont assignés dans une boucle depuis une expression de fonction, le mécanisme des _objets joints_ sera utilisé :\n\n*Code JavaScript*\n\n```js\nvar transWorld = [];\n\nfor (var floor = 0; floor \u003c 100; floor++) {\n    transWorld[floor] = function () {}; // les objets joints peuvent être utilisés (même fonction pour les 100 objets)\n}\n```\n\nMais les fonctions créée via le constructeur `Function` ne sont _jamais jointent_ (mêne sans `new`) :\n\n*Code JavaScript*\n\n```js\nvar transWorld = [];\n\nfor (var floor = 0; floor \u003c 100; floor++) {\n    transWorld[floor] = Function(''); // 100 fonctions différentes en mémoire\n}\n```\n\nEncore un autre exemple avec les objets joints :\n\n*Code JavaScript*\n\n```js\nfunction world() {\n\n    function dualGravity(gravity) {\n        return gravity * gravity;\n    }\n\n    return dualGravity;\n}\n\nvar x = world();\nvar y = world();\n```\n\nIci les implémentations peuvent utiliser la méthode des objets joints pour `x` et `y` (et utiliser la même objet de fonction) car les fonctions (ainsi que leur propriété `[[Scope]]`) retournée par `world()` ne peuvent être distinguées. Encore une fois, si les fonctions sont créées avec le constructeur `Function`, cela demande plus de ressources mémoires.\n\n\n\n\n\n## Algorithme de création de fonction\n\nMaintenant que nous avons vu tous les types de fonctions existants nous pouvons jeter un œil à l'algorithme de création de ses fonctions (sans la parties pour les objets joints). Cette description aide à comprendre plus en détail quels types de fonctions existe en JavaScript. Il est donc identiques pour toutes créations de fonctions quelque soit son type.\n\n*Pseudo-code*\n\n```js\n// Un nouvel objet, est créé\nF = new NativeObject()\n\n// La propriété interne `[[Class]]`\n// prend comme instance d'objet `\"Function\"`\n// car cet objet sera une fonction\nF.[[Class]] = \"Function\"\n\n// Association du prototype des fonctions\n// à la fonction en cours de création\nF.[[Prototype]] = Function.prototype\n\n// Référence à la fonction elle-même dans `[[Call]]`\n// `[[Call]]` est appelé quand `F` sera activé par\n// une expression d'appel `F()` (sans `new`)\n// cela créé un nouveau contexte d'exécution\nF.[[Call]] = \u003créférence à la fonction\u003e\n\n// Création du constructeur d'objets général dans `[[Construct]]`\n// `[[Construct]]` est appelé quand `F` sera activé\n// par une expression d'appel `new F()`\n// c'est ça qui alloue la mémoire des nouveaux objets créés\n// Puis `F.[[Call]]` est appelé pour l'initialisation\n// de la valeur de this en tant que nouvel objet créé\nF.[[Construct]] = internalConstructor\n\n// Association de la chaîne des portées du contexte courant\n// c.-à-d. du contexte qui créé la fonction F\nF.[[Scope]] = activeFunctionContext.Scope\n\n// Si la fonction est créée\n// via `new Function(...)` ou `Function(...)`, alors\nif (createdByNewFunction) {\n    F.[[Scope]] = globalContext.Scope\n}\n\n// Nombres de paramètres formels\nF.length = countParameters\n\n// prototype des objets créer par la fonction F\n__objectPrototype = new Object()\n__objectPrototype.constructor = F // {DontEnum}, n'est pas énumérable dans une boucle\nF.prototype = __objectPrototype\n\nreturn F\n```\n\nNotez que `F.[[Prototype]]` est le prototype de la _fonction (constructeur)_ alors que `F.prototype` est le prototype _des objets créés par cette fonction_ (faites bien attention à cela car les articles expliquant que `F.prototype` est le prototype de la fonction constructeur se trompent).\n\n## Conclusion\n\nCet article était plutôt long. Vous pourrez le comprendre encore mieux plus tard quand nous discuterons plus en détail des prototypes dans un prochain chapitre.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/la-chaine-des-portees/\"\u003e\u0026lt; Chapitre 4\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fermetures/\"\u003eChapitre 6 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [13. — Function Definition](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [15.3 — Function Objects](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre adaptation française de l'excellent billet [Тонкости ECMA-262-3. Часть 5. Функции.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-5-functions/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-04-26T13:54:00.000Z"},"updated":[]},"description":"Nous allons nous intéresser à différents types de fonctions, et définir comment chacun de ces types influence l'objet des variables","image":"https://blog.lesieur.name/media/images/upload/functions.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 5. — Les fonctions en JavaScript","urn":"les-fonctions"}
{"_id":{"$oid":"59172fa851cc9f2819bf8a26"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 6.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/closures.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/closures-mini.png\" alt=\"Bien que le contexte de vie soit détruit, les zombis vivent toujours, enfermés, tel des variables dans une fermeture.\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eBien que le contexte de vie soit détruit, les zombis vivent toujours, enfermés, tel des variables dans une fermeture.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans cet article nous allons parler d'un des sujets le plus souvent questionné en JavaScript : _les fermetures (« closures »)_.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fonctions/\"\u003e\u0026lt; Chapitre 5\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-types/\"\u003eChapitre 7 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nCe sujet n'est pas nouveau et a été abordé maintes fois. Nous allons cependant essayer de l'aborder d'un point de vue théorique dans un premier temps et voir ensuite comment le JavaScript s'en occupe techniquement.\n\nIl serait intéressant d'avoir pris connaissance en amont des deux chapitres précédents dédiés à [la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/) et à [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/) qui aideront à la compréhension du présent chapitre sans pour autant être indispensables à la compréhension globale.\n\n\n\n\n\n## Théorie générale\n\nAvant d'aborder la discussion sur les fermetures en JavaScript, il semble important de définir un certain nombre de concepts de la théorie générale de [la programmation fonctionnelle](https://fr.wikipedia.org/wiki/Programmation_fonctionnelle).\n\nComme vous le savez peut-être, dans les langages de programmation fonctionnelle (et JavaScript en est un), les fonctions sont _des données_. C.-à-d. qu'elles peuvent _être affectées à des variables_, passées en tant _qu'arguments_ dans les paramètres des fonctions ou être retournées par les fonctions. Ces fonctions ont des noms et des structures spéciales.\n\n\n\n### Définitions\n\n\u003e Un _argument fonctionnel_ (« functionnal argument » ou « funarg ») est un paramètre de fonction dont la valeur est elle-même une fonction.\n\n*Code JavaScript*\n\n```js\n// création et déclaration d'un paramètre fonctionnel `funarg`\nfunction umbrella(funarg) {\n    funarg();\n}\n\n// appel et définition d'un argument fonctionnel `functionnalArgument`\numbrella(function functionnalArgument() {\n    console.log('corporation');\n});\n```\n\nL'argument fonctionnel de l'exemple ci-dessus est une expression de fonction _passée_ à la fonction `umbrella`.\n\n\u003e La fonction qui _reçoit_ comme paramètre l'argument fonctionnel est appelée une _fonction d'ordre supérieur (« higher-order function »)_.\n\nUn autre nom donné à une fonction d'ordre supérieur est _fonction fonctionnelle_ ou, plus près des mathématiques, un _opérateur_. Dans l'exemple ci-dessus, `umbrella` est donc une _fonction d'ordre supérieur_.\n\nComme mentionné plus haut, un argument fonctionnel peut-être non seulement passé à travers les paramètres des fonctions appelées, mais également _retourné_ comme valeur par une autre fonction.\n\n\u003e Une fonction qui _retourne_ une autre fonction est appelée une _fonction avec valeur fonctionnelle (« _function-valued_ function »)_.\n\n*Code JavaScript*\n\n```js\n(function functionValued() {\n    return function () {\n        console.log(\"appel d'une fonction retournée\");\n    };\n})()();\n```\n\n\u003e Une fonction pouvant être utilisée comme une donnée standard (c.-à-d. être passée en tant qu'argument ou recevoir des arguments fonctionnels ou encore être retournée en tant que valeur fonctionnelle) est appelée une _fonction de première classe_.\n\nEn JavaScript, toutes les fonctions sont des fonctions de première classe.\n\nUne fonction se recevant elle-même via un argument, est une _fonction auto-applicative (« self-applicative »)_ :\n\n*Code JavaScript*\n\n```js\n(function selfApplicative(funarg) {\n\n    if (funarg \u0026\u0026 funarg === selfApplicative) {\n        console.log('auto-applicative');\n        return;\n    }\n\n    selfApplicative(selfApplicative);\n})();\n```\n\net une fonction qui se retourne elle-même est, quand à elle, appelée une _fonction auto-réplicative (« self-replicative »)_ :\n\n*Code JavaScript*\n\n```js\n(function selfReplicative() {\n    console.log('auto-réplicative');\n    return selfReplicative;\n})();\n```\n\n\u003e L'un des motifs les plus intéressants des fonctions auto-réplicatives est leur _forme déclarative_ fonctionnant avec un seul argument de collection au lieu d'accepter la collection elle-même :\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e // fonction impérative qui\n\u003e // accepte une collection\n\u003e \n\u003e function starsList(modes) {\n\u003e      modes.forEach(function (mode) {\n\u003e          console.log(mode);\n\u003e      });\n\u003e }\n\u003e \n\u003e // et s'utilisant ainsi\n\u003e starsList(['jill', 'chris', 'barry']);\n\u003e // `jill`\n\u003e // `chris`\n\u003e // `barry`\n\u003e \n\u003e // vs\n\u003e \n\u003e // forme déclarative des\n\u003e // fonction auto-replicative\n\u003e \n\u003e function stars(mode) {\n\u003e      console.log(mode);\n\u003e      return stars; // on retourne la fonction elle-même\n\u003e }\n\u003e \n\u003e // s'utilisant en *déclarant* les S.T.A.R.S\n\u003e \n\u003e stars\n\u003e     ('jill')\n\u003e     ('chris')\n\u003e     ('barry');\n\u003e ```\n\u003e \n\u003e Cependant, dans la pratique, travailler avec des collections sera plus efficient et intuitif.\n\nLes variables locales qui sont définies dans les arguments fonctionnels passés sont bien sûr accessibles lors de l'_activation_ (appel) de la fonction. Et cela grâce à un [objet des variables](https://blog.lesieur.name/l-objet-des-variables/) qui stocke les données du contexte est créé à chaque fois en entrant dans le contexte :\n\n*Code JavaScript*\n\n```js\nfunction umbrella(funarg) {\n\n    // activation locale de funarg\n    // la variable `localVar` est disponible\n    // à l'intérieur de `funarg`\n\n    funarg(10); // `20`\n    funarg(20); // `30`\n\n}\n\numbrella(function (localParam) {\n\n    var localVar = 10;\n    console.log(localParam + localVar);\n\n});\n```\n\nCependant, comme nous l'avons vu dans le [chapitre précédent sur sur la chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/), les fonctions en JavaScript peuvent être _encapsulées_ dans des _fonctions parentes_ et _utiliser des variables_ depuis des _contextes parents_. Quand une variable utilisée dans une fonction provient d'une fonction parente, cela conduit à une particularité connue sous le nom de _problème de l'argument fonctionnel_ (« Funarg problem »).\n\n\n\n### Problème de l'argument fonctionnel\n\nDans [un langage de programmation avec pile d'exécution](https://blog.lesieur.name/les-contextes-d-execution/), les variables locales des fonctions sont stockées dans la _pile_ (« stack »). Cette pile est _augmentée_ chaque fois qu'une fonction est _appelée_ et ses variables et arguments sont stockés dans le niveau ajouté.\n\nAprès _retour_ d'une fonction, les variables et arguments de cette fonction sont _supprimés_ de la pile en même temps que le niveau associé. Ce modèle est une _grosse restriction_ pour l'utilisation de fonctions en tant que _valeurs fonctionnelles_ puisque la fonction qui stockait la valeur retournée n'est plus dans la pile.\n\n\u003e Ce problème apparaît le plus souvent quand une fonction utilise des _variables libres_.\n\nUne _variable libre_ est une variable qui est utilisée par une fonction mais qui n'est, ni un paramètre de la fonction, ni une variable locale de la fonction.\n\n*Code JavaScript*\n\n```js\nfunction biohazard() {\n\n    var freeVar = 10;\n\n    function stars(localParam) {\n        console.log(localParam + freeVar);\n    }\n\n    return stars;\n}\n\nvar residentEvil = biohazard();\nresidentEvil(20); // `30`\n```\n\nDans cet exemple, la variable `freeVar` est _libre_ pour la fonction `stars`.\n\nSi ce système utilisait un _modèle avec pile d'exécution_ pour stocker les variables locales, cela signifierait qu'au retour de la fonction `biohazard` toutes les variables auraient été _supprimées_ de la pile. Et cela aurait causé une erreur lors de l'activation de `stars` depuis l'_extérieur_.\n\nCependant pour ce cas particulier, dans une implémentation orientée pile, retourner la fonction `stars` n'aurait pas été possible du tout, puisque `stars` est aussi _locale_ à `biohazard` et aurait donc également été _supprimée_ au retour de la fonction `biohazard`.\n\nUn autre problème avec les objets fonctionnels est lié au passage de fonctions en tant qu'arguments dans un système avec une implémentation de portée dynamique.\n\n*Pseudo-code*\n\n```js\nvar z = 10\n\nfunction zombi() {\n    console.log(z)\n}\n\nzombi() // `10` avec une portée statique ou une portée dynamique\n\n(function () {\n\n    var z = 20\n    zombi() // `10` avec une portée statique, `20` avec une portée dynamique\n\n})()\n\n// et la même chose en passant `zombi`\n// en tant qu'argument du premier paramètre `funarg`\n\n(function (funarg) {\n\n    var z = 30\n    funarg() // `10` avec une portée statique, `30` avec une portée dynamique\n\n})(zombi)\n```\n\nNous voyons que dans un système avec une portée dynamique, la _résolution des variables_ est gérée grâce à une _pile dynamique de variables_. Donc les variables libres sont cherchées dans la _chaîne dynamique_ de l'_activation_ courante, mise en place lors de la phase d'_appel de la fonction_, et non dans une _portée (lexicale) statique_ qui est créée lors de la phase de _création de la fonction_.\n\nDonc même si `z` existe (contrairement à l'exemple précédent où la variable locale aurait été supprimée de la pile), une question se pose : quelle valeur de `z` (c.-à-d. `z` depuis quel _contexte_, depuis quelle _portée_) devrait être utilisée dans les différents appels de la fonction `zombi` ?\n\n\u003e Ces deux cas de figure lèvent deux types de problème :\n\n\u003e - comment faire fonctionner les _valeurs fonctionnelles_ retournées depuis des fonctions (« upward funarg ») et\n\u003e - comment faire fonctionner les _arguments fonctionnelles_ passés à des fonctions (« downward funarg »).\n\nPour résoudre ces problèmes (et leurs variantes), le concept de _fermeture_ a été proposé.\n\n\n\n### Une fermeture\n\n\u003e Une _fermeture (« closure »)_ est la combinaison d'un _pend de code_ et des _données_ du contexte dans lequel ce pend de code est _créé_.\n\nImageons cela avec le pend de code suivant :\n\n*JavaScript*\n\n```js\nvar t = 20;\n\nfunction mansion() {\n    console.log(t); // variable libre `t` valant `20`\n}\n```\n\net les données du contexte :\n\n*Pseudo-code*\n\n```js\n// Fermeture pour le pend de code `mansion`\nmansionClosure = {\n    call: mansion, // référence à la fonction\n    lexicalEnvironment: { t: 20 } // contexte pour la recherche de variables libres\n}\n```\n\nMême si le mot « lexical » est souvent omis quand on parle de portée _lexicale_, le fait est qu'une fermeture sauve les variables parentes dans un _champ lexical_ dédié au _pend de code_, là où il est _défini_. Lors des prochaines activations de ce code, les variables libres seront cherchées à travers ce contexte lexical fermé (et ainsi comme nous l'avons vu dans l'exemple plus haut, la variable `z` sera toujours résolue à `10` pour une portée statique).\n\nDans la définition nous avons utilisé le terme générique de « pend de code » mais celui-ci peut être plus précis en fonction du langage. En JavaScript par exemple, le terme est complètement remplaçable par « fonction ». Mais cela n'est pas nécessairement le cas de tous les langages, comme par exemple en Ruby, où les fermetures peuvent être appliquées à autre chose que des fonctions.\n\nComme type d'implémentation pour le stockage de variables après la destruction d'un contexte, l'implémentation basée sur une pile _ne convient pas du tout_ (car cela contredit la définition d'une structure basée sur une pile). Dans ce cas, les données gérées par la fermeture d'un contexte parent peuvent être sauvée _dynamiquement en mémoire_ comme dans un tas (« heap »), c.-à-d. dans une implémentation basée sur un tas. Une telle implémentation utilise un ramasse-miettes (« garbage collector ») et des _références par comptage_. Ces systèmes sont moins rapides que les systèmes basés sur une pile. Cependant, les implémentations peuvent toujours optimiser cela en vérifiant lors de la phase d'analyse d'une fonction quelles variables libres sont utilisées et décider en fonction de cela de les placer dans une pile ou dans un tas.\n\n\n\n\n\n## Les fermetures en JavaScript\n\nMaintenant que nous avons discuté de la théorie, nous allons parler des fermetures (« closures ») spécifiquement dans le contexte du JavaScript. Il est nécessaire de noter ici que le JavaScript utilise _uniquement_ [une portée (lexicale) statique](https://fr.wikipedia.org/wiki/Port%C3%A9e) (alors que dans certains langages, comme en Perl, les variables peuvent être déclarées en utilisant des portées dynamiques ou statiques).\n\n*Code JavaScript*\n\n```js\nvar g = 10;\n\nfunction virus() {\n    console.log(g);\n}\n\n(function (funarg) {\n\n    var g = 20;\n\n    // la variable `g` pour le `funarg` est sauvée de manière statique\n    // dans le contexte lexical dans lequel elle est créée\n\n  funarg(); // `10`, mais pas `20`\n\n})(virus);\n```\n\nTechniquement, les variables d'un contexte parent sont sauvées dans la propriété interne `[[Scope]]` de la fonction. Aussi si vous souhaitez complètement comprendre `[[Scope]]` et _la chaîne des portées_, cela a été discuté en détail dans le [chapitre 4](https://blog.lesieur.name/la-chaine-des-portees/). Ainsi les problématiques de fermetures devraient disparaître d'elles-même.\n\nEn s'appuyant sur l'[algorithme de création des fonctions](https://blog.lesieur.name/les-fonctions/#algorithme-de-cr-ation-de-fonction), nous voyons que _toutes les fonctions en JavaScript sont des fermetures_, puisque _toutes_ créent une chaîne des portées du contexte parent. Ce qu'il faut retenir étant qu'au moment ou une fonction est activée (appelée), la portée parente _est déjà sauvée depuis le moment de sa création_.\n\n*JavaScript*\n\n```js\nvar g = 10;\n\nfunction virus() {\n    console.log(g);\n}\n```\n\n*Pseudo-code*\n\n```js\n// `virus` est une fermeture\nvirus = virusFunctionObject = {\n    [[Call]]: \u003cpend de code de `virus`\u003e,\n    [[Scope]]: [{\n        g: 10\n    }, // === `GO`\n    \u003c...\u003e // autres propriétés\n}\n```\n\nPour des questions d'optimisations, quand une fonction n'utilise pas de _variables libres_, l'implémentation peut ne pas sauver de chaîne des portées. Cependant rien n'est mentionné à ce propos dans la spécification ECMA-262-3. C'est donc une liberté prise au niveau de l'implémentation (et par l'algorithme technique) car « toutes les fonctions sauvent une chaîne des portées dans leur propriété interne `[[Scope]]` lors de la création ».\n\nPlusieurs implémentations permettent un accès direct à cette portée fermée. Par exemple dans Rhino, une propriété non standard `__parent__` correspond à la propriété interne `[[Scope]][0]` dont nous avons discuté dans le chapitre sur [l'objet des variables](https://blog.lesieur.name/l-objet-des-variables/) :\n\n*Code JavaScript*\n\n```js\nvar GO = this;\nvar t = 10;\n\nvar virus = (function () {\n\n    var g = 20;\n\n    return function () {\n        console.log(g);\n    };\n\n})();\n\nvirus(); // `20`\nconsole.log(virus.__parent__.g); // `20`\n\nvirus.__parent__.g = 30;\nvirus(); // `30`\n\n// Nous pouvons nous déplacer à travers la chaîne des portées jusqu'au bout\nconsole.log(virus.__parent__.__parent__ === GO); // `true`\nconsole.log(virus.__parent__.__parent__.t); // `10`\n```\n\n\n\n### Une valeur `[[Scope]]` pour tous\n\nIl est nécessaire de noter que la propriété fermée `[[Scope]]` en JavaScript est le _même objet_ pour plusieurs des fonctions internes créées dans le contexte parent. Cela signifie que la modification d'une variable dans une fermeture va se _refléter_ lors de la lecture de cette variable depuis _une autre_ fermeture.\n\n\u003e En clair : toutes les fonctions _internes partagent_ la _même_ chaîne des portées _parente_.\n\n*Code JavaScript*\n\n```js\nvar tyran;\nvar nemesis;\n\nfunction weapons() {\n\n    var x = 1;\n\n    tyran = function () { return ++x; };\n    nemesis = function () { return --x; };\n\n    x = 2; // affectation de AO(\u003cweapons\u003e)[`x`], qui est dans la propriété `[[Scope]]` de chaque fermeture\n\n    console.log(tyran()); // `3`, via tyran.[[Scope]]\n}\n\nweapons();\n\nconsole.log(tyran()); // `4`, via tyran.[[Scope]]\nconsole.log(nemesis()); // `3`, via nemesis.[[Scope]]\n```\n\nIl y a une erreur très répandue liée à cette fonctionnalité. Souvent les développeurs obtiennent un résultat qu'ils n'attendaient pas quand ils créent des fonctions dans des _boucles_, essayant d'associer à chaque fonction de la boucle une variable de comptage, s'attendant à ce que chaque fonction garde sa « propre » valeur.\n\n*Code JavaScript*\n\n```js\nvar data = [];\n\nfor (var k = 0; k \u003c 3; k++) {\n    data[k] = function () {\n        var x = true;\n        console.log(k);\n    };\n}\n\ndata[0](); // `3`, et pas `0`\ndata[1](); // `3`, et pas `1`\ndata[2](); // `3`, et pas `2`\n```\n\nCe comportement est expliqué par l'exemple précédent. Une _même_ portée liée au contexte est créée pour ces _trois fonctions_. Chaque fonction la référence dans sa propriété interne `[[Scope]]`, et la variable `k` depuis cette portée parente peut-être facilement changée.\n\nRegardez plutôt ce qu'il se passe étape par étape pour la chaîne des portées :\n\nPhase d'entrée dans le contexte global :\n\n*Pseudo-code*\n\n```js\n// activeGlobalContext.Scope = activeGlobalContext.AO\nactiveGlobalContext.Scope = [\n    { data: \u003créférence à `data`\u003e, k: undefined }\n]\n```\n\nPhase d'exécution du contexte global :\n\n*Pseudo-code*\n\n```js\n// activeGlobalContext.Scope = activeGlobalContext.AO\nactiveGlobalContext.Scope = [\n    { data: [\u003c...\u003e], k: 3 }\n]\n```\n\nPhase d'entrée de la fonction `data[1]` (par exemple) :\n\n*Pseudo-code*\n\n```js\n// activeFunctionContext.Scope = activeFunctionContext.AO + data[1].[[Scope]]\nactiveFunctionContext.Scope = [\n    { x: undefined }, // objet d'activation courant `AO`\n    { data: [\u003c...\u003e], k: 3 } // l'objet global (`activeFunctionContext.AO`)\n]\n```\n\nPhase d'exécution de la fonction `data[1]` (par exemple) :\n\n*Pseudo-code*\n\n```js\n// activeFunctionContext.Scope = activeFunctionContext.AO + data[1].[[Scope]]\nactiveFunctionContext.Scope = [\n    { x: true },\n    { data: [\u003c...\u003e], k: 3 }\n]\n\n// c.-à-d\n\ndata[1].[[Scope]].k === globalContext.Scope.k === `3`\n```\n\nAu moment de l'activation de la fonction, c'est la dernière valeur de `k` affectée qui s'affiche, c.-à-d. `3`.\n\n\u003e Cela est dû au fait que toutes les variables sont créées avant l'exécution du code, c.-à-d. lors de la phase d'entrée dans le contexte. Ce comportement est aussi connu sous le nom de hissage (« hoisting ») de variable.\n\nLa création d'un contexte fermé additionnel peut résoudre ce problème :\n\n*Code JavaScript*\n\n```js\nvar data = [];\n\nfor (var k = 0; k \u003c 3; k++) {\n    data[k] = (function helper(x) {\n        return function () {\n            console.log(x);\n        };\n    })(k); // passage de la valeur `k` pour chaque objet des variables\n}\n\n// maintenant c'est le résultat souhaité\ndata[0](); // `0`\ndata[1](); // `1`\ndata[2](); // `2`\n```\n\nRegardons ce qu'il se passe dans ce cas.\n\nEn premier lieu, la fonction `helper` est créée et _immédiatement activée_ avec comme premier argument `k`.\n\nPuis, la valeur retournée par la fonction `helper` est _aussi une fonction_, contenant les éléments du tableau `data` original.\n\nCette technique produit les effets suivants : à l'activation, `helper` crée à chaque fois un _nouvel objet d'activation_ qui contient le paramètre `x`, et la valeur de ce paramètre est la valeur de l'argument `k` _passé_.\n\nDonc, les propriétés `[[Scope]]` de chaque fonction retournée sont les suivantes lors de la phase d'exécution :\n\n*Pseudo-code*\n\n```js\ndata[0].[[Scope]] === [\n    { x: 0 },\n    { data: [\u003c...\u003e], k: 3 }\n]\n\ndata[1].[[Scope]] === [\n    { x: 1 },\n    { data: [...], k: 3 }\n]\n\ndata[2].[[Scope]] === [\n    { x: 2 },\n    { data: [...], k: 3 }\n]\n```\n\nNous voyons maintenant que la propriété `[[Scope]]` des fonctions a une référence sur la valeur souhaitée via la variable `x` qui est capturée par la portée _additionnelle_ créée.\n\nNotons que les fonctions retournées gardent toujours leur référence à la variable `k`. La variable `k` garde toujours à travers toutes les fonctions la valeur `3`.\n\nParfois les fermetures JavaScript _incomplètes_ sont réduites au motif montré plus haut, avec la création de fonctions additionnelles de capture des valeurs désirées. D'un point de vue pratique, ce motif se doit d'exister, mais d'un point de vue théorique comme mentionné : _toutes les fonctions_ en JavaScript sont des fermetures, et pas seulement dans ce cas de figure.\n\nLe motif décrit plus haut n'est pas le seul utilisable. Pour conserver la valeur souhaitée de la variable `k` il est aussi possible, par exemple, d'utiliser cette approche :\n\n*Code JavaScript*\n\n```js\nvar data = [];\n\nfor (var k = 0; k \u003c 3; k++) {\n    (data[k] = function () {\n        console.log(arguments.callee.x);\n    }).x = k; // sauver `k` en tant que propriété de la fonction\n}\n\n// et tout est encore correct\ndata[0](); // `0`\ndata[1](); // `1`\ndata[2](); // `2`\n```\n\n\u003e Notons que ES6 standardise la _portée de structure_, qui peut être mise en place en utilisant les mots clés `let` ou `const` en tant que déclaration de variable. L'exemple ci-dessus peut alors simplement être réécrit ainsi :\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e let data = [];\n\u003e \n\u003e for (let k = 0; k \u003c 3; k++) {\n\u003e     data[k] = function () {\n\u003e         console.log(k);\n\u003e     };\n\u003e }\n\u003e \n\u003e // toujours des sorties correctes\n\u003e data[0](); // `0`\n\u003e data[1](); // `1`\n\u003e data[2](); // `2`\n\u003e ```\n\n\n\n### Argument fonctionnel et `return`\n\nUne autre fonctionnalité est _le retour_ des fermetures. En JavaScript, une instruction avec le mot-clé `return` dans une fermeture rend le contrôle de flux depuis un contexte appelant.\n\nVoici un exemple pour comprendre le comportement standard de `return` en JavaScript :\n\n*Code JavaScript*\n\n```js\nfunction getElement() {\n\n    [1, 2, 3].forEach(function (element) {\n\n        if (element % 2 == 0) {\n            // retour de la fonction « forEach »,\n            // mais pas retour de la fonction `getElement`\n            console.log('trouvé: ' + element); // trouvé: 2\n            return element;\n        }\n\n    });\n\n    return null;\n}\n\nconsole.log(getElement()); // `null`, et non `2`\n```\n\nainsi en JavaScript, _lancer_ et _attraper_ certaines exceptions peut aider :\n\n*Code JavaScript*\n\n```js\nfunction getElement() {\n\n    var $break = {};\n\n    try {\n\n        [1, 2, 3].forEach(function (element) {\n\n            if (element % 2 === 0) {\n                // « return » pour getElement depuis cette fermeture\n                console.log('trouvé: ' + element); // trouvé: 2\n                $break.data = element;\n                throw $break;\n            }\n\n        });\n\n    } catch (e) {\n        if (e === $break) {\n            return $break.data;\n        }\n    }\n\n    return null;\n}\n\nconsole.log(getElement()); // `2`\n```\n\n\n\n### Théorie et exception\n\nComme nous l'avons noté, les développeurs réduisent souvent les fermetures à de simples fonctions internes retournées par leurs contextes parents. Ceci réduit les fermetures à être exploitables uniquement dans les fonctions anonymes.\n\n\u003e Laissez-moi vous le dire à nouveau : _toutes les fonctions_ , indépendamment de leur type ([expressions nomées et anonymes ou déclarations](https://blog.lesieur.name/les-fonctions/)), parce qu'elles possèdent une [chaîne des portées](https://blog.lesieur.name/la-chaine-des-portees/), _sont des fermetures_.\n\nUne exception à cette règle subsiste pour les fonctions créées via [le constructeur `Function`](https://blog.lesieur.name/les-fonctions/#constructeur-de-fonction) dont la propriété `[[Scope]]` ne contient _que l'objet global_.\n\nAussi pour clarifier cette question, donnons deux versions des fermetures en JavaScript :\n\n_Les fermetures en JavaScript sont_ :\n\n- d'un point de vu _théorique_ : _toutes les fonctions_, puisqu'elles sauvegardent _à la création_ les variables du contexte parent. Même pour une _simple fonction globale_, qui référence une variable globale qui renvoie à une _variable libre_, le mécanisme de chaîne de portée est utilisé ;\n\n- d'un point de vu _pratique_ : ces fonctions sont intéressantes car :\n   - elles continuent à exister quand leur contexte parent est terminé, c.-à-d. les fonctions _encapsulées_ dans des _fonctions parentes_ ;\n   - utilisent _des variables libres_.\n\n\n\n\n\n## Usage pratique des fermetures\n\nDans la pratique les fermetures permettent la création de structures élégantes, favorisant la personnalisation de différents calculs définis par un argument fonctionnel. En voici des exemples non exhaustifs.\n\n### Argument fonctionnel\n\nVoici un exemple avec la méthode `sort` des tableaux qui accepte en tant que premier paramètre un argument fonctionnel de « condition de tri » :\n\n*Code JavaScript*\n\n```js\n[1, 2, 3].sort(function (a, b) {\n    // ... conditions de tri de votre choix\n});\n```\n\nVoici un autre exemple avec la méthode `find`. Il est parfois intéressant d'utiliser des fonctions de recherche en utilisant des arguments fonctionnels définissant les conditions de recherche :\n\n*Code JavaScript*\n\n```js\nsomeCollection.find(function (element) {\n    return element.someProperty === 'condition de recherche';\n});\n```\n\n### Association fonctionnelle\n\nVoici un exemple de ce que l'on appelle de l'association fonctionnelle (« mapping functionnals ») avec la méthode `map` d'un tableau. Celle-ci va _associer_ à un nouveau tableau une valeur calculée à chaque élément :\n\n*Code JavaScript*\n\n```js\n[1, 2, 3].map(function (element) {\n    return element * 2;\n}); // `[2, 4, 6]`\n```\n\n### Boucle de fonction\n\nIl est aussi intéressant d'autres fois d'appliquer les fonctions fonctionnelles, par exemple dans une méthode `forEach` qui _applique_ des instructions pour chaque élément d'un tableau :\n\n*Code JavaScript*\n\n```js\n[1, 2, 3].forEach(function (element) {\n    if (element % 2 !== 0) {\n        console.log(element);\n    }\n});\n// affiche `1`\n// affiche `3`\n```\n\n### `apply` et `call`\n\nAu passage, les méthodes de fonction `apply` et `call` utilisent également des _arguments fonctionnels_. Nous avons déjà discuté de ces méthodes dans une note à propos de [la valeur de this](https://blog.lesieur.name/la-valeur-de-this/) mais ici, nous allons voir leurs rôles avec les arguments fonctionnels ou fonctions appliquées en tant qu'argument (à une liste d'arguments avec `apply` et des positions d'argument avec `call`) :\n\n*Code JavaScript*\n\n```js\n(function () {\n    console.log([].join.call(arguments, ';'));\n}).apply(this, [1, 2, 3]);\n// affiche `1;2;3`\n```\n\n### Appel différés\n\nUn autre point important des fermetures est la possibilité des _appels différés (« deferred calls »)_ :\n\n*Code JavaScript*\n\n```js\nvar a = 10;\nsetTimeout(function () {\n    console.log(a);\n}, 1000);\n// une seconde d'attente...\n// ...puis affichaqe de `10`\n```\n\n### Fonction de rappel\n\nPlus simplement, un cas d'usage répandu des fermetures est celui des _fonctions de rappel (« callback functions »)_ :\n\n*Code JavaScript*\n\n```js\n// ...\nvar x = 10;\n\nxmlHttpRequestObject.onreadystatechange = function () {\n  // la fonction de rappel est appelée en différé,\n  // quand les données sont prêtes.\n  // La variable `x` est ici disponible indépendamment\n  // du fait que lorsque le contexte interne existe,\n  // l'exécution du code externe est déjà fini.\n  console.log(x); // `10`\n};\n// ...\n```\n\n### Encapsulations privées\n\nLes fermetures servent également à « masquer » des variables dans une portée encapsulante lors de l'exécution d'instructions :\n\n*Code JavaScript*\n\n```js\nvar residentEvil = {};\n\n// initialisation\n(function (object) {\n\n    var veronica = 10;\n\n    object.getVirus = function _getVirus() {\n        return veronica;\n    };\n\n})(residentEvil);\n\nconsole.log(residentEvil.getVirus()); // retourne la valeur `veronica` enfermée : `10`\nconsole.log(veronica); // « erreur : `veronica` n'est pas défini(e) »\n```\n\n\n\n\n\n## Conclusion\n\nCet article vous en a dit plus à propos de la théorie générale des fermetures afin de mieux aborder son application en JavaScript même si le fait d'avoir étudié la chaîne des portées en amont nous a bien facilité la tâche. Nous entrerons prochainement dans le détail de la programmation orientée objet dans le domaine du JavaScript !\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fonctions/\"\u003e\u0026lt; Chapitre 5\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-types/\"\u003eChapitre 7 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nLectures additionnelles :\n\n- [Javascript Closures (by Richard Cornford)](http://jibbering.com/faq/notes/closures/),\n- [Funarg problem](http://en.wikipedia.org/wiki/Funarg_problem),\n- [Closures](http://en.wikipedia.org/wiki/Closure_(computer_science))\n\nCe texte est une libre adaptation française de l’excellent billet [Тонкости ECMA-262-3. Часть 6. Замыкания.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-6-closures/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-05-13T16:09:00.000Z"},"updated":[]},"description":"Nous allons aborder ici un sujet populaire en JavaScript, les fermetures.","image":"https://blog.lesieur.name/media/images/upload/closures.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 6. — Les fermetures en JavaScript","urn":"les-fermetures"}
{"_id":{"$oid":"59528f58a9b5f0251d9baa20"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48b8"}],"content":"Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 7.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/types.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/types-mini.png\" alt=\"Tout n'est pas que SOLDAT à la Shinra, il y en a différent types.\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eTout n'est pas que SOLDAT à la Shinra, il y en a différent types.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nCet article va traiter des six types existants en JavaScript dans sa version ES3.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fermetures/\"\u003e\u0026lt; Chapitre 6\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-constructeurs-et-les-prototypes/\"\u003eChapitre 8 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nNous allons ici prendre en considération les types de données existants. Il est en premier lieu nécessaire de noter que le JavaScript distingue les entités à _valeurs primitives_ des _objets_. Malgré la phrase « en JavaScript, tout est objet » qu'il est possible de croiser au détour d'un article, il n'en est rien, où plutôt ; cela est partiellement correcte. Les valeurs primitives sont en rapport avec les _types de données_. Nous allons en discuter plus en détail.\n\n\n\n\n\n## Types de données\n\nMême si le JavaScript est un langage faiblement typé il n'en reste pas moins un langage typé. C'est même un langage avec objet dynamique et dont la conversion de type est piloté par les opérandes utilisés : elle est automatique et implicite, on appel cela de la coercion de type.\n\nLe standard ES3 définit 9 types dont seulement 6 sont directement accessibles depuis un programme JavaScript :\n\n- Undefined\n- Null\n- Boolean\n- String\n- Number\n- Object\n\nLes 3 autres types sont accessibles uniquement au niveau de l'implémentation (aucun objet en JavaScript ne possède ces types) et sont utilisés par la spécification pour expliquer le comportement de diverses opérations (comme le stockage de valeurs intermédiaires). Ce sont les trois types suivants :\n\n- Reference\n- List\n- Completion\n\nPour faire court, `Reference` est le type utilisé pour expliquer le fonctionnement des opérateurs `delete`, `typeof`, `this` et bien d'autres. Il est constitué d'un _objet base_ et d'un _nom de propriété_. Le type `List` décrit le comportement des listes d'arguments (lors de l'utilisation de l'opérateur `new` dans une expression ou dans les appels de fonctions). Le type `Completion` est quand à lui utilisé pour expliquer les comportements des structures de contrôle `break`, `continue`, `return` et `throw`.\n\n\n\n### Les valeurs primitives\n\nRevenons en à nos six types utilisés dans les programmes JavaScript. Cinq d'entre eux sont des valeurs primitives : **Undefined**, **Null**, **Boolean**, **String** et **Number**.\n\nEn voici des exemples\n\n*Code JavaScript*\n\n```js\nvar sephiroth = undefined;\nvar youfie = null;\nvar zack = true;\nvar cloud = 'test';\nvar xiii = 13;\n```\n\nCes valeurs sont implémentées à un très bas niveau. Ce _ne_ sont _pas_ des objets, elles n'ont ni constructeurs, ni prototypes.\n\nL'opérateur `typeof` peut être contre intuitif s'il n'est pas proprement compris. L'un des meilleurs exemples est celui de la valeur `null`. Quand `null` est fourni à l'opérateur `typeof`, le résultat est `\"object\"`, indépendamment du fait que la spécification indique que `null` est de type Null.\n\n*Code JavaScript*\n\n```js\nconsole.log(typeof null); // `\"object\"`\n```\n\nLa raison en est très simple. L'opérateur `typeof` retourne simplement une valeur lue depuis un tableau standard disant simplement : « pour la valeur `null`, la chaîne de caractère `\"object\"` doit être retournée ».\n\nCependant, la spécification ne clarifiant pas ce point, _Brendan Eich_, l'inventeur du JavaScript expliquera que [la différence entre `undefined` et `null`](https://blog.lesieur.name/difference-entre-type-null-et-type-undefined-en-javascript/) s'explique justement avec le type Object, c.-à-d. qu'il est intimement lié aux objets. Le fait est qu'une référence « vide » pour un objet peut être matérialisée par le type Null. Ce détail n'a pas été reporté dans la spécification ECMA-262-3 et actuellement le type Null est bien un type à part entier.\n\n\n\n### Le type Object\n\nC'est au tour du type Object d'être parcouru (à ne pas confondre avec le constructeur `Object` dont nous ne parlerons pas dans cet article). C'est le seul type JavaScript qui représente des objets.\n\n\u003e Un type Object est une collection non ordonnée de paire de clé-valeur.\n\nLes clés d'un objet sont appelées des _propriétés_. Les propriétés sont des conteneurs pour des valeurs primitives ou d'autres objets. Si une propriété contient une fonction en tant que valeur (une fonction étant un type Object) on appelle alors cette propriété _une méthode_.\n\n*Code JavaScript*\n\n```js\nvar team = { // objet `team` avec trois propriétés : `xiii`, `cloud` et `sephiroth`\n    xiii: 13, // valeur primitive de type Number\n    cloud: { hp: 302 }, // objet `cloud` avec la propriété `hp`\n    sephiroth: function () { // méthode `sephiroth` (fonction objet)\n        console.log('Je suis un glitch');\n    }\n};\n\nconsole.log(team.xiii); // `13`\nconsole.log(team.cloud); // `{ hp: 302 }`\nconsole.log(team.cloud.hp); // `302`\nteam.sephiroth(); // `'Je suis un glitch'`\n```\n\n#### Nature dynamique\n\nLes objets en JavaScript sont entièrement _dynamiques_. Cela signifie que nous pouvons ajouter, modifier ou supprimer les propriétés d'un objet à n'importe quel moment lors de l'exécution d'un programme.\n\n*Code JavaScript*\n\n```js\nvar cloud = { hp: 302 };\n\n// ajouter une nouvelle propriété\ncloud.mp = 54;\nconsole.log(cloud); // `{ hp: 302, mp: 54 }`\n\n// changer la valeur d'une propriété en fonction\ncloud.hp = function () {\n    console.log('Ce sont les points de vie');\n};\n\ncloud.hp(); // `'Ce sont les points de vie'`\n\n// supprimer une propriété\ndelete cloud.hp;\nconsole.log(cloud); // `{ mp: 54 }`\n```\n\nPlusieurs propriétés ne peuvent pas être modifiées (*read-only*) ou supprimées (*non-configurable*). Nous en parlerons dans la sections consacrées aux [attributs de propriétés](./les-types/#attributs-de-propriété).\n\n\u003e Notons que ES5 standardise les objets statiques ne pouvant pas être étendus avec de nouvelles propriétés, modifiés ou supprimés. Ils sont appelés objets _gelés_ (« frozen ») et peuvent être gelés avec la méthode `Object.freeze`.\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e var cloud = { hp: 302 };\n\u003e \n\u003e // geler l'objet\n\u003e Object.freeze(cloud);\n\u003e console.log(Object.isFrozen(cloud)); // `true`\n\u003e \n\u003e // il n'est ni modifiable\n\u003e cloud.hp = 0;\n\u003e \n\u003e // ni extensible\n\u003e cloud.mp = 54;\n\u003e \n\u003e // ni supprimable\n\u003e delete cloud.hp;\n\u003e console.log(cloud); // `{ hp: 302 }`\n\u003e ```\n\u003e \n\u003e Il est également possible de seulement empêcher l'extension en utilisant la méthode `Object.preventExtensions` ou de contrôler spécifiquement les attributs avec la méthode `Object.defineProperty` :\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e var cloud = { hp : 302 };\n\u003e \n\u003e Object.defineProperty(cloud, 'mp', {\n\u003e     value: 54,\n\u003e     writable: false, // lecture seule\n\u003e     configurable: false // non configurable\n\u003e });\n\u003e \n\u003e // ne peut être modifié\n\u003e cloud.mp = 0;\n\u003e \n\u003e // ne peut être supprimé\n\u003e delete cloud.mp; // `false`\n\u003e \n\u003e // empécher l'extension\n\u003e Object.preventExtensions(cloud);\n\u003e console.log(Object.isExtensible(cloud)); // `false`\n\u003e \n\u003e // on ne peut plus ajouter de nouvelles propriétés\n\u003e cloud.level = 1;\n\u003e \n\u003e console.log(cloud); `{ hp: 302, mp: 54 }`\n\u003e ```\n\u003e \n\u003e Plus de détail dans [ce chapitre](https://blog.lesieur.name/les-proprietes-et-les-descripteurs/).\n\n#### Objets pré-conçus, natifs et hôtes\n\nIl est nécessaire que la spécification distingue les objets _natifs_, des objets _pré-conçus_ et des objets _hôtes_.\n\nLes objets _pré-conçus_ et _natifs_ sont définis par la spécification ECMAScript. La différence exacte entre les deux est minime : les objets _natifs_ sont ceux fournis par l'implémentation du JavaScript. Certains d'entres eux sont pré-conçus et d'autres sont créés _pendant_ l'exécution du programme (comme les objets définis par l'utilisateur).\n\nAinsi les objets pré-conçus en amont sont un sous type des objets _natifs_. Ils sont créés par JavaScript _en début_ de programme (par exemple `parseInt`, `Math`, etc.).\n\nTous les objets _hôtes_ sont des objets fournis par l'environnement hôte. On aura donc dans un navigateur, par exemple, `window`, `console.log`, etc.\n\nNotez que ces objets _hôtes_ peuvent être implémentés en utilisant intégralement la sémantique de la spécification ECMAScript. Ils sont en quelque sorte des objets « hôtes-natifs » (terme non utilisé dans la spécification).\n\n#### Les objets `Boolean`, `String` et `Number`\n\nEn plus des trois primitives du même nom, la spécification définie des _objets englobants_ spéciaux. Ce sont les trois objets suivants :\n\n- L'objet `Boolean`\n- L'objet `String`\n- L'objet `Number`\n\nChaque objet peut être créé avec son constructeur interne et contient dans l'une de ses propriétés internes la valeur primitive correspondante. Ainsi la représentation des objets peut être fournie en valeurs primitives et inversement.\n\nExemple de valeurs d'objets correspondants aux types primitifs :\n\n*Code JavaScript*\n\n```\nvar zack = new Boolean(true);\nvar cloud = new String('test');\nvar xiii = new Number(13);\n\n// conversion en primitive\n// utilisation de `ToPrimitive`\n// il faut pour cela appliquer\n// la fonction sans utiliser l'opérateur `new`\nzack = Boolean(zack);\ncloud = String(cloud);\nxiii = Number(xiii);\n\n// revenir à l'objet\n// utilisation de `ToObject`\nzack = Object(zack);\ncloud = Object(cloud);\nxiii = Object(xiii);\n```\n\nDe plus, il y a aussi des objets créés par des constructeurs pré-conçus spéciaux comme `Function` (l'objet constructeur des fonctions), `Array` (l'objet constructeur des tableaux), `RexExp` (l'objet constructeur des expressions régulières), `Math` (le module de mathématique), `Date` (l'objet constructeur des dates), etc. Ces objets sont aussi du type `Object` et la distinction entre les uns et les autres est géré par des propriétés internes dont nous allons discuter plus tard.\n\n#### Notations littérales\n\nPour trois valeurs d'objets : `Object`, `Array` et `RegExp`, il existe une notation courte qui appelle respectivement un _initialiseur d'objet_, un _initialiseur de tableau_ et un _initialiseur d'expression régulière_ :\n\n*Code JavaScript*\n\n```js\n// équivalent de `var reactors = new Array(1, 5);`\n/* ou `var reactors = new Array();\n       reactors[0] = 1;\n       reactors[1] = 5;` */\nvar reactors = [1, 5];\n\n// équivalent de\n/* `var location = new Object();\n    location.north = 'Midgar';\n    location.west = 'Junon';\n    location.south = 'Fort Condor';` */\nvar location = { north: 'Midgar', west: 'Junon', south: 'Fort Condor' };\n\n// équivalent de `var ffvii = new RegExp(\"^\\\\d+$\", \"g\");`\nvar ffvii = /^\\d+$/g;\n```\n\nNotons que dans le cas où nous ré-affectons la liaison entre `Object`, `Array` ou `RegExp` a d'autres objets, le résultat de la notation littérale qui en découle peut varier d'une implémentation à l'autre. Par exemple, avec une implémentation, Rhino ou une vieille implémentation SpiderMonkey, les notations littérales vont créées un objet correspondant à la nouvelle valeur du nom de constructeur :\n\n```js\nvar getClass = Object.prototype.toString;\n\n// Avec le nom Object\nObject = Number;\n\nvar busterSword = new Object;\nconsole.log([busterSword, getClass.call(busterSword)]); // `0`, `'[object Number]'`\n\nvar ultimaWeapon = {};\n\n// dans Rhino ou SpiderMonkey 1.7 : `0`, `'[object Number]'`\n// pour les autres : toujours `'[object Object]'`, `'[object Object]'`\nconsole.log([ultimaWeapon, getClass.call(ultimaWeapon)]);\n\n// la même chose avec l'objet Array\nArray = Number;\n\nvar limits = new Array;\nconsole.log([limits, getClass.call(limits)]); // `0`, `\"[object Number]\"`\n\nvar materias = [];\n\n// dans Rhino ou SpiderMonkey 1.7 : `0`, `'[object Number]'`\n// dans les autres : toujours `''`, `'[object Object]'`\nconsole.log([materias, getClass.call(materias)]);\n\n// mais pour `RegExp`, la sémantique litérale\n// reste inchangée dans toutes les implémentations\nRegExp = Number;\n\nffvii = new RegExp;\nconsole.log([ffvii, getClass.call(ffvii)]); // `0`, `\"[object Number]\"`\n\nff7 = /(?!)/g;\nconsole.log([ff7, getClass.call(ff7)]); // `/(?!)/g`, `\"[object RegExp]\"`\n```\n\n#### L'objet `RegExp` et l'expression régulière litérale\n\nNotons également qu'en ES3, les deux derniers cas avec les expressions régulières sont identiques dans ce qu'ils accomplissent, néanmoins ils diffèrent sur un point. L'_expression régulière littérale_ existe _uniquement dans une instance_ et est créé pendant la phase d'exécution du code, alors que le constructeur `RegExp` créé toujours un _nouvel objet_. Cela peut causer quelques problèmes, comme par exemple avec la propriété `lastIndex` des objets `RegExp` :\n\n*Code JavaScript*\n\n```js\nfor (var k = 0; k \u003c 4; k++) {\n    var ffvii = /FF/g;\n    console.log(ffvii.lastIndex); // `0`, `2`, `0`, `2`\n    console.log(ffvii.test('FF7')); // `true`, `false`, `true`, `false`\n}\n\n// par constrate avec\n\nfor (var k = 0; k \u003c 4; k++) {\n    var ffvii = new RegExp('ecma', 'g');\n    console.log(ffvii.lastIndex); // `0`, `0`, `0`, `0`\n    console.log(ffvii.test('FF7')); // `true`, `true`, `true`, `true`\n}\n```\n\n\u003e Notons qu'en ES5 cette particularité a été résolue et ainsi toutes les expressions régulières littérales retournent toujours de nouveaux objets.\n\n#### Tableaux associatifs ?\n\nSouvent dans divers articles et discussions, les objets JavaScript (et plus particulièrement ceux créés via la forme littérale (ou déclarative) avec l'initialiser `{}`) sont appelées des _tableaux de hachages (« hash-tables »)_ ou simplement des _hashs_ en Ruby ou Perl, _tableaux associatifs (« associative array »)_ en PHP, _dictionnaires_ en Python, etc.\n\nL'utilisation de ces terminologies est une habitude de nommage venant de ces technologies. Le concept est très similaire à celui d'un objet et respecte le même principe de paire « clé-valeur ». Ils correspondent ainsi à la description théorique des structures de données que sont les _tableaux associatifs_ ou les _tableaux de hachages_. Cependant, un type de donnée « tableau de hachage » est _habituellement_ utilisé à un niveau implémentation.\n\nDonc, même si cette terminologie est utilisée pour décrire conceptuellement ce mécanisme, il n'est pas techniquement juste en JavaScript de l'utiliser pour parler d'un objet. Comme il a déjà été mentionné plus haut, le JavaScript ne possède qu'un seul type d'objet et tous ses « sous-types » respectent l'approche de stockage de paire « clé-valeur ». Cela n'est jamais différent d'un « sous-type » à l'autre. Il n'y a donc pas de terme spécifique pour décrire un objet en terme de « hash ». N'importe quel objet, indépendamment de ses propriétés internes peut stocker des paires :\n\n*Code JavaScript*\n\n```js\nvar cloud = { hp: 302 };\ncloud['mp'] = 54;\ncloud.level = 1;\n\nvar xiii = new Number(12);\nxiii.hp = 564;\nxiii.mp = 98;\nxiii['level'] = 5;\n\nvar jenova = new Function('');\njenova.hp = 400;\njenova.mp = 110;\njenova['level'] = 25;\n\n// etc. avec n'importe quel « sous-type » d'objet.\n```\n\nDe plus, les objets en JavaScript ne sont jamais uniquement une paire de clé-valeur non vide, le terme « hash » est donc mal choisi :\n\n*Code JavaScript*\n\n```js\nObject.prototype.world = 7;\n\nvar game = {}; // créer un « hash » vide\n\nconsole.log(game['world']); // `7`, qui n'est pourtant pas vide\nconsole.log(game.toString); // `function`\n\ngame['type'] = 'RPG'; // ajouter une nouvelle paire au « hash »\nconsole.log(game['type']); // `'RPG'`\n\nObject.prototype.type = 'RPG'; // la propriété se retrouvera dans le prototype\n\ndelete game['type']; // supprimé `type`\nconsole.log(game['type']); // `'RPG'`, mais la clé et la valeur sont toujours là\n```\n\nNotons qu'avec ES5, la possibilité de créer des objets vierges _sans prototype_ (c'est à dire que leur prototype est mis à `null`) a été ajouté. On peut faire cela en utilisant la méthode `Object.create(null)`. De ce point de vu, un objet peut être interprété comme un simple hash :\n\n*Code JavaScript*\n\n```js\nvar aHashTable = Object.create(null);\nconsole.log(aHashTable.toString); // `undefined`\n```\n\nUn autre point a noté est que certaines propriétés peuvent avoir uniquement un accesseur ou un mutateur, ce qui rend le tout confus :\n\n```js\nvar name = new String('ff7');\nname['length'] = 10;\nconsole.log(name['length']); // `3`\n```\n\nEt même si l'on considère qu'un hash peut avoir un « prototype » (comme par exemple en Ruby ou Python), en JavaScript cette terminologie est aussi non conforme car _il n'y a aucune distinction entre les types d'accesseur de propriété (c.-à-d. entre le point ou les crochets droits)_.\n\nAinsi le concept de « propriété » en JavaScript n'est pas différencié du principe de « clé », d'« index de tableau », de « méthode » ou de « propriété ». Ce sont tous des _propriétés_ qui obéissent à la loi commune d'un algorithme de lecture/écriture en examinant la chaîne de prototype.\n\nDans l'exemple suivant, en Ruby, on voit bien cette distinction sémantique :\n\n*Code Ruby*\n\n```js\ngame = {}\ngame.class # Hash\n\ngame.length # `0`\n\n# nouvelle paire de « clé-valeur »\ngame['length'] = 7;\n\n# mais la sémantique de la notation du point\n# est différente et signifie accéder\n# à la « propriété / méthode », mais pas à la « clé »\n\ngame.length # `1`\n\n# et la notation crochet\n# fournit un accès à la « clé » du hash\n\ngame['length'] # `7`\n\n# nous pouvons augmenter dynamiquement la classe Hash\n# avec de nouvelle propriétés et méthodes et cette délégation\n# sera disponible dans les objets déjà créés\n\nclass Hash\n    def score\n        100\n    end\nend\n\n# nouvelle « propriété » disponible dans `game`\n\ngame.score # `100`\n\n# mais pas la « clé »\n\na['score'] # `nil`\n```\n\nPour conclure le standard ECMA-262-3 _ne définit pas_ de concept de « hash » (ou similaire). Cependant, puisque cette structure de données colle à la théorie, il est possible de nommer les objets ainsi.\n\n#### Conversion de type\n\nPour convertir un objet en une valeur primitive, la méthode `valueOf` peut être utilisée. Comme nous l'avons noté, l'appel du constructeur (pour certains types) en tant que fonction (c.-à-d. sans l'opérateur `new`) applique la conversion d'un objet en son équivalent en valeur primitive. Pour cette conversion dite implicite, l'appel de la méthode `valueOf` est effectué :\n\n*Code JavaScript*\n\n```js\nvar game = new Number(7);\nvar primitiveGame = Number(game); // appel implicite de `valueOf`\nvar alsoPrimitiveGame = game.valueOf(); // appel explicite de `valueOf`\n\nconsole.log([\n    typeof game, // `'object'`\n    typeof primitiveGame, // `'number'`\n    typeof alsoPrimitiveGame // `'number'`\n]);\n```\n\nCela permet aux objets de participer à des opérations variées, par exemple aux additions :\n\n*Code JavaScript*\n\n```js\nvar ps1 = new Number(7);\nvar ps3 = new Number(13);\n\nconsole.log(ps1 + ps3); // `20`\n\n// ou même ainsi\n\nvar playstation = {\n    ps1: 7,\n    ps2: 10,\n    valueOf: function () {\n        return this.ps1 + this.ps2;\n    }\n};\n\nvar squaresoft = {\n    ps1: 7,\n    ps2: 13,\n    // affectation de la même fonctionnalité\n    // `valueOf` que l'objet `playstation`\n    valueOf: playstation.valueOf\n};\n\nconsole.log(playstation + squaresoft); // `40`\n```\n\nLa valeur de la méthode `valueOf` par défaut (si elle n'est pas ré-écrite) peut varier en fonction du type d'objet. Pour beaucoup d'objets cela retourne la valeur de `this`. Par exemple :\n\n*Code JavaScript*\n\n```js\nvar soldier = {};\nconsole.log(soldier.valueOf() === soldier); // `true`, `valueOf` de `Object` retourne la valeur `this`\n\n// mais pas pour `Date`\n\nvar jenovasFall = new Date();\nconsole.log(jenovasFall.valueOf()); // le temps sous forme de Number\nconsole.log(jenovasFall.valueOf() === jenovasFall.getTime()); // `true`\n```\n\nIl y a aussi une autre représentation primitive d'un objet, une représentation sous forme de chaîne de caractère. Pour cela, c'est la méthode `toString` qui est utilisée, et qui est automatiquement appelée pour certaines opérations :\n\n*Code JavaScript*\n\n```js\nvar game = {\n    valueOf: function () {\n        return 13;\n    },\n    toString: function () {\n        return 'ff';\n    }\n};\n\n// dans cette opération\n// la méthode `toString` est\n// appelée automatiquement\nconsole.log(game); // `'ff'`\n\n// mais ici, c'est la méthode `valueOf`\nconsole.log(game + 7); // `20`\n\n// mais s'il n'existe pas de méthode\n// `valueOf` elle sera\n// remplacée par\n// la méthode `toString`\ndelete game.valueOf;\nconsole.log(game + 7); // `'ff7'`\n```\n\nLa méthode `toString` définie dans `Object.prototype` a une signification spéciale. Elle retourne la valeur de la propriété interne `[[Class]]` dont nous avons discuté plus haut.\n\nDe même qu'il y a la conversion `ToPrimitive`, il y a la conversion `ToObject` qui à l'inverse transforme une primitive en un type Object.\n\nL'une des manières explicites d'appeler `ToObject` est d'utiliser le constructeur de `Object` en tant que fonction (ou avec `new` dans certain cas).\n\n*Code JavaScript*\n\n```js\nvar xiii = Object(13); // `[object Number]`\nvar cloud = Object('test'); // `[object String]`\nvar zack = Object(true); // `[object Boolean]`\n\n// il est aussi possible pour certain type d'appeler\n// `Object` avec l'opérateur `new`\nvar Zack = new Object(true); // `[object Boolean]`\n\n// mais en l'utilisant sans argument,\n// `new Object()` crée un simple objet\nvar caitSith = new Object(); // `[object Object]`\n\n// dans le cas ou l'argument pour la fonction `Object`\n// est déjà une valeur objet,\n// l'objet sera retourné en tant que tel\nvar reactors = [];\nconsole.log(reactors === new Object(reactors)); // `true`\nconsole.log(reactors === Object(reactors)); // `true`\n```\n\nL'appel d'un constructeur avec `new` ou sans `new` ne suit aucune règle générale particulière, cela dépend tout simplement du constructeur. Par exemple les constructeurs `Array` et `Function` retournent _le même_ résultat quand leurs constructeurs sont appelés avec `new` ou en tant que simple fonction (sans `new`) :\n\n*Code JavaScript*\n\n```js\nvar aerith = Array(1, 2, 3); // `[object Array]`\nvar ancient = new Array(1, 2, 3); // `[object Array]`\nvar flowergirl = [1, 2, 3]; // `[object Array]`\n\nvar calamity = Function(''); // `[object Function]`\nvar jenova = new Function(''); // `[object Function]`\n```\n\nIl y a aussi des conversions explicites et implicites quand certains opérateurs sont utilisés :\n\n*Code JavaScript*\n\n```js\nvar xiii = 4;\nvar barret = 2;\n\n// implicite\nvar legs = xiii + barret; // `6`, type Number\nvar meaningOfLife = '' + xiii + barret; // `\"42\"`, type String\n\n// explicite\nvar game = '7'; // `\"7\"`, type String\nvar num = +game; // `7`, type Number\nvar numAgain = parseInt(game, 10); // `7`, type Number\n\n// etc.\n```\n\n#### Attributs de propriété\n\nToutes les propriétés peuvent avoir un nombre d'attributs comme suit :\n\n- `{ReadOnly}` —  toute tentative d'écrire une valeur dans la propriété est ignorée ; cependant, la propriété de lecture seule peut-être changée par une action de l'environnement hôte, ainsi lecture seule ne veut pas dire « valeur constante »,\n- `{DontEnum}` — la propriété ne peut pas être énumérée dans une boucle `for..in`,\n- `{DontDelete}` — l'action de l'opérateur `delete` appliquée est ignorée,\n- `{Internal}` — la propriété est interne, elle n'a pas de nom et est utilisée uniquement au niveau de l'implémentation, aussi ces propriétés ne sont pas accessibles en JavaScript.\n\n\u003e Notez qu'en ES5 les propriétés `{ReadOnly}`, `{DontEnum}` et `{DontDelete}` on été renommé en `[[Writable]]`, `[[Enumerable]]` et `[[Configurable]]` et celle-ci peuvent être manuellement gérer via la méthode `Object.defineProperty` ou d'autres méthodes similaires :\n\u003e \n\u003e *Code JavaScript*\n\u003e \n\u003e ```js\n\u003e var cloud = {};\n\u003e \n\u003e Object.defineProperty(cloud, 'hp', {\n\u003e     value: 302,\n\u003e     writable: true, // aka `{ReadOnly} = false`\n\u003e     enumerable: false, // aka `{DontEnum} = true`\n\u003e     configurable: true // aka `{DontDelete} = false`\n\u003e });\n\u003e \n\u003e console.log(cloud.hp); // `302`\n\u003e \n\u003e // ce lot d'attributs est appelé un descripteur\n\u003e var desc = Object.getOwnPropertyDescriptor(cloud, 'hp');\n\u003e \n\u003e console.log(desc.enumerable); // `false`\n\u003e console.log(desc.writable); // `true`\n\u003e // etc.\n\u003e ```\n\n#### Propriétés et méthodes internes\n\nLes objets possèdent également un certain nombre de propriétés qui sont inaccessibles depuis un programme JavaScript directement (cependant comme nous allons le voir plus bas, certaines implémentations permettent d'avoir accès à ses propriétés). Ces propriétés sont entourés des doubles crochets droits par convention : `[[ ]]`.\n\nNous allons nous intéresser à certaines d'entres elles (qui sont obligatoires pour tous les objets) : la description d'autres propriétés pouvant être trouvée dans la spécification.\n\nChaque object doit implémenter les propriétés et méthodes internes suivantes :\n\n- `[[Prototype]]` — le prototype de cet objet (il sera étudié plus en détail plus bas),\n- `[[Class]]` — une représentation en chaîne de caractère du _type_ (par exemple `Object`, `Array`, `Function`, etc.). Il est utilisé pour distinguer les objets,\n- `[[Get]]` — une méthode pour donner la valeur de la propriété,\n- `[[Put]]` — une méthode pour affecter la valeur de la propriété,\n- `[[CanPut]]` — indique de quelle manière cette propriété peut être ré-écrite,\n- `[[HasProperty]]` — indique si cette propriété appartient déjà à l'objet,\n- `[[Delete]]` — retire la propriété de l'objet\n- `[[DefaultValue]]` — retourne une valeur primitive correspondant à l'objet (pour donner cette valeur la méthode `valueOf` est appelée, pour certain objet, l'exception `TypeError` peut être levée).\n\nPour obtenir la propriété `[[Class]]` d'un programme JavaScript il est possible de la lire indirectement via la méthode `Object.prototype.toString()`. Cette méthode devrait retourner la chaîne de caractère suivante :  `\"[object \" + [[Class]] + \"]\"`. Par exemple :\n\n*Code JavaScript*\n\n```js\nvar getClass = Object.prototype.toString;\n\ngetClass.call({}); // `[object Object]`\ngetClass.call([]); // `[object Array]`\ngetClass.call(new Number(1)); // `[object Number]`\n\n// etc.\n```\n\nCette fonctionnalité est souvent utilisée pour vérifier le type de l'objet, cependant, il est nécessaire de préciser que la spécification autorise n'importe quelle chaîne de caractère valide et qu'il n'est pas sur que tous les retours respectent cette convention. Par exemple, la propriété `[[Class]]` de la méthode `document.childNodes.item(...)` retourne `'String'` dans des vieux IE (et dans d'autres implémentations `\"Function\"` est retourné) :\n\n*Code JavaScript*\n\n```js\n// dans de vieux IE : `'String'`, dans d'autres `'Function'`\nconsole.log(getClass.call(document.childNodes.item));\n```\n\n\n\n\n\n## Conclusion\n\nNous venons de voir que le typage en JavaScript était loin d'être trivial. Les détails vus ici vont nous permettre de nous attaquer aux parties plus complexes du type Object, à savoir le constructeur et le prototype.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-fermetures/\"\u003e\u0026lt; Chapitre 6\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/les-constructeurs-et-les-prototypes/\"\u003eChapitre 8 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [4.2 — Language Overview](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [4.3 — Definitions](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [7.8.5 — Regular Expression Literals](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [8 — Types](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [9 — Type Conversion](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.1.4 — Array Initialiser](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.1.5 — Object Initialiser](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre adaptation française d'une partie de l'excellent billet [Тонкости ECMA-262-3. Часть 7.2. ООП: Реализация в ECMAScript.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-7-2-oop-ecmascript-implementation/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-06-28T12:01:00.000Z"},"updated":[]},"description":"Cet article va traiter des six types existants en JavaScript dans sa version ES3.","image":"https://blog.lesieur.name/media/images/upload/types.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 7. — Les types en JavaScript","urn":"les-types"}
{"_id":{"$oid":"59528ff8a9b5f0251d9baa21"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ca"}],"content":"Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 8.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/prototypes.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/prototypes-mini.png\" alt=\"Chaque couche est reliée à la précédente si bien que chaque entité obtient les caractéristiques de la précédente.\" width=\"658\" height=\"500\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eChaque couche est reliée à la précédente si bien que chaque entité obtient les caractéristiques de la précédente.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nCet article va traiter de deux points importants de l'implémentation de la programmation orientée objet du point de vue de JavaScript, les fonctions constructeurs et la chaîne des prototypes.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-types/\"\u003e\u0026lt; Chapitre 7\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-strategie-d-evaluation/\"\u003eChapitre 9 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nLe JavaScript est un langage de programation _orienté objet_ supportant _l'héritage par délégation_ basé sur _les prototypes_. À ce titre donc, il existe des fonctions constructeurs en rapport avec l'utilisation du mot clé `new` pour la création d'objet d'une part, et il existe d'autre par un mécanisme appelé chaîne des prototypes s'occupant de gérer l'héritage. Nous allons étudier ces deux aspects dans cet article. En complément nous en profiterons pour étudier les méthodes d'accès à un objet qui font appel à la chaîne des prototypes et d'où la notion d'héritage découle.\n\n\n\n\n\n## Constructeur\n\nLes objets en JavaScript sont créés à l'aide de ce que l'on appel : les _constructeurs_.\n\nUn _constructeur_ est une fonction qui crée et initialise l'objet nouvellement créé.\n\nPour la _création (allocation de mémoire)_ de l'objet, une méthode interne `[[Construct]]` est utilisée. Le comportement de cette méthode interne est défini par l'implémentation. Tous les constructeurs de fonctions utilisent cette méthode pour allouer de la mémoire aux nouveaux objets.\n\nPour l'_initialisation_  de l'objet, c'est cette fois la méthode interne `[[Call]]` qui s'en occupe en appelant une fonction dédiée dans le contexte de l'objet nouvellement créé.\n\nNotez que d'un point de vu utilisateur, seule la phase d'_initialisation_ est accessible et programmable. Cette objet nouvellement créé est accessible dans cette fonction d'_initialisation_ via `this`. C'est cet objet `this` qui sera implicitement retourné. Nous pouvons, puisque nous avons la main sur cette phase d'initialisation, retourner autre chose que cet objet nouvellement créé si l'envie nous en prend avec `return` :\n\n*Code JavaScript*\n\n```js\n// Cette fonction est un counstructeur...\nfunction Character() {\n    // mettre à jour l'objet nouvellement créé\n    this.level = 10;\n    // mais retourner un objet différent\n    return [1, 2, 3];\n}\n\n// ...si elle est appelée avec le mot-clé `new`\nvar tiz = new Character();\nconsole.log(tiz.level, tiz); `undefined`, `[1, 2, 3]`\n```\n\nEn faisant référence à l'[algorithme de création de fonction](https://blog.lesieur.name/les-fonctions/#algorithme-de-cr-ation-de-fonction) dont nous avons discuté dans le [chapitre 5](https://blog.lesieur.name/les-fonctions/), nous voyons que cette fonction est un objet natif se trouvant parmi d'autres propriétés internes comme `[[Construct]]` et `[[Call]]` ou propriétés explicites comme `prototype`, la référence au prototype des futurs objets.\n\n*Pseudo-code*\n\n```js\nF = new NativeObject() // objet natif innacessible\n\nF.[[Class]] = \"Function\"\n\n.... // autres propriétés\n\nF.[[Call]] = \u003créference à la fonction\u003e // la fonction elle-même\n\nF.[[Construct]] = internalConstructor // constructeur interne général pour l'allocation mémoire\n\n.... // autres propriétés\n\n// prototype de l'object crée par le constructeur de F\n__objectPrototype = new Object()\n__objectPrototype.constructor = F // `{DontEnum}`\nF.prototype = __objectPrototype\n```\n\nAinsi, un objet qui peut être activé par l'appel des parenthèses `(` et `)` est appelé une _fonction_, et possède donc cette propriété `[[Call]]`. Il y a également la propriété `[[Class]]` qui est responsable de la distinction entre un objet simple et un objet activable puisque, dans le cas d'une fonction, celui-ci vaut `\"Function\"`. L'opérateur `typeof`, sur ces objets retourne la valeur `function`. Cependant, ceci est vrai pour des _objets natifs_. Dans le cas d'_objets hôtes activables_, l'opérateur `typeof` peut retourner d'autres valeurs. Exemple avec `window.console.log(...)` dans IE :\n\n*Code JavaScript*\n\n```js\n// dans IE : \"Object\", \"object\", dans d'autres : \"Function\", \"function\"\nconsole.log(Object.prototype.toString.call(window.console.log));\nconsole.log(typeof window.console.log); // \"Object\"\n```\n\nLa méthode interne `[[Construct]]` est activée avec l'opérateur `new` appliqué à la fonction dites constructeur. Comme nous l'avons vu, c'est cette méthode qui est responsable de l'allocation mémoire et de la création des objets. S'il n'y a aucun arguments, l'appel entre parenthèse peut être omis :\n\n*Code JavaScript*\n\n```js\nfunction Character(level) { // constructeur `Character`\n    this.level = level || 10;\n}\n\n// sans arguments, l'appel\n// avec les parenthèse peut être omis\nvar agnes = new Character; // ou `new Character()`;\nconsole.log(agnes.level); // `10`\n\n// passage explicite\n// de la valeur de l'argument `level`\nvar edea = new Character(20);\nconsole.log(edea.level); // `20`\n```\n\nEt comme nous le savons également [la valeur de this](https://blog.lesieur.name/la-valeur-de-this/) à l'intérieur du constructeur (lors de la phase d'initialisation) est affectée d'un nouvel objet.\n\n### Algorithme de création d'objet\n\nLe comportement de la méthode `[[Construct]]` peut être décrit ainsi :\n\n*Pseudo-code*\n\n```js\nO = new NativeObject()\n\n// la propriété `[[Class]]` est mise à `\"Object\"`,\n// c.-à-d. représente un simple objet\nO.[[Class]] = \"Object\"\n\n// Prend comme référence de prototype\n// la valeur de `F.prototype` de la fonction\nvar __objectPrototype = F.prototype\n\n// on associe le prototype `O.[[Prototype]]` de l'objet créé\nif (isAnObject(__objectPrototype)) {\n    O.[[Prototype]] = __objectPrototype\n} else {\n    O.[[Prototype]] = Object.prototype\n}\n\n// initialisation du nouvel objet créé\n// utilisation de `F.[[Call]]`;\n// affectiation à la valeur de `this` de l'objet `O`\n// `initialParameters` sont les arguments passé au constructeur\nR = F.[[Call]].apply(O, initialParameters)\n\nif (isAnObject(R)) {\n    // on retourne ce que l'utilisateur demande avec `return`\n    return R\n} else {\n    // sinon on retourne l'objet nouvellement créé\n    return O\n}\n```\n\nNotez deux fonctionnalités majeures :\n\nPremièrement, le `[[Prototype]]` de l'objet créé est défini à partir de la propriété `prototype` d'une fonction au moment _courant_ (cela siginifie que le prototype de deux objets créés depuis un même constructeur peut varier si la propriété prototype de la fonction change ensuite).\n\nDeuxièmement, comme nous l'avons mentionné plus haut, si lors de l'initialisation de l'objet, `[[Call]]` retourne un _objet_, c'est cet objet qui sera utilisé comme le _résulat_ de l'expression avec mot clé `new` :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype.level = 10;\n\nvar ringabel = new Character();\nconsole.log(a.level); // `10` par délégation, depuis le prototype\n\n// affectons a la propriété `prototype` un nouvel objet\n// qui va explicitement définir la propriété `constructeur`\nCharacter.prototype = {\n    constructor: Character,\n    hp: 100\n};\n\nvar yew = new Character();\n// object `yew` a un nouveau prototype\nconsole.log(yew.level); // `undefined`\nconsole.log(yew.hp); // `100` par délégation, depuis le prototype\n\n// cependant, le prototype de l'objet `ringabel`\n// est toujours l'ancien (nous allons voir pourquoi plus bas)\nconsole.log(ringabel.level); // `10` par délégation, depuis le prototype\n\nfunction Asterisk() {\n    this.power = 10;\n    return new Array();\n}\n\n// si le constructeur de `Asterisk` n'a pas de `return`\n// (ou retourne `this`), et bien l'objet `this`\n// sera utilisé, sinon ça sera le tableau\nvar knight = new Asterisk();\nconsole.log(knight.power); // `undefined`\nconsole.log(Object.prototype.toString.call(knight)); // `[object Array]`\n```\n\n### Résumons\n\nTout objet activable (appelable ou executable) est une fonction. Les fonctions activées avec le mot clé `new` sont dites des fonctions constructeurs (toute fonction est donc possiblement un constructeur dès lors qu'elle ne retourne rien, ou qu'elle retourne `this`). C'est ce mécanisme qui créé de nouveaux objets en mémoire basés sur un prototype.\n\nRegardons maintenant ce prototype plus en détail.\n\n\n\n\n\n## Prototype\n\nTous les objets ont un prototype (exceptions faites de certains objets systèmes). La communication avec le prototype est organisée via la propriété _interne_, _implicite_ et _inaccessible `[[Prototype]]`. Un prototype peut être aussi bien un _objet_ ou la valeur `null`.\n\n### Propriété `constructor`\n\nDans l'exemple ci-dessus il y a deux points importants. Le premier concerne la propriété `constructor` de la propriété `prototype`.\n\nComme nous l'avons vu dans l'algorithme de la fonction de création d'objets, la propriété `constructor` est affectée à la propriété `prototype` lors de la phase de _création_ de la fonction. La valeur de cette propriété est une _référence circulaire_ à la fonction _elle-même_ :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nvar magnolia = new Character();\nconsole.log(magnolia.constructor); // `function Character() {}` par délégation\nconsole.log(magnolia.constructor === Character); // `true`\n```\n\nSouvant dans ce cas il y a un malentendu. La propriété `constructor` est _incorrectement_ traitée comme une propriété appartenant à l'objet créé. Alors que, comme nous venons de le voir, cette propriété appartient au _prototype_ de la fonction constructeur (ici `Character`) et est accessible par _héritage_.\n\nVia la propriété `constructor` héritée, les objets créés peuvent _indirectement_ obtenir une référence sur l'objet prototype du constructeur :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype.level = new Number(10);\n\nvar janne = new Character();\nconsole.log(janne.constructor.prototype); // `[object Object]`\n\nconsole.log(janne.level); // `10`, par délegation\n// la même chose que `janne.[[Prototype]].level`\nconsole.log(janne.constructor.prototype.level); // `10`\n\nconsole.log(janne.constructor.prototype.level === janne.level); // `true`\n```\n\nNotez que les propriétés `constuctor` et `prototype` peuvent être _redéfinie_ après que l'objet soit créé. Dans ce cas l'objet perd la référence mise en place par le mécanisme ci-dessus.\n\nCependant, si nous _changeons_ la propriété `prototype` de la fonction _complètement_ (en _assignant_ un nouvel objet), la référence au constructeur _original_ (ainsi que le prototype original) _sont perdu_.\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype = {\n    level: 10\n};\n\nvar nikolai = new Character();\nconsole.log(nikolai.level); // `10`\nconsole.log(nikolai.constructor === Character); // `false` !\n```\n\nEt donc c'est pourquoi il est intéressant de restaurer la référence manuellement :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype = {\n    constructor: Character,\n    level: 10\n};\n\nvar nikolai = new Character();\nconsole.log(nikolai.x); // `10`\nconsole.log(nikolai.constructor === Character); // `true`\n```\n\nNotons cependant que la propriété `constructor` _manuellement restaurée_, par contraste avec _l'originale perdue_, n'a pas d'attribut `{DontEnum}` et, par conséquent, est énumérable dans une boucle `for..in` sur le `Character.prototype`.\n\n\u003e ES5 introduit la possibilité de contrôler l'état de l'énumération des propriétés avec l'attribut `[[Enumerable]]`.\n\n\u003e *Code JavaScript*\n\n\u003e ```js\nvar airy = { level: 10 };\n\n\u003e Object.defineProperty(airy, \"advice\", {\n    value: 20,\n    enumerable: false // aka `{DontEnum} = true`\n});\n\n\u003e console.log(airy.level, airy.advice); // `10`, `20`\n\n\u003e for (var k in airy) {\n    console.log(k); // only `level`\n}\n\n\u003e var levelDesc = Object.getOwnPropertyDescriptor(airy, \"level\");\nvar adviceDesc = Object.getOwnPropertyDescriptor(airy, \"advice\");\n\n\u003e console.log(\n    levelDesc.enumerable, // `true`\n    adviceDesc.enumerable  // `false`\n);\n```\n\n\n\n### Propriétés explicites `prototype` vs. propriétés implicite `[[Prototype]]`\n\nSouvent, le prototype `[[Prototype]]` d'un objet, qui est interne à l'objet et inaccessible est incorrectement confondu avec la référence explicite `prototype` de la fonction constructeur à ce prototype. Oui, effectivement, ils font référence au _même objet_, mais ce sont deux propriétés différentes :\n\n**Code JavaScript**\n\n```js\na.[[Prototype]] ----\u003e Prototype \u003c---- A.prototype\n```\n\nDe plus, le `[[Prototype]]` d'un objet créé par un constructeur donne la valeur que possédait la propriété `prototype` du constructeur lors de la phase de création de l'objet.\n\nCependant, remplacer la propriété `prototype` du constructeur _n'affecte pas_ la référence `[[Prototype]]` des _objets déjà créés_. Ce sera _uniquement_ la propriété `prototype` du constructeur qui changera ! Cela siginifie que des _nouveaux objets_ auront ce _nouveau prototype_, mais les _objets déjà créés_ (avant que la propriété `prototype` ne change), auront une référence vers le _vieux prototype_. Cette référence _ne pourra plus être changée_ :\n\n*Pseudo-code*\n\n```js\n// Création de `anne`\nanne = new Character\n\n// État avant le changement de `A.prototype`\nanne.[[Prototype]] // ----\u003e Prototype\nCharacter.prototype // ----\u003e Prototype\n\n// Changement de prototype\nCharacter.prototype = newPrototype\n\n// Création de `airy`\nairy = new Character\n\n// État après changement\nCharacter.prototype ----\u003e newPrototype\nanne.[[Prototype]] ----\u003e Prototype // les objets déjà créés ont une référence à l'ancien prototype\nairy.prototype ----\u003e newPrototype // les nouveaux objets auront une référence au nouveau prototype\n```\n\nPar exemple :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype.level = 10;\n\nvar tiz = new Character();\nconsole.log(tiz.level); // `10`\n\nCharacter.prototype = {\n    constructor: Character,\n    level: 20,\n    hp: 30\n};\n\n// l'objet `tiz` utilise l'ancien\n// prototype via sa référence\n// implicite `[[Prototype]]`\nconsole.log(tiz.level); // `10`\nconsole.log(tiz.hp) // `undefined`\n\nvar yew = new Character();\n\n// mais les nouveaux objets, à la création,\n// ont bien une référence au nouveau prototype\nconsole.log(yew.level); // `20`\nconsole.log(yew.hp); // `30`\n```\n\nParfois on peut lire des articles sur le JavaScript disant que _« le changement dynamique de l'objet du prototype va affecter tous les objets qui auront ce nouveau prototype »_ ; cela est incorrect. Un nouveau prototype ré-affecté sera utilisé _uniquement_ sur les _nouveaux_ objets créés après le changement.\n\nLa règle principale ici c'est : le prototype d'un objet est assigné au moment de la _création_ et ne _peut pas être ré-assigné_ par celui que les nouveaux objets auront. En utilisant la référence explicite `prototype` depuis le constructeur, il est _uniquement_ possible de muter l'objet, c.-à-d. d'_ajouter_, de _modifier_ ou de _supprimer_ des propriétés existantes dans le prototype de l'objet afin de répercuter les changements dans les objets déjà créés.\n\n\n\n### La propriété non-standard `__proto__`\n\nCependant, certaines implémentations, comme par exepmle, SpiderMonkey, fournissent une référence _explicite_ vers l'objet du prototype via la propriété non standard `__proto__` :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype.level = 10;\n\nvar agnes = new Character();\nconsole.log(agnes.level); // `10`\n\nvar __newPrototype = {\n    constructor: Character,\n    level: 20,\n    hp: 30\n};\n\n// référence au nouvel objet\nCharacter.prototype = __newPrototype;\n\nvar ringabel = new Character();\nconsole.log(ringabel.level); // `20`\nconsole.log(ringabel.hp); // `30`\n\n// `agnes` utilise toujours une référence\n// sur l'ancien objet\nconsole.log(agnes.level); // `10`\nconsole.log(agnes.hp); // `undefined`\n\n// changeons explicitement le prototype de `agnes`\nagnes.__proto__ = __newPrototype;\n\n// maintenant `agnes` fait également\n// référence au nouvel objet\nconsole.log(agnes.level); // `20`\nconsole.log(agnes.hp); // `30`\n```\n\n\u003e Notez que ES5 a introduit la méthode `Object.getPrototypeOf` qui retourne directement la valeur de la propriété `[[Prototype]]` d'un objet, le prototype original de l'instance. Cependant, à la différence de `__proto__`, cela ne fournit qu'_un accesseur_, et ne perment en aucun cas de changer le prototype.\n\n*Code JavaScript*\n\n```js\nvar luxendarc = {};\nObject.getPrototypeOf(luxendarc) == Object.prototype; // `true`\n```\n\n\n\n### L'objet est indépendant de son constructeur\n\nComme le prototype de l'objet créé est indépendant du constructeur et de la propriété `prototype` du constructeur, cela permet la chose suivante : l'objet du prototype de la phase de _création_ peut être _supprimé_. Le prototype de l'objet créé va continuer d'exister, toujours référencé par la propriété `[[Prototype]]` :\n\n*Code JavaScript*\n\n```js\nfunction Asterisk() {}\nAsterisk.prototype.power = 10;\n\nvar whiteMage = new Asterisk();\nconsole.log(whiteMage.power); // `10`\n\n// mise explicite de la référence\n// du constructeur `Asterisk` à `null`\nAsterisk = null;\n\n// mais, il est toujours possible de créer\n// des objets via la référence indirecte\n// depuis les autres objets si\n// la propriété `constructor` n'a pas été changée\nvar blackMage = new whiteMage.constructor();\nconsole.log(blackMage.power); // `10`\n\n// suppression de la référence implicite,\n// après ça, `whiteMage.constructor` ainsi que `blackMage.constructor`\n// feront référence à la fonction `Object`\n// par défaut, mais plus à `Asterisk`\ndelete whiteMage.constructor.prototype.constructor;\n\n// il ne sera plus possible de créer des objets\n// du constructeur `Asterisk`\n// mais ces deux objets auront toujours\n// une référence à leur prototype dans `[[Prototype]]`\nconsole.log(whiteMage.power); // `10`\nconsole.log(blackMage.power); // `10`\n```\n\n\n\n### L'opérateur `instanceof`\n\nIl y a un lien entre la référence explicite au prototype, via la propriété `prototype` du constructeur et l'opérateur `instanceof`.\n\nCet opérateur fonctionne de pair avec la _chaîne des prototypes_ d'un objet et pas uniquement avec son constructeur lui-même. Prennez ça en compte, car il y a souvent des incompréhensions à ce niveau. Quand on fait cette vérification :\n\n*Code JavaScript*\n\n```js\nif (tiz instanceof Character) {\n    /* ... */\n}\n```\n\ncela _ne veut pas dire_ que l'objet `tiz` a _été créé_ par le constructeur `Character` !\n\nTous ce que fait l'opérateur `instanceof` c'est de prendre la valeur de `Character.prototype` et vérifier sa _présence_ dans la _chaîne des prototypes_ de `tiz`, en commençant par `tiz.[[Prototype]]`. L'opérateur `instanceof` est activé par la méthode interne `[[HasInstance]]` du constructeur.\n\nRegardons un exemple :\n\n*Code JavaScript*\n\n```js\nfunction Character() {}\nCharacter.prototype.level = 10;\n\nvar magnolia = new Character();\nconsole.log(magnolia.level); // `10`\n\nconsole.log(level instanceof Character); // `true`\n\n// Si maintenant on met `Character.prototype`\n// à `null`...\nCharacter.prototype = null;\n\n// ...et bien l'objet `magnolia` a\n// toujours accès à son\n// prototype, via `magnolia.[[Prototype]]`\nconsole.log(magnolia.level); // `10`\n\n// cependant, l'opérateur `instanceof`\n// ne pourra plus fonctionner, car\n// il commence son examination depuis la\n// propriété `prototype` du constructeur.\nconsole.log(magnolia instanceof Character); // `Character.prototype` n'est pas défini`\n```\n\nIl est également possible de créer soit même le constructeur d'un objet, et `instanceof` retournera `true` en vérifiant l'instance d'un autre objet. Tout ce qu'il faut faire c'est définir soit même la propriété d'objet `[[Prototype]]` et la propriété `prototype` du constructeur avec le _même objet_ :\n\n*Code JavaScript*\n\n```js\nfunction Asterisk() {}\nvar thief = new Asterisk();\n\nconsole.log(thief instanceof Asterisk); // `true`\n\nfunction Weapon() {}\n\nvar __proto = {\n    constructor: Weapon\n};\n\nWeapon.prototype = __proto;\nthief.__proto__ = __proto;\n\nconsole.log(thief instanceof Weapon); // `true`\nconsole.log(thief instanceof Asterisk); // `false`\n```\n\n\n\n### Stockage via prototype pour partager des méthodes et propriétés\n\nL'application la plus utile des prototypes en JavaScript est le stockage des _méthodes_, des _états par défaut_ et des _propriétés partagées_ des objets.\n\nEn effet, les objets peuvent avoir leur propre _état_, mais les méthodes sont habituellement les mêmes. C'est pourquoi, pour une optimisation de la mémoire, les méthodes sont habituellement définies dans le prototype. Cela signifie que tous les objets créés par un constructeur, _partagent_ toujours les _mêmes_ méthodes.\n\n*Code JavaScript*\n\n```js\nfunction Character(stat) {\n    this.stat = stat || 100;\n}\n\nCharacter.prototype = (function () {\n\n    // initialisation du contexte,\n    // utilisation d'un objet additionnel\n\n    var sharedStat = 500;\n\n    function helper() {\n        console.log('stat partagée : ' + sharedStat);\n    }\n\n    function attack() {\n        console.log('attaque : ' + this.stat);\n    }\n\n    function defence() {\n        console.log('défense : ' + this.stat);\n        helper();\n    }\n\n    // le prototype lui-même.\n    return {\n        constructor: Character,\n        attack: attack,\n        defence: defence\n    };\n\n})();\n\nvar tiz = new Character(10);\nvar agnes = new Character(20);\n\ntiz.attack(); // `attaque : 10`\ntiz.defence(); // `défense : 10`, `stat partagée : 500`\n\nagnes.attack(); // `attaque : 20`\nagnes.defence(); // `défense : 20`, `stat partagée : 500`\n\n// les deux objets utilisent\n// la même méthode\n// le même prototype\nconsole.log(tiz.attack === agnes.attack); // `true`\nconsole.log(tiz.defence === agnes.defence); // `true`\n```\n\n\n\n\n\n## Lire et écrire des propriétés\n\nComme nous l'avons déjà mentionné, lire et écrire des propriétés se fait grâce à l'aide des méthodes internes `[[Get]]` et `[[Put]]`. La méthode est activée grâce à l'_accesseur de propriété_ que ce soit via la notation par point ou par crochet droit :\n\n*Code JavaScript*\n\n```js\n// écrire\nyew.level = 10; // `[[Put]]` est appelée\n\nconsole.log(yew.level); // `10`, `[[Get]]` est appelée\nconsole.log(yew['level']); // la même chose\n```\n\n\n\n### La méthode `[[Get]]`\n\nLa méthode `[[Get]]` considère les propriétés venant _de la chaîne des prototypes_ comme des objets aussi. Ainsi, les propriétés d'un prototype sont accessibles depuis l'objet lui-même. Ainsi pour `O.[[Get]](P)` avec `O` comme objet et `P` comme propriété réclamée, nous avons le mécanisme suivant :\n\n*Pseudo-code*\n\n```js\n// si c'est sa propre propriété,\n// on la retourne\nif (O.hasOwnProperty(P)) {\n    return O.P\n}\n\n// sinon, on analyse le prototype\nvar __proto = O.[[Prototype]]\n\n// s'il n'y a pas de prototype (cela est possible dans le dernier maillons de la chaîne pour `Object.prototype.[[Prototype]]`,\n// qui est égale à `null`),\n// on retourne `undefined`\nif (__proto === null) {\n    return undefined\n}\n\n// sinon, on appel la méthode `[[Get]]` récurssivement\n// maintenant pour le prochain prototype; c.-à-d.\n// que l'on traverse la chaîne des prototypes : et on essaye de trouver\n// la propriété, puis ensuiste dans le prototype de prototype\n// et ainsi de suite jusqu'à ce que le prototype soit égal à `null`\nreturn __proto.[[Get]](P)\n```\n\nNotez que, puisque la méthode `[[Get]]` dans un des cas retourne `undefined`, il est possible de vérifier la présence d'une variable comme ceci :\n\n*Code JavaScript*\n\n```js\nif (window.someObject) {\n    /* ... */\n}\n```\n\nIci, la propriété `someObject` n'est pas trouvée dans `window`, ni dans le prototype, ni dans le prototype du prototype, et l'algorithme retourne alors `undefined`.\n\nNotez que c'est _exactement_ le _test de présence_ dont est responsable l'opérateur `in`. Il va également fouiller dans la chaîne des prototypes :\n\n*Code JavaScript*\n\n```js\nif ('someObject' in window) {\n    /* ... */\n}\n```\n\nCela aide a éviter les cas où, par exemple, `someObject` serait égale à `false` et ou le première vérification aurait échouée malgré l'existance de la propriété.\n\n\n\n### La méthode `[[Put]]`\n\nLa méthode `[[Put]]` quand a elle met à jour sa _propre_ propriété d'objet et _masque_ les propriétés du même nom venant d'un prototype plus haut. Voyons cela avec l'algorithme de `O.[[Put]](P, V)` ou `O` est l'objet, `P` la propriété et `V` la valeur.\n\n*Pseudo-code*\n\n```js\nO.[[Put]](P, V):\n\n// s'il n'est pas possible d'écrire\n// dans cette propriété\n// alors on ne fait rien.\nif (!O.[[CanPut]](P)) {\n    return\n}\n\n// si l'objet ne possède pas cette propriété,\n// alors on la crée; tous les attributs\n// de propriété étant placés à `false`.\nif (!O.hasOwnProperty(P)) {\n    createNewProperty(O, P, attributes: {\n        ReadOnly: false,\n        DontEnum: false,\n        DontDelete: false,\n        Internal: false\n    })\n}\n\n// changer la valeur.\n// si la propriété existait déjà, ses\n// attributs restent inchangés, seule la valeur\n// change\nO.P = V\n\nreturn\n```\n\nPar exemple :\n\n*Code JavaScript*\n\n```js\nObject.prototype.level = 100;\n\nvar edea = {};\nconsole.log(edea.level); // `100`, hérité\n\nedea.level = 10; // `[[Put]]`\nconsole.log(edea.level); // `10`, possédé\n\ndelete edea.level;\nconsole.log(edea.level); // again `100`, hérité\n```\n\nNotez qu'il _n'_ est _pas_ possible de _masquer des propriétés héritées en lecture seule_. Le résultat de l'affectation est simplement ignoré. Ceci est controllé par la méthode interne `[[CanPut]]`.\n\n*Code JavaScript*\n\n```js\n// Par exemple, la propriété `length`\n// de l'objet `String` est en lecture seule ; faisons de\n// `String` le prototype de notre objet et essayons\n// de masquer la propriété `length`\n\nfunction SuperString() {\n    /* rien */\n}\n\nSuperString.prototype = new String(\"abc\");\n\nvar luxendarc = new SuperString();\n\nconsole.log(luxendarc.length); // `3`, la longeur de `abc`\n\n// essayons de la masquer\nluxendarc.length = 5;\nconsole.log(luxendarc.length); // toujours `3`\n```\n\nEn mode strict de ES5, tenter de modifier une propriété en lecture seule lève l'erreur `TypeError`.\n\n\n\n### Accesseurs de propriété\n\nComme expliqué, les méthodes internes `[[Get]]` et `[[Put]]` sont activées par _les accesseurs de propriété_ disponiblent dans JavaScript via la _notation avec point_ ou la _notation avec _crochet droit_. La notation avec point est utilisée quand le nom de propriété est un identifieur valide ou connu à l'avance alors que la notation avec crochet droit permet l'utilisation de noms invalides ou dynamiques.\n\n*Code JavaScript*\n\n```js\nvar rpg = { testProperty: 10 };\n\nconsole.log(rpg.testProperty); // `10`, notation avec point\nconsole.log(rpg['testProperty']); // `10`, notation avec crochet droit\n\nvar propertyName = 'Propriété';\nconsole.log(rpg['test' + propertyName]); // `10`, notation dynamique avec crochet\n```\n\nIl y a encore une fonctionnalité importante : les accesseurs appellent toujours la conversion `ToObject` pour les objets placés sur la partie gauche de la propriété accession. Et du fait de cette conversion implicite, il est _possible de dire_ « _tout en JavaScript est un objet_ » (cependant comme nous le savons déjà, bien entendu, tout n'est pas objets, il y a également des valeurs primitives).\n\nSi nous utilisons des accesseurs de propriété sur _des valeurs primitives_, nous créons juste un _objet encadrant immédiat_ correspondant à cette valeur. Une fois le travail terminé, cet objet encadrant est _supprimé_.\n\nExemple :\n\n*Code JavaScript*\n\n```js\nvar level = 10; // valeur primitive\n\n// mais si on le demande, il y aura\n// accès à la méthode, comme si c'était un objet.\nconsole.log(level.toString()); // `\"10\"`\n\n// nous pouvons également\n// (tenter de) créer une nouvelle\n// propriété dans la primitive `level` en appelant `[[Put]]`\nlevel.test = 100; // et cela semble fonctionner.\n\n// mais, `[[Get]]` ne retourne\n// pas la valeur de cette propriété, et\n// l'algorithme retourne `undefined`\nconsole.log(level.test); // `undefined`\n```\n\nAlors, pourquoi dans cet exemple la valeur « primitive » de `level` à accès à la méthode `toString` mais, n'a pas accès à la propriété nouvellement crée `test` ?\n\nLa réponse est simple :\n\nEn premier lieu, comme déjà dit, après que l'accesseur de propriété ai été appliqué, on ne manipule _pas une primitive_, mais un _objet intermédiaire_. Dans ce cas, `new Number(level)` est utilisé, et par délégation la méthode `toString` de la chaîne du prototype :\n\n*Pseudo-code*\n\n```js\n// Algorithme d'évaluation de `level.toString()`\n\n// 1.\nwrapper = new Number(level)\n// 2.\nwrapper.toString() // `\"10\"`\n// 3.\ndelete wrapper\n```\n\nMaintenant, la méthode `[[Put]]` crée également son _propre objet intermédiaire englobant_ quand la propriété `test` est évaluée :\n\n*Pseudo-code*\n\n```js\n// Algorithme d'évaluation de `level.test = 100`\n\n// 1.\nwrapper = new Number(level)\n// 2.\nwrapper.test = 100\n// 3.\ndelete wrapper\n```\n\nNous voyons à l'étape 3 que l'objet encadrant est _supprimé_ et que la propriété `test` _nouvellement créée_ a été supprimée elle aussi à la suppression de l'objet lui-même.\n\nQuand `[[Get]]` est utilisé de nouveau sur l'accesseur de propriété créé, il crée encore une fois un nouvel objet encadrant qui lui, _ne sait rien_ à propos d'une quelconque propriété `test` :\n\n*Pseudo-code*\n\n```js\n// Algorithme d'évaluation de `level.test`\n\n// 1.\nwrapper = new Number(level)\n// 2.\nwrapper.test // `undefined`\n// 3.\ndelete wrapper\n```\n\nDonc faire référence à une propriété ou méthode depuis une valeur _primitive_ n'a de sens que pour la _lecture_ de propriétés. Aussi, quand une valeur primitive accède souvent à des propriétés, pour économiser du temps de ressources, cela peut avoir du sens de directement la remplacer par sa représentation objet. Et, au contraire, si la valeur n'est utilisée que pour de petits calculs qui ne dépendent d'aucunes propriétés d'accès, il sera plus performant d'utiliser une valeur primitive à la place.\n\n\n\n\n\n## Héritage\n\nComme nous le savons, le JavaScript utilise _l'héritage par délégation basé sur les prototypes_.\n\nChaînage et prototype sont également souvent mentionnés en tant que _chaîne de prototype_.\n\nEn fait, l'intégralité de l'implémentation et l'analyse de la délégation se réduit au travail effectué par `[[Get]]` et déjà mentionné préceddement.\n\nSi vous comprennez intégralement ce simple algorithme de la méthode `[[Get]]`, la question de l'héritage en JavaScript disparait d'elle-même et la réponse devient clair.\n\nSouvent sur les forums, quand les discussions se tournent vers l'héritage en JavaScript, je montre, en tant qu'exemple, seulement une ligne de code JavaScript qui représente exactement la définition d'une structure d'objet du langage et montre la délégation basée sur l'héritage. La ligne de code est vraiment simple :\n\n*Code JavaScript*\n\n```js\nconsole.log(1..toString()); // `\"1\"`\n```\n\nMaintenant, comme nous connaissons l'algorithme de la méthode `[[Get]]` et les accesseurs de propriétés, nous pouvons voir ce qu'il se passe ici :\n\n1. Depuis la valeur primitive `1`, un _objet encadrant_ équivalent à `new Number(1)` est créé.\n\n2. La méthode `toString` héritée est appelée depuis cet _objet encadrant_.\n\nPourquoi héritée ? Car les objets JavaScript peuvent avoir leurs _propres_ propriétés, et que l'objet encadrant créé dans ce cas, n'a pas sa propre méthode `toString`. Cependant, il en _hérite_ par délégation via son prototype, c.-à-d. utilise `Number.prototype`.\n\n\u003e Notez la subtilité de la syntaxe. Deux points dans l'exemple précédent n'est pas _une erreur_. Le premier point est utilisé pour _la partie fractionnée du nombre_, et le second point est quand à lui _l'accesseur de propriété_ :\n\n\u003e *Code JavaScript*\n\n\u003e ```js\n1.toString(); // `SyntaxError` !\n\n\u003e (1).toString(); // OK\n\n\u003e 1 .toString(); // OK (espace après 1)\n\n\u003e 1..toString(); // OK\n\n\u003e 1['toString'](); // OK\n```\n\n\n\n### Chaîne de prototype\n\nMontrons comment créer cette chaîne avec des objets définis par les utilisateurs. C'est très simple :\n\n*Code JavaScript*\n\n```js\nfunction Monster() {\n    console.log('Monster.[[Call]] activé');\n    this.attack = 10;\n}\nMonster.prototype.power = 20;\n\nvar monster = new Monster();\nconsole.log([monster.attack, monster.power]); // `10` (possédé), `20` (délégué)\n\nfunction Humanoid() {}\n\n// la variante la plus simple du chaînage de prototype\n// est de chaîner la valeur d'un enfant prototype\n// a un nouvel objet créé,\n// avec le constructeur du parent.\nHumanoid.prototype = new Monster();\n\n// fixons la propriété `constructor`, sinon elle vaudra `Monster`\nHumanoid.prototype.constructor = Humanoid;\n\nvar goblin = new Humanoid();\nconsole.log([goblin.attack, goblin.power]); // `10`, `20`, les deux sont délégués\n\n// `[[Get]] goblin.attack` :\n// `goblin.attack` (pas trouvé) --\u003e\n// `goblin.[[Prototype]].attack` (trouvé) - `10`\n\n// `[[Get]] goblin.power` :\n// `goblin.power` (pas trouvé) --\u003e\n// `goblin.[[Prototype]].power` (pas trouvé) --\u003e\n// `goblin.[[Prototype]].[[Prototype]].power` (trouvé) - `20`\n\n// où `goblin.[[Prototype]] === Humanoid.prototype`,\n// et `goblin.[[Prototype]].[[Prototype]] === Monster.prototype`\n```\n\nCette approche a deux fonctionnalités.\n\nLa première, `Humanoid.prototype` va contenir la propriété `attack`. Mais cela n'est pas correcte puisque la propriété `attack` est définie dans `Monster` lui-_même_ et que même s'il pourrait être attendu que le constructeur `Humanoid` le possède aussi, ce n'est pas le cas.\n\nDans le cas d'une traversée d'héritage prototypal normal, jusqu'à l'objet descendant, personne ne possède sa propre propriété déléguée d'un prototype. L'idée derrière ça c'est que , les objets créés par le constructeur `Humanoid` _n'_ont _pas_ besoin de la propriété `attack`. Ce qui n'est pas le cas des modèles basés sur les classes, où toute propriété est _copiée_ dans la classe descendante.\n\nCependant, s'il est nécessaire que la propriété `attack` soit propre aux objets créés par le constructeur `Humanoid`, il existe certaines techniques pour cela (émulation d'une approche basée sur la classe), dont nous allons parler ci-dessous.\n\nLa seconde n'est pas vraiment une fonctionnalité mais _un désaventage_. Le code du constructeur est aussi exécuté quand le descendant du prototype est créé. Nous pouvons voir ça grâce au message `\"Monster.[[Call]] activé\"` qui apparaît _deux fois_, quand l'objet est créé par le constructeur `Monster` qui est utilisé par `Humanoid.prototype` et lors de la création de l'objet `monster` lui-même !\n\nUn exemple plus critique est une exception lancée dans le constructeur parent : peut être que pour un objet _réellement_ créé par ce constructeur, une vérification est nécessaire mais le même cas est totalement inacceptable avec l'utilisation de cet objet comme prototype parent :\n\n*Code JavaScript*\n\n```js\nfunction Monster(param) {\n    if (!param) {\n        throw 'Paramètre requis';\n    }\n    this.param = param;\n}\nMonster.prototype.attack = 10;\n\nvar monster = new Monster(20);\nconsole.log([monster.attack, monster.param]); // `10`, `20`\n\nfunction Humanoid() {}\nHumanoid.prototype = new Monster(); // `Erreur`\n```\n\nEn outre, des calculs lourds dans le constructeur parent peuvent également être considérés comme un désavantage avec cette approche.\n\nPour résoudre le problème de cette « fonctionnalité », les programmeurs actuels utilisent un motif standard pour chaîner les prototypes, comme nous allons le voir plus bas. Le principal objectif de cette astruce consiste à créer un _objet constructeur encadrant intermédiaire_ qui chaînes les prototypes souhaités.\n\n*Code JavaScript*\n\n```js\nfunction Monster() {\n    console.log('Monster.[[Call]] activé');\n    this.attack = 10;\n}\nMonster.prototype.defence = 20;\n\nvar monster = new Monster();\nconsole.log([monster.attack, monster.defence]); // `10` (possédé), `20` (hérité)\n\nfunction Humanoid() {\n    // Ou simplement `Monster.apply(this, arguments)`\n    Humanoid.superproto.constructor.apply(this, arguments);\n}\n\n// héritage : chaînage de prototypes\n// en créant un constructeur intermédiaire vide.\nvar F = function () {};\nF.prototype = Monster.prototype; // référence\nHumanoid.prototype = new F();\nHumanoid.superproto = Monster.prototype; // référence explicite au prototype ancètre, « sucre »\n\n// fixons la propriété `constructor`, sinon elle vaudra `Monster`\nHumanoid.prototype.constructor = Humanoid;\n\nvar goblin = new Humanoid();\nconsole.log([goblin.attack, goblin.defence]); // `10` (propre), `20` (hérité)\n```\n\nNotez comment nous créons notre propre propriété `attack` sur l'instance de `defence` : nous appelons la référence au constructeur parent via `Humanoid.superproto.constructor` dans le contexte nouvellement créé.\n\nNous fixons également le probrème vis à vis de la non nécessité d'appeler le constructeur parent pour créer le prototype desendant. Mantenant le message `\"Monster.[[Call]] activé\"` n'est affiché que si nécéssaire.\n\nEt pour ne pas avoir à répéter chaque fois les mêmes actions lors du chaînage de prototype (création d'un objet constructeur intermédière, créer un sucre `superproto`, restaurer la propriété `constructor` originale, etc), ce modèle peut être encapsulé dans une fonction utilitaire, dont le but est de chaîner les prototypes indépendemment du nom concret de leurs constructeurs :\n\n*Code JavaScript*\n\n```js\nfunction inherit(child, parent) {\n    var F = function () {};\n    F.prototype = parent.prototype\n    child.prototype = new F();\n    child.prototype.constructor = child;\n    child.superproto = parent.prototype;\n    return child;\n}\n```\n\nEt l'héritage pourra se faire ainsi :\n\n*Code JavaScript*\n\n```js\nfunction Monster() {}\nMonster.prototype.attack = 10;\n\nfunction Humanoid() {}\ninherit(Humanoid, Monster); // chaînage de prototype\n\nvar goblin = new Humanoid();\nconsole.log(goblin.attack); // `10`, trouver dans le `Monster.prototype`\n```\n\nIl y a beaucoup de variation de cet objet encadrant (au regard de la syntaxe), cependant, elles se résument toutes à effectuer les actions ci-dessus.\n\nPar exemple, nous pouvons optimiser l'objet encadrant précédent en mettant l'objet encadrant intermédiaire à l'extérieur du constructeur (comme cela, seulement une fonction sera créée), pour ensuite la ré-utiliser :\n\n*Code JavaScript*\n\n```js\nvar inherit = (function(){\n    function F() {}\n    return function (child, parent) {\n        F.prototype = parent.prototype;\n        child.prototype = new F;\n        child.prototype.constructor = child;\n        child.superproto = parent.prototype;\n        return child;\n    };\n})();\n```\n\nEt puisque le vrai prototype d'un objet est la propriété `[[Prototype]]`, cela signifie que `F.prototype` peut facilement être changé et réutilisé, car `child.prototype`, qui a été créé via `new F`, va être dans `[[Prototype]]` comme la valeur _courante_ de `child.prototype` :\n\n*Code JavaScript*\n\n```js\nfunction Monster() {}\nMonster.prototype.attack = 10;\n\nfunction Humanoid() {}\ninherit(Humanoid, Monster);\n\nHumanoid.prototype.y = 20;\n\nHumanoid.prototype.name = function () {\n    console.log(\"Humanoid#name\");\n};\n\nvar goblin = new Humanoid();\nconsole.log(goblin.attack); // `10`, est trouvé dans le `Monster.prototype`\n\nfunction Goblin() {}\ninherit(Goblin, Humanoid);\n\n// en utilisant notre sucre « superproto »\n// nous pouvons appeler la méthode parente avec le même nom.\n\nGoblin.prototype.name = function () {\n    Goblin.superproto.name.call(this);\n    console.log(\"Goblin#name\");\n};\n\nvar goblinSlasher = new Goblin();\nconsole.log([goblinSlasher.attack, goblinSlasher.defence]); // `10`, `20`\n\ngoblinSlasher.foo(); // `\"Humanoid#foo\"`, `\"Goblin#foo\"`\n```\n\n\u003e Notez qu'en ES5 cette fonctionnalité a été standardisé pour des meilleurs chaînage de prototype. C'est la méthode `Object.create`.\n\n\u003e Une version simplifié en tant que fonction de substitution ES3 s'implémenterait de cette manière :\n\n\u003e *Code JavaScript*\n\n\u003e ```js\nObject.create ||\nObject.create = function (parent, properties) {\n    function F() {}\n    F.prototype = parent;\n    var child = new F;\n    for (var k in properties) {\n        child[k] = properties[k].value;\n    }\n    return child;\n}\n```\n\n\u003e Pour être utilisé ainsi :\n\n\u003e *Code JavaScript*\n\n\u003e ```js\nvar monster = { attack: 10 };\nvar kobold = Object.create(monster, { defence: { value: 20 } });\nconsole.log(kobold.attack, kobold.attack); // `10`, `20`\n```\n\n\u003e Pour plus de détail, voir [ce chapitre](https://blog.lesieur.name/les-proprietes-et-les-descripteurs-de-proprietes/).\n\nDe manière générale, toutes les limitations de « l'héritage classique en JavaScript » est basé sur ce principe. Maintenant, nous voyons qu'en fait même si ça ressemble à « une imitation des classes basés sur l'héritage », c'est surtout _une manière simple de ré-utiliser du code pour le chaînage de prototypes_.\n\n\u003e Notez qu'en ES6, le concept de « class » a été standardisé, et son implémentation est exactement un « sucre syntaxique » par dessus les fonctions constructeurs décrites plus haut. De ce point de vu, le chaînage de prototype devient un détail d'implémentation de l'héritage basé sur les classes :\n\n\u003e *Code JavaScript*\n\n\u003e ```js\n// ES6\nclass Monster {\n    constructor(name) {\n       this._name = name;\n    }\n\n\u003e     getName() {\n        return this._name;\n    }\n}\n\n\u003e class Humanoid extends Monster {\n    getName() {\n        return super.getName() + ' Archer';\n    }\n}\n\n\u003e var goblin = new Humanoid('Goblin');\nconsole.log(goblin.getName()); // `\"Goblin Archer\"`\n```\n\n\n\n\n\n## Conclusion\n\nCet article n'a pas été havar de détails. Il pourra vous servir de référence global pour lister la majorité des mécanismes JavaScript et retrouver rapidement des détails de fonctionnement.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003ca href=\"https://blog.lesieur.name/les-types/\"\u003e\u0026lt; Chapitre 7\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/la-strategie-d-evaluation/\"\u003eChapitre 9 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nSection correspondante de la spécification ECMA-262-3 :\n\n- [11.1.4 — Array Initialiser](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.1.5 — Object Initialiser](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [11.2.2 — The new Operator](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [13.2.1 — [[Call]]](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [13.2.2 — [[Construct]]](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf),\n- [15 — Native ECMAScript Objects](https://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf).\n\nCe texte est une libre adaptation française d'une partie de l'excellent billet [Тонкости ECMA-262-3. Часть 7.2. ООП: Реализация в ECMAScript.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-7-2-oop-ecmascript-implementation/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","dates":{"published":{"$date":"2017-08-12T17:03:00.000Z"},"updated":[]},"description":"Cet article va traiter des fonctions constructeurs et de la chaîne des prototypes.","image":"https://blog.lesieur.name/media/images/upload/prototypes.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"ES3, Chap 8. — Les constructeurs et les prototypes en JavaScript","urn":"les-constructeurs-et-les-prototypes"}
{"_id":{"$oid":"595a1b0a0e5058378da64274"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"59fdacbd2b61d5b1b9125d8d"},{"$oid":"56c4ad05675345bb2d63fcec"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"5310456355dfd5f7698d48cc"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"56c4ad62675345bb2d63fced"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"582b2197ac185f8972f30bcb"}],"content":"Vous avez un pied dans le monde du numérique depuis quelques années, ou vous côtoyez les métiers du web de près ou de loin, et pourtant vous ne comprenez pas totalement encore les problématiques des développeurs Front-end, ou même maintenant des développeurs Full-stack.\n\nPourquoi finalement ne peut t-il pas « simplement » y avoir un développeur web comme au bon vieux temps. Quelle est là réelle différence avec un intégrateur HTML/CSS ? Pourquoi le web client n'est t-il plus si abordable pour les développeurs ? Pourquoi coûte t-il si cher à présent ?\n\n\u003ca href=\"https://blog.lesieur.name/media/images/upload/understand-js.png\"\u003e\u003cimg src=\"https://blog.lesieur.name/media/images/upload/understand-js-min.jpg\" style=\"max-width: 100%; height: auto;\"\u003e\u003c/a\u003e\n\nJe vous propose, à partir d'une petite discussion fictive entre, un acteur du numérique qui n'a plus l’œil partout, et un développeur Full-stack sur le feu, de mettre en lumière en quoi le web d'aujourd'hui est « compliqué ».\n\n\u003e Cet article est inspiré et adapté en français de l'article « How it feels to learn JavaScript in 2016 », lui-même inspiré par « It's The Future » que j'ai modifié pour y apporter ma propre expérience. Vous pouvez lire les articles originaux respectivement [ici](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f) et [ici](https://circleci.com/blog/its-the-future/).\n\n\u003e Cet extrait n'est qu'une mise en situation, et tout comme n'importe quelle bibliothèque JavaScript, il ne devrait pas être pris trop au sérieux !\n\nEn espérant que vous y apprendrez des choses !\n\n\n\n\n\n## M. Numérique et M. JavaScript discutent\n\nHé ! J'ai ce nouveau projet web à faire, mais pour être totalement honnête, je n'ai pas fait de développement web client depuis quelques années et j'ai entendu que ça avait pas mal bougé ses dernières temps. Tu es as jour sur toutes ces choses là pas vrai ?\n\n- *Le terme actuel est développement Front-end, mais oui, je suis ton homme. Visualisations temps réel, musique en ligne, drônes qui font du café, demande ! Je reviens justement de [JSConf] et [VueConf], du coup, je suis à la page sur les dernières technologies pour créer des applications webs.*\n\n[JSConf]: http://jsconf.com/ \"JSConf\"\n[VueConf]: https://conf.vuejs.org/ \"VueConf\"\n\n### Juste des données\n\nCool. J'ai besoin de créer une page pour afficher les dernières activités de mes utilisateurs, donc, j'ai juste besoin de récupérer des informations depuis une source [REST] et de les afficher dans un tableau filtrable que je mettrais à jour à chaque changement côté serveur. Je pensais utiliser quelque chose comme [jQuery] pour récupérer les données à afficher ?\n\n[REST]: https://fr.wikipedia.org/wiki/Representational_state_transfer \"REST\"\n[jQuery]: https://jquery.com/ \"jQuery\"\n\n- *Oh là, non ! Plus personne utilise [jQuery] maintenant. On se contente de [Vanilla.js] si on souhaite faire simplement du [JavaScript].*\n\n[Vanilla.js]: https://blog.lesieur.name/vanilla-js-france/ \"Vanilla.js\"\n[JavaScript]: https://www.javascript.com/ \"JavaScript\"\n\nHa ? C'est quoi ça [Vanilla.js] ?\n\n- *C'est juste du [JavaScript]. C'est un petit nom sympa donné aux nouvelles fonctionnalités de l'API des navigateurs pour manipuler le [DOM]. Et comme c'est implémenté dans les navigateurs, il n'y a plus besoin d'inclure de bibliothèque maintenant.*\n\n[DOM]: https://fr.wikipedia.org/wiki/Document_Object_Model \"DOM\"\n\n### Les MVVM\n\nDu coup on a abandonné les frameworks [JavaScript] ? Tout est plus simple !\n\n- *Non. Pas du tout. Il y en a d'autres des frameworks maintenant.*\n\nC'est ce qui me semblait. J'avais entendu parler de [React] ou [Angular] au lieu de [jQuery] ?\n\n- *Tu devrais utiliser [React] oui, c'était la superstar de 2016 en concurrence avec [Angular] ou encore [Vue], mon chouchou. React est une bibliothèque [MVVM].*\n\n[React]: https://facebook.github.io/react/ \"React\"\n[Angular]: https://facebook.github.io/react/ \"Angular\"\n[Vue]: https://vuejs.org/ \"Vue\"\n[MVVM]: https://fr.wikipedia.org/wiki/Mod%C3%A8le-vue-vue_mod%C3%A8le \"MVVM\"\n\nReact est une bibliothèque [MVVM] ?\n\n- *C'est une bibliothèque super cool faites par des gars de chez Facebook. Ça t'apporte un réel contrôle et des grandes performances sur tes applications en te permettant de gérer tes changements de vue vraiment facilement.*\n\nÇa a l'air pas mal. Je peux utiliser [React] pour afficher mes données alors ?\n\n- *Oui, mais d'abord, tu vas devoir ajouter [React] et [ReactDOM] comme bibliothèque dans ta page web.*\n\n[ReactDOM]: https://facebook.github.io/react/docs/react-dom.html \"ReactDOM\"\n\nAttend, pourquoi deux bibliothèques ?\n\n- *Et bien, il y en a une qui est la bibliothèque en elle-même, et une seconde pour manipuler le [DOM], que tu vas maintenant pouvoir décrire en [JSX].*\n\n[JSX] ? C'est quoi [JSX] ?\n\n[JSX]: https://jsx.github.io/ \"JSX\"\n\n- *[JSX] c'est juste une extension de la syntaxe [JavaScript] qui est aussi cool que du XML. C'est une autre façon de décrire le [DOM]. Voit le comme du HTML++.*\n\nQu'est-ce qui ne va pas avec le [HTML] ?\n\n[HTML]: https://fr.wikipedia.org/wiki/HTML5 \"HTML\"\n\n- *En 2017, personne ne code plus en [HTML] directement voyons.*\n\n### ES6 et plus\n\nBien. Pourquoi pas. Si j'ajoute ces deux bibliothèques, ensuite je vais pouvoir utiliser [React] ?\n\n- *Non, pas encore. Tu vas avoir besoin de [Babel], et ensuite tu pourras utiliser [React].*\n\n[Babel]: https://babeljs.io/ \"Babel\"\n\nUne autre bibliothèque ? Qu'est-ce que c'est [Babel] ?\n\n- *Oh, [Babel] est un transpileur, tout comme [Traceur]. Il te permet de choisir une version de [JavaScript] à produire en sortie sur tes sites alors que tu codes avec une autre version de [JavaScript]. Tu n'as pas besoin d'inclure [Babel] obligatoirement pour utiliser [React], mais sans lui, tu vas rester bloquer avec une utilisation de [JavaScript] en [ES5], et, soyons réaliste, en 2017, tu dois au moins coder en [ES2016+] comme le reste des mecs cools.*\n\n[Traceur]: https://github.com/google/traceur-compiler \"Traceur\"\n[ES5]: https://blog.lesieur.name/apprendre-et-comprendre-javascript-version-es6/ \"ES5\"\n[ES2016+]: http://kangax.github.io/compat-table/es2016plus/ \"ES2016+\"\n\n[ES5] ? [ES2016+] ? Je suis un peu perdu. Qu'est-ce que c'est [ES5] et [ES2016+] ?\n\n- *[ES5] signifie [ECMAScript] 5. C'est l'édition que la plupart des personnes utilisent car elle est implémentée dans la plupart des navigateurs de nos jours.*\n\n[ECMAScript]: https://fr.wikipedia.org/wiki/ECMAScript \"ECMAScript\"\n\n[ECMAScript] ?\n\n- *Oui, tu sais, le langage de script [JavaScript] s'est basé dessus en 1999 après sa création initiale en 1995. À l'époque le [JavaScript] était le LiveScript et tournait uniquement dans le navigateur Netscape. C'était un peu brouillon, mais maintenant heureusement c'est plus clair grâce à ses 7 éditions d'implémentation.*\n\n7 éditions. Vraiment ? Et [ES5] et [ES2016+] en sont donc ?\n\n- *La cinquième et la septième édition respectivement.*\n\nAttends, qu'est-ce qui est arrivé à la sixième ?\n\n- *Tu parles de [ES6] ? En fait, chaque édition est une version supérieur de la précédente. Donc si tu utilises [ES2016+], tu utilises toutes les fonctionnalités des versions précédentes.*\n\n[ES6]: http://kangax.github.io/compat-table/es6/ \"ES6\"\n\nOk. Et pourquoi plus la [ES2016+] que la [ES6] exactement ?\n\n- *Et bien, tu peux utiliser [ES6], mais tu ne pourras pas utiliser des fonctionnalités au top comme [async] ou [await]. Pour ça, tu as besoin de [ES2016+]. Sinon, tu vas te limité avec des générateurs [ES6] histoire de bloquer les appels asynchrones pour un contrôle de flux plus facile.*\n\n[async]: https://tc39.github.io/ecmascript-asyncawait/ \"async\"\n[await]: https://tc39.github.io/ecmascript-asyncawait/ \"await\"\n\n### Gestionnaire de modules\n\nOk. J'ai pas tout compris. C'est un peu déroutant, mais bon. Écoute, je veux juste charger un groupe de données depuis un serveur. Pour ça j'ai juste besoin d'inclure [jQuery] depuis un [CDN] et de récupérer mes données avec des appels [AJAX], pourquoi ne pas simplement faire ça ?\n\n[CDN]: https://fr.wikipedia.org/wiki/Content_delivery_network \"CDN\"\n[AJAX]: https://fr.wikipedia.org/wiki/Ajax_(informatique) \"AJAX\"\n\n- *C'est 2017 mec, plus personne utilise [jQuery] maintenant, ça fini toujours en un gros tas de code spaghetti immonde. Tout le monde sait ça.*\n\nCompris. Donc mon alternative est de charger ces trois bibliothèques pour récupérer mes données et afficher cela dans un tableau [HTML].\n\n- *Oui, mais pour inclure ces trois bibliothèques, tu peux les empaqueter avec un gestionnaire de modules pour ne charger qu'un seul fichier.*\n\nJe vois. Et c'est quoi exactement un gestionnaire de modules ?\n\n- *La définition dépend de ton environnement, mais dans le monde du web, cela signifie habituellement de supporter les modules [AMD] et [CommonJS].*\n\nOkkayy... et les modules [AMD] et modules [CommonJS], c'est quoi ?\n\n[AMD]: http://requirejs.org/docs/whyamd.html \"AMD\"\n[CommonJS]: http://requirejs.org/docs/commonjs.html \"CommonJS\"\n\n- *Pour faire court : il y a plusieurs manières pour définir comment les bibliothèques [JavaScript] et les classes devraient intéragir. Tu sais, exports et require ? Tu peux écrire différents fichiers [JavaScript] définissant des API [AMD] ou [CommonJS] et tu peux les utiliser avec quelque chose comme [Browserify] pour les empaqueter ensemble*.\n\n[Browserify]: http://browserify.org/ \"Browserify\"\n\nOk. Ça semble logique... je crois. C'est quoi [Browserify] ?\n\n- *C'est un outil cool pour te permettre d'empaqueter ensemble des descriptions de dépendance de fichier [CommonJS] pour les faire tourner dans un navigateur. Ça a été créé car beaucoup de gens publiaient des dépendances dans le registre [npm].*\n\n[npm]: https://www.npmjs.com/ \"npm\"\n\nLe registre [npm] ?\n\n- *C'est un dépôt public vraiment énorme ou les gens malins placent leurs codes dans des modules.*\n\nComme [CDN] ?\n\n- *Pas vraiment. C'est plutôt une base de données centralisée ou chacun peut publier son code ou le télécharger. Mais effectivement, tu peux aussi le publier sur [CDN] ensuite si tu veux.*\n\nPlus comme [GitHub] alors ?\n\n[GitHub]: https://github.com/ \"GitHub\"\n\n- *Non, car [GitHub] c'est plutôt pour la collaboration, la maintenance de code, la relecture de code et le partage de code. Même si on peut s'en servir comme gestionnaire de module avec des équivalents comme [jspm] ?*\n\n[jspm]: http://jspm.io/ \"jspm\"\n\nOh, je vois, comme [Bower] ?\n\n[Bower]: https://bower.io/ \"Bower\"\n\n- *Oui. Mais on est en 2017 maintenant, plus personne utilise [Bower].*\n\nAh, d'accord. Donc j'ai besoin de télécharger mes bibliothèques depuis [npm] donc ?\n\n- *Oui. Donc pour le moment, si tu veux utiliser [React], tu peux télécharger le module [React] et l'importer dans ton code. Tu peux faire ça avec toutes les bibliothèques [JavaScript] populaires.*\n\nOh, comme [AngularJS] !\n\n[AngularJS]: https://angularjs.org/ \"AngularJS\"\n\n- *[AngularJS] c'est trop 2015, mais oui. [Angular] a pris la relève, sans le JS, c'est pas la même chose. Tu veux en savoir plus à ce propos ?*\n\nNon. C'est déjà assez avec [React], j'ai déjà appris trop de chose là. Donc, si je dois utiliser [React], je le récupère depuis [npm], puis je le raffine avec [Browserify], c'est ça ?\n\n- *Oui.*\n\n### Gestionnaire de tâches\n\nBon, ça semble quand même pas mal compliqué de prendre diverses dépendances pour les assembler ensemble.\n\n- *Ça l'est. C'est pourquoi on utilise des gestionnaires de tâches comme [Grunt], [gulp] ou [Broccoli] pour automatiser les transformations avec [Browserify]. Et tu peux même utiliser [Mimosa].*\n\n[Grunt] ? [gulp] ? [Broccoli] ? [Mimosa] ? Mais de quoi on parle là ?\n\n[Grunt]: https://gruntjs.com/ \"Grunt\"\n[gulp]: http://gulpjs.com/ \"gulp\"\n[Broccoli]: http://broccolijs.com/ \"Broccoli\"\n[Mimosa]: http://mimosa.io/ \"Mimosa\"\n\n- *Des gestionnaires de tâches. Mais ils ne sont plus vraiment cool maintenant. On les utilisait en 2015, maintenant on se la joue plutôt Makefiles, et on encapsule tout ça avec [webpack].*\n\n[webpack]: https://webpack.js.org/ \"webpack\"\n\nMakefiles ? C'est des trucs utilisés en C ou C++ ça ?\n\n- *Ouais, mais nous aussi maintenant dans le web on aime faire compliqué et revenir aux bases. On fait ça tous les ans, et attend un peu, mais on devrait faire des assembly dans un an ou deux. Faut bien qu'on comprenne qu'on est des vrais développeurs.*\n\n*Soupir*. Tu mentionnais un truc nommé [webpack] ?\n\n- *C'est un autre gestionnaire de module pour les navigateurs qui est en même temps une sorte de gestionnaire de tâches. C'est comme une meilleure version de [Browserify]*.\n\nOh ! Pourquoi il est meilleur ?\n\n- *Et bien, peut-être pas meilleur, mais il est plus opiniâtre sur la manière dont les dépendances doivent être attachées. [webpack] te permet d'utiliser différents gestionnaires de modules et pas seulement des formats [CommonJS]. Il supporte même des modules au format natifs [ES6].*\n\nLà je suis complètement paumé avec toutes tes histoires de [CommonJS] et [ES6].\n\n- *Tout le monde l'est, mais tu ne devrais plus l'être avec [SystemJS].*\n\n[SystemJS]: https://github.com/systemjs/systemjs \"SystemJS\"\n\nEncore un nom en « js »... bien, et c'est quoi [SystemJS].\n\n- *Et bien contrairement à [Browserify] et [webpack] (dans ses débuts), [SystemJS] utilise des chargeurs de modules dynamiques pour attacher des modules en plusieurs fichiers plutôt que de les empaqueter en un seul gros fichier.*\n\nAttend, je croyais qu'on voulait empaqueter tous les fichiers en un seul gros fichier justement !\n\n- *Oui, mais grâce à [HTTP/2], maintenant les requêtes HTTP multiples sont préférables.*\n\n[HTTP/2]: https://fr.wikipedia.org/wiki/Hypertext_Transfer_Protocol/2 \"HTTP/2\"\n\nDonc, on pourrait pas juste ajouter les 3 bibliothèques originales pour utiliser [React] ?\n\n- *Pas vraiment. Je veux dire, tu pourrais inclure ses trois scripts depuis un [CDN], mais tu voudrais toujours utiliser [Babel] ensuite.*\n\n*Soupir*. Et sans [Babel] pas d'[ES6] ?\n\n- *Oui, et inclure une version [CDN] de [Babel] en entier ne serait pas une bonne idée pour la production. En production, tu dois minifier ton propre jeu de fichiers personnels, tu dois minifier tes ressources, rendre plus performant ton JS (et le rendre illisible), mettre du CSS critique directement dans le HTML en amont de tes fichiers, déferrer tes scripts, etc.*\n\n### Typage fort\n\nC'est bon, c'est bon. Alors si je ne veux pas inclure mes bibliothèques directement depuis des [CDN], qu'est ce que je voudrais faire ?\n\n- *Tu voudrais les transpiler depuis [TypeScript] en utilisant [webpack] + [SystemJS] + [Babel].*\n\n[TypeScript]: https://www.typescriptlang.org/ \"TypeScript\"\n\n[TypeScript] ? Je croyais qu'on codait en [JavaScript] !\n\n- *[TypeScript] est du [JavaScript], ou plutôt, une surcouche de [JavaScript], plus précisément de JavaScript en version [ES6]. Tu sais, les six versions dont nous avons parlées tout à l'heure ?*\n\nMais je croyais que [ES2016+] était déjà une surcouche de [ES6] ! Pourquoi on aurait besoin de faire appel à [TypeScript] ?\n\n- *Oh, parce qu'il nous permet d'utiliser le [JavaScript] comme un langage fortement typé, et réduit les erreurs à l'exécution. C'est 2017, tu dois ajouter différents types à ton code [JavaScript].*\n\nEt [TypeScript] fait ça, évidemment.\n\n- *Oui, mais contrairement à [Flow], [TypeScript] est une surcouche de [JavaScript] qui a besoin d'être compilée.*\n\n[Flow]: https://flow.org/ \"Flow\"\n\n*Soupir*... et [Flow] c'est ?\n\n- *Un vérificateur de types statiques fait par des gars de Facebook. Il l'on codé en OCaml, car c'est un langage de programmation fonctionnelle fantastique !*\n\nOCaml ? Programmation fonctionnelle ?\n\n- *C'est ce que les mecs cools utilisent de nos jours, mecs, tu sais, c'est 2017 ! La programmation fonctionnelle ? Les fonctions d'ordre supérieur ? Curryfication ? Fonctions pures ?*\n\nJ'ai aucune idée de se dont tu parles.\n\n- *Personne ne comprend au début. Écoute, tu as juste besoin de savoir que la programmation fonctionnelle est mieux que la programmation orientée objet et c'est ce qui devrait être utilisé maintenant en 2017.*\n\nAttends, j'ai appris la POO à l'école, je croyais que c'était bien ?\n\n- *C'est parce que c'est ce que faisait Java avant d'être récupéré par Oracle. Je veux dire, la POO était bonne avant, et est toujours utile de nos jours, mais tout le monde a réalisé que modifier des états était pas top, donc maintenant tout le monde passe du côté des objets immuables et de la programmation fonctionnelle. Les gars utilisant [Haskell](https://fr.wikipedia.org/wiki/Haskell) en parlent depuis des années sans parler des gars de [Elm](https://fr.wikipedia.org/wiki/Elm). Heureusement dans le web d'aujourd'hui on a des bibliothèques comme [Ramda] qui permettent de la programmation fonctionnelle en [JavaScript].*\n\n[Ramda]: http://ramdajs.com/ \"Ramda\"\n\nEst-ce que tu chies juste un tas de nom pour faire joli ? C'est quoi ça, Ranma ?\n\n- *Non. [Ramda]. Comme Lambda. Tu sais la bibliothèque de David Chambers ?*\n\nDavid qui ?\n\n- *David Chambers. Un mec cool. Un des contributeurs de [Ramda]. Tu devrais aussi t'intéresser à...*\n\n### Les Promesses\n\nAttends, je vais t'arrêter là. Tout ça est peut-être cool, mais je pense que tout ç'est trop compliqué et inutile pour simplement faire de la récupération de données et les afficher. Je suis sûr que j'ai pas besoin de connaître ce David pour savoir créer des tableaux avec des données dynamiques. Revenons en à [React]. Comment je peux récupérer les données depuis le serveur avec [React] ?\n\n- *Et bien en fait, tu ne peux pas récupérer les données avec [React], tu peux juste afficher les données avec [React].*\n\nT'es sérieux là ! Tout ça pour ça ? Alors on utilise quoi pour récupérer les données ?\n\n- *Tu utilises [Fetch] pour récupérer les données du serveur. C'est le nom de l'implémentation native pour faire du XMLHttpRequests sur un serveur.*\n\n[Fetch]: https://developer.mozilla.org/fr/docs/Web/API/Fetch_API/Using_Fetch \"Fetch\"\n\nAh, tu veux dire [AJAX].\n\n- *[AJAX] est juste l'utilisation de XMLHttpRequests. Mais oui. [Fetch] te permet de faire de l'[AJAX] en te basant sur des [Promesses], que tu peux utiliser pour éviter les cascades de fonctions de rappel.*\n\n[Promesses]: https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Promise \"Promesses\"\n\nCascades de fonctions de rappel ?\n\n- *Oui. À chaque fois que tu fais une requête asynchrone au serveur, tu dois attendre la réponse, tu utilises donc une fonction dans une fonction, c'est ce qu'on appelle une fonction de rappel. Si tu as plusieurs appel, ça forme une cascade.*\n\nAh, et les [Promesses] ça empêche ça ?\n\n- *En effet. En manipulant tes fonctions de rappel dans des [Promesses], tu peux lire ton code plus facilement et mieux le comprendre. Tu peux le simuler et le tester, avec des requêtes simultanées en attendant qu'elles soient toutes arrivées avant de continuer.*\n\nEt ça peut être fait avec [Fetch] ?\n\n- *Oui, mais seulement si tes utilisateurs utilisent des navigateurs compatibles, sinon tu auras besoin d'un polyfill pour [Fetch] ou d'utiliser [Request], [bluebird] ou [axios].*\n\n[Request]: https://github.com/request/request \"Request\"\n[bluebird]: http://bluebirdjs.com/docs/getting-started.html \"bluebird\"\n[axios]: https://github.com/mzabriskie/axios \"axios\"\n\nMais combien de bibliothèques je dois connaître bon sang !?\n\n- *Ça, c'est l'écosystème [JavaScript] de [npm]. Il y a des milliers de bibliothèques qui font toutes la même chose. Les sources des bibliothèques sont à disposition, et nous avons les meilleures !*\n\nC'est quoi ça alors [Request], [bluebird] et [axios] ?\n\n- *Ce sont toutes des bibliothèques pour faire du XMLHttpRequests avec des [Promesses].*\n\nEt les méthodes [AJAX] de [jQuery] ne peuvent pas retourner des [Promesses] aussi ?\n\n- *On n'utilise plus la lettre « j » en 2017. Utilise juste [Fetch], et les polyfill quand le navigateur ne l'a pas ou alors [Request], [bluebird] et [axios] à la place. Ensuite gères tes [Promesses] avec les fonctions [await] et [async] et boom, tu as le contrôle de flux parfait.*\n\nC'est la deuxième fois que tu me parles de [await] mais je sais pas trop ce que c'est.\n\n- *[await] permet de bloquer les appels asynchrones, te permettant d'avoir un meilleur contrôle sur « quand » les données vont être récupérées et en améliore la lisibilité du code. C'est génial, tu as juste besoin se t'assurer d'avoir la surcouche `stage-3` avec [Babel], ou d'utiliser la `syntax-async-functions` et le plugin `transform-async-to-generator`.*\n\nC'est imbitable.\n\n- *Non, imbitable c'est le fait de devoir pré-compiler du code [TypeScript] et le transpiler avec [Babel] pour pouvoir utiliser des fonctionnalités qui ne sont pas encore supportées par [TypeScript].*\n\nJe sais pas trop quoi dire à ce stade.\n\n- *C'est très simple. Tu codes tout en [TypeScript]. Tous les modules sont récupérés avec [Fetch] et compilés en [ES6]*. Tu les transpiles avec [Babel] et la surcouche `stage-3`, et tu charges ça avec [SystemJS]. Si tu n'as pas [Fetch], utilise un polyfill ou utilise [axios], et gère toutes tes [Promesses] avec [await].\n\n### Gestionnaire d'états\n\nOn a pas la même définition de « très simple ». Donc avec ce rituel je vais finalement pouvoir récupérer mes données et les afficher avec [React] pas vrai ?\n\n- *Et ton application ne devait pas gérer les changements d'états ?*\n\nNon ça va aller, on va juste ré-afficher les données à chaque fois.\n\n- *Bon d'accord. Parce que sinon j'aurais dû t'expliquer ce qu'était [Flux](https://github.com/facebook/flux), et ses implémentations comme dans [Flummox](https://github.com/acdlite/flummox), [Alt](http://alt.js.org/) ou [Fluxible](https://github.com/yahoo/fluxible). Mais pour être honnête, tu devrais utiliser [Redux].*\n\n[Redux]: http://redux.js.org/ \"Redux\"\n\n### Moteur de template\n\nJe crois que je m'en tape un peu de tous ses noms, je veux juste afficher des données.\n\n- *Oh, si tu veux vraiment juste afficher des données, tu n'as peut être pas besoin de [React] pour commencer. Tu devrais plutôt utiliser un moteur de template.*\n\nTu te fou de moi ? T'es encore sérieux là ? C'est comme ça que tu donnes des conseils ?\n\n- *Je vais juste t'expliquer ce que tu pourrais utiliser.*\n\nNon arrête. Juste arrête.\n\n- *Je veux dire, même si tu utilises un moteur de template, tu pourras toujours utiliser [TypeScript] + [SystemJS] + [Babel] si tu veux, donc tout ça n'est pas perdu.*\n\nJ'ai besoin d'afficher des données sur une page. Pas d'exécuter une Fatality Sub-Zero dans Mortal Kombat. Dit moi juste quel moteur de template utilisé à partir de maintenant.\n\n- *Il y en a un paquet. Attends, je vais essayer d'être plus attentif à ton parcours et d'être moins réduit qu'un simple [React]. Y a t-il, donc, un moteur de template avec lequel tu es plus familier ?*\n\nEt bien. Ça me parle un peu, ça, les templates, mais je n'arrive pas à me rappeler d'un nom. J'avais juste utilisé ça par curiosité.\n\n- *[jTemplates](http://jtemplates.tpython.com/) ? [jQote](https://github.com/aefxx/jQote2) ? [pure](https://beebole.com/pure/) ?*\n\nÇa ne me dit rien. Un autre ?\n\n- *[Transparency](https://github.com/leonidas/transparency) ? [JsRender](https://github.com/BorisMoore/jsrender) ? [Markup.js](https://github.com/adammark/Markup.js/) ? [Knockout](http://knockoutjs.com/) ? Ce dernier permet la liaison de donnée bidirectionnelle.*\n\nNon, d'autres ?\n\n- *[Plates](https://github.com/flatiron/plates) ? [jQuery Templates plugin](https://github.com/BorisMoore/jquery-tmpl) ? [Handlebars](http://handlebarsjs.com/) ?*\n\nAh... peut-être quelque chose comme le dernier ?\n\n- *[Mustache](https://mustache.github.io/) ? [Underscore.js](http://underscorejs.org/#template) ? Je pense aussi à [lodash-template](https://www.npmjs.com/package/lodash.template) mais c'est assez 2014 quand même.*\n\nAh... peut-être pas ça finalement.\n\n- *[Jade] ? [Dust](http://www.dustjs.com/) ?*\n\n[Jade]: https://pugjs.org/ \"Pug\"\n[Pug]: https://pugjs.org/ \"Pug\"\n\nNon.\n\n- *[dotJS](http://olado.github.io/doT/index.html) ? [EJS] ?*\n\n[EJS]: http://ejs.co/ \"EJS\"\n\nNon...\n\n- *[Nunjucks](https://mozilla.github.io/nunjucks/)* ? [ECT](http://ectjs.com/) ?*\n\n..., non...\n\n- *Hum... rien comme une syntaxe à la [CoffeeScript](http://coffeescript.org/) alors. [Jade] ?*\n\nNon, tu l'as déjà dit [Jade].\n\n- *Je veux dire [Pug]. Je veux dire [Jade]. Je veux dire, [Jade] c'est maintenant [Pug].*\n\n*Soupir*. Non... je me rappel de rien. Lequel tu utilises ?\n\n- *J'utilise [Vue] en tant que moteur de template, mais aussi à la place de [React] en tant que [MVVM] ! Ça me permet de faire les deux, et c'est bien plus performant. Mais c'est plutôt tendance 2017 ça.*\n\n### Résumons\n\nEt il n'y a plus moyen de rien faire sans toutes ses bibliothèques ?\n\n- *Il y a aussi les chaînes de caractères ES6 permettant le templating maintenant.*\n\nLaisse moi deviner, et ça requiert [ES6].\n\n- *Correct*.\n\nEt en fonction du navigateur utilisé, j'ai besoin de [Babel].\n\n- *Correct*.\n\nEt si je ne veux pas inclure l'entièreté de la bibliothèque, j'ai besoin de les charger par module depuis [npm].\n\n- *Correct*.\n\nEt pour cela j'ai besoin de choses comme [Browserify], ou [webpack], ou d'autres alternatives comme [SystemJS].\n\n- *Correct*.\n\nEt sans [webpack], idéalement il faudrait utiliser un gestionnaire de tâches.\n\n- *Correct*.\n\nMais, si je souhaite utiliser de la programmation fonctionnelle et du typage fort j'ai d'abord besoin de [TypeScript] ou de choses comme [Flow].\n\n- *Correct*.\n\nEt je peux également utiliser, [Fetch], les [Promesses] et le contrôle de flux et tout ce qui est magique.\n\n- *Correct.*\n\nEt pour quelque chose de non réactif, je peux simplement utiliser des moteurs de template comme [EJS] ou [Pug].\n\n- *Correct.*\n\nTu sais quoi. Je crois que j'en ai fini avec le web client, je crois que j'en peux plus du JavaScript.\n\n- *D'ici quelques années nous coderons peut-être en Elm ou en WebAssembly.*\n\n### Node.js\n\nJe pense que je vais juste repasser côté Back-end, loin du JavaScript...\n\n- *Ah. Mais le [JavaScript] est également passé du côté Back-end avec [Node.js] ! C'est même de la que vient [npm]. Tu as des tas de modules bas niveaux comme [Express](http://expressjs.com/fr/) ou [Socket.io](https://socket.io/) ou des choses plus conséquentes avec des frameworks comme [NodeAtlas], [Sails.js](http://sailsjs.com/) ou même des applications par dessus [Node.js] comme [Meteor](https://www.meteor.com/). Et pour reparler de [React] ou [Vue], ils sont aussi utilisables côté serveur grâce à leur [DOM] virtuel pour faire du [SSR]. Essaie [Nuxt.js](https://nuxtjs.org/) à l'occasion.*\n\n[Node.js]: https://nodejs.org/en/ \"Node.js\"\n[NodeAtlas]: https://node-atlas.js.org/ \"NodeAtlas\"\n[SSR]: https://fr.vuejs.org/v2/guide/ssr.html \"SSR\"\n\nDu JavaScript côté serveur ?\n\n- *Oui, et beaucoup de développeurs Front-end qui faisaient également du Back-end ont migré sur cette technologie. C'est ce qu'on appelle maintenant les développeurs Full-stack JavaScript.*\n\nComme toi ?\n\n- *Oui.*\n\n### Mobile\n\nBon. Alors j'arrête les programmes pour ordinateurs. Je vais aller voir du côté mobile, *blague*.\n\n- *Hola ! Tu vas mettre les pieds dans un autre domaine de complexité ! Et si c'est pour échapper au [JavaScript], sache qu'avec [Cordova](https://cordova.apache.org/), tu peux aussi faire des applications mobiles en JavaScript, multi-support. Tu retrouveras de nouveau [React] avec [React Native](https://facebook.github.io/react-native/) ou encore [Vue] avec [Weex](https://github.com/alibaba/weex) !*\n\n### Le JavaScript, c'est si compliqué ?\n\nEt bien, développeur JavaScript, ça doit pas être facile et très marrant tout les jours...\n\n- *Ça dépend pour qui ! Pour ma part, toute cette complexité je m'en passe au quotidien grâce à [Vue] et [NodeAtlas], et ça pourrait te réconcilier avec JavaScript !*\n\nSérieux ? Résume ?\n\n- *Oublie [TypeScript], [c'est pour les développeurs qui n'ont pas compris JavaScript](https://blog.lesieur.name/media/images/upload/javascript-vs-typescript.png). Pour afficher tes données finalement tu n'as besoin que de [NodeAtlas] : il te permet [de faire ton API REST](https://www.lesieur.name/api/) si tu n'en as pas déjà une, et te permet d'afficher tes données avec zéro configuration, en te fournissant en moteur de template EJS ou Pug. Tu peux en changer à volonté bien sûr.*\n\nC'est donc pour les trucs non réactif. Mais comment je remplace [jQuery] côté client ?\n\n- *Et bien utilise simplement [Vue] pour manipuler le DOM, une seule et unique librairie, servable par [CDN], plus légère que [React], plus performante que [React], plus simple que [jQuery].*\n\nOk. Et je change ça pour quoi si je veux des sites réactifs ?\n\n- *Et bien pour les sites réactifs, ou qui ne le sont pas mais qui pourrait le devenir, dans ce cas utilise toujours [Vue] mais passe à la vitesse supérieur avec tout l'écosystème [Vue]. Tu peux même faire du [SSR] en couplant [Vue] avec [NodeAtlas].*\n\nÇa me semble plus sensé ton histoire. [Vue] aussi simple que [jQuery] ? Enfin quelque chose qui me parle, pour le reste, on verra quand j'en aurait besoin.\n\n- *Oui. L'idée c'est d'utiliser tout ça aussi simplement que l'utilisation de [jQuery], __et si besoin__, d'utiliser le reste. Ça ne sert à rien de monter un chantier naval pour faire une barque.*\n\nBien d'accord. Mais pour ces histoires de production ?\n\n- *[NodeAtlas] embarque tout ça pour toi, oublie [webpack], [gulp] et compagnie au quotidien. Réserve les pour les très rares cas où ils seraient __réellement__ utiles.*\n\nÇa me rassure.\n\n- _**C'est ça, un framework évolutif ! Adapté pour les débutants, puissant pour les experts !**_\n\n\n\n\n\n## De l'évolutivité, de la versatilité et de l'utilisation progressive\n\n\u003e **`Vue et NodeAtlas`** Si vous êtes développeur Front-end ou Back-end, essayez le combo [Vue] + [NodeAtlas] pour du tout [JavaScript] qui vous accompagnera dans votre monté en puissance.\n\n\u003e - Découvrez [Vue, le Framework\nJavaScript Évolutif](https://fr.vuejs.org/) coté client. Trouvez de l'aide sur le [Chat d'aide français](https://gitter.im/vuejs-fr/vue).\n\u003e - Découvrez [NodeAtlas, le Framework\nJavaScript Évolutif](https://node-atlas.js.org/) coté serveur. Trouvez de l'aide sur le [Chat d'aide français](https://gitter.im/NodeAtlas/Aide).\n\n\n\n\n## Remerciements\n\nMerci à [Pierre Ammeloot](http://pierre.ammeloot.fr/) ainsi que [Pierstoval](https://github.com/Pierstoval) pour leur relecture.","dates":{"published":{"$date":"2017-07-03T10:23:00.000Z"},"updated":[]},"description":"Pour mieux appréhender les difficultés des métiers autour du JavaScript : Front-end, Node.js, Full-stack, Mobile !","image":"https://blog.lesieur.name/media/images/upload/understand-js.png","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Pourquoi vous ne comprenez rien au JavaScript ?","urn":"pourquoi-vous-ne-comprenez-rien-au-javascript"}
{"_id":{"$oid":"596cc72e2605c321ce70880d"},"__v":0,"cache":{"comment":{"number":0}},"categories":[{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5810c54a889f9b4bb0ece04f"},{"$oid":"5310456355dfd5f7698d48ce"},{"$oid":"54f042102ae5a068f260dae2"},{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"5310456355dfd5f7698d48c8"}],"content":"L'URL `www.example.com/foo` **n'**est **pas** la même URL que `www.example.com/foo/`. Or, si cela n'est pas gênant dans une application monopage (plus loin SPA pour « Single Page Application »), cela devient critique pour de l'optimisation de moteur de recherche (plus loin SEO pour « Search Engine Optimization ») dès lors que le contenu est généré côté serveur.\n\nCôté serveur, les routeurs comme celui d'[Express] possèdent un mode strict pour que l'adresse `/foo` ne soit pas la même que l'adresse `/foo/`. Mais qu'en est t-il de [Vue Router] ? Et surtout, comment faire concorder le routage client et le routage serveur pour que l'hydratation (la prise en main côté client d'un rendu côté serveur) concorde ?\n\n[\u003cimg src=\"https://blog.lesieur.name/media/images/upload/vue-router.png\" width=\"628\" style=\"max-width: 100%;height: auto\"\u003e](https://blog.lesieur.name/media/images/upload/vue-router.jpg)\n\nJe vous le donne en mille : de base, là où [Express] en mode strict vous renverra une page 200 pour `/foo/` et une page 404 pour `/foo`, [Vue Router] lui, en mode strict, [vous renverra exactement l'inverse](http://jsfiddle.net/0evuj9fs/5/) !\n\nComment dans ce cas utiliser [Vue Router] et [Vue Server Renderer] pour du routage strict dont les moteurs de recherche sont si friand pour une SEO à toute épreuve ? [La réponse à la fin !](./routage-strict-avec-vue-router-et-ssr/#vuerouter-ssr-probl-me-de-contenu-dupliqu-)\n\n\u003e Cependant, afin que ce billet soit utile également pour ceux n'ayant pas (encore) ce problème et qui souhaitent découvrir par l'exemple comment fonctionne du SSR avec Vue (et de facto, qu'est-ce que c'est réellement), je vais élaborer un code pour vous accompagner dans cette compréhension, pas à pas. Seulement ensuite [nous mettrons en évidence notre problème](./routage-strict-avec-vue-router-et-ssr/#probl-me) avant de [le résoudre](./routage-strict-avec-vue-router-et-ssr/#solution).\n\n\n\n\n\n## Pourquoi a t-on besoin d'un rendu côté serveur (SSR) ?\n\nCe terme de SSR (pour « Server-Side Rendering ») ne vous dit peut-être rien. C'est vrai, « du rendu côté serveur », vous faites ça depuis toujours avec PHP, C#, etc. non ? En réalité, quand on parle de SSR vis à vis de Vue, React and co., c'est pour parler du fait de faire le rendu de la page telle que ces outils le permettent dans un navigateur, mais du côté serveur. Bien entendu, cela signifie que votre serveur va devoir interpréter le [JavaScript] (puisque ces outils clients sont en [JavaScript]) avant de renvoyer le résultat au client. C'est cela que permet [Node.js].\n\nBien. Pour répondre a cette question dans le détail, nous allons utiliser\n- le framework [NodeAtlas] qui fera office de serveur web évolutif [Node.js] pour faire du SSR sans peine (puisque la partie qui nous intéresse est surtout [Vue]). Nous allons également utiliser\n- la bibliothèque [Vue] qui fera office de moteur de template réactif, son extension [Vue Router] qui fera office de routeur client ainsi que [Vue Server Renderer] qui fera le pont entre [Vue] et [Node.js].\n\n\u003e Cet article contient tout le code utile à sa compréhension. Cependant, vous pouvez tester le code chez vous, pas à pas, pour améliorer votre compréhension, en suivant les instructions. Pour ce faire vous devez installer [Node.js]. Une fois celui-ci installé, lancez la commande `npm install -g node-atlas` pour utiliser l'outil côté serveur [NodeAtlas] utilisé dans cet article. [NodeAtlas] est ce qui fait actuellement tourner le blog sur lequel vous lisez cet article. Vous pouvez cependant adapter le code pour votre framework serveur préféré !\n\n\n\n### Créer du simple contenu en réponse serveur\n\nDans un contexte simple, nous allons créer une page d'accueil qui nous mènera à `/foo/` qui sera une page existante. Elle nous mènera également à `/foo` qui retournera une page 404 (non existante pour le serveur). Ceci n'a rien de bien différent de l'utilisation d'un code serveur classique PHP couplé à Apache par exemple. Ici on utilisera [NodeAtlas].\n\nCréons nous donc un `webconfig-www.json` pour [NodeAtlas] comme suit.\n\n*webconfig-www.json*\n\n```json\n{\n\u0009\"httpPort\": 7778,\n\u0009\"view\": \"layout.htm\",\n\u0009\"routes\": {\n\u0009\u0009\"/\": \"index.htm\",\n\u0009\u0009\"/foo/\": \"exist.htm\",\n\u0009\u0009\"/*\": {\n\u0009\u0009\u0009\"view\": \"error.htm\",\n\u0009\u0009\u0009\"statusCode\": 404\n\u0009\u0009}\n\u0009}\n}\n```\n\n\u003e [NodeAtlas] se configure progressivement en fonction du besoin. Aussi, ici, nous allons faire tourner un site en localhost sur le port 7778 de `httpPort`. Nous allons utiliser une page maître `layout.htm` (qui sera identique autour de la zone réelle de contenu autour de chaque page). Et nous allons rendre accessible le contenu de `views/index.htm` à l'adresse `http://localhost/`, le contenu de `views/exist.htm` à l'adresse `http://localhost/foo/` et le contenu de `views/error.htm` (avec un `statusCode` d'erreur 404) pour toutes les autres pages (`/*`).\n\nNotre jeu de fichiers est donc le suivant (par défaut [NodeAtlas] va checher les `view` dans le dossier `views`).\n\n```bash\n├─ views/\n│  ├─ error.htm\n│  ├─ exist.htm\n│  ├─ index.htm\n│  └─ layout.htm\n└─ webconfig-www.json\n```\n\nEt les contenus pour chacun des fichiers les suivants.\n\n*views/layout.htm*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n\u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003c!-- La zone si dessous contiendra les contenus\n\u0009\u0009     `views/index.htm` pour `/`,\n\u0009\u0009     `views/exist.htm` pour `/foo/` et\n\u0009\u0009     `views/error.htm` pour les autres pages\n\u0009\u0009     grâce à `include`. --\u003e\n\n\u0009\u0009\u003c?- include(routeParameters.view) ?\u003e\n\n\u0009\u0009\u003c!-- `routeParameters` représente, par exemple,\n\u0009\u0009     pour la page `/existe-pas` l'objet\n\u0009\u0009     `{ \"view\": \"error.htm\", \"statusCode\": 404 }`\n\u0009\u0009     du webconfig. Donc `.view` retourne `\"error.htm\"`.\n\u0009\u0009     Quand la valeur est une chaine de caractères\n\u0009\u0009     comme pour `/foo/`, celle-ci est transformée en\n\u0009\u0009     objet et la valeur est placée dans `.view` --\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\n*views/index.htm*\n\n```htm\n\u003cul\u003e\n\u0009\u003cli\u003e\u003ca href=\"/foo/\"\u003e`/foo/` existe\u003c/a\u003e\u003c/li\u003e\n\u0009\u003cli\u003e\u003ca href=\"/foo\"\u003e`/foo` n'existe pas\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n```\n\n*views/exist.htm*\n\n```htm\n\u003cdiv\u003e\n\u0009\u003cp\u003e\u003ca href=\"/\"\u003eRetour\u003c/a\u003e\u003c/p\u003e\n\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n```\n\n*views/error.htm*\n\n```htm\n\u003cdiv\u003e\n\u0009\u003cp\u003e\u003ca href=\"/\"\u003eRetour\u003c/a\u003e\u003c/p\u003e\n\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n\u003c/div\u003e\n```\n\n#### Test site\n\nPour faire lire le webconfig à [NodeAtlas], on lance alors la commande `node-atlas --webconfig webconfig-www.json --browse` depuis le dossier contenant `webconfig-www.json` et notre navigateur s'ouvre automatiquement (option `--browse`) à :\n\n- addresse : `http://localhost:7778/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cul\u003e\n  \u0009\u0009\u0009\u003cli\u003e\u003ca href=\"/foo/\"\u003e/foo/ existe\u003c/a\u003e\u003c/li\u003e\n  \u0009\u0009\u0009\u003cli\u003e\u003ca href=\"/foo\"\u003e/foo n'existe pas\u003c/a\u003e\u003c/li\u003e\n  \u0009\u0009\u003c/ul\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n  \u003e Note : les commentaires ont volontairement été omis.\n\nNaviguez en cliquant sur `/foo n'existe pas`. Cela nous enverra droit sur une page inexistante (ce qui est le cas pour n'importe quels autres URL que `/` et `/foo/`) :\n\n- addresse : `http://localhost:7778/foo`\n- status : 404\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv\u003e\n  \u0009\u0009\u0009\u003cp\u003e\u003ca href=\"/\"\u003eRetour\u003c/a\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n  \u0009\u0009\u003c/div\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nRetournez à l'accueil en cliquant sur `Retour` puis cliquez sur `/foo/ existe`. Cela nous affichera le contenu souhaité pour cette page.\n\n- addresse : `http://localhost:7778/foo/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv\u003e\n  \u0009\u0009\u0009\u003cp\u003e\u003ca href=\"/\"\u003eRetour\u003c/a\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n  \u0009\u0009\u003c/div\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nTout ceci est donc parfait pour créer des sites indexables. Un défaut est que le site n'est pas réactif. De plus chaque changement de page rechargera le navigateur. Tous ces soucis pourraient être adressés à la main côté client mais, de la même manière que nous n'utilisons pas directement l'API HTTP de [Node.js] côté serveur, nous n'allons pas non plus utiliser directement l'API History des navigateurs côté client. Nous allons utiliser [Vue].\n\n\n\n### Créer une application monopage ou SPA\n\nPour créer notre application, nous allons devoir jouer\n- avec [Vue] qui s'occupera de la réactivité et jouer\n- avec [Vue Router] qui s'occupera du changement de contenu sans recharger la page (mais en changeant bien l'URL !).\n\nPour cela, il nous suffit de toujours servir la même page côté client, et donc de créer un `webconfig-spa.json` comme suit :\n\n*webconfig-spa.json*\n\n```json\n{\n\u0009\"httpPort\": 7776,\n\u0009\"routes\": {\n\u0009\u0009\"/*\": \"spa.htm\"\n\u0009}\n}\n```\n\net de créer le nouveau fichier `views/spa.htm`\n\n```bash\n├─ views/\n│  ├─ ...\n│  ├─ spa.htm\n│  ├─ ...\n├─ ...\n├─ webconfig-spa.json\n├─ ...\n```\n\ncontenant le code suivant.\n\n*views/spa.htm*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n\u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n\u0009\u0009\u003cstyle\u003e\n\u0009\u0009\u0009/* On crée des règles pour la\n\u0009\u0009\u0009   balise `\u003ctransition\u003e` de Vue\n\u0009\u0009\u0009   afin de bien voir que le changement\n\u0009\u0009\u0009   de page ne recharge pas la page. */\n\n\u0009\u0009\u0009.fade-enter,\n\u0009\u0009\u0009.fade-leave-to {\n\u0009\u0009\u0009\u0009opacity: 0;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.fade-leave-active,\n\u0009\u0009\u0009.fade-enter-active {\n\u0009\u0009\u0009\u0009transition: opacity 1s;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009.fade-enter-to,\n\u0009\u0009\u0009.fade-leave {\n\u0009\u0009\u0009\u0009opacity: 1;\n\u0009\u0009\u0009}\n\u0009\u0009\u003c/style\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003c!-- Voici le contenu qui va être pris en\n\u0009\u0009     main par Vue. Il peut donc contenir des balises\n\u0009\u0009     et attributs HTML non standard mais syntaxiquement\n\u0009\u0009     valide qui seront interprétées par Vue. --\u003e\n\u0009\u0009\u003cdiv class=\"app\"\u003e\n\u0009\u0009\u0009\u003ctransition name=\"fade\"\u003e\n\u0009\u0009\u0009\u0009\u003crouter-view\u003e\u003c/router-view\u003e\n\u0009\u0009\u0009\u003c/transition\u003e\n\u0009\u0009\u003c/div\u003e\n\n\u0009\u0009\u003c!-- Chargement des bibliothèques de Vue pour la réactivité\n\u0009\u0009     (`vue.js`) et le routage (`vue-router.js`). --\u003e\n\u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n\n\u0009\u0009\u003c!-- Utilisation des bibliothèque de Vue. --\u003e\n\u0009\u0009\u003cscript\u003e\n\u0009\u0009\u0009/* Pour commencer, nous créons 3 composants `Index`,\n\u0009\u0009\u0009   `Err` et `Exist`. Chaque composant contient un template\n\u0009\u0009\u0009   de page similaire à ceux de notre exemple plécédent avec\n\u0009\u0009\u0009   l'utilisation unique de NodeAtlas.\n\u0009\u0009\u0009   Notez également que les balises `\u003ca\u003e` sont remplacées\n\u0009\u0009\u0009   par les balise `\u003crouter-link\u003e` qui vont prendre en\n\u0009\u0009\u0009   charge les changements de page. */\n\u0009\u0009\u0009var Index = { template: `\u003cul\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo/\"\u003e/foo/ existe\u003c/router-link\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo\"\u003e/foo existe aussi car pas strict\u003c/router-link\u003e\u003c/li\u003e\n\u0009\u0009\u0009\u0009\u003c/ul\u003e` },\n\u0009\u0009\u0009\u0009Exist = { template: `\u003cdiv\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u003c/div\u003e` },\n\u0009\u0009\u0009\u0009Err = { template: `\u003cdiv\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n\u0009\u0009\u0009\u0009\u003c/div\u003e` },\n\n\u0009\u0009\u0009/* Nous utilisons `vue-router.js` pour définir nos\n\u0009\u0009\u0009   routes, et les composants à utiliser derrière\n\u0009\u0009\u0009   chacune d'entre elle. Le `path` représente là\n\u0009\u0009\u0009   route et le `component` le composant à charger. */\n\u0009\u0009\u0009router = new VueRouter({\n\u0009\u0009\u0009\u0009mode: 'history',\n\u0009\u0009\u0009\u0009routes: [\n\u0009\u0009\u0009\u0009\u0009{ path: '/', component: Index },\n\u0009\u0009\u0009\u0009\u0009{ path: '/foo/', component: Exist },\n\u0009\u0009\u0009\u0009\u0009{ path: '/*', component: Err }\n\u0009\u0009\u0009\u0009]\n\u0009\u0009\u0009});\n\n\u0009\u0009\u0009/* Enfin nous utilisons `vue.js` pour assigner\n\u0009\u0009\u0009   le routeur et monter l'application sur la zone\n\u0009\u0009\u0009   du DOM sous la balise de classe `app`. */\n\u0009\u0009\u0009new Vue({\n\u0009\u0009\u0009\u0009router: router,\n\u0009\u0009\u0009\u0009el: '.app'\n\u0009\u0009\u0009});\n\u0009\u0009\u003c/script\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\n#### Test SPA\n\nExécutons alors la commande `node-atlas --webconfig webconfig-spa.json --browse` depuis le dossier contenant `webconfig-spa.json` et notre navigateur s'ouvre à :\n\n- addresse : `http://localhost:7776/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u0009\u003cstyle\u003e\n  \u0009\u0009\u0009.fade-enter,\n  \u0009\u0009\u0009.fade-leave-to {\n  \u0009\u0009\u0009\u0009opacity: 0;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u0009.fade-leave-active,\n  \u0009\u0009\u0009.fade-enter-active {\n  \u0009\u0009\u0009\u0009transition: opacity 1s;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u0009.fade-enter-to,\n  \u0009\u0009\u0009.fade-leave {\n  \u0009\u0009\u0009\u0009opacity: 1;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u003c/style\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv class=\"app\"\u003e\n  \u0009\u0009\u0009\u003ctransition name=\"fade\"\u003e\n  \u0009\u0009\u0009\u0009\u003crouter-view\u003e\u003c/router-view\u003e\n  \u0009\u0009\u0009\u003c/transition\u003e\n  \u0009\u0009\u003c/div\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript\u003e\n  \u0009\u0009\u0009var Index = { template: `\u003cul\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo/\"\u003e/foo/ existe\u003c/router-link\u003e\u003c/li\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo\"\u003e/foo existe aussi car pas strict\u003c/router-link\u003e\u003c/li\u003e\n  \u0009\u0009\u0009\u0009\u003c/ul\u003e` },\n  \u0009\u0009\u0009\u0009Exist = { template: `\u003cdiv\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u003c/div\u003e` },\n  \u0009\u0009\u0009\u0009Err = { template: `\u003cdiv\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u003c/div\u003e` },\n\n\u0009\u0009\u0009router = new VueRouter({\n\u0009\u0009\u0009\u0009mode: 'history',\n\u0009\u0009\u0009\u0009routes: [\n\u0009\u0009\u0009\u0009\u0009{ path: '/', component: Index },\n\u0009\u0009\u0009\u0009\u0009{ path: '/foo/', component: Exist },\n\u0009\u0009\u0009\u0009\u0009{ path: '/*', component: Err }\n\u0009\u0009\u0009\u0009]\n\u0009\u0009\u0009});\n\n  \u0009\u0009\u0009new Vue({\n  \u0009\u0009\u0009\u0009router: router,\n  \u0009\u0009\u0009\u0009el: '.app'\n  \u0009\u0009\u0009});\n  \u0009\u0009\u003c/script\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n  \u003e Note : les commentaires ont volontairement été omis.\n\nNaviguez en cliquant sur `/foo/ existe`. Cela nous affichera le contenu existant `200 : J'existe !` et nous fera changer d'adresse sans rechargement de page (vous constaterez d'ailleurs que celle-ci est animée grâce à la balise `\u003ctransition\u003e`).\n\n- addresse : `http://localhost:7776/foo/`\n- status : — (pas de rechargement de page)\n- réponse : — (pas de rechargement de page)\n\nRetournez à l'accueil en cliquant sur `Retour` puis cliquez sur `/foo existe aussi car pas strict`. Cela aura exactement le même effet, c.-à-d. affichera `200 : J'existe !` alors que vous n'avez pas spécifiquement indiqué au routeur que `/foo` était une route valide. C'est parce que le routeur de [Vue] n'est pas strict.\n\n- addresse : `http://localhost:7776/foo`\n- status : — (pas de rechargement de page)\n- réponse : — (pas de rechargement de page)\n\nCependant, si vous tapez dans votre bar d'adresse `/bar/`. Il y aura un rechargement de page qui renverra une réponse identique au page existante et même... un code 200 !\n\n- addresse : `http://localhost:7776/bar/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u0009\u003cstyle\u003e\n  \u0009\u0009\u0009.fade-enter,\n  \u0009\u0009\u0009.fade-leave-to {\n  \u0009\u0009\u0009\u0009opacity: 0;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u0009.fade-leave-active,\n  \u0009\u0009\u0009.fade-enter-active {\n  \u0009\u0009\u0009\u0009transition: opacity 1s;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u0009.fade-enter-to,\n  \u0009\u0009\u0009.fade-leave {\n  \u0009\u0009\u0009\u0009opacity: 1;\n  \u0009\u0009\u0009}\n  \u0009\u0009\u003c/style\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv class=\"app\"\u003e\n  \u0009\u0009\u0009\u003ctransition name=\"fade\"\u003e\n  \u0009\u0009\u0009\u0009\u003crouter-view\u003e\u003c/router-view\u003e\n  \u0009\u0009\u0009\u003c/transition\u003e\n  \u0009\u0009\u003c/div\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript\u003e\n  \u0009\u0009\u0009var Index = { template: `\u003cul\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo/\"\u003e/foo/ existe\u003c/router-link\u003e\u003c/li\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cli\u003e\u003crouter-link to=\"/foo\"\u003e/foo existe aussi car pas strict\u003c/router-link\u003e\u003c/li\u003e\n  \u0009\u0009\u0009\u0009\u003c/ul\u003e` },\n  \u0009\u0009\u0009\u0009Exist = { template: `\u003cdiv\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u003c/div\u003e` },\n  \u0009\u0009\u0009\u0009Err = { template: `\u003cdiv\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n  \u0009\u0009\u0009\u0009\u003c/div\u003e` },\n\n\u0009\u0009\u0009router = new VueRouter({\n\u0009\u0009\u0009\u0009mode: 'history',\n\u0009\u0009\u0009\u0009routes: [\n\u0009\u0009\u0009\u0009\u0009{ path: '/', component: Index },\n\u0009\u0009\u0009\u0009\u0009{ path: '/foo/', component: Exist },\n\u0009\u0009\u0009\u0009\u0009{ path: '/*', component: Err }\n\u0009\u0009\u0009\u0009]\n\u0009\u0009\u0009});\n\n  \u0009\u0009\u0009new Vue({\n  \u0009\u0009\u0009\u0009router: router,\n  \u0009\u0009\u0009\u0009el: '.app'\n  \u0009\u0009\u0009});\n  \u0009\u0009\u003c/script\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nPourtant, visuellement, vous constaterez que le message affiché est cette fois `404 : Je n'existe pas...` et que c'est bien le composant `Err` qui cette fois aura été chargé. Cliquez ensuite sur `Retour` pour constater que le routeur côté client a bien repris la main puisque vous retournez à l'accueil avec une animation et sans rechargement de page.\n\n- addresse : `http://localhost:7776/`\n- status : — (pas de rechargement de page)\n- réponse : — (pas de rechargement de page)\n\nCela nous montre exactement les limitations de [Vue] pour du routage côté client (qui sont les mêmes limitations que Angular, React, *le framework MVVM de votre choix*). Puisque toutes les pages de votre serveur renvoi votre SPA et que c'est le côté client qui la gère.\n\nDans le cas ou votre SPA doit être référencée, ce comportement est problématique car :\n- les moteurs d'indexation prendront les pages inexistantes pour du contenu existant (car renvoi d'un status 200),\n- les moteurs d'indexation indexeront toujours la même page illisible car le contenu est dans du [JavaScript],\n- l'indexation de cette page ne sera pas garantie puisque la page n'est pas du HTML valide (balise `\u003ctransition\u003e` et `\u003crouter-view\u003e`).\nAutant vous dire qu'en réalité, si vous n'avez pas un site frontal envoyant votre utilisateur vers votre SPA, celle-ci ne sera pas facilement référencée (même si les moteurs font de gros efforts pour les pages à forts trafiques).\n\n\n\n### Le Server-Side Rendering est la solution\n\nLe rendu côté serveur ou SSR est le rassemblement des deux premières parties pour tirer profit d'un site réactif et sans rechargement de page qui soit également indexable. Cela est possible car le contenu renvoyé est toujours différent et valide en source de chaque page. C'est ensuite l'application [Vue] qui prend la main côté client une fois la page chargée. Voyons cela dès à présent !\n\n\n\n\n\n## Vue Router + SSR + NodeAtlas\n\nNous allons de ce pas fusionner les deux approches précédentes. Nous allons montrer comment créer une application capable de faire du SSR et de produire une partie cliente réactive avec [Vue] et [NodeAtlas]. Nous résoudrons ensuite le conflit de fonctionnement des serveurs stricts qui font la différence entre `/foo/` et `/foo` et [Vue Router] qui ne la fait pas : ce qui mène a une hydratation ratée ! Nous verrons d'ailleurs par l'exemple ce qu'est exactement l'hydratation.\n\n\n\n### Partie serveur\n\nCréons à présent un fichier `webconfig.json` original correspondant à notre application finale :\n\n*webconfig.json*\n\n```json\n{\n\u0009\"httpPort\": 7777,\n\u0009\"view\": \"common.htm\",\n\u0009\"controller\": \"common.js\",\n\u0009\"routes\": \"routes.json\"\n}\n```\n\n\u003e Dans ce webconfig, nous avons décidez d'ajouter un contrôleur commun à toutes les pages, comme c'était le cas de `view`. [NodeAtlas] ira donc lire ce contrôleur dans `controllers/common.js` avant d'effectuer le rendu de chaque page. Nous avons également décidé de placer les routes dans un fichier séparé `routes.json`, ce qui nous permettra plus loin de fournir la liste des routes à la partie cliente sans donner le reste du webconfig.\n\nNous allons affecter au fichier de routes externes `routes.json`, basé sur les routes de notre premier exemple, les routes suivantes.\n\n*routes.json*\n\n```json\n{\n\u0009\"index\": {\n\u0009\u0009\"url\": \"/\",\n\u0009\u0009\"view\": \"index\"\n\u0009},\n\u0009\"exist\": {\n\u0009\u0009\"url\": \"/foo/\",\n\u0009\u0009\"view\": \"exist\"\n\u0009},\n\u0009\"error\": {\n\u0009\u0009\"url\": \"/*\",\n\u0009\u0009\"view\": \"error\",\n\u0009\u0009\"statusCode\": 404\n\u0009}\n}\n```\n\n\u003e Notez que nous ne précisons cette fois pas d'extension dans la `view` de chaque route, ce qui va nous permettre de charger au choix un fichier `.htm` ou `.js`. Nous allons voir cela plus loin.\n\nNous allons utiliser [Vue] et [Vue Router] côté serveur. Nous allons donc avoir besoin de [Vue Server Renderer] qui s'occupera d’exécuter le moteur de template de [Vue] en mode serveur. Pour ce faire nous allons les ajouter en tant que dépendances de notre projet [NodeAtlas] dans un fichier `package.json`.\n\n*package.json*\n\n```json\n{\n  \"dependencies\": {\n    \"vue\": \"2.3.x\",\n    \"vue-router\": \"2.7.x\",\n    \"vue-server-renderer\": \"2.3.x\"\n  }\n}\n```\n\nCela va nous donner l'architecture suivante.\n\n```bash\n├─ controllers/\n│  └─ common.js\n├─ views/\n│  ├─ ...\n├─ ...\n├─ package.json\n├─ routes.json\n└─ webconfig.json\n```\n\nPuis nous allons installer ces dépendances avec la commande `npm install` depuis le dossier ou est placé le fichier `package.json`.\n\nNous allons à présent prendre la main sur le cycle de création d'une page de [NodeAtlas]. Pour cela nous allons nous placer dans le point d'ancrage `changeDom` afin d'utiliser notre propre moteur de rendu qui sera [Vue Server Renderer]. Nous allons pour cela utiliser le contrôleur global `common.js` dans le nouveau dossier `controllers` dont le contenu est le suivant.\n\n*controllers/common.js*\n\n```js\n/* `changeDom` permet a NodeAtlas de manipuler le DOM virtuel\n    complètement rendu côté serveur avec, au besoin, les informations\n    de la requête qui a demandé la page dans `request` ainsi que des\n    informations complémentaires (comme le `DOM` généré) dans `local`.\n    Nous pourrions faire nos modifications puis appeler `next` pour\n    renvoyer le DOM modifié. Nous n'allons cependant pas faire cela.\n    Nous allons nous même renvoyé ce DOM en utilisant l'objet `response`.\n    Le DOM virtuel NodeAtlas servira alors de page maître au Vue Server Renderer,\n    qui se chargera d'injecter les contenus correcte en fonction de la page.\n */\nexports.changeDom = function (next, locals, request, response) {\n\u0009/* Nous récupérons tous les outils fournis par NodeAtlas. */\n\u0009var NA = this,\n\n\u0009\u0009/* Nous récupérons de quoi lire un fichier sur l'OS\n\u0009\u0009   courant et de quoi « merger » des fragments d'adresse\n\u0009\u0009   de fichier. */\n\u0009\u0009readFile = NA.modules.fs.readFile,\n\u0009\u0009join = NA.modules.path.join,\n\n\u0009\u0009/* Nous chargeons les dépendances installés grâce à notre\n\u0009\u0009   `package.json`. */\n\u0009\u0009Vue = require(\"vue\"),\n\u0009\u0009VueRouter = require(\"vue-router\"),\n\u0009\u0009VueServerRenderer = require(\"vue-server-renderer\"),\n\n\u0009\u0009/* Nous générons le chemin depuis la racine de l'OS\n\u0009\u0009   jusqu'aux fichiers du dossier `views`. */\n\u0009\u0009path = join(NA.serverPath, NA.webconfig.viewsRelativePath),\n\n\u0009\u0009/* Puis nous utilisons ce chemin pour créer le chemin complet\n\u0009\u0009   des fichiers de vue et modèle pour l'application complète,\n\u0009\u0009   ainsi que celui du composant utile pour la page actuellement\n\u0009\u0009   demandée. */\n\u0009\u0009view = join(path, locals.routeParameters.view + \".htm\"),\n\u0009\u0009model = join(path, locals.routeParameters.view + \".js\"),\n\u0009\u0009appModel = join(path, \"app.js\"),\n\u0009\u0009appView = join(path, \"app.htm\"),\n\n\u0009\u0009/* Nous générons notre application Vue côté serveur.\n\u0009\u0009   Celle-ci sera injecté dans le DOM déjà crée par\n\u0009\u0009   NodeAtlas au niveau de la balise `\u003c!--vue-ssr-outlet--\u003e`\n\u0009\u0009   (voir dans `views/common.htm` plus loin). */\n\u0009\u0009renderer = VueServerRenderer.createRenderer({\n\u0009\u0009\u0009template: locals.dom\n\u0009\u0009});\n\n\u0009/* On ajoute le plugin `VueRouter` à `Vue` (ce qui est automatiquement fait\n\u0009   côté client si les bibliothèques sont chargé via une balise `\u003cscript\u003e`). */\n\u0009Vue.use(VueRouter);\n\n\u0009/* On ouvre la vue du composant de la page courante. Si par exemple\n\u0009   on demande l'URL `http://localhost:7777/foo/`, alors la variable `view`\n\u0009   vaudra `{chemin_depuis_la_racine_de_l_OS}/views/exist.htm`. */\n\u0009readFile(view, \"utf-8\", function (error, template) {\n\u0009\u0009/* On charge le composant en question en lui donnant comme nom\n\u0009\u0009   (en premier paramètre) la valeur de l'option `view` de l'objet,\n\u0009\u0009   par exemple, `{ \"url\": \"/foo/\", \"view\": \"exist\" }`\n\u0009\u0009   pour l'adresse `http://localhost:7777/foo/` et en second\n\u0009\u0009   paramètre le fichier modèle `{chemin_depuis_la_racine_de_l_OS}/views/exist.js`. */\n\u0009\u0009var component = Vue.component(locals.routeParameters.view, require(model)(template));\n\n\u0009\u0009/* On ouvre la vue de la page maître. */\n\u0009\u0009readFile(appView, \"utf-8\", function (error, template) {\n\u0009\u0009\u0009/* On fournit au routeur l'unique composant utile pour la\n\u0009\u0009\u0009   page courante, à savoir celui de `exist`. */\n\u0009\u0009\u0009var router = new VueRouter({\n\u0009\u0009\u0009\u0009\u0009routes: [{\n\u0009\u0009\u0009\u0009\u0009\u0009/* En fournissant la route... */\n\u0009\u0009\u0009\u0009\u0009\u0009path: locals.routeParameters.url,\n\u0009\u0009\u0009\u0009\u0009\u0009/* et le composant */\n\u0009\u0009\u0009\u0009\u0009\u0009component: component\n\u0009\u0009\u0009\u0009\u0009}]\n\u0009\u0009\u0009\u0009}),\n\u0009\u0009\u0009\u0009/* On permet à l'application d'avoir connaissance de la liste\n\u0009\u0009\u0009\u0009   complète des routes. */\n\u0009\u0009\u0009\u0009webconfig = {\n\u0009\u0009\u0009\u0009\u0009routes: NA.webconfig.routes\n\u0009\u0009\u0009\u0009},\n\u0009\u0009\u0009\u0009/* On génère la réponse sous forme de flux. Cela signifie que\n\u0009\u0009\u0009\u0009   les fragments de la réponse seront retournés au client dès que\n\u0009\u0009\u0009\u0009   Vue Server Renderer les aura compilés avec Vue. */\n\u0009\u0009\u0009\u0009stream = renderer.renderToStream(new Vue(require(appModel)(template, router, webconfig)));\n\n\u0009\u0009\u0009/* On explique au serveur que le composant à rendre est\n\u0009\u0009\u0009   celui qui correspond à la route courante. */\n\u0009\u0009\u0009router.push(locals.routeParameters.url);\n\n\u0009\u0009\u0009/* On envoit les fragments aussitôt qu'ils sont disponibles. */\n\u0009\u0009\u0009stream.on('data', function (chunk) {\n\u0009\u0009\u0009\u0009response.write(chunk);\n\u0009\u0009\u0009});\n\n\u0009\u0009\u0009/* On confirme au client que la réponse est terminée. */\n\u0009\u0009\u0009stream.on('end', function () {\n\u0009\u0009\u0009\u0009response.end();\n\u0009\u0009\u0009});\n\u0009\u0009});\n\u0009});\n};\n```\n\nNous allons ensuite créer nos paires de fichier vue / modèle dans le dossier `views` pour chaque composant de route, créer une paire de fichier d'application, et créer une page globale `views/common.htm` :\n\n```bash\n├─ controllers/\n│  └─ ...\n├─ views/\n│  ├─ app.htm\n│  ├─ app.js\n│  ├─ common.htm\n│  ├─ ...\n│  ├─ error.js\n│  ├─ ...\n│  ├─ exist.js\n│  ├─ ...\n│  ├─ index.js\n│  ├─ ...\n├─ ...\n```\n\nOn explique dans le fichier `common.htm` a quel endroit notre application se trouve avec `\u003c!--vue-ssr-outlet--\u003e` pour permettre l'injection côté serveur, et l'hydratation côté client.\n\n*views/common.htm*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"fr\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\"\u003e\n\u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003c!--vue-ssr-outlet--\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\nEnsuite nous créons l'application principale qui va être injectée sur toutes les pages à la place de `\u003c!--vue-ssr-outlet--\u003e` :\n\n*views/app.htm*\n\n```htm\n\u003cdiv class=\"app\"\u003e\n\u0009\u003ctransition name=\"fade\"\u003e\n\u0009\u0009\u003crouter-view\u003e\u003c/router-view\u003e\n\u0009\u003c/transition\u003e\n\u003c/div\u003e\n```\n\n*views/app.js*\n\n```js\n/* Nous retournons un objet avec `return` lorsque la fonction\n   `function (template, router, webconfig)` sera exécutée.\n   Cette fonction est exécuté depuis `controllers/common.js` vu plus\n   haut lors de cet appel `new Vue(require(appModel)(template, router, webconfig))`,\n   les paramètres envoyé dans la `new Vue` étant ceux disponible dans le code\n   ci-dessous. C'est le même principe pour chaque futur composant. */\nmodule.exports = function (template, router, webconfig) {\n\u0009return {\n\u0009\u0009name: 'app',\n\u0009\u0009/* `template` contient le contenu de `views/app.htm` */\n\u0009\u0009template: template,\n\u0009\u0009router: router,\n\u0009\u0009data: {\n\u0009\u0009\u0009webconfig: webconfig\n\u0009\u0009}\n\u0009};\n};\n```\n\nPuis on affecte a chaque vue déjà existante un modèle :\n\n*views/index.js*\n\n```js\n/* Cette fonction `function (template)` est exécutée quand\n   `Vue.component(locals.routeParameters.view, require(model)(template))`\n   est exécuté depuis `controllers/common.js` vu plus\n   haut si la route en question est `/`. */\nmodule.exports = function (template) {\n\u0009return {\n\u0009\u0009name: 'index',\n\u0009\u0009/* `template` contient le contenu de `views/index.htm` */\n\u0009\u0009template: template,\n\u0009\u0009data: function () {\n\u0009\u0009\u0009return {};\n\u0009\u0009}\n\u0009};\n};\n```\n\n*views/exist.js*\n\n```js\nmodule.exports = function (template) {\n\u0009return {\n\u0009\u0009name: 'exist',\n\u0009\u0009/* `template` contient le contenu de `views/exist.htm` */\n\u0009\u0009template: template,\n\u0009\u0009data: function () {\n\u0009\u0009\u0009return {};\n\u0009\u0009}\n\u0009};\n};\n```\n\n*views/error.js*\n\n```js\nmodule.exports = function (template) {\n\u0009return {\n\u0009\u0009name: 'error',\n\u0009\u0009/* `template` contient le contenu de `views/error.htm` */\n\u0009\u0009template: template,\n\u0009\u0009data: function () {\n\u0009\u0009\u0009return {};\n\u0009\u0009}\n\u0009};\n};\n```\n\n#### Test serveur\n\nTestons ce code côté serveur avec la commande `node-atlas --browse` (car l'option `--webconfig` n'est pas utile si le webconfig s'appel `webconfig.json`). Nous remarquerons alors que notre application se comporte comme dans le cas de notre premier exemple avec `webconfig-www.json`. Vous pouvez effectuer les mêmes actions, vous obtiendrez les mêmes résultat sauf que nous n'utilisons plus le moteur initial [EJS](http://ejs.co/) fourni par [NodeAtlas] mais nous utilisons celui de [Vue Server Renderer] qui utilise [Vue]. Voyons la différence avec `http://localhost:7777/`.\n\n- addresse : `http://localhost:7777/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"/foo/\"\u003e/foo/ existe\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"/foo\"\u003e/foo n\u0026#x27;existe pas\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nVous remarquerez la balise `\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e` qui indiquera à [Vue] côté client où commencer son hydratation pour prendre la relève. Nous allons voir cela dès maintenant dans la suite car actuellement, [Vue] n'est pas utilisé côté client.\n\n\n\n### Partie cliente\n\nMaintenant que notre site est généré avec [Vue] côté serveur, nous allons faire des modifications pour que la partie cliente prenne ensuite la main. Quand une page est affichée depuis le serveur, et que la partie cliente prend la main, les futures pages visitées seront générées côté client. Votre serveur se contentera tout au plus d'envoyer seulement les petits fragments manquants nécessaires pour le rendu de la page.\n\n\u003e À partir d'ici l'exemple utilisant `webconfig-www.json` risque de ne plus fonctionner car nous allons modifier les fichiers `index.htm`, `exist.htm` et `error.htm` qui sont également utilisés par celui-ci. Si vous le souhaitez, vous pouvez les renommer en `index-www.htm`, `exist-www.htm` et `error-www.htm` et changer les noms dans le `webconfig-www.json` :\n```json\n{\n\u0009\"httpPort\": 7778,\n\u0009\"view\": \"layout.htm\",\n\u0009\"routes\": {\n\u0009\u0009\"/\": \"index-www.htm\",\n\u0009\u0009\"/foo/\": \"exist-www.htm\",\n\u0009\u0009\"/*\": {\n\u0009\u0009\u0009\"view\": \"error-www.htm\",\n\u0009\u0009\u0009\"statusCode\": 404\n\u0009\u0009}\n\u0009}\n}\n```\nafin que l'exemple marche toujours.\n\nNous allons donc changer les liens standards par des liens d'utilisation du routeur de [Vue] :\n\n*views/index.htm*\n\n```js\n\u003cul\u003e\n\u0009\u003cli\u003e\u003crouter-link to=\"/foo/\"\u003e/foo/ existe\u003c/router-link\u003e\u003c/li\u003e\n\u0009\u003cli\u003e\u003crouter-link to=\"/foo\"\u003e/foo n'existe pas\u003c/router-link\u003e\u003c/li\u003e\n\u003c/ul\u003e\n```\n\n*views/exist.htm*\n\n```js\n\u003cdiv\u003e\n\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n\u0009\u003cp\u003e\u003cstrong\u003e200 : J'existe !\u003c/strong\u003e\u003c/p\u003e\n\u003c/div\u003e\n```\n\n*views/error.htm*\n\n```js\n\u003cdiv\u003e\n\u0009\u003cp\u003e\u003crouter-link to=\"/\"\u003eRetour\u003c/router-link\u003e\u003c/p\u003e\n\u0009\u003cp\u003e404 : Je n'existe pas...\u003c/p\u003e\n\u003c/div\u003e\n```\n\nÀ ce niveau là, si vous naviguez par exemple en cliquant sur `/foo/ existe`, vous constaterez que, même si vous avez remplacez les balises `\u003ca\u003e` par des balises `\u003crouter-link\u003e`, votre source renvoyée en réponse par le serveur est valide W3C et une crème pour la SEO :\n\n- addresse : `http://localhost:7777/foo/`\n- status : 200\n- réponse :\n  ```htm\n  \u003c!DOCTYPE html\u003e\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"/\" class=\"router-link-active\"\u003eRetour\u003c/a\u003e\u003c/p\u003e \u003cp\u003e\u003cstrong\u003e200 : J\u0026#x27;existe !\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nAjoutons à présent à notre modèle de page global les animations CSS nécessaires au changement de page ainsi que le code client permettant à [Vue] d'hydrater la page courante en allant chercher les bons fichiers.\n\n*views/common.htm*\n\n```htm\n\u003chtml lang=\"fr\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n\u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n\u0009\u0009\u003cstyle\u003e\n\u0009\u0009\u0009.fade-enter, .fade-leave-to { opacity: 0; }\n\u0009\u0009\u0009.fade-leave-active, .fade-enter-active { transition: opacity 1s; }\n\u0009\u0009\u0009.fade-enter-to, .fade-leave { opacity: 1; }\n\u0009\u0009\u003c/style\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003c!--vue-ssr-outlet--\u003e\n\u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"\u003c?- urlBasePath ?\u003e/javascript/common.js\"\u003e\u003c/script\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\nNous allons aménager notre code servi par le client en permettant à nos fichiers dans `views` d'être accessibles côté client grâce à l'ajout de fichiers statiques dans `webconfig.json` :\n\n*webconfig.json*\n\n```json\n{\n\u0009\"httpPort\": 7777,\n\u0009\"view\": \"common.htm\",\n\u0009\"controller\": \"common.js\",\n\u0009\"routes\": \"routes.json\",\n\u0009\"statics\": {\n\u0009\u0009\"/views-models\": \"views/\",\n\u0009\u0009\"/routes.json\": \"routes.json\"\n\u0009}\n}\n```\n\n\u003e Nous avons donc décidez, en plus des routes existantes dans `routes.json`, de fournir côté client le contenu du dossier `views` derririère les URL `http//localhost:7777/views-models/`. Ainsi demander, par exemple, `http//localhost:7777/views-models/index.htm` nous retournera le contenu, côté client, du fichier `views/index.htm`. Nous avons également mis à disposition derrière l'adresse `http//localhost:7777/routes.json` le contenu du fichier `routes.json`, ce qui va nous permettre d'alimenter les routes de [Vue Router] avec les mêmes informations que notre serveur [NodeAtlas].\n\nNous allons maintenant rendre disponible un fichier `http//localhost:7777/javascript/common.js` côté client en ajoutant un fichier statique dans le dossier `assets` de [NodeAtlas] qui est prévu pour cela.\n\n```bash\n├─ assets/\n│  └─ javascript/\n│     └─ common.js\n├─ controllers/\n│  └─ ...\n├─ views/\n│  ├─ ...\n├─ ...\n```\n\nNous aurons alors, côté client, accès au contenu de `assets/javascript/common.js` qui contient tout le code nécessaire pour hydrater le site :\n\n*assets/javascript/common.js*\n\n```js\n/* Nous créons à la main une fonction pour aller chercher en AJAX\n   des fichiers à des adresses données. Cette fonction utilise les promesses,\n   aussi vous ne pourrez tester ce code que dans les navigateurs les supportants.\n   http://caniuse.com/#feat=promises */\nwindow.module = {};\nfunction xhr(url) {\n  return new Promise(function (resolve, reject) {\n    var request = new XMLHttpRequest(),\n        type = url.match(/\\.(js(on)?|html?)$/g, '$0')[0];\n\n    request.addEventListener(\"load\", function () {\n      if (request.status \u003c 200 \u0026\u0026 request.status \u003e= 400) {\n        reject(new Error(\"We reached our target server, but it returned an error.\"));\n      }\n\n      if (type === '.js') {\n        resolve(eval(request.responseText));\n      } else if (type === '.json') {\n        resolve(JSON.parse(request.responseText));\n      } else {\n        resolve(request.responseText);\n      }\n\n    });\n\n    request.addEventListener(\"error\", function () {\n      reject(new Error(\"There was a connection error of some sort.\"));\n    });\n\n    request.open(\"GET\", location.origin + '/' + url, true);\n    request.send();\n  });\n}\n\n/* Le code qui nous intéresse commence ici.\n   Nous commençons par charger la vue et le modèle\n   de l'application en elle même, ainsi que les routes\n   qu'il va falloir donner au routeur client. */\nPromise.all([\n\u0009xhr(\"views-models/app.js\"),\n\u0009xhr(\"views-models/app.htm\"),\n\u0009xhr(\"routes.json\")\n]).then(function (files) {\n\u0009/* `files` contient le contenu de ces 3 fichiers. */\n\u0009var vm,\n\u0009\u0009routes = [],\n\u0009\u0009router,\n\u0009\u0009model = files[0],\n\u0009\u0009template = files[1],\n\u0009\u0009webconfig = {\n\u0009\u0009\u0009routes: files[2]\n\u0009\u0009},\n\u0009\u0009/* Nous créons un objet basé sur toutes les routes\n\u0009\u0009   que nous allons parcourir pour alimeter le routeur. */\n\u0009\u0009keys = Object.keys(webconfig.routes);\n\n\u0009/* Pour chaque route de `routes.json`... */\n\u0009keys.forEach(function (key) {\n\u0009\u0009var route = {},\n\u0009\u0009\u0009name = webconfig.routes[key].view,\n\u0009\u0009\u0009model,\n\u0009\u0009\u0009template;\n\n\u0009\u0009/* ...nous associons un nom,... */\n\u0009\u0009route.name = name;\n\u0009\u0009/* ...nous associons un chemin de route et... */\n\u0009\u0009route.path = webconfig.routes[key].url;\n\n\u0009\u0009/* ...nous associons un composant. */\n\u0009\u0009route.component = function (resolve) {\n\u0009\u0009\u0009/* Nous chargeons alors la vue et le modèle\n\u0009\u0009\u0009   du composant de la route en question. */\n\u0009\u0009\u0009Promise.all([\n\u0009\u0009\u0009\u0009xhr(\"views-models/\" + name + \".js\", \"js\"),\n\u0009\u0009\u0009\u0009xhr(\"views-models/\" + name + \".htm\", \"htm\"),\n\u0009\u0009\u0009]).then(function (files) {\n\u0009\u0009\u0009\u0009model = files[0];\n\u0009\u0009\u0009\u0009template = files[1];\n\n\u0009\u0009\u0009\u0009/* Puis ceux-ci seront récupérés UNIQUEMENT\n\u0009\u0009\u0009\u0009   si la page est demandée. Cela permet de\n\u0009\u0009\u0009\u0009   ne demandé que le composant courant à la\n\u0009\u0009\u0009\u0009   page pour l'hydratation. */\n\u0009\u0009\u0009\u0009resolve(model(template));\n\u0009\u0009\u0009});\n\u0009\u0009};\n\n\u0009\u0009/* Nous créons notre objet de\n\u0009\u0009   routes pour Vue Router. */\n\u0009\u0009routes.push(route);\n\u0009});\n\n\u0009/* Nous créons à présent notre routeur. */\n\u0009router = new VueRouter({\n\u0009\u0009mode: 'history',\n\u0009\u0009fallback: false,\n\u0009\u0009base: '/',\n\u0009\u0009routes: routes\n\u0009});\n\n\u0009/* Puis nous attribuons le routeur `router`, le `webconfig`\n\u0009   et la vue `template` à notre modèle `model`. */\n\u0009vm = new Vue(model(template, router, webconfig));\n\n\u0009/* Quand le routeur a tout ce qui lui faut pour\n\u0009   la page courante... */\n\u0009router.onReady(function () {\n\u0009\u0009/* Vue monte l'application sur le DOM en dessous\n\u0009\u0009   de la balise avec la classe `app`. Comme cette\n\u0009\u0009   balise contient l'attribut `data-server-rendered=\"true\"`\n\u0009\u0009   Vue ne recompile pas tout le contenu mais hydrate celui déjà\n\u0009\u0009   en place. Dans notre cas, cela ce résume à ne rien faire\n\u0009\u0009   puisque le rendu demandé côté client est identique à celui côté\n\u0009\u0009   serveur (pas de variables qui diffèrent). */\n\u0009\u0009vm.$mount('.app');\n\u0009});\n});\n```\n\n#### Test client\n\nPuisque vous avez modifié le `webconfig.json`, vous devez quitter [NodeAtlas] en utilisant « ctrl + c » et relancer le site avec la commande `node-atlas --browse`.\n\nVous accéderez à :\n\n- addresse : `http://localhost:7777/`\n- status : 200\n- réponse :\n  ```htm\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u0009\u003cstyle\u003e\n  \u0009\u0009\u0009.fade-enter, .fade-leave-to { opacity: 0; }\n  \u0009\u0009\u0009.fade-leave-active, .fade-enter-active { transition: opacity 1s; }\n  \u0009\u0009\u0009.fade-enter-to, .fade-leave { opacity: 1; }\n  \u0009\u0009\u003c/style\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"/foo/\"\u003e/foo/ existe\u003c/a\u003e\u003c/li\u003e \u003cli\u003e\u003ca href=\"/foo\"\u003e/foo n\u0026#x27;existe pas\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"http://localhost:7777/javascript/common.js\"\u003e\u003c/script\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nPuis [Vue] prendra la main en hydratant le code côté client ! Aussi en cliquant sur `/foo/ existe` vous n'enclencherez pas de nouvelles réponses HTTP, vous récupérerez seulement les fragments `http://localhost:7777/views-models/exist.htm` et `http://localhost:7777/views-models/exist.js` nécessaires à l'affichage de la nouvelle page !\n\n- addresse : `http://localhost:7777/foo/`\n- status : — (pas de rechargement de page)\n- réponse : — (pas de rechargement de page)\n\nPar contre, si vous actualisez la page avec le bouton actualiser, alors vous obtiendrez votre rendu courant depuis le serveur :\n\n- addresse : `http://localhost:7777/foo/`\n- status : 200\n- réponse :\n  ```htm\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u0009\u003cstyle\u003e\n  \u0009\u0009\u0009.fade-enter, .fade-leave-to { opacity: 0; }\n  \u0009\u0009\u0009.fade-leave-active, .fade-enter-active { transition: opacity 1s; }\n  \u0009\u0009\u0009.fade-enter-to, .fade-leave { opacity: 1; }\n  \u0009\u0009\u003c/style\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"/\" class=\"router-link-active\"\u003eRetour\u003c/a\u003e\u003c/p\u003e \u003cp\u003e\u003cstrong\u003e200 : J\u0026#x27;existe !\u003c/strong\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"http://localhost:7777/javascript/common.js\"\u003e\u003c/script\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nMais en cliquant sur `Retour`, vous naviguerez de nouveau depuis l'hydratation cliente en récupérant les fragments `http://localhost:7777/views-models/index.htm` et `http://localhost:7777/views-models/index.js` nécessaires à votre navigation :\n\n- addresse : `http://localhost:7777/`\n- status : — (pas de rechargement de page)\n- réponse : — (pas de rechargement de page)\n\n\n\n\n\n## VueRouter + SSR = Problème de contenu dupliqué\n\nBien, nous voici arrivé au réel problème de cet article.\n\n### Problème\n\nAvec le site que nous avons monté de toute pièce, voici ce qu'il va se passer si nous affichons la page `https://localhost:7777/foo` :\n\n- addresse : `http://localhost:7777/foo`\n- status : 404\n- réponse :\n  ```htm\n  \u003chtml lang=\"fr\"\u003e\n  \u0009\u003chead\u003e\n  \u0009\u0009\u003cmeta charset=\"UTF-8\"\u003e\n  \u0009\u0009\u003ctitle\u003eVue Router + Vue Server Renderer = Problème\u003c/title\u003e\n  \u0009\u0009\u003cstyle\u003e\n  \u0009\u0009\u0009.fade-enter, .fade-leave-to { opacity: 0; }\n  \u0009\u0009\u0009.fade-leave-active, .fade-enter-active { transition: opacity 1s; }\n  \u0009\u0009\u0009.fade-enter-to, .fade-leave { opacity: 1; }\n  \u0009\u0009\u003c/style\u003e\n  \u0009\u003c/head\u003e\n  \u0009\u003cbody\u003e\n  \u0009\u0009\u003cdiv data-server-rendered=\"true\" class=\"app\"\u003e\u003cdiv\u003e\u003cp\u003e\u003ca href=\"/\" class=\"router-link-active\"\u003eRetour\u003c/a\u003e\u003c/p\u003e \u003cp\u003e404 : Je n\u0026#x27;existe pas...\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.4.1/vue.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/vue-router/2.7.0/vue-router.js\"\u003e\u003c/script\u003e\n  \u0009\u0009\u003cscript src=\"http://localhost:7777/javascript/common.js\"\u003e\u003c/script\u003e\n  \u0009\u003c/body\u003e\n  \u003c/html\u003e\n  ```\n\nNotre serveur renvoi une page 404 (avec un code d'erreur 404) généré avec [Vue] côté serveur en suivant les ordres de routage stricte de [NodeAtlas]. La page ainsi affichée avant que le [JavaScript] client ne s'exécute, et que [Vue] hydrate la page est donc générée depuis `views/error.htm` et `views/error.js`.\n\nCependant, une fois la main reprise côté client par le [Vue Router], cette fois se sont les fragments `http//localhost:7777/views-models/exist.htm` et `http//localhost:7777/views-models/exist.js` qui sont appelés ! La page ne s'hydrate pas, mais voit son contenu changer ! Normalement, se sont les fichiers `http//localhost:7777/views-models/error.htm` et `http//localhost:7777/views-models/error.js` qui auraient dû être chargés, et la page aurait alors simplement été hydratée au lieu que le DOM complet de la partie applicative ne soit changé.\n\n**Ce problème est dû au fait que [Vue Router] ne possède pas de routage strict car initialement, il est plus pratique qu'une application rende la même page derrière `http//localhost:7777/views-models/foo/` et ``http//localhost:7777/foo` puisqu'il n'y a pas à se soucier du référencement.**\n\nDans notre cas c'est critique, et même l'options strict de [Vue Router] n'y change rien (actuellement).\n\n\n\n### Solution\n\nEn attendant que [Vue Router] puisse [prendre en compte cette possibilité](https://github.com/vuejs/vue-router/issues/1443) sans [effets secondaires](https://github.com/vuejs/vue-router/pull/1557), un moyen de contournement simple est de manuellement rediriger l'utilisateur sur la page avec `/` s'il atterrit sur la page sans : c.-à-d. par exemple aller de `/foo` à `/foo/`. Ainsi, le fichier `assets/javascript/common.js` pourrait simplement être modifié de la sorte :\n\n*assets/javascript/common.js*\n\n```js\nif (window.location.pathname.slice(-1) !== '/') {\n\u0009window.location = window.location.pathname + '/';\n}\n\nwindow.module = {};\nfunction xhr(url) {\n\u0009return new Promise(function (resolve, reject) {\n/* ... reste du fichier ... */\n```\n\nDe cette manière, [Vue] n'est même pas chargé côté client, et le navigateur redirige l'utilisateur sur la bonne page. De cette page, tout le processus reprend : Le serveur renvoi une page en 200, et [Vue] hydrate la page avec le bon composant.\n\nBien entendu, il reste à votre charge de ne pas fournir de lien vers `/foo` dans vos `\u003crouter-link\u003e` car ça ne gènera pas votre application d'y emmener l'utilisateur.\n\n\n\n\n\n## Et maintenant ?\n\nJ'espère que cet article vous aura permis de comprendre et/ou d'expérimenter le SSR ! Vous avez maintenant une meilleure compréhension de la différence entre `/foo/` et `/foo` et pouvez solutionner le problème de routage non strict de [Vue Router].\n\n\u003e Vous pouvez tester ce code chez vous [en téléchargeant cette archive](./media/scripts/upload/vue_ssr.zip) qui contient déjà la solution. Pour mettre en évidence le problème, commentez les 3 premières lignes du fichier `assets/javascript/common.js`. Pour lancer l'application, exécutez d'abord `npm install` dans le dossier, puis installez [NodeAtlas] `npm install -g node-atlas` et enfin faites tourner le projet avec la commande `node-atlas --browse`. Les deux autres exemples sont également fournis avec les commandes respectives `node-atlas --browse --webconfig webconfig-www.json` et `node-atlas --browse --webconfig webconfig-spa.json`.\n\nVous pouvez également remplacer [NodeAtlas] par le framework serveur de votre choix comme [Express] ou même du [Node.js] natif si vous trouvez que l'abstraction offerte par [NodeAtlas] est trop simple. Pour ma part, je vous conseillerais de l'adopter car il répondra simplement à la quasis totalité de vos besoins de création de site web et application web. [Le site officiel se trouve ici](https//node-atlas.js.org/), mais n'hésitez pas à venir sur le [chat](https://gitter.im/NodeAtlas/Aide) pour une information rapide ou même de l'aide sur cet article ci par exemple.\n\n[JavaScript]: https://www.javascript.com/\n[NodeAtlas]: https://node-atlas.js.org/\n[Vue]: https://fr.vuejs.org/\n[Vue Router]: https://router.vuejs.org/fr/\n[Node.js]: https://nodejs.org/en/\n[Express]: http://expressjs.com/\n[Vue Server Renderer]: https://ssr.vuejs.org/fr/","dates":{"published":{"$date":"2017-07-21T10:18:00.000Z"},"updated":[]},"description":"Comment utiliser Vue Router et Vue Server Renderer pour du routage strict dont les moteurs de recherche sont si friand pour une SEO à toute épreuve ? La réponse à la fin !","image":"https://blog.lesieur.name/media/images/upload/vue-router.jpg","others":{"markdown":true,"published":true},"script":"","stylesheet":"","title":"Comment faire du routage strict avec Vue Router et Vue Server Renderer ?","urn":"routage-strict-avec-vue-router-et-ssr"}
{"_id":{"$oid":"59ad5b1f0f44c42f439ea549"},"title":"ES3, Chap 9. — La stratégie d'évaluation en JavaScript","content":"Ce billet fait partie de la collection _ES3 dans le détail_ et en constitue le Chapitre 9.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/evaluation-strategy.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/evaluation-strategy-mini.png\" alt=\"La magie du processus produit t-elle des copies d'objets ou de multiples références au même objet initial ?\" width=\"628\" height=\"342\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eLa magie du processus produit t-elle des copies d'objets ou de multiples références au même objet initial ?\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans cet article, nous allons étudier la stratégie de passage de paramètres (aussi appelé la stratégie de passage des arguments) via des fonctions JavaScript.\n\n\u003e \u003cdiv\u003e\u003ca href=\"https://blog.lesieur.name/les-constructeurs-et-les-prototypes/\"\u003e\u0026lt; Chapitre 8\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nOn appel habituellement cette partie des sciences informatiques _la stratégie d'évaluation_, c.-à-d. un ensemble de règles et diverses _expressions_ de calcul pour un langage de programmation. La stratégie de passage de paramètres est un cas spécial.\n\nBeaucoup de développeurs sont certain que les objets en JavaScript (comme c'est le cas dans d'autres langages usuels) sont passés dans les fonctions _par référence_ alors que les valeurs des types primitifs sont passées _par valeur_. De plus, nous pouvons lire ce « fait » dans divers articles, discussions sur les forums et même dans des livres sur le JavaScript. Mais, à quel point ce terme est t-il exact et à quel point cette description est exact ? Nous allons voir cela dans cet article.\n\n## Théorie générale\n\nRevenons rapidement sur la théorie générale. Il y a deux sortes de stratégie d'évaluation de passage de paramètres : _stricte_, qui signifie que les arguments sont calculés avant d'être utilisés et _non stricte_, qui signifie dans ce cas, que les arguments sont calculés au moment où ils sont utilisés.\n\nNous considérons ici que des stratégies basiques de passage de paramètres à une fonction sont importante à comprendre du point de vue de JavaScript.\n\nEt pour commencer cette explication, il est nécessaire de préciser qu'en JavaScript, tout autant que dans plusieurs autres langages (par exemple, C, Java, Python, Ruby, etc.) c'est la stratégie de passage de paramètres _stricte_ qui est utilisée.\n\nAussi l'ordre dans lequel les arguments sont évalués est important. En JavaScript c'est de gauche à droite (contrairement à d'autres langages où c'est possiblement de droite à gauche).\n\nLa stratégie de passage stricte est également sous-divisée en plusieurs stratégies, la plus importante d'entre elle étant à considérer en détail.\n\nEt parce que toutes les stratégies discutées ci-dessous n'existent pas en JavaScript, nous allons utiliser du _pseudo code_ similaire à la syntaxe Pascal.\n\n\n\n### Appel par valeur\n\nCe type de stratégie est bien connu de beaucoup de développeurs. La valeur de l'argument ici est une _copie de la valeur_ de l'objet passé par l'appelant en paramètre. Les changements fait aux arguments à l'intérieur d'une fonction _n’influence pas_ l'objet passé depuis l'extérieur. Habituellement, il y a une nouvelle allocation de mémoire et la valeur de cet objet externe est copié puis une valeur identique depuis ce nouvel espace mémoire est utilisé dans la fonction.\n\n*Pseudo-code*\n\n```js\nalfred = 10\n\nprocedure theTransportedMan(gerald):\n  gerald = 20;\nend\n\ntheTransportedMan(alfred)\n\n// les changements dans `theTransportedMan` n'ont pas d'effets\n// depuis l'extérieur\nprint(alfred) // `10`\n```\n\nCette stratégie pause de gros problèmes de performance dans le cas où le paramètre passé à la fonction n'est pas une valeur primitive, mais une structure complexe ou un objet. C'est ce qui se passe, par exemple, en C/C++ quand une structure est passée par valeur à une fonction. Elle est _complètement copiée_.\n\nDécrivons l'exemple général que nous utiliserons pour la description des stratégies d'évaluation suivantes. Cette procédure abstraite accepte deux arguments : la valeur d'un objet ainsi qu'un booléen, qu'il soit nécessaire de modifier complètement la valeur de l'objet (ré-affectation de valeur), ou juste qu'il soit nécessaire de changer seulement les propriétés de l'objet (muter l'objet).\n\n*Pseudo-code*\n\n```js\nprocedure theTransportedMan(gerald, isFullChange):\n\n  if isFullChange:\n    gerald = { z: 1, q: 2 }\n    exit\n  end\n\n  gerald.x = 100\n  gerald.y = 200\n\nend\n```\n\n*Pseudo-code*\n\n```\n// définition de `theTransportedMan` ci-dessus\n\nalfred = {\n  x: 10,\n  y: 20\n}\n\ntheTransportedMan(alfred)\n\n// avec un appel de stratégie par valeur,\n// l'objet extérieur n'a pas changé.\nprint(alfred) // `{ x: 10, y: 20 }`\n\n// c'est la même chose pour le changement complet.\n// (affectation d'une nouvelle valeur)\ntheTransportedMan(alfred, true)\n\n// aussi, aucun changements n'ont été fait\nprint(alfred) // `{ x: 10, y: 20 }`, et non pas `{ z: 1, q: 2 }`\n```\n\n\n\n### Appel par référence\n\nC'est au tour de la stratégie d'évaluation _par référence_ (qui est également bien connue) qui ne reçoit _pas une copie de la valeur_, mais une _référence à l'objet_, c.-à-d. l'adresse mémoire directement en relation avec l'objet depuis l'extérieur. Tous les changements des arguments à l'intérieur de la fonction (affectation ou mutation) _affecte l'objet à l'extérieur_ car l'adresse exacte de cet objet est lié à un paramètre formel, c.-à-d. un argument qui fait office d'_alias_ pour l'objet depuis l'extérieur.\n\n*Pseudo-code*\n\n```js\n// même définition de `theTransportedMan` que précédemment\n\n// avec le même objet\nalfred = {\n  x: 10,\n  y: 20\n}\n\n// les résultats de la procédure `theTransportedMan`\n// avec un appel par référence\n// sont les suivants :\n\ntheTransportedMan(alfred)\n\n// les valeurs de propriétés de l'objet ont changées\nprint(alfred) // `{ x: 100, y: 200 }`\n\n// l'assignation d'une nouvelle valeur affecte\n// également l'objet\ntheTransportedMan(alfred, true)\n\n// `alfred` fait maintenant référence au nouvel objet\nprint(alfred) // `{ z: 1, q: 2 }`\n```\n\nCette stratégie permet de passer plus efficacement des objets complexes, par ex. des grosses structures avec une quantité considérable de propriétés.\n\n\n\n### Appel par partage\n\nAlors que les deux premières stratégies d'évaluation sont connues de la majorité des développeurs, cette stratégie (et pour être plus exact, ce _terme_) n'est pas très répandue. Mais comme nous allons le voir rapidement, elle joue un rôle essentielle dans le passage des paramètres en JavaScript.\n\nDes noms alternatifs pour cette stratégie sont « appel par objet » ou « appel par partage d'objet ».\n\nLa stratégie « par partage » a été nommée en premier par [Barbara Liskov](http://en.wikipedia.org/wiki/Barbara_Liskov) pour le langage de programmation [CLU](http://en.wikipedia.org/wiki/CLU_programming_language) en 1974.\n\nLe point principal de cette stratégie est que la fonction reçoit une _copie de la référence_ de l'objet. Cette copie de référence est associée à un paramètre formel et est sa valeur.\n\nMême si le concept de _référence_ dans ce cas semble apparaître, cette stratégie _ne devrait pas être traitée comme un appel par référence_ (et donc dans ce cas, la majorité font l'erreur), car la valeur de l'argument _n'est pas directement l'alias_, mais une _copie de l'adresse mémoire_.\n\nLa différence principale vient du fait que _l'affectation d'une nouvelle valeur à l'argument à l'intérieur de la fonction n'affecte pas l'objet à l'extérieur_ (ce qui aurait été le cas d'un _appel par référence_). Cependant, parce que c'est un paramètre formel, qu'il a une copie de l'adresse mémoire ; il a accès au même objet qu'à l'extérieur (c.-à-d. que l'objet à l'extérieur _n'est pas copié_ comme ça aurait été le cas d'un _appel par valeur_) et les changements des propriétés de l'argument local (les mutations) affecte l'objet à l'extérieur.\n\n*Pseudo-code*\n\n```js\n// même définition de `theTransportedMan` que précédemment\n\n// encore avec le même objet\nalfred = {\n  x: 10,\n  y: 20\n}\n\n// l'appel par partage\n// affecte l'objet\n// de la manière suivante\n\ntheTransportedMan(alfred)\n\n// les valeurs de propriétés d'objet ont changées\nprint(alfred) // `{ x: 100, y: 200 }`\n\n// mais avec un changement d'objet\n// il n'y a pas de changement\ntheTransportedMan(alfred, true)\n\n// c'est donc la même chose que l'appel précédent.\nprint(alfred) // `{ x: 100, y: 200 }`\n```\n\nCette stratégie prend en compte le fait que le langage opère en majorité avec des _objets_, au lieu de _valeurs primitives_.\n\n#### Par partage : un cas spécial de par valeur\n\nLa stratégie _par partage_ est utilisé dans divers langages : Java, JavaScript, Python, Ruby, Visual Basic, etc.\n\nCependant, c'est dans la communauté Python que le terme _par partage_ est utilisé. Car dans les autres langages, il y a des termes alternatifs utilisés qui peuvent préter à confusion car il sont le contraire de stratégies avec le même nom dans d'autres langages.\n\nDans la plupart des cas, par exemple, en Java, JavaScript ou Visual Basic, cette stratégie est aussi nommée par _valeur_, signifiant, _valeur spécifique_ / _copie de référence_.\n\nD'un côté, c'est vrai, affecter à un argument dans une fonction va seulement lier son nom avec une _nouvelle valeur_ (nouvelle adresse mémoire) et ne va pas influencer l'objet extérieur.\n\nD'un autre côté, ce terme n'est pas totalement correct si on examine la question en profondeur.\n\nLa théorie générale a un _cas spéciale d'appel par valeur_ avec comme valeur spécifique, la copie par adresse. Par conséquent, ces technologies ne rompent pas les règles terminologiques.\n\nEn Ruby, cette stratégie est nommée _par référence_. Encore, d'un côté on ne passe pas réellement la copie d'une grosse structure (c.-à-d., pas _par valeur_), mais d'un autre côté, nous ne jouons pas avec la référence originale de l'objet, et on ne peut donc pas le changer. Encore une fois, ce mélange de terme prête à confusion.\n\nLa théorie générale ne décrit aucun _cas spéciale d'appel par référence_ comme c'est le cas pour _un appel par valeur_.\n\nIl est nécessaire de bien comprendre que toutes ces appellations mentionnés dans divers langages (Java, JavaScript, Python, Ruby, etc.) ont un nom revisité. Dans la théorie générale ils font référence en réalité à _l'appel par partage_.\n\n#### Par partage et pointeurs\n\nPar rapport au C / C++, cette stratégie de passage est idéologiquement similaire au passage de valeur _par pointeur_, mais avec _une différence importante_ ; il est possible de _déréférencer le pointeur et ne pas changer complètement l'objet_. Mais en général, l'affectation d'une valeur (adresse) au pointeur la lie avec le nouveau bloc de mémoire (c.-à-d. que le bloc de mémoire auquel le pointeur était référencé avant reste intact) ; et les changements de propriétés des objets référencés via le pointeur influent sur l'objet externe.\n\nPar conséquent, en faisant une analogie avec les pointeurs, nous pouvons voir en passant _par valeur de l'adresse_, ce qu'est exactement un pointeur. Dans ce cas, _par partage_ est une sorte de « sucre syntaxique » qui a l'affectation se comporte comme un pointeur (mais qu'il est impossible de déférencer), et dans le cas de changement de propriété, comme une _référence_ (qui ne requière pas d'opération de déréférencement). Parfois, cela peut être nommé un « _pointeur sécurisé_ ».\n\nCependant, C / C++ ont également un « sucre » pour référencer des propriétés d'objets sans déréférencer les pointeurs :\n\n*Code C / C++*\n\n```\nobj-\u003ex\n// au lieu de\n(*obj).x\n```\n\nLe comportement le plus proche du passage _par partage_ en C++ peut être associé aux implémentations de « _pointeurs intelligent_ », par exemple avec `boost::shared_ptr`qui _surcharge l'opérateur d'affectation_ et _copie le constructeur_ à ces fins et ainsi utilise un _comptage de référence_ d'objets, supprimant les objets par GC. Ce type de donnée à même un nom similaire *shared*_ptr (« pointeur_*partagé* »).\n\n\n\n\n\n## Implémentation JavaScript\n\nMaintenant nous connaissons la stratégie d'évaluation pour le passage de paramètres qui est utilisée en JavaScript. L'_appel par partage_ : la mutation des propriétés de l'argument influence l'objet externe mais l'affectation d'une nouvelle valeur à l'argument n'influence pas l'objet externe.\n\nUn terme lourd utilisable pour la stratégie de passage utilisée pourrait donc être « appel par valeur où la valeur est une copie de référence ».\n\nL'inventeur du JavaScript, Brendan Eich a également [metionné](http://groups.google.com/group/netscape.public.mozilla.jseng/msg/7f95f5eef93c1734) que c'est une copie de référence (copie par adresse) qui est passée.\n\nPlus précisément, ce comportement peut être compris et considéré comme une _simple affectation_ où il y a deux _objets différents_, mais avec _une valeur identique_ (la copie d'adresse).\n\n*Code JavaScript*\n\n```js\nvar robertAngier = { x: 10, y: 20 };\nvar theRealTransportedMan = robertAngier;\n\nalert(theRealTransportedMan === robertAngier); // `true`\n\ntheRealTransportedMan.x = 100;\ntheRealTransportedMan.y = 200;\n\nalert([robertAngier.x, robertAngier.y]); // `[100, 200]`\n```\n\nC.-à-d. que deux identifiants (liaison de nom) sont liés au même objet en mémoire, _partageant_ cet objet :\n\n*Pseudo-code*\n\n```js\nrobertAngierValue: addr(0xFF) /* ----\u003e `{ x: 100, y: 200 }` address 0xFF \u003c----  */ theRealTransportedManValue: addr(0xFF)\n```\n\nEt l'affectation lie seulement un identifiant à un _nouvel objet_ (avec la nouvelle adresse) mais n’influence pas l'objet précédemment lié_ comme cela aurait été le cas avec une référence :\n\n*Code JavaScript*\n\n```js\ntheRealTransportedMan = { z: 1, q: 2 };\n\nalert([robertAngier.x, robertAngier.y]); // `[100, 200]` Rien n'a changé\nalert([theRealTransportedMan.z, theRealTransportedMan.q]); // `[1, 2]` cependant `theRealTransportedMan` fait maintenant référence au nouvel objet.\n```\n\nC.-à-d. que maintenant _robertAngier_ et _theRealTransportedMan_ ont une valeur différente, à des adresses différentes\n\n*Pseudo-code*\n\n```js\nrobertAngierValue: addr(0xFF) /* ----\u003e `{ x: 100, y: 200 }`, address 0xFF */\ntheRealTransportedManValue: addr(0xFA) /* ----\u003e `{ z: 1, q: 2 }`, address 0xFA */\n```\n\nEncore une fois, tout est lié au fait que les valeurs de variable dans le cas d'un type objet _sont adressée_, mais _ne sont pas la structure de l'objet en elle-même_. L'affectation d'une variable dans une autre _copie_ sa valeur de référence, et donc les deux variables référence le même emplacement mémoire. La prochaine affectation d'une nouvelle valeur (la nouvelle adresse) va _délier_ le nom de l'ancienne adresse et le _lié_ à la nouvelle. C'est la principale différence avec une stratégie _par référence_.\n\nSi vous ne considérez que le _niveau d'abstraction fournit par de standard ECMA-262_, vous ne verrez que le concept de « valeur » dans tous les algorithmes. L'implémention du passage de cette « valeur » (et de ses variantes ; primitives ou objet) n'est pas mise en avant. De ce point de vu, en s’appuyant sur l'abstraction ECMASCript, il est possible de dire précisément et exactement qu'il n'y a que la « valeur » et, en s'accordant au nommage utilisé, _seulement des appels par valeurs_.\n\nPour éviter des malentendus (pourquoi les propriétés d'un objet externe peuvent être changés depuis une fonction), il est nécessaire de considérer en détail le _niveau d'implémentation_ qui est l'_appel par partage_, ou plus lourdement « par pointeur sécurisé qu'il est impossible de déréférencer et d'en changer complètement l'objet, mais dont il est possible de changer les propriétés ».\n\n### Versions de terme\n\nCe peut être « appel par valeur », en spécifiant que c'est _le cas spéciale par valeur qui signifie_ quand la valeur est _une copie d'adresse mémoire_. De ce point de vu il est possible de dire que  _tous les objets sans exception en JavaScript sont passés par valeur_, c'est ce qui est actuellement expliqué dans l'abstraction ECMAScript.\n\nCe peut aussi être « appel par partage », qui permet de mettre en évidence la différence avec l'_appel classique par valeur_ ou l'_appel par référence_. Dans ce cas il est possible de diviser les types passés : _les valeurs primitives sont passées par valeur et les objets par partage_.\n\nL'affirmation « les objets sont passés au fonction par référence » formulé ainsi _n'est pas vrai en JavaScript_ et est incorrecte.\n\n\n\n\n\n## Conclusion\n\nJ'espère que cet article vous aura aider à comprendre plus en détail l'évaluation de stratégie dans son ensemble et plus particulièrement dans le cas du JavaScript. Ceci met fin à notre petit parcours ES3. Je vous dis à bientôt pour quelques articles ES5 !\n\n\u003e \u003cdiv\u003e\u003ca href=\"https://blog.lesieur.name/les-constructeurs-et-les-prototypes/\"\u003e\u0026lt; Chapitre 8\u003c/a\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003c/div\u003e\n\n**Références**\n\nLectures additionnelles :\n\n- [Evaluation strategy](https://en.wikipedia.org/wiki/Evaluation_strategy),\n- [Call by value](https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_value),\n- [Call by reference](https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_reference),\n- [Call by sharing](https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing).\n\nCe texte est une libre adaptation française d'une partie de l'excellent billet [Тонкости ECMA-262-3. Часть 8. Стратегия передачи параметров в функцию.](http://dmitrysoshnikov.com/ecmascript/ru-chapter-8-evaluation-strategy/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","urn":"la-strategie-d-evaluation","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48b8"}],"dates":{"updated":[],"published":{"$date":"2017-09-05T11:54:00.000Z"}},"__v":0,"description":"Nous expliquons ici que les valeurs primitives sont passées par valeur et les objets par partage.","image":"https://blog.lesieur.name/media/images/upload/evaluation-strategy.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"59f2ec1f581436675d889d20"},"title":"Cas pratique : corriger rapidement une régression HTML ou CSS avec Git","content":"Les tests de régression d'interfaces sont souvent les plus difficiles à repérer car ils nécessitent l'intervention de l'œil humain et ne peuvent pas être automatisés par des tests unitaires aussi simplement que du code logique. Il faut donc refaire une passe de vérification sur les pages où la CSS et la structure HTML ont changé pour voir si tout est en ordre et cela, dans toutes les tailles d'affichage.\n\nAutant vous dire qu'en fonction du budget, ce travail n'est pas fait à chaque fois que le code est acté (« commit ») dans Git et qu'il arrive qu'une « régression visuelle » soit repérée quelques temps après qu'elle se soit glissée dans le projet.\n\nPlus sournois, si la vérification n'est pas faites à tous les coups, les regressions visuelles qui n'empèchent pas la navigation mettent souvent longtemps à être signalées car personne n'est « bloqué ».\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-001.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-001.jpg\" alt=\"Site web exemple\" width=\"1200\" height=\"796\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eSite web exemple\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nNous allons donc voir à travers un exemple comment réparer rapidement une régression HTML ou CSS avec l'utilisation du système de version Git et la plateforme GitHub.\n\n\u003e Note : si vous avez la moindre question à propos de la procédure exposée ci-après, n'hésitez pas à laisser un commentaire. Si vous souhaitez revenir avec un peu plus de bagage à propos du fonctionnement de Git, [n'hésitez pas à lire cet article pour enfin comprendre Git et GitHub](https://blog.lesieur.name/comprendre-et-utiliser-git-avec-vos-projets/) !\n\n\n\n\n\n## Régression en Vue !\n\nPour notre cas d'étude nous allons travailler sur [ce site](https://github.com/Orchard-ID/CEMEA-PESL-Website) réalisé avec [Vue.js](https://fr.vuejs.org/) et [NodeAtlas](https://node-atlas.js.org/). En naviguant sur le site en environnement de test, il s'avère que tout va bien.\n\nCependant en mobile, on repère une régression visuelle :\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-002.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-002.jpg\" alt=\"Le site mobile\" width=\"640\" height=\"1059\" style=\"width: 100%;max-width: 320px;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eLe site mobile\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nÀ priori le menu mobile est affiché même s'il n'a pas été ouvert. Et même affiché, il est très mal habillé !\n\n**Après quelques tests d'agrandissement de fenêtre, il s'avère que tout va bien jusqu'à une taille de 950 pixels de largeur. En dessous cependant, le bogue visuel apparait.**\n\n\n\n\n\n## Lancer l'application sur son poste\n\nPour ce projet, nous utilisons le système de version Git. Nous utilisons comme serveur de stockage distant GitHub. Cela nous permet de garder une trace de tous les changements effectués sur le projet tout au long de sa vie. Nous savons que ce menu était correctement affiché par le passé, mais actuellement ce n'est plus le cas. C'est pour cela que l'on parle de régression. Dans un premier temps nous allons cloner le projet sur un poste de développement pour faire tourner le site tel qu'il est actuellement sur le serveur de préproduction.\n\nOn ouvre donc un invité de commande et on lance la commande suivante (cela présuppose que nous ayons [Git](https://git-scm.com/) d'installé sur notre machine de développeur).\n\n```bash\ngit clone https://github.com/Orchard-ID/CEMEA-PESL-Website fixbug-navigation-mobile\n```\n\nCela crée un dossier local `fixbug-navigation-mobile` contenant le dépôt (« repository ») `CEMEA-PESL-Website` dans l'état qu'il est actuellement sur la branche par défaut. Ce clone est fait depuis le serveur distant (« remote ») `origin`. La majorité des projets ont pour branche par défaut `master` quand ils sont créés sur un serveur GitHub. Dans notre cas, notre branche par défaut est `develop` car nous avons changé cela sur GitHub.\n\nNous allons à présent nous déplacer dans ce dossier :\n\n```bash\ncd ../fixbug-navigation-mobile/\n```\n\nEt, en suivant les instructions du `README.md`, lancer le site en local et constater le bogue.\n\n\n\n\n\n## Trouver le bon acte de version\n\nIl va falloir trouver entre quels changements du projet, à savoir entre quels actes de version (« commit ») la régression est apparue. Nous pouvons nous aider du descriptif des actes entrés lorsqu'un code est acté pour repérer les changements responsables de cette régression.\n\nNous allons lancer la commande `git log` pour jeter un œil à nos actes :\n\n```bash\ngit log\n```\n\n```git\ncommit fc44ce0450c4126b2f5180141d5f2077c98dbdba\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Tue Oct 17 15:12:10 2017 +0200\n\n    Romain review\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\ncommit 7b9cedf906a79f0bd51c6241d081c708a0b1312e\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Tue Oct 17 13:26:55 2017 +0200\n\n    Fix footer https://github.com/Orchard-ID/CEMEA-PESL-Website/issues/20\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\ncommit 4b3e58206dc104e9c3426053e92b0d7f716646cf\nAuthor: Alban Allée \u003calban.kahl@gmail.com\u003e\nDate:   Mon Oct 16 14:56:46 2017 +0200\n\n    SVG export completed\n\ncommit d61d40ee97e7c5d320132bac25541d2b48d06eff\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Fri Oct 13 16:41:13 2017 +0200\n\n    Fix issue https://github.com/Orchard-ID/CEMEA-PESL-Website/issues/16\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\ncommit de7301193365d73e39456ee77f1e939f6349740a\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Tue Oct 10 17:44:55 2017 +0200\n\n    Keyed v-for for dynamic list\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\ncommit c3fcd9e4f533e887319efdfe58955bc367e30af3\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Mon Oct 9 18:22:55 2017 +0200\n\n    Vue convention about props\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\ncommit 43228d365debb05217f376261b9aa875bb6e2f5d\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Mon Oct 9 16:16:43 2017 +0200\n\n    Convention de composant Vue.js\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n...\n...\n...\n```\n\nTous les actes sont ainsi listés du plus récent au plus vieux. Je sais que la modification se trouve dans les derniers actes car, même si je ne revois pas tout le design à chaque code acté, je le revois régulièrement. Je sais donc qu'avant l'un de ces derniers actes de version, cette régression n'avait pas été constatée. Je vais donc fouiller ces logs à la recherche de modifications qui peuvent potentiellement avoir causé la régression.\n\n### Premier acte\n\nVérifions le premier acte de version qui s'intitule simplement « Romain review ».\n\n```bash\ngit show fc44ce0450c4126b2f5180141d5f2077c98dbdba\n```\n\n```git\ndiff --git a/assets/stylesheets/modules/cmpt-footer.styl b/assets/stylesheets/modules/cmpt-footer.styl\nindex 98bf25d..eac4f92 100644\n--- a/assets/stylesheets/modules/cmpt-footer.styl\n+++ b/assets/stylesheets/modules/cmpt-footer.styl\n@@ -2,12 +2,12 @@\n        position relative\n        z-index 1\n        margin 0 auto\n-       max-width 1200px\n+       max-width 950px\n        padding 0 0 32px\n        color $footerTextColor\n\n        p\n-               font-size 1.6rem\n+               font-size 1.2rem\n\n        a\n                color $footerLinkColor\n@@ -37,7 +37,7 @@\n\n                h3\n                        margin-top 32px\n-                       font-size 2rem\n+                       font-size 1.4rem\n                        font-weight bold\n\n        \u0026--contact\n@@ -47,7 +47,7 @@\n\n                @media (min-width: 950px)\n                        float left\n-                       width 60%\n+                       width 50%\n\n                \u0026::after\n                        content \"\"\n@@ -81,7 +81,7 @@\n\n                @media (min-width: 950px)\n                        float right\n-                       width 40%\n+                       width 50%\n\n                \u0026--title\n                        margin-bottom 32px\n```\n\nLe seul fichier modifié lors de cet acte de version se nomme `cmpt-footer.styl`. C'est bien du style (un fichier Stylus qui génère de la CSS depuis NodeAtlas), mais tout porte à croire que cela modifie le pied de page. Il y a donc peu de chance que cela soit responsable de cette régression qui semble plutôt intervenir en entête de page ou dans la navigation. Je décide donc de poursuivre.\n\n### Deuxième acte\n\nLe deuxième acte de version fait mention d'un `footer`, or actuellement, l'erreur doit se trouver dans un fichier probablement nommé `header` ou `navigation`. Je passe mon chemin.\n\n\u003e Note : cela ne veut pas dire que l'erreur n'aurait pas été ici. Le but de la manœuvre étant de résoudre le bogue le plus rapidement possible, s'il n'y a pas d'indice particulier pour un acte de version, il est plus judicieux de continuer.\n\n### Troisième acte\n\nLe troisième acte de version n'est pas de moi. Par curiosité, je regarde avec la commande `show`.\n\n```bash\ngit show 4b3e58206dc104e9c3426053e92b0d7f716646cf\n```\n\n```git\ndiff --git a/assets/media/images/parallax/bag-blue.svg b/assets/media/images/parallax/bag-blue.svg\nindex 913e7f4..aefc64e 100644\n--- a/assets/media/images/parallax/bag-blue.svg\n+++ b/assets/media/images/parallax/bag-blue.svg\n@@ -2,828 +2,18 @@\n \u003c!-- Generator: Adobe Illustrator 21.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --\u003e\n \u003csvg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 350 350\" enable-background=\"new 0 0 350 350\" xml:space=\"preserve\"\u003e\n-\u003cg id=\"Bag\"\u003e\n-       \u003cg id=\"Red_1_\"\u003e\n-               \u003cpath fill=\"none\" stroke=\"#FF0068\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"\n-                       M158.1,167h33.9c2.6,0,4.7,2.1,4.7,4.7V217c0,2.6-2.1,4.7-4.7,4.7h-33.9c-2.6,0-4.7-2.1-4.7-4.7v-45.4\n-                       C153.4,169.1,155.5,167,158.1,167z\"/\u003e\n-               \u003cpath fill=\"none\" stroke=\"#FF0068\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"\n-                       M284.9,273.2H65.1c-5.3,0-9.6-4.3-9.6-9.6V125.2c0-5.3,4.3-9.6,9.6-9.6h219.7c5.3,0,9.6,4.3,9.6,9.6v138.4\n-                       C294.5,268.9,290.2,273.2,284.9,273.2z\"/\u003e\n-               \u003cpath fill=\"none\" stroke=\"#FF0068\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"\n-                       M143.1,76.8h63.8c5.9,0,10.6,4.8,10.6,10.6v28h-85.1v-28C132.5,81.6,137.2,76.8,143.1,76.8z\"/\u003e\n-\n-                       \u003cline fill=\"none\" stroke=\"#FF0068\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" x1=\"153.4\" y1=\"194.4\" x2=\"55.5\" y2=\"194.4\"/\u003e\n...\n...\n...\n```\n\nJe vois que la sortie va être très grande. Je coupe donc l'affichage et je retourne à mon invité de commande. Je vais tenter une commande plus succinte avec l'option `--stat`. À partir de maintenant, je vais vérifier seulement quels fichiers ont bougés avant d'en regarder le détail.\n\n```bash\ngit show 4b3e58206dc104e9c3426053e92b0d7f716646cf --stat\n```\n\n```git\ncommit 4b3e58206dc104e9c3426053e92b0d7f716646cf\nAuthor: Alban Allée \u003calban.kahl@gmail.com\u003e\nDate:   Mon Oct 16 14:56:46 2017 +0200\n\n    SVG export completed\n\n assets/media/images/parallax/bag-blue.svg      | 836 +-----------------------\n assets/media/images/parallax/bag-green.svg     | 836 +-----------------------\n assets/media/images/parallax/bag-red.svg       | 836 +-----------------------\n assets/media/images/parallax/bag-yellow.svg    | 836 +-----------------------\n assets/media/images/parallax/ball-blue.svg     | 842 +------------------------\n assets/media/images/parallax/ball-green.svg    | 841 +-----------------------\n assets/media/images/parallax/ball-red.svg      | 841 +-----------------------\n assets/media/images/parallax/ball-yellow.svg   | 841 +-----------------------\n assets/media/images/parallax/book-blue.svg     | 832 +-----------------------\n assets/media/images/parallax/book-green.svg    | 832 +-----------------------\n assets/media/images/parallax/book-red.svg      | 832 +-----------------------\n assets/media/images/parallax/book-yellow.svg   | 832 +-----------------------\n assets/media/images/parallax/brush-blue.svg    | 828 +-----------------------\n assets/media/images/parallax/brush-green.svg   | 828 +-----------------------\n assets/media/images/parallax/brush-red.svg     | 828 +-----------------------\n assets/media/images/parallax/brush-yellow.svg  | 828 +-----------------------\n assets/media/images/parallax/camera-blue.svg   | 828 +-----------------------\n assets/media/images/parallax/camera-green.svg  | 828 +-----------------------\n assets/media/images/parallax/camera-red.svg    | 828 +-----------------------\n assets/media/images/parallax/camera-yellow.svg | 828 +-----------------------\n 20 files changed, 213 insertions(+), 16448 deletions(-)\n```\n\nR.A.S. Rien qui touche à l'affichage du menu ici, juste des images.\n\n### Quatrième acte\n\nJe continue avec le quatrième acte de version qui indique seulement « Fix issue ». Je regarde.\n\n```bash\ngit show d61d40ee97e7c5d320132bac25541d2b48d06eff --stat\n```\n\n```git\ncommit d61d40ee97e7c5d320132bac25541d2b48d06eff\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Fri Oct 13 16:41:13 2017 +0200\n\n    Fix issue https://github.com/Orchard-ID/CEMEA-PESL-Website/issues/16\n\n    Signed-off-by: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\n\n assets/stylesheets/modules/cmpt-navigation.styl | 19 ++++++++++++-------\n 1 file changed, 12 insertions(+), 7 deletions(-)\n```\n\nJe vois ici que le seul fichier modifié se nomme `cmpt-navigation.styl`. C'est très intéressant car\n\n- il mentionne un fichier de style pouvant impacter une regression visuelle,\n- cette régression pourrait intervenir au niveau de la navigation.\n\nC'est un bon candidat. Jettons un œil aux modifications faites dans ce fichier :\n\n```bash\ngit show d61d40ee97e7c5d320132bac25541d2b48d06eff\n```\n\n```git\ndiff --git a/assets/stylesheets/modules/cmpt-navigation.styl b/assets/stylesheets/modules/cmpt-navigation.styl\nindex 144189f..933715f 100644\n--- a/assets/stylesheets/modules/cmpt-navigation.styl\n+++ b/assets/stylesheets/modules/cmpt-navigation.styl\n@@ -50,10 +50,11 @@\n                @media (min-width: 950px)\n                        display none\n\n-       \u0026--menu\n-               .router-link-exact-active\n-                       cursor default\n-                       color #ff0068\n+       \u0026--menu--main li:nth-child(1) .router-link-exact-active\n+       \u0026--menu--main li + li .router-link-active\n+       \u0026--members-area .router-link-active\n+               cursor default\n+               color #ff0068\n\n                @media (max-width: 949px)\n                        display none\n@@ -99,6 +100,13 @@\n                                                background-color $highlightLinkColor\n                                                border 1px solid $highlightLinkColor\n\n+\n+                       \u0026 ^[0]--menu--main li:nth-child(1) .router-link-exact-active\n+                       \u0026 ^[0]--menu--main li + li .router-link-active\n+                       \u0026 ^[0]--members-area .router-link-active\n+                               cursor default\n+                               color #ff0068\n+\n                        \u0026 ^[0]--menu\n                                display block\n\n@@ -106,9 +114,6 @@\n                                        color $linkColorReversed\n                                        \u0026:hover\n                                                color $highlightLinkColorReversed\n-                                       \u0026.router-link-exact-active\n-                                               cursor default\n-                                               color #ff0068\n\n                                @media (max-width: 949px)\n                                        position absolute\n```\n\nEn lisant les parties modifiées, elles semblent faire intervenir des Media Queries. **On constate même que les valeurs 949px et 950px apparaissent plusieurs fois ce qui correspond exactement à la limite à partir de laquelle notre régression visuelle apparait. Nous allons donc nous mettre sur une branche détachée (« detached ») qui va reproduire le dépôt du site tel qu'il était lors de cet acte de version.\n\n```bash\ngit checkout d61d40ee97e7c5d320132bac25541d2b48d06eff\n```\n\n```git\nNote: checking out 'd61d40ee97e7c5d320132bac25541d2b48d06eff'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b \u003cnew-branch-name\u003e\n\nHEAD is now at d61d40e... Fix issue https://github.com/Orchard-ID/CEMEA-PESL-Website/issues/16\n```\n\nC'est l'occasion de vérifier si, à tout hasard, nous n'avons pas raté la régression dans des actes plus récents. Peut-être dans le deuxième acte de version que nous n'avons pas vérifié plus en avant ? On lance notre projet et on vérifie.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-003.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-003.jpg\" alt=\"La régression est toujours là\" width=\"1200\" height=\"784\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eLa régression est toujours là\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOn constate que la régression est toujours présente, cela signifie qu'il est donc toujours possible que nous soyons sur l'acte bascule entre régression et non régression. Pour en avoir le cœur net, il ne nous reste plus qu'à nous déplacer sur l'acte de version précédent :\n\n```bash\ngit checkout de7301193365d73e39456ee77f1e939f6349740a\n```\n\n```git\nPrevious HEAD position was d61d40e... Fix issue https://github.com/Orchard-ID/CEMEA-PESL-Website/issues/16\nHEAD is now at de73011... Keyed v-for for dynamic list\n```\n\nOn relance une nouvelle fois l'application.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-004.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-004.jpg\" alt=\"La régression n'est plus là !\" width=\"1200\" height=\"784\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eLa régression n'est plus là !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nBingo ! La régression vient bien du fichier en question. Nous allons donc pouvoir résoudre ce bogue sans plus attendre !\n\n\n\n\n\n## Corriger la régression\n\nNous allons à présent nous remettre sur la branche contenant la version de test car souvenez vous, nous somme actuellement sur une branche détachée. Pour le vérifier, il nous suffit de consulter la liste des branches sur notre machine locale pour ce dépôt :\n\n```bash\ngit branch\n```\n\n```git\n* (HEAD detached at de73011)\n  develop\n  master\n```\n\nNous voyons que nous somme sur une branche détachée grâce à la petite `*` en regard de la ligne. Nous allons donc nous remettre sur la branche `develop` :\n\n```bash\ngit checkout develop\n```\n\n```git\nPrevious HEAD position was de73011... Keyed v-for for dynamic list\nSwitched to branch 'develop'\n```\n\nÀ partir de là, nous allons créer une branche dédiée à la résolution de ce bogue. Nous allons donc faire une copie de la branche actuelle pour faire toutes nos modifications ! Une copie se fait grâce au raccourci d'option `b` dans la commande `checkout`. Nous pouvons ainsi créer le nom que cette branche va avoir.\n\n```bash\ngit checkout -b fixbug-navigation-mobile\n```\n\nVérifions\n\n```bash\ngit branch\n```\n\n```git\n  develop\n* fixbug-navigation-mobile\n  master\n```\n\nC'est maintenant à moi de jouer. Je récupère de nouveau les différences entre ma version actuelle et la version ou le bogue n'était pas là :\n\n```bash\ngit show d61d40ee97e7c5d320132bac25541d2b48d06eff\n```\n\n```git\ndiff --git a/assets/stylesheets/modules/cmpt-navigation.styl b/assets/stylesheets/modules/cmpt-navigation.styl\nindex 144189f..933715f 100644\n--- a/assets/stylesheets/modules/cmpt-navigation.styl\n+++ b/assets/stylesheets/modules/cmpt-navigation.styl\n@@ -50,10 +50,11 @@\n                @media (min-width: 950px)\n                        display none\n\n-       \u0026--menu\n-               .router-link-exact-active\n-                       cursor default\n-                       color #ff0068\n+       \u0026--menu--main li:nth-child(1) .router-link-exact-active\n+       \u0026--menu--main li + li .router-link-active\n+       \u0026--members-area .router-link-active\n+               cursor default\n+               color #ff0068\n\n                @media (max-width: 949px)\n                        display none\n@@ -99,6 +100,13 @@\n                                                background-color $highlightLinkColor\n                                                border 1px solid $highlightLinkColor\n\n+\n+                       \u0026 ^[0]--menu--main li:nth-child(1) .router-link-exact-active\n+                       \u0026 ^[0]--menu--main li + li .router-link-active\n+                       \u0026 ^[0]--members-area .router-link-active\n+                               cursor default\n+                               color #ff0068\n+\n                        \u0026 ^[0]--menu\n                                display block\n\n@@ -106,9 +114,6 @@\n                                        color $linkColorReversed\n                                        \u0026:hover\n                                                color $highlightLinkColorReversed\n-                                       \u0026.router-link-exact-active\n-                                               cursor default\n-                                               color #ff0068\n\n                                @media (max-width: 949px)\n                                        position absolute\n```\n\nPour comprendre ce code, voici la signification des éléments en regard de ligne. Les `-` en début de ligne indiquent un code qui était présent sur l'acte d'avant et qui a disparu dans celui ci. Les `+` indiquent le code qui a été ajouté et qui n'existait pas sur l'acte d'avant.\n\nAprès avoir lancé l'application et avoir lu le code, on s'aperçoit après quelques minutes que les lignes :\n\n```css\n                @media (min-width: 950px)\n                        display none\n```\n\net\n\n```css\n                @media (max-width: 949px)\n                        display none\n```\n\nsont très étranges. Au vu des Media Queries, un simple `display none` faisait l'affaire pour les deux groupes, or ont spécifie la même directive pour deux ensembles de taille. Quelque chose a dû « sauter » à ce niveau. En regardant le fichier précédent on voit que le second groupe devrait plutôt être (comme avant) :\n\n```css\n            \u0026--menu\n                @media (max-width: 949px)\n                        display none\n```\n\navec l'ajout de `\u0026--menu`. Vérifions !\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-004.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-004.jpg\" alt=\"Réparé !\" width=\"1200\" height=\"784\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eRéparé !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nTop ! L'erreur est donc réparée.\n\n\n\n\n\n## Acter et pousser sur le serveur\n\nNous allons enregistrer les changements que nous venons d'effectuer dans Git. Nous sommes actuellement sur la branche `fixbug-navigation-mobile` en local. Il va maintenant être question de faire savoir au système de version Git que nous devons prendre en compte cette branche dans le système de version.\n\nAjoutons donc notre travail à la branche `fixbug-navigation-mobile` distante. Qu'est-ce que j'ai modifié ? Pour le savoir j'utilise la commande `status`.\n\n```bash\ngit status\n```\n\n```git\nOn branch fixbug-navigation-mobile\nChanges not staged for commit:\n  (use \"git add \u003cfile\u003e...\" to update what will be committed)\n  (use \"git checkout -- \u003cfile\u003e...\" to discard changes in working directory)\n\n        modified:   cmpt-navigation.styl\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n\nÀ partir de là, je décide d'ajouter à mon index des fichiers à acter. Je vais ajouter le fichier `cmpt-navigation.styl` qui actuellement n'est pas référencé comme fichier à enregistrer dans mon prochain acte de version. J'utilise donc la commande `add`.\n\n```bash\ngit add cmpt-navigation.styl\n```\n\net je vérifie qu'il est bien ajouté :\n\n```bash\ngit status\n```\n\n```git\nOn branch fixbug-navigation-mobile\nChanges to be committed:\n  (use \"git reset HEAD \u003cfile\u003e...\" to unstage)\n\n        modified:   cmpt-navigation.styl\n```\n\nIl ne me reste plus qu'à acter mon travail sous un nouveau acte de version avec la commande `commit` :\n\n```bash\ngit commit\n```\n\nUne interface me demande d'entrer un détail pour cet acte. Je vais, par exemple entrer, « fix visual regression about menu always opened on mobile ». J'appuie sur Échap et j'entre les symboles `:wq` pour sauvegarder mon texte et quitter l'interface.\n\n```bash\n[fixbug-navigation-mobile 80d06d2] fix visual regression about menu always opened on mobile\n 1 file changed, 1 insertion(+)\n```\n\nMon acte de version est donc dans le système de version de ma base locale. Je pousse alors ça sur le serveur GitHub, sur une branche `fixbug-navigation-mobile` distante.\n\n```bash\ngit push origin fixbug-navigation-mobile\n```\n\n```git\nCounting objects: 6, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (6/6), done.\nWriting objects: 100% (6/6), 515 bytes | 0 bytes/s, done.\nTotal 6 (delta 5), reused 0 (delta 0)\nremote: Resolving deltas: 100% (5/5), completed with 5 local objects.\nTo https://github.com/Orchard-ID/CEMEA-PESL-Website.git\n * [new branch]      fixbug-navigation-mobile -\u003e fixbug-navigation-mobile\n```\n\nIl ne me reste plus qu'à revoir ce code avec un membre de mon équipe. Par exemple via une proposition de fusion sur GitHub pour voir si cela convient à tout le monde. Je vais ici me permettre de valider la proposition de fusion moi-même car ce petit changement n'a pas besoin de plus de paire d'yeux.\n\n\n\n\n\n## Proposition de fusion\n\nJe vais à présent soumettre mon travail à mon équipe. J'aurais pu directement utiliser la commande `merge` pour reverser le travail de cette branche dans la `develop` mais nous utilisons Git afin de permettre aux autres de faire un retour sur les modifications pour s'assurer que tout est en ordre.\n\nEn retournant sur la page projet, GitHub s'est aperçu qu'une nouvelle branche est apparue. Il propose donc de faire une proposition de fusion (« pull request ») pour aligner son contenu avec celui de la version `develop`.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-005.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-005.jpg\" alt=\"GitHub propose de soumettre une fusion\" width=\"1200\" height=\"745\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eGitHub propose de soumettre une fusion\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nUne fois sur l'interface, le système nous dit qu'il est tout à fait possible de fusionner les branches `develop` et `fix-navigation-mobile` sans qu'il y ait de conflit à résoudre. Dans le cas contraire, une interface de résolution très pratique est proposée par GitHub.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-006.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-006.jpg\" alt=\"Proposition de fusion\" width=\"1200\" height=\"745\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eProposition de fusion\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nJe mets le nom de ma proposition de fusion, je spécifie avec un tag que cela résous un bug et je m'assigne en tant que proposeur de cette proposition de fusion. Puisque je vais moi-même la valider sans demander plus d'avis au regard de la correction apportée, je ne demande pas de relecteurs de code (« reviewers »).\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-007.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-007.jpg\" alt=\"Détail de la proposition de fusion\" width=\"1200\" height=\"745\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eDétail de la proposition de fusion\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDans des propositions de fusion plus dense, vous pouvez assigner des relecteurs et vous devez attendre leur approbation pour finaliser la fusion. Quand à eux, ils ont tous les outils nécessaires pour voir ce qui a changé et vous faire leurs retours ligne après ligne.\n\nDans notre cas, je vais simplement réduire la liste des actes en un seul (« squash ») et fusionner cet empilement avec la branche `develop`. Empiler ses actes avant de faire une fusion permet de ramener à un seul acte de modification dans la branche `develop` une multitude d'acte de modification dans la branche de comparaison. Dans notre cas, puisque notre résolution de bogue n'a donné lieu qu'à un seul acte, cela n'est pas utile. Cela l'est pour le cas où nous aurions fait plusieurs acte de version en fonction des allers-retours avec nos relecteurs.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/git-case-008.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/git-case-008.jpg\" alt=\"Supprimer la branche\" width=\"1200\" height=\"745\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eSupprimer la branche\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nSuite à la réussite de la fusion, GitHub me propose de supprimer la branche `fix-navigation-mobile` sur le serveur. Il ne me reste plus qu'à cliquer sur « Delete » pour effectuer cette action et laisser le serveur propre.\n\nEffectivement, si l'on souhaite savoir quels sont les modifications que j'ai faites sur le fichier, il suffirait de consulter l'acte de version correspondant à ma fusion dans les logs. Pour savoir ce qui a été discuté lors de cette proposition de fusion, il me suffira d'aller consulter les archives.\n\n\n\n\n\n## Un peu de ménage\n\nJe peux à présent supprimer mon dossier `fix-navigation-mobile` de ma machine car les modifications ont été faites, actées et sont tracées dans la branche `develop` sous un nouveau acte de version.\n\nJe rebascule sur la branche principale.\n\n```bash\ngit checkout develop\n```\n\n```git\nSwitched to branch 'develop'\n```\n\net je met à jour cette branche locale avec le dernier acte de version fait via la proposition de fusion sur le serveur :\n\n```bash\ngit pull origin develop\n```\n\n```git\nFrom https://github.com/Orchard-ID/CEMEA-PESL-Website\n * branch            develop    -\u003e FETCH_HEAD\nUpdating fc44ce0..e69d944\nFast-forward\n assets/stylesheets/modules/cmpt-navigation.styl | 1 +\n 1 file changed, 1 insertion(+)\n```\n\nPar curiosité je regarde ce qui a bougé.\n\n```bash\ngit log\n```\n\n```git\ncommit e69d9443bb9ec48b995b4708207876ef1f9c9e48\nAuthor: Bruno Lesieur \u003cbruno.lesieur@gmail.com\u003e\nDate:   Thu Oct 26 11:42:33 2017 +0200\n\n    fix visual regression about menu always opened on mobile (#21)\n...\n...\n...\n```\n\nEt je constate bien un nouvel acte en regard de la liste des actes de version.\n\nIl est temps de supprimer le dossier de cette résolution de bogue. Si toutefois vous décidez de continuer à travailler dans ce dossier pour n'importe quelle raison, supprimez simplement la branche `fixbug-navigation-mobile` en locale pour faire un peu de ménage avec le raccourci d'option `-D` de la commande `branch` :\n\n```bash\ngit branch -D fixbug-navigation-mobile\n```\n\n```git\nDeleted branch fixbug-navigation-mobile (was 80d06d2).\n```\n\n\n\n\n## Conclusion\n\nCe cas d'étude est un peu long mais couvre toute la démarche de résolution d'un bogue. Il aurait été périlleux et long, à froid, de retourner dans le code pour trouver au doigt levé quel code provoquait le soucis alors qu'en utilisant l'outil de version ceci est un jeu d'enfant avec un peu d'entrainement. De plus, puisque c'est une régression, on sait déjà que la réponse se trouve dans notre code. Alors pourquoi perdre plus de temps ?!\n\nEt pour ceux qui se demande comment on aurait fait si la régression était loin dans les actes, il est tout à fait possible d'en trouver la liste depuis GitHub et de prendre au hasard des actes de version et de jouer au jeu du plus ou moins en testant au fur et à mesure quels actes font tourner le projet avec et sans régression et resserrer l'étau à quelque chose de moins fourni.","urn":"comment-corriger-rapidement-une-regression-html-ou-css-avec-git","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"581cb31dbe08b018d7e9a3bf"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"}],"dates":{"updated":[],"published":{"$date":"2017-10-27T08:19:00.000Z"}},"__v":0,"description":"Nous allons ici voir comment réparer rapidement une régression visuelle avec l'utilisation du système de version Git.","image":"https://blog.lesieur.name/media/images/upload/git-case-001.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"59fb25e7581436675d889d21"},"title":"Mais pourquoi devrais-je abandonner jQuery pour Angular, React... ou Vue.js !?","content":"J'ai longtemps utilisé [jQuery]. Puis [Vanilla JS] comme on appelle si élégamment le JavaScript implémenté nativement. Je surveillais d'un œil les [Knockout] et compagnie sans jamais réellement m'y investir. Ce fut également le cas avec [AngularJS], tellement super-héroïque et sur toutes les lèvres ! Du MVVM paraissait t-il. Un nom barbare à se retaper alors que je terminais tout juste de comprendre en profondeur les tenants et aboutissants d'une architecture MVC(2). Non merci.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/hqdefault.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/hqdefault.jpg\" alt=\"jQuery vs. Vue\" width=\"1296\" height=\"607\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003ejQuery vs. Vue\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nAutant vous le dire : pour ma part je ne jurais que par [la séparation des rôles](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/). Je ne voulais pas retourner à du HTML mélangeant de la structure et du comportement, avec des attributs invalides W3C et un code source à chialer. Ça m'a bien conforté dans l'idée que [jQuery] ou [Vanilla JS] restaient des valeurs sûr !\n\nMais voilà. J'ai fini par investiguer ce [AngularJS], à force de le voir passer. Il s'est avéré que [les principaux défauts que je lui trouvais pouvaient se régler avec un peu de rigueur](https://blog.lesieur.name/utiliser-angularjs-en-respectant-les-recommandations-w3c-et-seo/). OK ? Mais à quoi bon tant d'efforts pour utiliser l'outil à la mode, là où [jQuery] à toujours fait le job ?\n\nMême si j'ai partiellement compris l'utilité d'un tel changement grâce à mes études de surface sur [Aurelia], [React] puis [Angular], il semble que j'ai trouvé la réponse définitive à la bonne raison d'abandonner [jQuery] grâce à l'étude de [Vue.js]. Et en une simple après midi de lecture ! Je ne jure plus que par cette bibliothèque à présent !\n\nPour faire simple : [jQuery pilote par le DOM](https://codepen.io/Haeresis/pen/ryavOd), là où [Vue pilote par les données](https://codepen.io/Haeresis/pen/JWovjm) ! Et ça, ça change tout.\n\n\n\n\n\n## Au commencement, il y avait jQuery\n\nJ'ai réellement adoré [jQuery] ! C'est grâce à cette bibliothèque JavaScript que je suis aujourd'hui un développeur full-stack JavaScript passionné. Si on remonte à l'époque ou je développais des sites web [pour le plaisir](http://www.compilation-of-ff7.com/) en [total amateur](http://www.communaute-avatar.fr/), je ne jurais que par [jQuery] parmi mes fichiers PHP et mes appels `$.ajax`. Pourtant, j'ai délaissé PHP qui commençait à se parer d'une syntaxe objet sérieuse au profit d'une spécialisation plus front-end. J'étais fasciné par la souplesse de [jQuery].\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/1ajapg.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/1ajapg.jpg\" alt=\"Au commencement, il y avait jQuery\" width=\"1200\" height=\"680\" style=\"width: 100%;height: auto;border:1px solid #ccc\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eAu commencement, il y avait jQuery\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nComment était t-il possible que [jQuery] soit fait... en JavaScript ?! Mon seul rapport au JavaScript à l'époque c'était des scripts « taxés » sur le site Éditeur JavaScript. Ils étaient mis à ma sauce avec des heures de « bidouilles » pour éviter les différentes erreurs entres navigateurs. Fatiguant. Le JavaScript était définitivement un langage « dégueulasse » que je détestais. Mais ce [jQuery] était simple, élégant, rapide à écrire, simple, séparé du HTML, avec des milliers de plugins, etc. Et, je ne sais pas si je l'ai dit, mais simple aussi.\n\nAvec HTML pour la structure, CSS pour l'habillage, et [jQuery] pour l’interaction, j'avais trouvé là un fabuleux moyen de développer en séparant les différents rôles sans jamais faire de mélange afin, qu'[avec un même HTML je puisse sortir des interfaces complètement différentes](https://blog.lesieur.name/conventions-html-et-css-orientes-composants/).\n\nBien sur, pour me tenir à niveau côté back-end, j'ai étudié la programmation orienté objet avec Java (à l'école) et C# (en entreprise). Ce sont des langages que j'ai respecté pour leurs rigueur, complexité, et la philosophie objet de mise en œuvre qu'ils portaient. Mais [jQuery] était bien trop évolutif, versatile, élégant et simple pour ne pas rester mon chouchou. Si je devais faire quelque chose de solide, je le pouvais. Mais contrairement aux langages back-end étudiés ses dernières années, pour quelque chose de simple, [jQuery] répondait également présent !\n\n[jQuery] était devenu tellement confortable, qu'il était difficile de s'en détacher, et même d'imaginer que d'autres bibliothèques puissent faire mieux.\n\nMais cette question me chagrinait toujours... Comment une bibliothèque qui m'avait définitivement détournée de PHP, puis C# et Java pouvait avoir été développée... en JavaScript. Ce langage que je détestais !\n\n\n\n\n\n## Le JavaScript, c'est pas automatique !\n\nJ'ai donc retroussé mes manches pour réellement comprendre les fondamentaux du JavaScript. Je dirais que la clé de mon côté a été de comprendre toute la portée du caractère asynchrone de ce langage et la possibilité de... passer des fonctions en paramètre ?! WTF. Je fais quelque chose, et je passe également la fonction qui devra être appelée quand ce quelque chose sera fini, indépendamment du temps que ce quelque chose va prendre. Incroyable, ce n'était donc pas [jQuery] qui avait « inventé » ça. En fait, ce mécanisme était possible grâce [aux fermetures](https://blog.lesieur.name/les-fermetures/) et le fait que les [fonctions puissent se passer elles-mêmes dans des fonctions](https://blog.lesieur.name/les-fonctions/) venait du fait que les fonctions étaient... des objets ?! Et ce pauvre langage souffrant de ne pas être typé, sans possibilité de caster les valeurs était [en fait typé faiblement et utilisait la coercition](https://blog.lesieur.name/difference-entre-type-null-et-type-undefined-en-javascript/) pour « automatiquement » changer de type au besoin...\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/i-know-javascript.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/i-know-javascript.jpg\" alt=\"Woah, je connais le JavaScript !\" width=\"400\" height=\"400\" style=\"width: 100%;height: auto;border:1px solid #ccc;max-width: 400px\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eWoah, je connais le JavaScript !\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nLe JavaScript était définitivement plus intéressant qu'au premier abord et mélangeait énormément de concepts étudiés dans tous les précédents langages que j'avais pu étudier. Enfin, en étudiant l'API DOM native implémentée dans tous les navigateurs récents, j'en suis même venu à la conclusion qu'il était temps de dire au revoir à [jQuery]. Cette trousse à outil fabuleuse n'était en réalité qu'un tremplin pour aborder le JavaScript sous le bon angle et plus facilement. Il suffisait simplement d'en avoir le courage.\n\nJ'ai donc ouvert les bras à [Vanilla JS], et me suis dès lors convaincu que du JavaScript natif, avec de petites bibliothèques et polyfills utilisées avec parcimonie étaient la clé de mon salut.\n\nAutant vous dire qu'à cette époque, avec une telle révélation, c'était mal parti pour que je me lance dans [AngularJS] !\n\n\n\n\n\n## AngularJS, Node.js, React, Angular... tous dans le même panier ?\n\nLe back-end me manquait ! Je dépendais de mes collègues experts en C# pour mener à bien un site complet. Mes petites excursions avec [CodeIgniter] ou [Laravel] pour refaire un peu de PHP m'ont vraiment fait comprendre à quel point la « magie » JavaScript manquait aux autres langages. Mais il paraissait qu'on pouvait faire du JavaScript... côté serveur o_O !? Alors là, il ne m'en fallait pas plus pour sauter sur [Node.js] alors que celui ci n'affichait encore qu'une version 0.1x.x ! Obligé de nager parmi les différentes ressources attribuées aux différentes versions que je trouvais, il a été difficile au départ de distinguer ce qui appartenait réellement au cœur de [Node.js] et à ces packages npm comme [Express] ou encore même aux middlewares d'[Express] en lui-même.\n\nLa courbe d'apprentissage, même si elle n'a pas été si compliquée avec mon background JavaScript m'a fait pensé qu'il fallait un petit coup de pousse à [Node.js] pour permettre aux développeurs front-end « coincés » avec [jQuery] ou aux développeurs back-end PHP se méfiant de JavaScript de se lancer. C'est pourquoi j'ai développé le framework [NodeAtlas] qui, contrairement à ses concurrents se voulait évolutif dans sa prise en main par itération progressive et [très proche d'une architecture PHP dans son approche](https://blog.lesieur.name/des-sites-web-nodejs-pour-les-debutants-en-javascript-avec-nodeatlas/). Bien entendu, en creusant le framework au fur et à mesure de ses besoin, il est possible [d'embrasser pleinement Node.js et ses modules](https://blog.lesieur.name/routage-strict-avec-vue-router-et-ssr/). Il est possible d'obtenir un site multilingue costaud pour la production en un tour de main, sans tous ses gros mots de l'écosystème [Node.js], [Angular] ou [React] que sont gulp, grunt, Browserify, webpack, Babel, Bower, etc.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/angular_js_2.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/angular_js_2.jpg\" alt=\"Angular ou React ? Un faux choix ?\" width=\"500\" height=\"641\" style=\"width: 100%;height: auto;border:1px solid #ccc; max-width: 500px\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eAngular ou React ? Un faux choix ?\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nAu côté de [AngularJS] qui se targuait de bientôt devenir [Angular] avec une refonte tellement profonde que mêmes sa maman ne le reconnaissait plus, est arrivé React. React permettant de générer du contenu serveur à l'aide de, je cite, « son DOM virtuel ». Mais qu'est ce que c'est que ce délire ? React, c'était donc un concurrent de [NodeAtlas] ? Pour faire du JavaScript côté serveur ? Une alternative à [Node.js] peut-être ? C'est avec ça qu'était développé Facebook ? Mais c'était pas une alternative à Angular ? Pourquoi, il y a que du JavaScript et pas de HTML dans les exemples ? C'est quoi ça : JSX ? Plus je creusais l'écosystème JavaScript, et moins il semblait que j'en savais à propos de lui... qu'elle complexité ! J'étais bien content d'offrir ma petite porte d'entrée [NodeAtlas], certe. Je me demandais bien si, noyé dans tout ce JavaScript côté client, et côté serveur, et côté mobile, et côté révolution, j'allais m'en sortir. Le petit temps bien au chaud avec mes jCertitudes était bien loin, et ça c'était effrayant.\n\nL'écosystème JavaScript a explosé, ma compréhension de cette écosystème avec. Maintenant plus personne n'embauche d'expert JavaScript. Les offres se contentent d'annoncer qu'on a besoin d'un développeur JavaScript travaillant sur tel framework. Au vu des [NodeJS, ReactJS, NodeJS, AngularJS ou VueJS](https://www.linkedin.com/pulse/d%C3%A9veloppeurs-marketeurs-respectez-les-noms-des-bruno-lesieur/), y a t-il encore du monde qui sait de quoi il parle ? Comment les non-experts le pourraient t-ils si même les développeurs JavaScript sont perdus.\n\nMais après plusieurs recroisement et une veille rigoureuse, finalement ce n'est pas si effrayant. [Demandez aux experts](https://blog.lesieur.name/pourquoi-vous-ne-comprenez-rien-au-javascript/) !\n\n\n\n\n\n## Vue ? Je l'avais pas Vue !\n\nAu côté de [AngularJS], il y avait discrètement un [Vue.js]. Sans prétention, capable de rivaliser avec lui. Simplicité, élégance, il se démarquait avec une volonté d'être utilisé de manière évolutive et versatile. Son API était surtout si bien définie, que changer sa mécanique interne en profondeur n'a pas affecté son utilisation externe lors de son passage de Vue 1.0 à Vue 2.0, le dotant, entre autre, d'un DOM virtuel. [AngularJS], lui, à perdu tout le monde et forcé le commun des mortels à se mettre à TypeScript (même si pas obligatoire... bon courage sans).\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/vue-joke-qui-a-vu-verra.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/vue-joke-qui-a-vu-verra.jpg\" alt=\"Vu, qui a vu, verra. Vu ?\" width=\"480\" height=\"282\" style=\"width: 100%;height: auto;border:1px solid #ccc; max-width: 480px\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eVu, qui a vu, verra. Vu ?\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nQuand [React] est arrivé avec son rendu côté serveur grâce à son DOM virtuel et l'utilisation de JSX (« même si pas obligatoire... bon courage sans » bis), [Vue] était encore là, pouvant également faire du rendu côté serveur. En fait [Vue] est là depuis le début et est tellement bien pensé qu'il n'a quasiment pas changé de l'extérieur. Pourtant, en terme de performance, de poids et de courbe d'apprentissage, il surpasse [Angular] et [React] ! Là où les poids lourd Google et Facebook se livrent une guerre, Vue.js se faufile, mené par une communauté JavaScript indépendante.\n\n[Vue] est tellement évolutif et simple, que vous pouvez l'utiliser aussi simplement que vous utiliseriez [jQuery] ! Et ce n'est pas une astuce. Vue est conçu pour être utilisé aussi bien avec parcimonie sur un DOM client, quelque interfaces et formulaires que pour gérer lui-même un DOM complet côté client et serveur et une navigation complète !\n\n\n\n\n\n## Et maintenant ?\n\n[Vue.js] est à [Angular] et [React] ce que [jQuery] est à [Vanilla JS] ! Aussi, si vous là bas, êtes toujours dans votre zone de confort avec [jQuery] et défendez cette position comme un irréductible gaulois en vous persuadant que les usines à gaz [Angular] et [React] n'ont rien à vous apporter, tentez l'aventure avec [Vue.js]. Il ne vous faudra pas plus d'une demi journée pour goûter à son potentiel grâce à [son guide intuitif et en français](https://fr.vuejs.org/v2/guide/) !\n\nEn tout cas, pour moi, c'est tout Vue !\n\n\n\n\n\n## Pour les gourmands\n\nPour ceux qui veulent manger de la technique à propos de ces histoires de pilotage par le DOM vs. pilotage par données c'est pour bientôt !\n\n[jQuery]: http://jquery.com/ \"Do more, write less\"\n[Knockout]: http://knockoutjs.com/ \"Symplify JavaScript dynamic UIs with Model-View-View Model (MVVM) pattern\"\n[Vanilla JS]: https://blog.lesieur.name/vanilla-js-france/ \"Vanilla JS est µn fr@m€w#rk rapide, léger et multi-plateforme pour créer d'incroyables et puissantes applications JavaScript\"\n[AngularJS]: https://angularjs.org/ \"Superheroic JavaScript MVW Framework\"\n[Angular]: https://angular.io/ \"One framework, mobile and desktop\"\n[React]: https://reactjs.org/ \"A JavaScript library for building user interfaces\"\n[Aurelia]: http://aurelia.io/ \"Aurelia is the most powerful, flexible and forward-looking JavaScript client framework in the world\"\n[CodeIgniter]: https://codeigniter.com/ \"CodeIgniter is a powerful PHP framework\"\n[Laravel]: https://laravel.com/ \"Love beautiful code? We do too\"\n[Node.js]: https://nodejs.org/en/ \"Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine\"\n[Express]: http://expressjs.com/fr/ \"Infrastructure Web minimaliste, souple et rapide pour Node.js\"\n[NodeAtlas]: https://node-atlas.js.org/ \"Le Framework JavaScript Serveur Évolutif\"\n[Vue]: https://fr.vuejs.org/ \"Le Framework JavaScript Évolutif\"\n[Vue.js]: https://fr.vuejs.org/ \"Le Framework JavaScript Évolutif\"","urn":"pourquoi-abandonner-jquery-pour-vue-angular-react","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"582b242b05a1bb41c727277a"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b9"},{"$oid":"582b2197ac185f8972f30bcb"},{"$oid":"56c4ad05675345bb2d63fcec"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"59fdacbd2b61d5b1b9125d8d"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"5310456355dfd5f7698d48b8"}],"dates":{"updated":[],"published":{"$date":"2017-11-02T14:04:00.000Z"}},"__v":0,"description":"Mais pourquoi devrais-je abandonner jQuery pour Angular, React... ou Vue.js !?","image":"https://blog.lesieur.name/media/images/upload/hqdefault.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"5a3687f60e5e2c630c6df78f"},"title":"Modules JavaScript natifs et isomorphisme avec import, export et require","content":"\u003cfigure\u003e\n    \u003cimg width=\"560\" height=\"458\" src=\"https://blog.lesieur.name/media/images/upload/isomorphisme.jpg\" alt=\"Isomorphisme\" style=\"max-width: 100%;height: auto\"\u003e\n\u003c/figure\u003e\n\nSi vous êtes développeur web, vous devez savoir que pour que l'utilisateur final puisse afficher une page web sur son navigateur via le protocole HTTP, il faut deux choses : un code client, et un code serveur :\n\n- Dans son plus simple appareil, le code serveur est délivré par un serveur web comme Apache, nginx ou IIS à partir d'un fichier. Dans de nombreux cas, ce n'est pas à partir d'un fichier HTML, mais à partir du résultat créé en analysant du code serveur dans des fichiers PHP, .NET, Python, Ruby, etc. qu'est généré le rendu HTML.\n\n- Côté client, une fois la page reçue, le HTML sert de base au navigateur pour construire un DOM qui permettra d'afficher le site web. C'est alors le code JavaScript appelé par la page qui permettra de changer le DOM et donc, de faire des interactions à l'écran.\n\nLe développeur à donc deux travaux, développer un code qui fonctionne côté serveur et développer un autre code qui fonctionne côté client (le serveur web étant là passerelle entre client / serveur), d'où la séparation connu des rôles de développeur front-end (partie cliente) et développeur back-end (partie serveur).\n\nImaginez que l'on puisse, à partir d'exactement le même code, produire du code côté serveur et côté client ! C'est ce que l'on appelle l'isomorphisme. Un code isomorphique est un code qui peut-être exécuté par le serveur et par le client.\n\nNous allons donc utiliser le sujet de l'isomorphisme comme fil conducteur dans cet article pour traiter :\n\n- de l'`import` / `export` de Modules ECMAScript en version 6,\n- du JavaScript côté serveur avec Node.js,\n- des équivalences ECMAScript version 5 pour le `require` / `export`,\n- de l'isomorphisme exploitable pour faire du web avec [Vanilla JS](https://blog.lesieur.name/vanilla-js-france/) et [Node.js](https://nodejs.org/en/).\n\n\n\n\n\n## Exécution côté client avec les Modules ECMAScript\n\nPour commencer, utilisons un navigateur récent (Chrome, Firefox, Edge, Safari…) et faisons des choses très simples. En ECMAScript version 6 (« ES6 ») —qui succède la très populaire ECMAScript version 5 (« ES5 ») progressivement dans tous les navigateurs— il existe une manière de packager et servir du code JavaScript sous forme d'unités de code. Ces unités de code se suffisent à elles-mêmes et peuvent être réutilisées par d'autres unités de code. C'est ce qu'on appelle les Modules ECMAScript. Voici les étapes de mise en place :\n\n- je crée un module JavaScript grâce au nouveau mot clé réservé du langage `export` et\n- j'utilise un module JavaScript grâce au nouveau mot clé réservé du langage `import`.\n\n### Architecture\n\nTestons donc cela dans un navigateur à travers l'architecture de fichier suivante :\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ operation.js\n│  └─ isomorphic.js\n└─ es6.htm\n```\n\nNous allons donc remplir le fichier `es6.htm` avec le contenu suivant :\n\n*es6.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/es6.htm))*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\" /\u003e\n\u0009\u0009\u003ctitle\u003eES6 example\u003c/title\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003csection class=\"main-content\"\u003e\n\u0009\u0009\u0009\u003ch1\u003eInstructions:\u003c/h1\u003e\n\u0009\u0009\u0009\u003cp\u003eOpen console with F12.\u003c/p\u003e\n\u0009\u0009\u003c/section\u003e\n\u0009\u0009\u003c!-- Appel des différents fichiers\n\u0009\u0009     à faire exécuter par le\n\u0009\u0009     moteur JavaScript du navigateur. --\u003e\n\u0009\u0009\u003cscript src=\"javascripts/operation.js\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"javascripts/isomorphic.js\"\u003e\u003c/script\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\nNous allons ensuite nous créer un module JavaScript dans le fichier `operation.js` :\n\n*javascripts/operation.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/operation.mjs))*\n\n```js\n/* Export direct. */\nexport default function (number) {\n\u0009return {\n\u0009\u0009round: Math.round(number),\n\u0009\u0009floor: Math.floor(number),\n\u0009\u0009ceil: Math.ceil(number)\n\u0009};\n}\n\n/* Export nommé `addition`. */\nexport function addition(number1, number2) {\n\u0009return number1 + number2;\n}\n\n/* Export nommé `substraction`. */\nexport function substraction(number1, number2) {\n\u0009return number1 - number2;\n}\n\n/* Export nommé `multiplication`. */\nexport function multiplication(number1, number2) {\n\u0009return number1 * number2;\n}\n\n/* Export nommé `division`. */\nexport function division(number1, number2) {\n\u0009return number1 / number2;\n}\n```\n\nEt nous allons créer le cœur du programme dans un module `isomorphic.js` qui fera office de contrôleur :\n\n*javascripts/isomorphic.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/isomorphic.mjs))*\n\n```js\n/* Récupération du module direct depuis `export default function ()` */\nimport tools from \"./operation.js\";\n\n/* Récupération des exports nommés du module avec `export function \u003cname\u003e()` */\nimport { addition, substraction, multiplication, division } from \"./operation.js\";\n\n/* Variables à tester. */\nvar number1 = 13,\n\u0009number2 = 7.7;\n\n/* Utilisation des fonctions de nos modules. */\nconsole.log('addition', addition(number1, number2));\nconsole.log('substraction', substraction(number1, number2));\nconsole.log('multiplication', multiplication(number1, number2));\nconsole.log('division', division(number1, number2));\nconsole.log('round', tools(number2).round);\nconsole.log('floor', tools(number2).floor);\nconsole.log('ceil', tools(number2).ceil);\n```\n\n### Quelques erreurs\n\nNous allons donc ouvrir le fichier `es6.htm` dans le navigateur et ouvrir notre console avec F12.\n\nLes erreurs suivantes sont affichées (dans Chrome) :\n\n```txt\nAccess to Script at 'file:///\u003cpath/to/your/workspace\u003e/isomorphism/javascripts/operation.js' from origin 'null' has been blocked by CORS policy: Invalid response. Origin 'null' is therefore not allowed access.\nAccess to Script at 'file:///\u003cpath/to/your/workspace\u003e/isomorphism/javascripts/isomporphic.js' from origin 'null' has been blocked by CORS policy: Invalid response. Origin 'null' is therefore not allowed access.\n```\n\nCela est dû au fait qu'il vous faut l'autorisation d'utiliser un module depuis un autre nom de domaine que le vôtre à cause du mécanisme de « _Cross-origin resource sharing_ » des navigateurs. Vous allez me dire que vos fichiers `.js` sont pourtant sur le même serveur web que votre page `.htm` ? En fait, pour que ce soit le cas, il faudrait que votre page soit sur un serveur web ! Aussi dans l'URL de votre page dans le navigateur, il faudrait que `file:///\u003cpath/to/your/workspace\u003e/es6.htm` soit remplacée, par exemple par `http://\u003cyour-local-domain-name\u003e/es6.htm`. Lançons donc un serveur web.\n\n\u003e De mon côté, je vais utiliser [Node.js](https://nodejs.org/en/) qui une fois installé me donne accès à la commande `npm install -g node-atlas`, ce qui me permet d'utiliser la commande [`node-atlas`](https://www.npmjs.com/package/node-atlas). Celle-ci lance un serveur web basique là où elle est lancée. Vous pouvez tout autant utiliser `http-server` ou votre propre serveur Apache, etc. pour tester ça.\n\nUne fois le serveur web lancé, en vous rendant à `http://\u003cyour-local-domain-name\u003e/es6.htm`, vous aurez cette fois l'erreur suivante :\n\n```txt\nUncaught SyntaxError: Unexpected token export\nUncaught SyntaxError: Unexpected token import\n```\n\nCela vient du fait que pour utiliser des modules JavaScript, il faut le préciser dans le `type` de la balise `\u003cscript\u003e`. Notre code HTML précédent devient donc :\n\n*es6.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/es6.htm))*\n\n```htm\n...\n\u0009\u0009\u003cscript src=\"javascripts/operation.js\" type=\"module\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"javascripts/isomorphic.js\" type=\"module\"\u003e\u003c/script\u003e\n...\n```\n\n### Résultat\n\nCette fois la magie opère ! Vous constaterez dans votre console les sorties suivantes :\n\n```txt\naddition 20.7\nsubstraction 5.3\nmultiplication 100.10000000000001\ndivision 1.6883116883116882\nround 8\nfloor 7\nceil 8\n```\n\n\u003e Vous pouvez aussi voir ce résultat en live en vous rendant à cette adresse qui se sert d'un [serveur web GitHub Pages pour faire fonctionner l'exemple ES6](https://haeresis.github.io/import-export-require-isomorphism/es6.htm).\n\n\n\n\n\n## Exécution côté serveur des Modules ECMAScript avec Node.js\n\nL'idée ici va être de faire exécuter le fichier `isomorphic.js` du côté serveur. Il va faire appel à `operation.js` afin d'obtenir le même résultat que côté client dans votre console. Pour cela nous allons utiliser la commande :\n\n```bash\n\u003e node ./javascripts/isomorphic.js\n```\n\ndepuis le dossier où se situe actuellement `es6.htm`.\n\nMais faire cela nous renvoie l'erreur :\n\n```txt\nSyntaxError: Unexpected token import\n...\n```\n\n### Fonctionnalité expérimentale\n\nPour pouvoir exécuter notre fichier `isomorphic.js` côté serveur, il va falloir utiliser une fonctionnalité expérimentale de Node.js car, à l'heure actuelle, les Modules ECMAScript (« ESM ») ne sont pas supportés par Node.js en standard. En réalité, Node.js a déjà son propre système de chargement de module basé sur une spécification appelée CommonJS. Parce que Node.js a déjà son système d'import, appelé `require`, le meilleur moyen pour lui de savoir si un fichier doit être interprété en tant que Module ECMAScript ou en tant que module Node.js standard est de vérifier l'extension du fichier. C'est pourquoi un fichier JavaScript écrit sous forme de module ne doit plus avoir l'extension `.js` mais l'extension `.mjs`. Dans ce cas, Node.js sait que c'est un Module ECMAScript et utilise le système de chargement de module ESM et non CommonJS.\n\nNous allons donc dans un premier temps renommer nos fichiers `operation.js` et `isomorphic.js` en `operation.mjs` et `isomorphic.mjs` :\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ operation.mjs\n│  └─ isomorphic.mjs\n└─ es6.htm\n```\n\nEt puisque le nom a changé, notre fichier `isomorphic.mjs` va maintenant faire appel à `operation.mjs`.\n\n*javascripts/isomorphic.mjs ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/isomorphic.mjs))*\n\n```js\n/* Récupération du module direct depuis `export default function ()` */\nimport tools from \"./operation.mjs\";\n\n/* Récupération des exports nommés du module avec `export function \u003cname\u003e()` */\nimport { addition, substraction, multiplication, division } from \"./operation.mjs\";\n\n...\n```\n\n### Résultat\n\nIl est à présent possible d'obtenir le même résultat que côté client avec la commande :\n\n```bash\n\u003e node --experimental-modules ./javascripts/isomorphic.mjs\n```\n\nVous obtiendrez alors la sortie :\n\n```txt\naddition 20.7\nsubstraction 5.3\nmultiplication 100.10000000000001\ndivision 1.6883116883116882\nround 8\nfloor 7\nceil 8\n```\n\n### Et le client ?\n\nPour finir, afin de toujours rendre opérationnel notre appel depuis `http://\u003cyour-local-domain-name\u003e/es6.htm`, nous allons également changer les chemins vers les nouveaux fichiers `operation.mjs` et `isomorphic.mjs` :\n\n```html\n...\n\u0009\u0009\u003cscript src=\"javascripts/operation.mjs\" type=\"module\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"javascripts/isomorphic.mjs\" type=\"module\"\u003e\u003c/script\u003e\n...\n```\n\nNous avons ici un exemple de fichiers ES6 parfaitement isomorphiques !\n\n\u003e Vous pouvez revoir ce résultat en live en vous rendant sur le [serveur web GitHub Pages](https://haeresis.github.io/import-export-require-isomorphism/es6.htm).\n\n\n\n\n\n## Méthodes ES5 pour l'import / export\n\nComme vous avez pu le constater, la fonctionnalité de Modules ECMAScript est expérimentale côté serveur et pas encore totalement supportée par tous les navigateurs côté client, car elle est introduite avec ES6. La question que l'on peut se poser est la suivante : est-il nécessaire d'utiliser une syntaxe ES6 et un Module ECMAScript pour faire de l'isomorphisme ? La réponse est non. Il est tout à fait possible d'arriver au même résultat en utilisant les modules CommonJS utilisés par Node.js et en mimant ce mécanisme côté client.\n\nNous allons ajouter les fichiers `operation.js` et `isomorphic.js` qui n'utilisent pas la syntaxe de module ES6, et créer un nouveau fichier `es5.htm` qui utilisera ces fichiers.\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ operation.js\n│  ├─ operation.mjs\n│  ├─ isomorphic.js\n│  └─ isomorphic.mjs\n├─ es5.htm\n└─ es6.htm\n```\n\n### Côté serveur\n\nNous allons par ailleurs dans chacun de ces fichiers utiliser l'export CommonJS de Node.js. Celui-ci fonctionne avec les propriétés `module.exports` et `require`.\n\nNous permettons donc l'export de nos fonctionnalités :\n\n*javascripts/operation.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/operation.js))*\n\n```js\n/* Export CommonJS de Node.js. */\nmodule.exports = function (number) {\n\u0009return {\n\n\u0009\u0009/* Export direct. */\n\u0009\u0009round: Math.round(number),\n\u0009\u0009floor: Math.floor(number),\n\u0009\u0009ceil: Math.ceil(number),\n\n\u0009\u0009/* Export fonction `addition`. */\n\u0009\u0009addition: function (number1, number2) {\n\u0009\u0009\u0009return number1 + number2;\n\u0009\u0009},\n\n\u0009\u0009/* Export fonction `substraction`. */\n\u0009\u0009substraction: function (number1, number2) {\n\u0009\u0009\u0009return number1 - number2;\n\u0009\u0009},\n\n\u0009\u0009/* Export fonction `multiplication`. */\n\u0009\u0009multiplication: function (number1, number2) {\n\u0009\u0009\u0009return number1 * number2;\n\u0009\u0009},\n\n\u0009\u0009/* Export fonction `division`. */\n\u0009\u0009division: function (number1, number2) {\n\u0009\u0009\u0009return number1 / number2;\n\u0009\u0009}\n\u0009};\n};\n```\n\nPuis nous les exécutons depuis le script d'appel :\n\n*javascripts/isomorphic.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/isomorphic.js))*\n\n```js\n\u0009/* Variables à tester. */\nvar number1 = 13,\n\u0009number2 = 7.7,\n\n\u0009/* Récupération du module direct depuis `module.exports` */\n\u0009tools = require('./operation.js'),\n\u0009operation = tools();\n\n/* Utilisation des fonctions de notre import. */\nconsole.log('addition', operation.addition(number1, number2));\nconsole.log('substraction', operation.substraction(number1, number2));\nconsole.log('multiplication', operation.multiplication(number1, number2));\nconsole.log('division', operation.division(number1, number2));\nconsole.log('round', tools(number2).round);\nconsole.log('floor', tools(number2).floor);\nconsole.log('ceil', tools(number2).ceil);\n```\n\nNous obtenons alors avec la commande :\n\n```bash\n\u003e node ./javascripts/isomorphic.js\n```\n\nle résultat suivant :\n\n```txt\naddition 20.7\nsubstraction 5.3\nmultiplication 100.10000000000001\ndivision 1.6883116883116882\nround 8\nfloor 7\nceil 8\n```\n\n### Côté client\n\nAlimentons alors côté client notre fichier `es5.htm` :\n\n*es5.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/es5.htm))*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\" /\u003e\n\u0009\u0009\u003ctitle\u003eES5 example\u003c/title\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003csection class=\"main-content\"\u003e\n\u0009\u0009\u0009\u003ch1\u003eInstructions:\u003c/h1\u003e\n\u0009\u0009\u0009\u003cp\u003eOpen console with F12.\u003c/p\u003e\n\u0009\u0009\u003c/section\u003e\n\u0009\u0009\u003cscript\u003evar module = {};\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"javascripts/operation.js\"\u003e\u003c/script\u003e\n\u0009\u0009\u003cscript\u003evar require = function () { return module.exports; }\u003c/script\u003e\n\u0009\u0009\u003cscript src=\"javascripts/isomorphic.js\"\u003e\u003c/script\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\nCe qui nous permet d'obtenir à l'adresse `http://\u003cyour-local-domain-name\u003e/es5.htm`, en allant dans la console derrière F12 le résultat :\n\n```txt\naddition 20.7\nsubstraction 5.3\nmultiplication 100.10000000000001\ndivision 1.6883116883116882\nround 8\nfloor 7\nceil 8\n```\n\nNous avons alors « presque » à faire à de l'isomorphisme, car nous avons dû ajouter les morceaux de code :\n\n```html\n\u003cscript\u003evar module = {};\u003c/script\u003e\n```\net :\n\n```html\n\u003cscript\u003evar require = function () { return module.exports; }\u003c/script\u003e\n```\n\npour simuler le comportement de CommonJS côté client.\n\n\u003e Vous pouvez aussi voir ce résultat en live en vous rendant à cette adresse qui se sert d'un [serveur web GitHub Pages pour faire fonctionner l'exemple ES5](https://haeresis.github.io/import-export-require-isomorphism/es5.htm).\n\n\n\n\n\n## Isomporphisme exploitable pour un site web avec Vanilla JS et Node.js\n\nVous aurez probablement remarqué que les trois premières parties de cet article vous font une belle jambe pour faire un site web. Certes, le résultat est exécuté de la même manière avec une commande `node` (côté serveur) qu'avec un appel depuis une balise `\u003cscript\u003e` mais vous ne pouvez rien en faire. Effectivement, la grande différence entre client et serveur c'est que ce que vous ferez côté client consistera à manipuler le DOM alors que ce que vous ferez côté serveur consistera à générer une réponse HTTP à envoyer au client. On est donc loin des messages à afficher dans la console !\n\n### Partie cliente, partie serveur et partie isomorphique\n\nNous pouvons donc voir assez rapidement que la totalité du code ne pourra pas être isomorphique. Il y aura forcément :\n\n- coté serveur, du code dédié à faire le pont entre les fichiers et données stockées sur le serveur et leurs envois par réponse HTTP. Ce sera le code uniquement serveur. Et\n- côté client, du code dédié à faire le pont entre ce que l'on récupère en source HTML ou par requête XMLHttpRequest et le DOM. Ce sera le code uniquement client.\n\nCependant, hormis ces mécanismes, la totalité du code restant pourra être utilisée aussi bien pour générer côté serveur la réponse HTTP dont va se servir le client pour générer son DOM lors du premier affichage, que pour hydrater le code côté client ou générer toutes les nouvelles pages visitées sans solliciter le serveur.\n\nC'est à cette condition que nous pourrons réellement estimer que l'on développe une application isomorphique.\n\nVoyons cela par l'exemple côté navigateur sans bibliothèque avec Vanilla JS et côté serveur avec Node.js !\n\n### Le serveur HTTP\n\nNous allons donc créer un serveur Node.js dans le fichier `server.js` en utilisant l'API HTTP native de Node.js ainsi que le module communautaire JSDOM permettant de manipuler virtuellement le DOM côté serveur afin d'exploiter du code isomorphique. Nous aurions pu utiliser Express ou NodeAtlas pour faire cela avec facilité, mais ce sera un bon exercice de compréhension complète de A à Z sans zones d'ombres.\n\nPartons de la structure actuelle à laquelle nous allons rajouter notre fichier `server.js` pour développer le code serveur non isomorphique servant les fichiers demandés au client ainsi que le fichier `package.json` pour permettre l'installation du DOM virtuel JSDOM. Nous allons également créer un fichier `layout.htm` qui va servir de base HTML pour tous les fichiers renvoyés par le serveur.\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ isomorphic.js\n│  ├─ isomorphic.mjs\n│  ├─ operation.js\n│  ├─ operation.mjs\n├─ es5.htm\n├─ es6.htm\n├─ layout.htm\n├─ server.js\n└─ package.json\n```\n\nRemplissons le fichier `package.json` avec :\n\n*package.json ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/package.json))*\n\n```json\n{}\n```\n\nPuis exécutons la commande :\n\n```bash\n\u003e npm install --save jsdom\n```\n\nCe qui va remplir le fichier `package.json` ainsi :\n\n*package.json ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/package.json))*\n\n```json\n{\n  \"dependencies\": {\n    \"jsdom\": \"^11.5.1\"\n  }\n}\n\n```\n\net créer un fichier `package-lock.json`.\n\nGrâce à cela, le module communautaire npm JSDOM et ses dépendances seront installés dans le dossier `node_modules`.\n\nBasiquement, notre fichier `layout.htm` ressemblera à cela :\n\n*layout.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/layout.htm))*\n\n```htm\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n\u0009\u003chead\u003e\n\u0009\u0009\u003cbase href=\"MyBase\" /\u003e\n\u0009\u0009\u003cmeta charset=\"utf-8\" /\u003e\n\u0009\u0009\u003ctitle\u003eIsomporphic example\u003c/title\u003e\n\u0009\u0009\u003c!-- Un peu de CSS pour faire changer les\n\u0009\u0009     pages en changeant l'opacité. --\u003e\n\u0009\u0009\u003cstyle\u003e\n\u0009\u0009\u0009// Chaque `div` `layout` va s'afficher\n\u0009\u0009\u0009// les unes sur les autres permettant\n\u0009\u0009\u0009// de faire disparaitre progressivement\n\u0009\u0009\u0009// celle du dessus…\n\u0009\u0009\u0009.layout {\n\u0009\u0009\u0009\u0009position: absolute;\n\u0009\u0009\u0009\u0009width: 100%;\n\u0009\u0009\u0009\u0009height: 100%;\n\u0009\u0009\u0009\u0009top: 0;\n\u0009\u0009\u0009\u0009left: 0;\n\u0009\u0009\u0009\u0009opacity: 1;\n\u0009\u0009\u0009\u0009background-color: #fff;\n\u0009\u0009\u0009\u0009-webkit-transition: opacity 1s ease;\n\u0009\u0009\u0009\u0009   -moz-transition: opacity 1s ease;\n\u0009\u0009\u0009\u0009    -ms-transition: opacity 1s ease;\n\u0009\u0009\u0009\u0009     -o-transition: opacity 1s ease;\n\u0009\u0009\u0009\u0009        transition: opacity 1s ease;\n\u0009\u0009\u0009}\n\u0009\u0009\u0009// …pour rendre visible celle\n\u0009\u0009\u0009// du dessous. Nous verrons cela\n\u0009\u0009\u0009// plus loin.\n\u0009\u0009\u0009.change {\n\u0009\u0009\u0009\u0009opacity: 0;\n\u0009\u0009\u0009\u0009z-index: 2;\n\u0009\u0009\u0009}\n\u0009\u0009\u003c/style\u003e\n\u0009\u003c/head\u003e\n\u0009\u003cbody\u003e\n\u0009\u0009\u003c!-- Ici sera montée la page demandée par le routeur\n\u0009\u0009     côté serveur ou sera hydratée la page demandée\n\u0009\u0009     côté client. --\u003e\n\u0009\u0009\u003cdiv class=\"layout\"\u003e\u003c/div\u003e\n\u0009\u0009\u003c!-- Ici sera exécuté la partie cliente --\u003e\n\u0009\u0009\u003cscript src=\"javascripts/client.js\"\u003e\u003c/script\u003e\n\u0009\u003c/body\u003e\n\u003c/html\u003e\n```\n\nRemplissons maintenant le fichier `server.js` avec le code serveur dédié :\n\n*server.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/server.js))*\n\n```js\n\u0009/* Récupération de l'API native HTTP\n\u0009 * pour faire des échanges client-server\n\u0009 * (l'équivalent de APACHE). */\nvar http = require('http'),\n\u0009/* Récupération de l'API native File System\n\u0009 * pour lire et écrire dans des fichiers\n\u0009 * sur le serveur. */\n\u0009fs = require('fs'),\n\u0009/* Récupération de la bibliothèque JSDOM\n\u0009 * pour manipuler le DOM « virtuel »\n\u0009 * sur le serveur. */\n\u0009JSDOM = require('jsdom').JSDOM,\n\n\u0009/* Port d'écoute de notre site web. */\n\u0009httpPort = 8080,\n\u0009/* Nom de domaine de notre site web. */\n\u0009httpDomain = 'localhost';\n\n/* Création du serveur web avec\n * récupération de toutes les requêtes faites\n * par le navigateur dans `request` et un objet\n * `response` pour renvoyer le contenu HTML demandé\n * au navigateur. */\nhttp.createServer(function (request, response) {\n\u0009var router,\n\u0009\u0009file,\n\u0009\u0009statusCode,\n\u0009\u0009contentType;\n\n\u0009/* Cas des demandes d'adresse finissant par `/`. */\n\u0009if (/\\/$/g.test(request.url)) {\n\u0009\u0009/* Le site répondra donc à :\n\u0009\u0009 * - `http://localhost:8080/`\n\u0009\u0009 * - `http://localhost:8080/about-us/`\n\u0009\u0009 * - `http://localhost:8080/contact-us/`\n\u0009\u0009 * ... */\n\u0009\u0009router = {\n\u0009\u0009\u0009'/': 'index',\n\u0009\u0009\u0009'/about-us/': 'overview',\n\u0009\u0009\u0009'/contact-us/': 'contact'\n\u0009\u0009};\n\n\u0009\u0009/* ...ou à n'importe quoi finissant par `/`\n\u0009\u0009 * `http://localhost:8080/.+/`. */\n\u0009\u0009file = router[request.url] || 'error';\n\n\u0009\u0009/* Si l'adresse est trouvée dans `router`,\n\u0009\u0009 * la `response` sera valide et en `200` sinon\n\u0009\u0009 * ce sera une page inexistante d'erreur `404`. */\n\u0009\u0009statusCode = (router[request.url]) ? 200 : 404;\n\n\u0009\u0009/* Récupération de la structure globale de\n\u0009\u0009 * chaque page dans le fichier `layout.htm`. */\n\u0009\u0009fs.readFile('layout.htm', function (err, layout) {\n\u0009\u0009\u0009if (err) {\n\u0009\u0009\u0009\u0009/* Information en cas d'erreur. */\n\u0009\u0009\u0009\u0009console.log('We cannot open layout file.', err);\n\n\u0009\u0009\u0009\u0009/* Renvoi d'une page serveur 500 en cas d'erreur. */\n\u0009\u0009\u0009\u0009response.writeHead(500, {});\n\u0009\u0009\u0009\u0009/* Fin de la transaction. */\n\u0009\u0009\u0009\u0009response.end('');\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009/* Ouverture du code isomorphique correspondant aux pages :\n\u0009\u0009\u0009 * - `views/index.htm`    si `http://localhost:8080/`            est demandée\n\u0009\u0009\u0009 * - `views/overview.htm` si `http://localhost:8080/about-us/`   est demandée\n\u0009\u0009\u0009 * - `views/contact.htm`  si `http://localhost:8080/contact-us/` est demandée\n\u0009\u0009\u0009 * - `views/error.htm`    si `http://localhost:8080/.+/`         est demandée. */\n\u0009\u0009\u0009fs.readFile('views/' + file + '.htm', 'utf-8', function (err, content) {\n\u0009\u0009\u0009\u0009var dom = new JSDOM(layout);\n\n\u0009\u0009\u0009\u0009if (err) {\n\u0009\u0009\u0009\u0009\u0009/* Information en cas d'erreur. */\n\u0009\u0009\u0009\u0009\u0009console.log('We cannot open ' + file + ' view file.', err);\n\u0009\u0009\u0009\u0009}\n\n\u0009\u0009\u0009\u0009/* Récupération de la balise `\u003cbase href=\"MyBase\" /\u003e` */\n\u0009\u0009\u0009\u0009dom.window.document.getElementsByTagName('base')[0]\n\u0009\u0009\u0009\u0009\u0009/* et changement en `\u003cbase href=\"http://localhost:8080/\" /\u003e`. */\n\u0009\u0009\u0009\u0009\u0009.setAttribute('href', 'http://' + httpDomain + ':' + httpPort + '/');\n\n\u0009\u0009\u0009\u0009/* Récupération de la balise `\u003cdiv class=\"layout\"\u003e\u003c/div\u003e` */\n\u0009\u0009\u0009\u0009dom.window.document.getElementsByClassName('layout')[0]\n\u0009\u0009\u0009\u0009\u0009/* et changement de leur contenu par le contenu\n\u0009\u0009\u0009\u0009\u0009 * généré à partir appels isomorphiques des fichiers :\n\u0009\u0009\u0009\u0009\u0009 * - `require('./views/index.js')(\u003ccontenu de `views/index.htm`\u003e, \u003cobjet window virtuel\u003e)` ou\n\u0009\u0009\u0009\u0009\u0009 * - `require('./views/overview.js')(\u003ccontenu de `views/overview.htm`\u003e, \u003cobjet window virtuel\u003e)` ou\n\u0009\u0009\u0009\u0009\u0009 * - `require('./views/contact.js')(\u003ccontenu de `views/contact.htm`\u003e, \u003cobjet window virtuel\u003e)` ou\n\u0009\u0009\u0009\u0009\u0009 * - `require('./views/error.js')(\u003ccontenu de `views/error.htm`\u003e, \u003cobjet window virtuel\u003e)` */\n\u0009\u0009\u0009\u0009\u0009.innerHTML = require('./views/' + file + '.js')(content, dom.window)\n\u0009\u0009\u0009\u0009\u0009/* et contenu dans la propriété `template`\n\u0009\u0009\u0009\u0009\u0009 * (par ex. : `'\u003cdiv class=\"layout\"\u003e\u003ch1\u003eWelco[...]\u003c/ul\u003e\u003c/div\u003e'`). */\n\u0009\u0009\u0009\u0009\u0009.template;\n\n\u0009\u0009\u0009\u0009/* Création des entêtes de réponse HTTP\n\u0009\u0009\u0009\u0009 * pour un fichier HTML\n\u0009\u0009\u0009\u0009 * soit en code `200` soit `404`. */\n\u0009\u0009\u0009\u0009response.writeHead(statusCode, {\n\u0009\u0009\u0009\u0009\u0009'Content-Type': 'text/html; charset=utf-8'\n\u0009\u0009\u0009\u0009});\n\n\u0009\u0009\u0009\u0009/* Fin de la transaction avec envoi\n\u0009\u0009\u0009\u0009 * du fichier complet (par ex. `'\u003c!DOCTYPE html\u003e\u003chtml lang=\"en\"\u003e\u003chead\u003e[...]\n\u0009\u0009\u0009\u0009 * \u003cdiv class=\"layout\"\u003e\u003ch1\u003eWelco[...]\u003c/ul\u003e\u003c/div\u003e[...]\n\u0009\u0009\u0009\u0009 * \u003c/body\u003e\u003c/html\u003e'`). */\n\u0009\u0009\u0009\u0009response.end(dom.serialize());\n\u0009\u0009\u0009});\n\u0009\u0009});\n\n\u0009/* Cas de toutes les autres demandes du navigateur\n\u0009 * fait pour récupérer directement les fichiers\n\u0009 * de ressources statiques. */\n\u0009} else {\n\u0009\u0009/* Retrait du `/` de départ pour tentative\n\u0009\u0009 * d'ouverture du fichier. (par ex.  la requête\n\u0009\u0009 * `/javascripts/client.js` tentera d'ouvrir le\n\u0009\u0009 * fichier `javascripts/client.js`). */\n\u0009\u0009file = request.url.slice(1);\n\n\u0009\u0009/* Ouverture du fichier statique demandé */\n\u0009\u0009fs.readFile(file, 'utf-8', function (err, content) {\n\u0009\u0009\u0009/* Par défaut on estime que le fichier est trouvé... */\n\u0009\u0009\u0009statusCode = 200;\n\u0009\u0009\u0009/* et n'a pas de `'Content-type'` particulier */\n\u0009\u0009\u0009contentType = {};\n\n\u0009\u0009\u0009/* Association d'un fichier de `'Content-type'`\n\u0009\u0009\u0009 * par `application/javascript` si l'extension\n\u0009\u0009\u0009 * du fichier est `'.js'`. */\n\u0009\u0009\u0009if (/\\.js$/g.test(file)) {\n\u0009\u0009\u0009\u0009contentType = {\n\u0009\u0009\u0009\u0009\u0009'Content-Type': 'application/javascript; charset=utf-8'\n\u0009\u0009\u0009\u0009};\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009/* Association d'un fichier de `'Content-type'`\n\u0009\u0009\u0009 * par `text/html` si l'extension\n\u0009\u0009\u0009 * du fichier est `'.htm'`. */\n\u0009\u0009\u0009if (/\\.htm$/g.test(file)) {\n\u0009\u0009\u0009\u0009contentType = {\n\u0009\u0009\u0009\u0009\u0009'Content-Type': 'text/html; charset=utf-8'\n\u0009\u0009\u0009\u0009};\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009if (err) {\n\u0009\u0009\u0009\u0009/* Si le ficher demandé n'existe pas\n\u0009\u0009\u0009\u0009 * on retourne un fichier en erreur\n\u0009\u0009\u0009\u0009 * 400 à contenu vide.*/\n\u0009\u0009\u0009\u0009statusCode = 404;\n\u0009\u0009\u0009\u0009contentType = {};\n\u0009\u0009\u0009\u0009content = '';\n\n\u0009\u0009\u0009\u0009/* Information en cas d'erreur */\n\u0009\u0009\u0009\u0009console.log('We cannot open ' + file + ' asset file.', err);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009/* Création des entêtes de réponse HTTP\n\u0009\u0009\u0009 * pour un fichier statique\n\u0009\u0009\u0009 * soit en code `200` soit `404`. */\n\u0009\u0009\u0009response.writeHead(statusCode, contentType);\n\n\u0009\u0009\u0009/* Fin de la transaction avec envoi\n\u0009\u0009\u0009 * du contenu du fichier s'il existe\n\u0009\u0009\u0009 * ou d'un contenu vide s'il n'existe pas. */\n\u0009\u0009\u0009response.end(content);\n\u0009\u0009});\n\u0009}\n\n/* Démarrage du serveur web */\n}).listen(httpPort, function () {\n\u0009/* Envoi d'un message à la console côté serveur\n\u0009 * quand le serveur est démarré et prêt à répondre\n\u0009 * aux demandes du client. */\n\u0009console.log('Server listening on: http://' + httpDomain +':' + httpPort + '/');\n});\n```\n\n### Les fichiers isomporphiques\n\nÀ ce stade, le fichier `server.js` va retourner une réponse HTTP différente à votre navigateur en fonction de l'adresse demandée.\n\n- Pour `http://localhost:8080/`, ce sont les fichiers de vue `views/index.html` et de modèle `views/index.js` qui vont être impliqués,\n- pour `http://localhost:8080/about-us/`, ce sont les fichiers de vue `views/overview.html` et de modèle `views/overview.js` qui vont être impliqués,\n- pour `http://localhost:8080/contact-us/`, ce sont les fichiers de vue `views/contact.html` et de modèle `views/contact.js` qui vont être impliqués et\n- pour `http://localhost:8080/.+/` (n'importe quelle adresse finissant par `/`), ce sont les fichiers de vue `views/error.html` et de modèle `views/error.js` qui vont être impliqués.\n\nPour cela, nous allons créer ces fichiers dans notre structure existante :\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ isomorphic.js\n│  ├─ isomorphic.mjs\n│  ├─ operation.js\n│  └─ operation.mjs\n├─ node_molules/\n│  ├─ ...\n├─ views/\n│  ├─ contact.htm\n│  ├─ contact.js\n│  ├─ error.htm\n│  ├─ error.js\n│  ├─ index.htm\n│  ├─ index.js\n│  ├─ overview.htm\n│  └─ overview.js\n├─ es5.htm\n├─ es6.htm\n├─ server.js\n└─ package.json\n└─ package-lock.json\n```\n\net les remplir comme suit :\n\n*views/index.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/index.htm))*\n\n```htm\n\u003c!-- Template HTML qui sera rempli par\n     `views/index.js`. --\u003e\n\u003ch1\u003eMyTitle\u003c/h1\u003e\n\u003cp\u003eMyText\u003c/p\u003e\n\u003cul\u003e\n\u0009\u003cli\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/li\u003e\n\u0009\u003cli\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/li\u003e\n\u0009\u003cli\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n```\n\n*views/index.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/index.js))*\n\n```js\n/* Utilisation de l'export CommonJS de Node.js. */\nmodule.exports = function (template, window) {\n\n\u0009\u0009/* Création d'un espace pour manipuler un fragment HTML... */\n\u0009var body = window.document.implementation.createHTMLDocument().body,\n\n\u0009\u0009/* Préparation des liens pour injection. */\n\u0009\u0009links = [{\n\u0009\u0009\u0009href: './about-us/',\n\u0009\u0009\u0009content: 'Go to about page'\n\u0009\u0009}, {\n\u0009\u0009\u0009href: './contact-us/',\n\u0009\u0009\u0009content: 'Go to contact page'\n\u0009\u0009}, {\n\u0009\u0009\u0009href: './error/',\n\u0009\u0009\u0009content: 'Try an error page'\n\u0009\u0009}];\n\n\u0009/* ...lu depuis le fichier `views/index.htm`. */\n\u0009body.innerHTML = template;\n\n\u0009/* Injection du titre. */\n\u0009body.getElementsByTagName('h1')[0].textContent = 'Welcome';\n\n\u0009/* Injection du contenu. */\n\u0009body.getElementsByTagName('p')[0].textContent = 'This is the welcome page!';\n\n\u0009/* Injection des liens. */\n\u0009Array.prototype.forEach.call(body.getElementsByTagName('a'), function (a, i) {\n\u0009\u0009a.textContent = links[i].content;\n\u0009\u0009a.setAttribute('href', links[i].href);\n\u0009});\n\n\u0009return {\n\u0009\u0009template: body.innerHTML\n\u0009};\n};\n```\n\n*views/overview.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/overview.htm))*\n\n```htm\n\u003c!-- Idem que pour `views/index.htm`. --\u003e\n\u003ch1\u003eMyTitle\u003c/h1\u003e\n\u003cp\u003eMyText\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/p\u003e\n```\n\n*views/overview.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/overview.js))*\n\n```js\n/* Idem que pour `views/index.js`. */\nmodule.exports = function (template, window) {\n\u0009var body = window.document.implementation.createHTMLDocument().body,\n\u0009\u0009a;\n\n\u0009body.innerHTML = template;\n\n\u0009body.getElementsByTagName('h1')[0].textContent = 'About this website';\n\u0009body.getElementsByTagName('p')[0].textContent = 'The goal of this website is to provide a way to run isomporphique from scratch!';\n\u0009a = body.getElementsByTagName('a')[0];\n\u0009a.textContent = 'Back to the home';\n\u0009a.setAttribute('href', './');\n\n\u0009return {\n\u0009\u0009template: body.innerHTML\n\u0009};\n};\n```\n\n*views/contact.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/contact.htm))*\n\n```htm\n\u003c!-- Idem que pour `views/index.htm`. --\u003e\n\u003ch1\u003eMyTitle\u003c/h1\u003e\n\u003cp\u003eMyText\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/p\u003e\n```\n\n*views/contact.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/contact.js))*\n\n```js\n/* Idem que pour `views/index.js`. */\nmodule.exports = function (template, window) {\n\u0009var body = window.document.implementation.createHTMLDocument().body,\n\u0009\u0009a;\n\n\u0009body.innerHTML = template;\n\n\u0009a = body.getElementsByTagName('a')[0];\n\u0009a.textContent = 'Back to the home';\n\u0009a.setAttribute('href', './');\n\n\u0009body.getElementsByTagName('h1')[0].textContent = 'Contact US';\n\u0009body.getElementsByTagName('p')[0].innerHTML = 'You can contact us by using the following email: \u003ca href=\"mailto:bruno.lesieur@gmail.com\"\u003ebruno.lesieur@gmail.com\u003c/a\u003e';\n\n\u0009return {\n\u0009\u0009template: body.innerHTML\n\u0009};\n};\n```\n\n*views/error.htm ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/error.htm))*\n\n```htm\n\u003c!-- Idem que pour `views/index.htm`. --\u003e\n\u003ch1\u003eMyTitle\u003c/h1\u003e\n\u003cp\u003eMyText\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"MyLinkHref\"\u003eMyLinkContent\u003c/a\u003e\u003c/p\u003e\n```\n\n*views/error.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/views/error.js))*\n\n```js\n/* Idem que pour `views/index.js`. */\nmodule.exports = function (template, window) {\n\u0009var body = window.document.implementation.createHTMLDocument().body,\n\u0009\u0009a;\n\n\u0009body.innerHTML = template;\n\n\u0009body.getElementsByTagName('h1')[0].textContent = 'Error page';\n\u0009body.getElementsByTagName('p')[0].textContent = 'This is the error page...';\n\u0009a = body.getElementsByTagName('a')[0];\n\u0009a.textContent = 'Back to the home';\n\u0009a.setAttribute('href', './');\n\n\u0009return {\n\u0009\u0009template: body.innerHTML\n\u0009};\n};\n```\n\nComprenez bien qu'à ce stade, toutes les nouvelles pages que vous ajouterez se rempliront avec une partie vue représentée par le HTML pour l'affichage de la page et une partie modèle pour les actions que vous ferez sur cette vue (ici, ajouter des textes). Ce code fonctionne aussi bien en étant appelé depuis le serveur qu'en étant appelé depuis le client. **Il est donc parfaitement isomorphique**.\n\n### Le navigateur web\n\nÀ partir d'ici, vous pouvez naviguer sur le site et le parcourir en utilisant les liens à l'adresse `http://localhost:8080/`. Si vous regardez dans la console de votre navigateur (F12 \u003e Console), vous verrez juste que le fichier `http://localhost:8080/javascripts/client.js` n'est pas chargé.\n\n```txt\nGET http://localhost:8080/javascripts/client.js 404 (Not Found)\n```\n\nVous constaterez également que changer de page se fait en rechargeant le navigateur pour chaque page.\n\nC'est ici que va entrer en jeu la partie cliente dont le but va être d'exécuter les fichiers isomorphiques contenus dans le dossier `views` mais côté client. C'est grâce à cela que l'on sera capable de changer de page dynamiquement sans rechargement de page grâce aux appels XMLHttpRequest. Le fait de reprendre la main côté client sur la page courante s'appelle l'hydratation. Et en réalité, changer de page revient seulement à faire exécuter le couple `.htm` / `.js` directement dans le navigateur et simuler un changement de page avec `pushState` et l'évènement `popstate`.\n\nNous allons donc remplir le fichier `client.js`, qui lui, n'est compatible que du côté client :\n\n```md\nisomorphism/\n├─ javascripts/\n│  ├─ client.js\n│  ├─ isomorphic.js\n│  ├─ isomorphic.mjs\n│  ├─ operation.js\n│  └─ operation.mjs\n├─ node_molules/\n│  ├─ ...\n├─ views/\n│  ├─ contact.htm\n│  ├─ contact.js\n│  ├─ error.htm\n│  ├─ error.js\n│  ├─ index.htm\n│  ├─ index.js\n│  ├─ overview.htm\n│  └─ overview.js\n├─ es5.htm\n├─ es6.htm\n├─ server.js\n└─ package.json\n└─ package-lock.json\n```\n\navec le contenu suivant :\n\n*javascripts/client.js ([code source](https://github.com/Haeresis/import-export-require-isomorphism/blob/master/javascripts/client.js))*\n\n```js\n/* Sortir de la portée globale\n * pour notre code personnel afin\n * d'éviter des conflits.\n */\n;(function () {\n\u0009/* Les pages navigables sont :\n\u0009 * - `http://localhost:8080/`\n\u0009 * - `http://localhost:8080/about-us/`\n\u0009 * - `http://localhost:8080/contact-us/`\n\u0009 * ... */\n\u0009var router = {\n\u0009\u0009'/': 'index',\n\u0009\u0009'/about-us/': 'overview',\n\u0009\u0009'/contact-us/': 'contact'\n\u0009},\n\n\u0009/* ...et celle envoyant un contenu en erreur sont : `/`\n\u0009 * `http://localhost:8080/.+/`. */\n\u0009file = router[location.pathname] || 'error';\n\n\u0009/* Compatiblilité CommonJS simple. */\n\u0009window.module = {};\n\n\u0009/* Gestion de la navigation dans l'historique\n\u0009 * notamment en cliquant sur le bouton « Retour »\n\u0009 * du navigateur. */\n\u0009window.addEventListener('popstate', function () {\n\u0009\u0009/* Récupération de l'URL après retour en\n\u0009\u0009 * arrière ou en avant dans l'historique. */\n\u0009\u0009file = router[location.pathname] || 'error';\n\n\u0009\u0009/* Puis récupération du bon couple `.htm` / `.js`\n\u0009\u0009 * en provenance de `views`. */\n\u0009\u0009changeRoute(file, true);\n\u0009});\n\n\u0009/* Gestion du changement de page sans rechargement\n\u0009 * à partir du fichier de destination. `animate` permet\n\u0009 * de savoir si l'hydratation va être faite avec un effet\n\u0009 * d'animation ou non. */\n\u0009function changeRoute(file, animate) {\n\n\u0009\u0009/* Récupération de la vue et du modèle isomorphique.\n\u0009\u0009 * `file` vaut soit `index`, `overview` ou `contact`\n\u0009\u0009 * en fonction de ce que détecte `router` comme\n\u0009\u0009 * page courante. */\n\u0009\u0009Promise.all([\n\u0009\u0009\u0009/* On fait une demande XMLHttpRequest\n\u0009\u0009\u0009 * avec `fetch` qui retourne une promesse\n\u0009\u0009\u0009 * puis on transforme le résultat au format texte. */\n\u0009\u0009\u0009fetch('views/' + file + '.htm').then(x =\u003e x.text()),\n\u0009\u0009\u0009fetch('views/' + file + '.js').then(x =\u003e x.text())\n\u0009\u0009]).then(function (result) {\n\n\u0009\u0009\u0009\u0009/* Récupération d'une référence sur le contenu de\n\u0009\u0009\u0009\u0009 * la page à hydrater. */\n\u0009\u0009\u0009var layout = document.getElementsByClassName('layout'),\n\n\u0009\u0009\u0009\u0009/* Récupération des fichiers `.htm` et `.js`\n\u0009\u0009\u0009\u0009 * en retour de promesse. */\n\u0009\u0009\u0009\u0009view = result[0],\n\u0009\u0009\u0009\u0009model = result[1],\n\n\u0009\u0009\u0009\u0009/* Exécution côté client des fichiers\n\u0009\u0009\u0009\u0009 * en provenance du serveur. */\n\u0009\u0009\u0009\u0009content = eval(model)(view, window);\n\n\u0009\u0009\u0009/* Ajout du nouveau contenu dans une `div`\n\u0009\u0009\u0009 * différente pour faire une animation si\n\u0009\u0009\u0009 * demandé. */\n\u0009\u0009\u0009if (animate) {\n\n\u0009\u0009\u0009\u0009/* Ajout de la nouvelle page après la\n\u0009\u0009\u0009\u0009 * page courante. */\n\u0009\u0009\u0009\u0009layout = layout[layout.length - 1];\n\u0009\u0009\u0009\u0009layout.insertAdjacentHTML(\"afterend\", '\u003cdiv class=\"layout\"\u003e' + content.template + \"\u003c/div\u003e\");\n\n\u0009\u0009\u0009\u0009/* Ajout de la classe indiquant\n\u0009\u0009\u0009\u0009 * l'animation CSS3 a été exécutée. */\n\u0009\u0009\u0009\u0009layout.classList.add('change');\n\n\u0009\u0009\u0009\u0009/* Retrait de la page d'où l'on vient\n\u0009\u0009\u0009\u0009 * à la fin de l'animation. */\n\u0009\u0009\u0009\u0009setTimeout(function () {\n\u0009\u0009\u0009\u0009\u0009layout.parentNode.removeChild(layout);\n\u0009\u0009\u0009\u0009}, 1000);\n\n\u0009\u0009\u0009/* Hydratation simple du contenu existant\n\u0009\u0009\u0009 * si pas d'animation. */\n\u0009\u0009\u0009} else {\n\u0009\u0009\u0009\u0009layout.innerHTML = content.template;\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009/* Faire changer la page sans rechargement\n\u0009\u0009\u0009 * à tous les liens présents dans la page. */\n\u0009\u0009\u0009Array.prototype.forEach.call(document.getElementsByTagName('a'), function (a) {\n\n\u0009\u0009\u0009\u0009/* Pour chaque lien, lors du clic. */\n\u0009\u0009\u0009\u0009a.addEventListener('click', function (e) {\n\n\u0009\u0009\u0009\u0009\u0009/* Pas de changement de page... */\n\u0009\u0009\u0009\u0009\u0009e.preventDefault();\n\n\u0009\u0009\u0009\u0009\u0009/* ...mais changement d'URL de la page. */\n\u0009\u0009\u0009\u0009\u0009history.pushState(null, 'Isomporphic example', document.getElementsByTagName('base')[0].getAttribute('href') + a.getAttribute('href'));\n\n\u0009\u0009\u0009\u0009\u0009/* La page à charger étant choisie par le routeur */\n\u0009\u0009\u0009\u0009\u0009/* en se basant sur la nouvelle URL. */\n\u0009\u0009\u0009\u0009\u0009file = router[location.pathname] || 'error';\n\n\u0009\u0009\u0009\u0009\u0009/* Changement de page. */\n\u0009\u0009\u0009\u0009\u0009changeRoute(file, true);\n\u0009\u0009\u0009\u0009});\n\u0009\u0009\u0009});\n\u0009\u0009});\n\u0009}\n\n\u0009/* Hydratation de la page appelant `javascripts/client.js`\n\u0009 * avec le bon couple `.htm` / `.js` */\n\u0009changeRoute(file, false);\n}());\n```\n\nÀ partir de maintenant, depuis n'importe quelle page affichée en tapant l'URL dans la barre d'adresse, c'est le serveur qui répondra par retour HTTP grâce au fichier `server.js`. En fouillant la source HTML de votre page, vous constaterez que la page est correctement générée et peut donc être indexée par les moteurs de recherche. Une fois sur une page, le fichier `javascripts/client.js` va s'exécuter, hydratant le DOM actuel et permettant aux liens de changer de page sans rechargement, mais en appelant seulement les fragments isomorphiques pour les exécuter sur place (par le navigateur). Le résultat est un changement de page dynamique que vous pouvez apprécier grâce à l'animation de transition CSS mise en place dans `layout.htm`.\n\n\u003e Vous pouvez tester l'hydratation cliente grâce à la mockup que vous trouverez en live grâce au système GitHub Pages : [exemple d'hydratation côté client](https://haeresis.github.io/import-export-require-isomorphism/index.html).\n\n\n\n## Conclusion\n\nVous en savez plus maintenant sur les mécanismes d'utilisation des Modules ECMAScript ou CommonJS / Node.js pour créer des applications web isomorphiques !\n\nBien entendu, le code actuel est loin d'être pratique pour la maintenance et n'est ni optimisé pour l'hydratation cliente (actuellement on jette le DOM et on le recrée au lieu de réellement l'hydrater), ni optimisé pour la charge serveur (on pourrait utiliser du cache côté serveur pour ne faire générer les rendus d'une page qu'une fois toutes les X secondes, minutes ou même heures en fonction des zones statiques ou dynamiques des pages).\n\nOn se demandera comment gérer plus simplement l'injection de texte dans les templates plutôt que de manipuler le DOM, comment faire fonctionner du code avec des évènements JavaScript côté serveur ? Si c'est possible ? Comment mélanger différents types de modules ?\n\nToutes ces solutions sont adressées plus ou moins simplement avec l'utilisation de l'écosystème Vue (par ex. [webpack](https://webpack.js.org/) pour la partie cliente, [Nuxt](https://fr.nuxtjs.org/) pour la partie serveur et [Vue.js](https://fr.vuejs.org/v2/guide/) pour la partie isomorphique).\n\nPour ma part, pour passer à l'étape supérieure, tout en comprenant ce que vous faites (pour de l'isomorphisme aux petits oignons), je vous propose de vous tourner vers le couple [Vue](https://fr.vuejs.org/) / [NodeAtlas](https://node-atlas.js.org/) (un framework basé sur [Express](http://expressjs.com/fr/) et [Socket.io](https://socket.io/)). Vue et NodeAtlas vous permettront de réaliser des sites réactifs et isomorphiques facilement et progressivement. Essayez avec l'article [Vue + NodeAtlas : de l'art du SSR ou Rendu Côte Serveur avec JavaScript](https://blog.lesieur.name/ssr-ou-du-rendu-cote-serveur-a-l-aide-de-javascript-avec-vue-et-nodeatlas/) qui vous expliquera les bases.\n\nEt cerise sur le gâteau, les documentations de [Vue](https://fr.vuejs.org/), [Nuxt](https://fr.nuxtjs.org/) et [NodeAtlas](https://node-atlas.js.org/) sont toutes en français, traduites par votre serviteur !\n\n\u003e Vous pouvez obtenir l'intégralité des sources de cette article sur ce dépôt GitHub : [Haeresis/import-export-require-isomorphism](https://github.com/Haeresis/import-export-require-isomorphism/).","urn":"modules-ecmascript-natif-sans-commonjs-systemjs-babel-webpack","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c7"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5310456355dfd5f7698d48c8"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"56c4ad62675345bb2d63fced"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48b8"}],"dates":{"updated":[],"published":{"$date":"2017-12-17T15:06:00.000Z"}},"__v":0,"description":"Imaginez que l'on puisse, à partir d'exactement le même code, produire du code côté serveur et côté client ! C'est ce que l'on appel l'isomorphisme.","image":"https://blog.lesieur.name/media/images/upload/isomorphisme.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"5a882b9011e80640ac35eed2"},"title":"ES5, Chap. 1 — Les propriétés et descripteurs de propriétés en JavaScript","content":"Ce billet fait partie de la collection _[ES5 dans le détail](https://blog.lesieur.name/categories/ecma-script/)_ et en constitue le Chapitre 1.\n\n\u003cfigure\u003e\n    \u003ca href=\"media/images/upload/propriete-descripteur-propriete.jpg\"\u003e\u003cimg class=\"openable\" src=\"media/images/upload/propriete-descripteur-propriete-mini.png\" alt=\"Même si la nouvelle version de l'environnement semble similaire en surface, elle est différente de plus près.\" width=\"628\" height=\"353\" style=\"width: 100%;height: auto;\"\u003e\u003c/a\u003e\n    \u003cfigcaption\u003eMême si la nouvelle version de l'environnement semble similaire en surface, elle est différente de plus près.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nIl est dédié à l'un des nouveaux concepts introduit par la spécification ECMA-262-5 de JavaScript à propos des attributs de propriétés et des mécanismes de leur gestion ; les descripteurs de propriété.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/le-mode-strict/\"\u003eChapitre 2 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n\n\n\n\n## Introduction\n\nHabituellement, quand on dit « qu'un objet a plusieurs propriétés », on parle d'une association pour chaque propriété de l'objet entre un _nom de propriété_ et une _valeur de propriété_. Mais ce n'est pas tout. Comme nous l'avons vu dans [ES3 dans le détail](https://blog.lesieur.name/categories/ecma-script/), la structure d'une propriété est plus complexe qu'un simple _nom sous forme de chaine de caractères_ et une _valeur_. Il y a aussi un jeu d'_attributs internes_ comme `{ReadOnly}`, `{DontEnum}` et d'autres. De ce point de vu donc, une simple propriété est elle-même un objet (même quand elle représente une valeur primitive).\n\nPour une compréhension complète de ce billet, je vous recommande la lecture du chapitre sur [les types](https://blog.lesieur.name/les-types/) en JavaScript ainsi que celui sur [les constructeurs et les prototypes](https://blog.lesieur.name/les-constructeurs-et-les-prototypes/).\n\n\n\n\n\n## Nouvelles méthodes de l'API\n\nPour travailler avec les propriétés et leurs attributs standardisés en ES5 dans les nouvelles méthodes de l'API, résumons cela par ce petit pend de code :\n\n*Code JavaScript*\n\n```js\n// meilleur héritage de prototype\nObject.create(parentProto, properties);\n\n// accès au prototype\nObject.getPrototypeOf(o);\n\n// Définition des propriétés avec des attributs spécifiques\nObject.defineProperty(o, propertyName, descriptor);\nObject.defineProperties(o, properties);\n\n// Analyse des propriétés\nObject.getOwnPropertyDescriptor(o, propertyName);\n\n// Gestion des objets statiques (ou « gelés »)\nObject.freeze(o);\nObject.isFrozen(o);\n\n// Gestion des objets non-extensibles\nObject.preventExtensions(o);\nObject.isExtensible(o);\n\n// Gestion des objets scélés non-extensibles\n// et objets non-configurables\nObject.seal(o);\nObject.isSealed(o);\n\n// Liste des propriétés\nObject.keys(o);\nObject.getOwnPropertyNames(o);\n```\n\nPenchons nous sur ces points les uns après les autres.\n\n\n\n\n\n## Types de propriété\n\nEn ES3 nous avons seulement une association _directe_ entre le nom de la propriété et sa valeur. Cependant, plusieurs implémentations ont leur propre extensions fournis avec un concept d'_accesseurs_ et de _mutateurs_, c.-à-d. des fonctions qui permettaient _indirectement_ d'associer des valeurs de propriété. ECMA-262-5 standardise se concept en JavaScript et à présent nous avons trois types de propriétés\n\nVous devriez également savoir qu'une propriété peut-être possédée par son propre _objet_, ou _hérité_ d'un des objets dans la chaîne des prototypes.\n\nIl y a des propriétés _nommées_, qui sont disponibles dans un programme JavaScript et des propriétés _internes_, seulement accessibles au niveau de l'implémentation (cependant, il est possible de gérer la plupart d'entre elles via des méthodes spéciales). Nous allons en parler brièvement.\n\n\n\n### Attributs de propriétés\n\nLes propriétés _nommées_ sont distinguées par des _attributs_. Les attributs de propriétés évoqués dans la série d'article sur ES3 comme `{ReadOnly}`, `{DontEnum}` et les autres ont ici été renommées par leur état booléen contraire. Il y a deux attributs commun aux deux types de propriété (_de données_ et _d'accession_) nommées en ECMA-262-5 :\n\n- `[[Enumerable]]`\n   Cet attribut (qui est l'état inverse de l'ancien `{DontEnum}` en ES3) détermine grâce à son état `true` que la propriété est énumérable dans une énumération `for-in`.\n\n- `[[Configurable]]`\n   Cet attribut (qui est l'état inverse de l'ancien `{DontDelete}` en ES3) prévient grâce à son état `false` toute tentative de suppression de la propriété, changement de type ou changement de ses attributs (à l'exception de `[[Value]]`).\n\nNotez que si l'attribut `[[Configurable]]` a été mis à `false` une fois, il _ne peut plus_ être remis à `true`. Comme dit précédemment, il n'est plus possible non plus de changer d'autres attributs comme `[[Enumerable]]` par exemple. On peut toujours changer l'attribut `[[Value]]` et `[[Writable]]` (_mais_ seulement de `true` vers `false` et pas l'inverse).\n\nNous discuterons des autres attributs de propriétés spécifiques rapidement. Considérons les types de propriétés en détail.\n\n\n\n### Propriété nommée de données\n\nCes propriétés étaient déjà largement utilisées en ES3. Une propriété à un _nom_ (qui est toujours une _chaine de caractères_ en ES5) et une _valeur_ _directement_ associée.\n\n*Code JavaScript*\n\n```js\n// définition sous forme déclarative\nvar tallneck = {\n  climbHold: 10 // valeur de type Number directe\n};\n\n// définition sous forme impérative\n// directe également, mais avec une valeur de type Function : une « méthode »\ntallneck.radar = function () {\n  return this.climbHold;\n};\n```\n\nC'est exactement le même cas de figure qu'en ES3, dans le cas ou la valeur de la propriété est une fonction, cette propriété est appelée une _méthode_. Mais cette _valeur_ de fonction _directe_ ne doit pas être confondue avec le cas spécial indirect des fonctions accesseurs dont nous allons discuter ci-dessous :\n\n- `[[Value]]`\n   Cet attribut spécifie la valeur retournée en lisant la propriété.\n\n- `[[Writable]]`\n   Cet attribut (qui est l'état inverse de l'ancien `{ReadOnly}` en ES3) prévient grâce à son état `false` toute tentative de changement de la valeur de la propriété via l'utilisation de la méthode interne `[[Put]]`.\n\nVoici la liste complète des attributs pour une propriété _de données_ avec ces valeurs par défaut :\n\n*Pseudo-code*\n\n```js\ndefaultDataPropertyAttributes = {\n  [[Value]]: undefined,\n  [[Writable]]: false,\n  [[Enumerable]]: false,\n  [[Configurable]]: false\n};\n```\n\nDonc, dans leur état par défaut les propriétés sont _des constantes_ :\n\n*Code JavaScript*\n\n```js\n// Définir une constante globale\n\nObject.defineProperty(this, 'MAX_SIZE', {\n    value: 100\n});\n\nconsole.log(MAX_SIZE); // `100`\n\nMAX_SIZE = 200; // erreur en mode strict car `[[Writable]]` est à `false`\ndelete MAX_SIZE; // erreur en mode strict car `[[Configurable]]` est à `false`\n\nconsole.log(MAX_SIZE); // toujours `100`\n```\n\nMalheureusement en ES3, nous n'avions pas de contrôle sur les attributs de propriétés causant des problèmes connus avec l'augmentation des prototypes pré-conçu. De part la nature de mutabilité dynamique des objets en JavaScript, il est vraiment pratique d'_ajouter_ des nouvelles fonctionnalités et de les utiliser, les déléguants au prototype pour qu'elles soient « possédée » par l'objet. Par exemple, sans contrôle sur l'ancien attribut `{DontEnum}` en ES3, nous avions un problème avec les énumérations `for-in` sur les prototypes augmentés des tableaux :\n\n*Code JavaScript*\n\n```js\n// ES3\n\nArray.prototype.sum = function () {\n  // implémentation de la somme\n};\n\nvar arrows = [10, 20, 30];\n\n// marche bien\nconsole.log(arrows.sum()); // `60`\n\n// mais a cause de la lecture dans le `for-in`\n// de la chaîne du prototype, la nouvelle propriété `sum`\n// était aussi énumérée car\n// `{DontEnum}`est à `false`\n\n// itérer sur une propriété\nfor (var arrow in arrows) {\n    console.log(arrow); // `0`, `1`, `2`, `sum`\n}\n```\n\nES5 fournit ce contrôle en utilisant les _meta-méthodes_ spéciales pour manipuler les propriétés d'objet :\n\n*Code JavaScript*\n\n```js\n// ES5\n\nObject.defineProperty(Array.prototype, 'sum', {\n    value: function sum() {\n        // implémentation de la somme\n    },\n    enumerable: false\n});\n\nvar arrows = [10, 20, 30];\n\n// marche bien\nconsole.log(arrows.sum()); // `60`\n\n// maintenant en utilisant le même exemple avec `sum`\n// il n'est plus énuméré\n\nfor (var arrow in arrows) {\n    console.log(arrow); // `0`, `1`, `2`\n}\n```\n\nDans l'exemple ci-dessus nous spécifions l'attribut `enumerable` manuellement et explicitement. Cependant, comme nous l'avons mentionné, l'état par défaut de tous les attributs est `false`, donc nous n'avons pas besoin de spécifier manuellement les valeurs à `false`.\n\n*Code JavaScript*\n\n```js\n// l'affectation par méta-fonction (si vous créez une nouvelle propriété)...\nObject.defineProperty(tallneck, 'climbHold', {\n    value: 10\n});\n\n// ...est la même chose que\nObject.defineProperty(tallneck, 'climbHold', {\n    value: 10,\n    writable: false,\n    enumerable: false,\n    configurable: false\n});\n```\n\nEt un simple _opérateur d'affectation_ corresponds maintenant à l'_état par défaut inversé_ des attributs (en fait, comme c'était le cas en ES3) :\n\n*Code JavaScript*\n\n```js\n// l'affectation simple (si vous créez une nouvelle propriété)...\ntallneck.climbHold = 10;\n\n// est la même chose que\nObject.defineProperty(tallneck, 'climbHold', {\n    value: 10,\n    writable: true,\n    enumerable: true,\n    configurable: true\n});\n```\n\nNotez également que cette méta-méthode `Object.defineProperty` n'est pas réservée qu'à _la création_ de propriété d'objet, mais aussi à leur _altération_. De plus, elle retourne l'objet altéré, ainsi nous pouvons utiliser cette méthode pour lier les objets nouvellement créés à un nom de variable en une seule fois :\n\n*Code JavaScript*\n\n```js\n// créer l'objet `tallneck` et définir la propriété `climbHold` property\nvar tallneck = Object.defineProperty({}, 'climbHold', {\n  value: 10,\n  enumerable: true\n});\n\n// altérer les attributs `value` et `enumerable`\nObject.defineProperty(tallneck, 'climbHold', {\n    value: 20,\n    enumerable: false\n});\n\nconsole.log(tallneck.climbHold); // `20`\n```\n\nPour obternir un tableau des propriétés _possédées_ il y a deux meta-méthodes :\n\n- `Object.keys` qui retourne seulement des propriétés énumérables, et\n- `Object.getOwnPropertyNames` qui retourne aussi bien les propriétés enunérables que les propriétés non-énumérables :\n\n*Code JavaScript*\n\n```js\nvar tallneck = {\n    climbHold: 10,\n    radar: 20\n};\n\nObject.defineProperty(tallneck, 'x', {\n    value: 30,\n    enumerable: false\n});\n\nconsole.log(Object.keys(tallneck)); // `['climbHold', 'radar']`\nconsole.log(Object.getOwnPropertyNames(tallneck)); // `['climbHold', 'radar', 'x']`\n```\n\n\n\n### Propriété nommée d'accession\n\nUne _propriété nommée d'accession_ est associée à un _nom_ (une chaîne de caractère en ES5) avec une ou deux fonctions d'accessions : un _accesseur_ et un _mutateur_.\n\nLes fonctions d'accession sont utilisées pour stocker ou retrouver une valeur associée à un nom _indirectement_.\n\nComme nous l'avons noté, plusieurs implémentations ES3 possède déjà ce concept. Mais en ES5 la syntaxe est officielle et sensiblement différente de ce qui pouvait déjà exister (comme par ex. avec les extensions de SpiderMonkey).\n\nEn plus des attributs généraux, une propriété d'accession a les attributs suivant lié à un accesseur et à un mutateur comme suit :\n\n- `[[Get]]`\n   Cet attribut est un objet fonction qui est appelé chaque fois qu'une valeur indirecte existe dans le nom de la propriété. Ne confondez pas cette _attribut de propriété_ avec la _méthode interne de même nom_ des objets en eux-même, le lecteur général de la propriété d'une valeur. Donc dans le cas d'une propriété d'accession, la _méthode_ interne `[[Get]]` d'un objet appel l'_attribut_ `[[Get]]` de la propriété d'un objet pour retourner sa valeur.\n\n- `[[Set]]`\n   Cet attribut est également un objet fonction qui associe la nouvelle valeur à attacher au nom de propriété. Cet attribut appel la méthode interne `[[Put]]` d'un objet.\n\nNotez que `[[Set]]` peut, mais _pas obligatoirement_, avoir un effet sur la propriété retournée par la méthode interne `[[Get]]` de la propriété. En d'autres mots, si nous affectons une valeur comme par ex. `10`, un accesseur peut retourner une valeur différente comme par ex. `20` car l'affectation est _indirecte_ et `[[Set]]` peut avoir changer cette valeur.\n\nEt la liste complète des attributs par défaut pour une _propriété nomée d'accession_ est :\n\n*Pseudo-code*\n\n```js\ndefaultAccessorPropertyAttributes = {\n  [[Get]]: undefined,\n  [[Set]]: undefined,\n  [[Enumerable]]: false,\n  [[Configurable]]: false\n};\n```\n\nDe fait, si `[[Set]]` est absent, une propriété d'accession est en lecture seule, comme dans le cas de l'attribut `[[Writable]]` à `false` pour les propriétés nommées de données.\n\nUne propriété d'accession peut être définie aussi bien par la méta-méthode `Object.defineProperty` mentionnée plus haut :\n\n*Code JavaScript*\n\n```js\nvar thunderjaw = {};\n\nObject.defineProperty(thunderjaw, 'discLauncher', {\n    get: function getDisc() {\n        return 2;\n    },\n    set: function setDisc(value) {\n        // implementation de la mutation\n    }\n});\n\nthunderjaw.discLauncher = 1; // appel du pseudo-code `thunderjaw.discLauncher.[[Set]](1)`\n\n// indépendemment c'est toujours `2`\nconsole.log(thunderjaw.discLauncher); // appel du pseudo-code `thunderjaw.discLauncher.[[Get]]()`\n```\n\nQue par sa forme _déclarative_ en utilisant un _initialiseur d'objet_ :\n\n*Code JavaScript*\n\n```js\nvar thunderjaw = {\n    get discLauncher () {\n        return 2;\n    },\n    set discLauncher (value) {\n        console.log(value);\n    }\n};\n\nthunderjaw.discLauncher = 100; // affiche `100` dans la console\nconsole.log(thunderjaw.discLauncher); // `2`\n```\n\nNotez qu'il y a aussi une fonctionnalité importante en lien avec la configuration d'une propriété d'accession. Comme nous l'avons mentionné dans la description de l'attribut `[[Configurable]]`, une fois qu'elle est mise à `false` une propriété ne peut plus être changée (sauf pour l'attribut `[[Value]]` de la _propriété nommée de données_). Cela peut être perturbant dans le cas suivant :\n\n*Code JavaScript*\n\n```js\n// `configurable` à `false` par défaut\nvar thunderjaw = Object.defineProperty({}, 'discLauncher', {\n    get: function () {\n        return 'disc';\n    }\n});\n\n// tentative de reconfigurer `discLauncher`\n// une exception est levée\ntry {\n    Object.defineProperty(thunderjaw, 'discLauncher', {\n        get: function () {\n            return 'launcher'\n        }\n    });\n} catch (e) {\n    if (e instanceof TypeError) {\n        console.log(thunderjaw.discLauncher); // toujours `'disc'`\n    }\n}\n```\n\nMais l'exception ne sera pas lancée si la valeur reconfigurée de l'attribut de ce cas est _la même_. Ce qui est cependant, en pratique, pas très utile.\n\n*Code JavaScript*\n\n```js\nfunction getDiscLancher() {\n    return 'disc';\n}\n\nvar thunderjaw = Object.defineProperty({}, 'discLancher', {\n    get: getDiscLancher\n});\n\n// pas d'exception même si `configurable` est a `false`,\n// mais en pratique cette re-configuration est inutile\nObject.defineProperty(thunderjaw, 'discLancher', {\n    get: getDiscLancher\n});\n```\n\nEt comme nous l'avons mentionné,la `[[Value]]` de la _propriété nommée de données_ peut-être reconfigurée même si `[[Configurable]]` est a `false` ; bien sur l'attribut `[[Writable]]` devra être à `true`. Également, si mis a l'état `true`, l'attribut `[[Writable]]` pourra être mis à `false`, _mais pas l'inverse_ pour une propriété _non-configurable_ :\n\n*Code JavaScript*\n\n```js\nvar thunderjaw = Object.defineProperty({}, 'discLancher', {\n    value: 'disc',\n    writable: true,\n    configurable: false // valeur par défaut\n});\n\nObject.defineProperty(thunderjaw, 'discLancher', {\n    value: 'launcher'\n});\n\nconsole.log(thunderjaw.discLancher); // `'launcher'`\n\n// changer writable\nObject.defineProperty(thunderjaw, 'discLancher', {\n    value: 'discLauncher',\n    writable: false // changé de `true` vers `false`, OK\n});\n\nconsole.log(thunderjaw.discLancher); // `'discLauncher'`\n\n// essayer de changer `writable` de nouveau\nObject.defineProperty(thunderjaw, 'discLancher', {\n    value: 'discLauncher',\n    writable: true // Erreur !\n});\n```\n\nDe même, nous ne pouvons pas transformer une propriété du type _données_ vers le type _accession_ et _inverssement_ si l'attribut `[[Configurable]]` est `false`. Dans l'état `true` de l'attribut `[[Configurable]]` une telle transformation est possible et l'état de l'attribut `[[Writable]]` importe peu, aussi il peut être à `false` :\n\n*Code JavaScript*\n\n```js\n// `writable` est a `false` par défaut\nvar thunderjaw = Object.defineProperty({}, 'discLancher', {\n    value: 'disc',\n    configurable: true\n});\n\nObject.defineProperty(thunderjaw, 'discLancher', {\n    get: function () {\n        return 'launcher';\n    }\n});\n\nconsole.log(thunderjaw.discLancher); // OK, `'launcher'`\n```\n\nUn autre fait évident, c'est qu'une propriété ne peut pas être en même temps _de données_ et _d'accession_. Cela siginifie que la présence d'attributs mutuellement exclusifs lancera une exception :\n\n*Code JavaScript*\n\n```js\n// erreur, `get` et `writable` en même temps\nvar thunderjaw = Object.defineProperty({}, 'discLancher', {\n    get: function () {\n        return 'disc';\n    },\n    writable: true\n});\n\n// une autre erreur, les attributs `value` et `set`\n// ne peuvent être présent ensemble\nvar tallneck = Object.defineProperty({}, 'climbHold', {\n    value: 'radar',\n    set: function (v) {}\n});\n```\n\nRappelons nous également : cet usage des mutateurs et des accesseurs font plus de sens quand nous avons besoin d'_encapsuler des calculs complexes_ en utilisant une _fonction utilitaire de données_, rendant l'usage de cette propriété plus _pratique_. C.-à-d. comme s'il s'agissait d'une propriété de données.\n\nPour des choses non abstraite, l'utilisation des propriété d'accessions n'est pas réellement utile :\n\n*Code JavaScript*\n\n```js\nvar thunderjaw = {};\n\n// Pas très utile\nObject.defineProperty(thunderjaw, 'disc', {\n    get: function getDisc() {\n        return this.launcher;\n    },\n    set: function setDisc(value) {\n        this.launcher = value;\n    }\n});\n\nthunderjaw.disc = 2;\n\nconsole.log(thunderjaw.disc); // `2`\nconsole.log(thunderjaw.launcher); // `2`\n```\n\nEn plus d'utiliser des accesseur et mutateur pour une entité non-abstraite, nous avons créer une propriété _propre_ `launcher`. On voit dans ce cas qu'une _simple propriété de données_ est suffisante en plus d'améliorer les performances.\n\nDans les cas où on a _réellement besoin_ d'utiliser les propriétés d'accessions pour _améliorer l'abstraction_ en encapsulant la logique dans une fonction utilitaire, nous aurions alors à faire à ce type d'exemple :\n\n*Code JavaScript*\n\n```js\nvar thunderjaw = {};\n\n// contexte encapsulé\n(function () {\n\n    // divers états internes\n    var data = [];\n\n    Object.defineProperty(thunderjaw, \"disc\", {\n        get: function getDisc() {\n            return \"Nous avons \" + data.length + \" discs : \" + data;\n        },\n        set: function setDisc(value) {\n            // appel de l'accession en premier\n            console.log('Alert du mutateur \"disc\" : ' + this.disc);\n\n            data = Array(value).join(\"disc-\").concat(\"disc\").split(\"-\");\n\n            // bien sur au besoin nous pouvons mettre à jour\n            // également diverse propriétés publiques\n            this.launcher = 'Mise à jour du mutateur \"disc\" : ' + value;\n        },\n        configurable: true,\n        enumerable: true\n\n    });\n\n})();\n\nthunderjaw.launcher = 100;\nconsole.log(thunderjaw.launcher); // `100`\n\n// d'abord l'accession va être appelé dans le mutateur :\n// `'Nous avons 0 discs :'`\nthunderjaw.disc = 2;\n\n// Accesseurs\nconsole.log(thunderjaw.disc); // `'Nous avons 2 discs : disc, disc, disc'`\nconsole.log(thunderjaw.launcher); // `'Mise à jour du mutateur \"disc\" : 2'`\n```\n\nBien sur cette exemple n'a aucune utilité pratique, mais il montre l'utilité principale des accessions, *augmenter l'abstraction en encapsulant des données auxiliaires internes*.\n\nEt une autre fonctionnalité liée aux accesseurs de propriétés est l'*affectation à une propriété d'accession héritée*. Comme nous l'avons vu dans la série ES3, les propriétés héritées (données) sont disponibles à la *lecture*, mais à l'affectation (à une propriété de données), elle *crée toujours sa propre propriété :*\n\n*Code JavaScript*\n\n```js\nObject.prototype.discLancher = 1;\n\nvar thunderjaw = {};\n\n// lecture d'une propriété héritée\nconsole.log(thunderjaw.discLancher); // `1`\nconsole.log(thunderjaw.hasOwnProperty(\"discLancher\")); // `false`\n\n// mais avec une affectation\n// créé toujours sa propre propriété\nthunderjaw.discLancher = 2;\n\n// lecture d'une propriété héritée\nconsole.log(thunderjaw.discLancher); // `2`\nconsole.log(thunderjaw.hasOwnProperty(\"discLancher\")); // `true`\n```\n\nÀ la différence des propriétés de données, *les accessions héritées sont disponibles pour modifications via l'affectation* à travers un objet qui hérite de ces propriétés :\n\n*Code JavaScript*\n\n```js\nvar arrows = 10;\n\nvar aloy = {\n  get quiver() {\n    return arrows;\n  },\n  set quiver(item) {\n    arrows = item;\n  }\n};\n\nconsole.log(aloy.hasOwnProperty('quiver')); // `true`\n\nconsole.log(aloy.quiver); // `10`\n\naloy.quiver = `20`; // affecte sa propre propriété\n\nconsole.log(aloy.quiver); // `20`\n\nvar player = Object.create(aloy); // `player` hérite de `aloy`\n\nconsole.log(player.quiver); // `20`, lecture héritée\n\nplayer.quiver = 30; // affecte l'*héritée*, mais pas une à elle sienne.\n\nconsole.log(player.quiver); // `30`\nconsole.log(aloy.quiver); // `30`\nconsole.log(player.hasOwnProperty('quiver')); // `false`\n```\n\nCependant si nous définissons `player`, toujours hérité de `aloy`, mais en spécifiant son propre `quiver`, l'affectation sera dans ce cas mis à sa propre propriété :\n\n*Code JavaScript*\n\n```js\nvar player = Object.create(aloy);\n\nplayer.quiver = 30; // affecte l'héritée\n\nObject.defineProperty(player, 'quiver', {\n  value: 100,\n  writable: true\n});\n\nplayer.quiver = 60; // affecte la sienne.\n\nconsole.log(player.quiver); // `60`\nconsole.log(aloy.quiver); // `30`\nconsole.log(player.hasOwnProperty('quiver')); // `true`\n```\n\nUne autre chose à noter est que si nous essayons de *masquer* par *affectation* une propriété *héritée en lecture seule*, et si nous sommes en *mode strict*, l'erreur `TypeError` est lancée. Ceci est fait indépendemment du fait qu'une propriété est de données ou d'accession. Cependant, si nous masquons la propriété *non plus par une affectation*, mais par `Object.defineProperty`, tout est bon :\n\n*Code JavaScript*\n\n```js\n'use strict';\n\nvar thunderjaw = Object.defineProperty({}, 'discLauncher', {\n    value: 2,\n    writable: false\n});\n\n// `redmaw` hérite de `thunderjaw`\n\nvar redmaw = Object.create(thunderjaw);\n\nconsole.log(redmaw.discLauncher); // `2`, hérité\n\n// essayer de masquer la propriété `discLauncher`\n// et obtenir une erreur en mode\n// strict, ou juste échoué silencieusement\n// en mode non strict ES5 ou en ES3\n\nredmaw.discLauncher = 1; // `TypeError`\n\nconsole.log(redmaw.discLauncher); // toujours `2`, si en mode non strict\n\n// cependant le masquage fonctionne\n// si on utilise `Object.defineProperty`\n\nObject.defineProperty(redmaw, 'discLauncher', { // OK\n    value: 1\n});\n\nconsole.log(redmaw.discLauncher); // et maintenant `1`\n```\n\nPour en savoir plus à propos du mode strict, lisez le chapitre suivant de la série ES5 sur [le mode strict](https://blog.lesieur.name/le-mode-strict/).\n\n\n\n### Propriété interne ###\n\nLes *propriétés internes* ne sont pas une partie des spécifications ECMAScript. Elles sont mises en place par les spécifications du JavaScript pour du fonctionnement interne. Nous en avons déjà discuté dans [le Chapitre 7 de la série ES3](https://blog.lesieur.name/les-types/#propri-t-s-et-m-thodes-internes).\n\nES5 fournit diversent nouvelles propriétés internes. Vous pouvez trouver des détails dans la section 8.6.2 de la spécification ECMA-262-5. Et, parceque nous avons déjà discuté de ces concepts dans un article ES3, nous ne parlerons ici que des propriétés internes supplémentaires.\n\nPar exemple, les objets en ES5 peuvent être _scélés (« sealed »)_, _gelés (« frozen »)_ ou juste _non-extensible_, c.-à-d. statiques. La propriété interne `[[Extensible]]` est liée à ces trois états. Ils peuvent être gérés en utilisant des meta-méthodes spéciales :\n\n*Code JavaScript*\n\n```js\nvar faroMachine = {\n    gears: 10\n};\n\nconsole.log(Object.isExtensible(faroMachine)); // `true`\n\nObject.preventExtensions(faroMachine);\nconsole.log(Object.isExtensible(faroMachine)); // `false`\n\nfaroMachine.weapons = 20; // erreur en mode strict\nconsole.log(faroMachine.weapons); // `undefined`\n```\n\nNotez qu'une fois que la propriété interne `[[Extensible]]` est mise à `false`, elle ne peut plus être remise à `true`.\n\nMais même depuis des objets non extensibles, diverses propriétés ne peuvent pas être retirées. Pour empécher cela, la meta-méthode `Object.seal` peut aider car en plus de mettre `[[Extensible]]` à `false`, elle met également `[[Configurable]]` à `false` sur toutes les propriétés de l'objet :\n\n*Code JavaScript*\n\n```js\nvar faroMachine = {\n    gears: 10\n};\n\nconsole.log(Object.isSealed(faroMachine)); // `false`\n\nObject.seal(faroMachine);\nconsole.log(Object.isSealed(faroMachine)); // `true`\n\ndelete faroMachine.gears; // erreur en mode strict\nconsole.log(faroMachine.gears); // `10`\n```\n\nSi vous souhaitez rendre un objet *completement static*, c.-à-d., le _geler_ pour empécher de changer les valeurs des propriétés existantes, vous pouvez utiliser la meta-méthode correspondante `Object.freeze`. Cette méthode va en plus de mettres les propriétés internes `[[Configurable]]` et `[[Extensible]]` à `false` mettre la propriété `[[Writable]]` à `false` empéchant les données de propriété de changer :\n\n*Code JavaScript*\n\n```js\nvar faroMachine = {\n    gears: 10\n};\n\nprint(Object.isFrozen(faroMachine)); // `false`\n\nObject.freeze(faroMachine);\nprint(Object.isFrozen(faroMachine)); // `true`\n\ndelete faroMachine.gears; // erreur en mode strict\nfaroMachine.gears = 20; // erreur en mode strict\n\nprint(faroMachine.gears); // `10`\n```\n\nLes états scellés ou gelés ne peuvent pas être remis à `true`.\n\nDe la même manière qu'en ES3, nous avons la possibilité d'examiner la propriété interne `[[Class]]`, toujours via la valeur de la méthode `Object.prototype.toString` :\n\n*Code JavaScript*\n\n```js\nvar getClass = Object.prototype.toString;\n\nconsole.log(\n    getClass.call(1), // `'[object Number]'`\n    getClass.call({}), // `'[object Object]'`\n    getClass.call([]), // `'[object Array]'`\n    getClass.call(function () {}) // `'[object Function]'`\n    // etc.\n);\n```\n\nÀ la différence de ES3, ECMA-365-5 fournit la possibilité de lire la propriété interne `[[Prototype]]` via la meta méthode `Object.getPrototypeOf`. Nous pouvons également créer un objet en spécifiant le prototype souhaité grace à la meta-méthode `Object.create` :\n\n*Code JavaScript*\n\n```js\n// création de l'objet `plague` avec les propriétés\n// `sum` et `length` possédées depuis le `[[Prototype]]`\n// `Array.prototype`\n\nvar plague = Object.create(Array.prototype, {\n  sum: {\n    value: function sum() {\n      // implémentation de la somme\n    }\n  },\n  // non énumérable mais pas en lecture seule !\n  length: {\n    value: 0,\n    enumerable: false,\n    writable: true\n  }\n});\n\nplague.push(1, 2, 3);\n\nconsole.log(plague.length); // `3`\nconsole.log(plague.join(\"-\")); `\"1-2-3\"`\n\n// ni `sum` ou `length` ne peuvent\n// être énumérés\n\nfor (var machine in plague) {\n  console.log(machine); // `0`, `1`, `2`\n}\n\n// Récupérer le prototype de `plague`\nvar plaguePrototype = Object.getPrototypeOf(plague);\n\nconsole.log(plaguePrototype === Array.prototype); // `true`\n```\n\nMais malheureusement, même avec cette approche vous ne pourrez _toujours pas_ créer un objet héritant de la « classe » `Array.prototype` avec toutes les fonctionnalités d'un tableau normal et incluant la méthode interne `[[DefineOwnProperty]]` (voir 15.4.5.1) qui gère, par exemple, la propriété `length`. Regardez l'exemple ci-après :\n\n*Code JavaScript*\n\n```js\nplague[5] = 10;\nconsole.log(plague.length); // toujours `3`\n```\n\nLe seul moyen d'hériter complètement de `Array.prototype` et en même temps d'avoir toutes les méthodes internes surchargées d'un tableau normal (c.-à-d. un objet dont la `[[Class]]` est `\"[object Array]\"`) est d'appliquer la propriété non standard `__proto__`. Aussi le code suivant n'est pas fonctionnelle sur toutes les implémentations :\n\n*Code JavaScript*\n\n```js\nvar plague = [];\nplague.__proto__= { machine: 10 };\nplague.__proto__.__proto__= Array.prototype;\n\nconsole.log(plague instanceof Array); // `true`\n\nconsole.log(plague.machine); // `10`\n\nconsole.log(plague.length); // `0`\n\nplague.push(20);\n\nplague[3] = 30;\nconsole.log(plague.length); // `4`\n\nconsole.log(plague); // `20`,``,``,`30`\n\nplague.length = 0;\nconsole.log(plague); // tableau vide\n```\n\nEt malheureusement, contrairement à la propriété non standard `__proto__` qui est une extension de diverses implémentation ES3, ES5 ne fournit pas la possiblité d'_associer_ un prototype à un objet (seulement de le lire).\n\n\n\n\n\n## Descripteur de propriété et types d'identifieur de propriété\n\nComme nous l'avons vu, ES5 permet un contrôle des attributs des propriétés. Ce _jeu d'attributs de propriété et leurs valeurs_ sont appelés en ES5 un _descripteur de propriété_.\n\nEn fonction de son type de nom de propriété, un descripteur peut être soit un _descripteur de propriété de données_ ou un _descripteur de propriété d'accession_.\n\nLes spécifications définissent aussi le concept de _descripteur de propriété générique_, c.-à-d. un descripteur qui n'est ni un descripteur d'accession, ni un descripteur de données et qui possède tous les attributs de propriété. Mais qu'en est-t-il au niveau de l'implémentation ?\n\nC'est en fonction des _valeurs par défaut_ spécifiées pour les attributs, si un descripteur est _vide_, une _propriété de donnée_ est créée. Bien sur, une _propriété de données_ est aussi créée si sont object descripteur contient la propriété `writable` ou `value`. Dans le cas ou un descripteur d'objet possède la propriété `get` ou `set`, une _propriété _d'accession est alors définie. Pour obtenir l'objet descripteur d'une propriété il y a la meta-méthode `Object.getOwnPropertyDescriptor` :\n\n*Code JavaScript*\n\n```js\n// On définit plusieur propriété en même temps\n\nObject.defineProperties(aloy, {\n    weapon: {}, // descripteur « vide »,\n    armor: { get: function () {} }\n});\n\nvar weaponProperty = Object.getOwnPropertyDescriptor(aloy, 'weapon');\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nconsole.log(\n    weaponProperty.value, // `undefined`\n    hasOwn.call(weaponProperty, 'value'), // `true`\n\n    weaponProperty.get, // `undefined`\n    hasOwn.call(weaponProperty, 'get'), // `false`\n\n    weaponProperty.set, // `undefined`\n    hasOwn.call(weaponProperty, 'set'), // `false`\n);\n\nconsole.log(aloy.weapon); // `undefined` (`null` dans certaine implémentation)\nconsole.log(aloy.nonExisting); // `undefined`\n\n// par contre la propriété `armor` est une propriété d'accession\n\nvar armorProperty = Object.getOwnPropertyDescriptor(aloy, 'armor');\n\nconsole.log(\n    armorProperty.value, // `undefined`\n    hasOwn.call(armorProperty, 'value'), // `false`\n\n    armorProperty.get, // `function`\n    hasOwn.call(armorProperty, 'get'), // `true`\n\n    armorProperty.set, // undefined\n    hasOwn.call(armorProperty, 'set'), // `false`\n);\n```\n\nLe type de l'identifieur de propriété `Property Identifier` est utilisé pour associé son propre _nom_ a son descripteur. Ainsi, les _propriétés_ peuvent être des valeurs du type `Property Identifier` sous forme de paire `(name, descriptor)` :\n\n*Code JavaScript*\n\n```js\naloy.focus = 10;\n```\n\n*Pseudo-code*\n\n```\n// une propriété est un objet\n// de type `Property Identifier`\n\nfocusProperty = {\n  name: 'focus',\n  descriptor: {\n    value: 10,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  }\n};\n```\n\n\n\n\n\n## Conclusion\n\nDans ce premier chapitre nous avons décrit en profondeur un des nouveaux concepts de la spécification ECMA-262-5. Le prochain chapitre sera dédié à l'une des nouveautés majeur de ES5, le mode strict.\n\n\u003e \u003cdiv style=\"float: left;\"\u003e\u003c/div\u003e\u003cdiv style=\"text-align: right\"\u003e\u003ca href=\"https://blog.lesieur.name/le-mode-strict/\"\u003eChapitre 2 \u0026gt;\u003c/a\u003e\u003c/div\u003e\n\n**Références**\n\nLectures additionnelles :\n\n- [4.3 — Definitions](http://es5.github.com/#x4.3),\n- [8.6 — The Object Type](http://es5.github.com/#x8.6),\n- [8.10 — The Property Descriptor and Property Identifier Specification Types](http://es5.github.com/#x8.10),\n- [8.12 — Algorithms for Object Internal Methods](http://es5.github.com/#x8.12).\n- [15.2.3 — Properties of the Object Constructor](http://es5.github.com/#x15.2.3).\n\nCe texte est une libre ré-écriture française de l'excellent billet [Тонкости ECMA-262-5. Часть 1. Свойства и дескрипторы свойств](http://dmitrysoshnikov.com/ecmascript/ru-es5-chapter-1-properties-and-property-descriptors/) de [Dmitry Soshnikov](http://dmitrysoshnikov.com/).","urn":"les-proprietes-et-descripteurs-de-proprietes","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48ca"}],"dates":{"updated":[],"published":{"$date":"2018-02-17T13:18:00.000Z"}},"__v":0,"description":"Nous discuterons dans ce billet à propos des attributs de propriétés et des mécanismes de leur gestion ; les descripteurs de propriété.","image":"https://blog.lesieur.name/media/images/upload/propriete-descripteur-propriete.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"5b2e26451516e03d51cd94f7"},"title":"Désinformation : de l'art de comparer l'incomparable sur des dates périmées","content":"Aujourd'hui est arrivé dans mes flux un article de [Marc Schillaci](http://www.marcschillaci.com/lauteur-marc-schillaci.html) qui nous invite à méditer sur la question suivante : « [Comment savoir quand une nouvelle fraîche ne l'est plus ?](http://fr.marcschillaci.com/2018/06/a-m%C3%A9diter-comment-savoir-quand-une-nouvelle-fra%C3%AEche-ne-lest-plus-.html) ».\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"847\" src=\"https://blog.lesieur.name/media/images/upload/fake-news.jpg\" alt=\"Contenu, apparence et comportement\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eNous allons voir pourquoi ces informations sont de la désinformations.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nJ'ai trouvé l'exemple exposé réellement pertinent et faisant une veille ponctuelle sur les médias sociaux, c'était l'occasion pour moi de faire un petit exercice de [Zététique](https://www.lesieur.name/zetetique/).\n\n\n\n\n\n## J'ai envie d'y croire\n\nDans notre flux donc, nous tombons, en date du 23 juin 2018 sur cette infographie :\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"847\" src=\"https://infographic.statista.com/normal/chartoftheday_14309_l_instantaneite_du_contenu_sur_les_reseaux_sociaux_n.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eInfographie indiquant des durées supposément comparables pour prendre des décisions.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nC'est plutôt intéressant. J'utilise souvent les réseaux sociaux pour relayer mes informations et ce qui m'importe c'est ma visibilité : aussi cette infographie est parfaite ! Simple, élégante et les informations qu'elle me présente me semble rationnelles. **J'ai envie d'y croire**.\n\n\u003e *`le`* **Biais de confirmation** : nous avons tendance à intégrer les informations qui appuie les croyances que nous avions au préalable et d'ignorer ce qui va à l'encontre de nos croyances. Ce comportement est la plupart du temps involontaire !\n\u003e \n\u003e Pour ce prémunir de ce biais, il est important de se préoccuper avant tout des informations qui vont à l'encontre de ce qu'on a envie de croire et de les analyser de façon critique.\n\u003e \n\u003e Source : https://fr.wikipedia.org/wiki/Biais_de_confirmation\n\nAussi si je m'arrête un instant, je peux légitimement me poser cette question : *Comment puis-je être sur que les valeurs présentées ici sont vraies ? Et si elles le sont, comment puis-je savoir qu'elles sont toujours à jour ?*\n\n\n\n\n\n## La puce à l'oreille\n\nCe qui dérange [Marc Schillaci](http://fr.marcschillaci.com/2018/06/a-m%C3%A9diter-comment-savoir-quand-une-nouvelle-fra%C3%AEche-ne-lest-plus-.html) dans sa publication est l'élément suivant : « J'ignore comment est défini chaque durée de vie, sachant que pour ma part, il m'arrive de me connecter le soir sur Twitter et de faire un tour sur certaines timelines pour lire de \"vieux liens\" de plus de 12 heures ! Voire de plusieurs jours sur LinkedIn. J'imagine qu'il s'agit uniquement de la durée de vie de l'instantanéité \"la durée de vie qui correspond au laps de temps moyen d'attention de l'audience avant que le contenu soit noyé dans le flux des publications\". ».\n\nC'est un excellent réflexe de se demander « quelle a été la **méthode d'acquisition de connaissance** pour cette infographie, et dans quelle mesure je peux lui faire confiance. » ; on appelle cela de l'épistémologie. C'est la première étape du doute méthodique.\n\nUne explication possible pour remettre en cause les doutes de Marc est que cette infographie peut refléter la durée avant laquelle au moins XX% de personnes voient dans leurs flux / recherches une information. Ce XX% explique alors que si l'on voit l'annonce au delà du temps affirmé, c'est qu'on ne fait déjà plus parti des XX% de l'étude qui a produit les résultats de cette infographie. Mais puisque ceci n'est pas mentionné, alors le doute est raisonnable.\n\n\u003e *`la`* **Rationalisation** : nous avons tendance à trouver des explications qui nous semblent rationnelles et logiques pour expliquer ce qui cloche là ou nous devrions soit :\n\u003e - nous avouer à nous même que nous ne savons pas ou\n\u003e - considérer plutôt une telle affirmation comme une hypothèse de travail qu'il va falloir prouver : c'est un rationnel.\n\u003e \n\u003e Source : https://www.linkedin.com/pulse/votre-utilisation-du-mot-rationnel-est-elle-bruno-j-s-lesieur/\n\nAussi posons cette histoire de XX% comme une hypothèse de travail supplémentaire mais n'oublions pas de traiter notre principale réflexion : au delà du fait que des informations furent réellement bonnes comment savoir si elles le sont toujours ?\n\n*Du coup les informations de notre infographies ? Sont-elles périmées ? Et notre hypothèse supplémentaire est elle bonne ?* Allons donc voir les sources que l'on peut obtenir à partir de l'infographie.\n\n\n\n\n\n## État des lieux initial\n\nTout d'abord, vérifions si nous avons des **indicateurs de confiances** sur cette source.\n\n### Les valeurs sont-elles à jours ?\n\nUn premier indicateur qui fait défaut sur cette infographie, c'est qu'elle n'est pas daté. Si l'auteur n'a pas daté son travail, on peut raisonnablement penser que c'est parce qu'il ne sait pas en quoi cela est capital. Ici on pourrait donc penser que ce n'est pas un professionel qui a fourni cette infographie.\n\n\u003e *`la`*  **Date d'une information** : elle nous renseigne sur le contexte temporel de l'information, cela permet de comprendre pourquoi une informations à pu être juste dans un contexte, et ne plus l'être dans un autre (par ex. aujourd'hui).\n\u003e \n\u003e Source : https://www.sites.univ-rennes2.fr/urfist/evaluation_information_contexte\n\n*C'est déjà un premier point peu engageant.*\n\n\n\n### Les valeurs sont-elles vraies ?\n\nDeux autres indicateurs partiellement manquant (encore plus important que le premier) sont la **source des données** ainsi que la **méthode d'acquisition et de comparaisons des données**. Partiels donc, car le site supposé contenir la source des données y est mentionné, c'est [Smarther](http://smarther.co/) mais impossible d'atteindre directement les données. Le minimum auquel on était en droit de s'attendre était un lien direct vers une page plus exhaustive fournissant ces informations.\n\n\u003e *`le`*  **Protocole** : explique comment les données ont été récupérées et analysées. Un protocole doit toujours permettre à celui qui le suit en utilisant ses instructions de tomber sur les mêmes résultats. Si cela n'est pas le cas, c'est que l'information issus du protocole n'est pas fiable. Parce que l'erreur peut également venir de l'expérimentateur, on doit répliquer un grand nombre de fois les études et aboutir à la même conclusion pour avoir des informations solides. Une étude sans réplication étant peu fiable, et sans protocole étant inutile.\n\u003e \n\u003e Source : https://fr.wikipedia.org/wiki/M%C3%A9thode_exp%C3%A9rimentale\n\n*C'est donc un second point peu engageant.*\n\n\n\nCependant, tout ce que nous souhaitons récupérer est peut-être facilement accessible sur le site de [Smarther](http://smarther.co/). Il est possible que l'auteur soit expert dans la réalisation d'infographie qui buzz mais qu'il ne soit pas expert en journalisme. Gageons que sa source sera plus fiable. Mais pour le moment, c'est peu engageant. On pourra toujours également penser que l'auteur n'aura pas eu la place de mettre le lien complet. Cela n'est qu'une indication, mais il serait dommage de passer à côté de super information au prétexte que ce n'est pas directement sourcé, non ? J'ai un doute. Mais continuons.\n\n\n\n\n\n## Domaine de compétence de l'auteur\n\nRendons nous donc sur [Statista](https://fr.statista.com/) présenté comme les créateurs de l'infographie. Allons vers [une page qui nous présente ce site](https://www.statista.com/getting-started/welcome-to-statista) donc.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"712\" src=\"https://blog.lesieur.name/media/images/upload/statista.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://fr.statista.com/\" target=\"_blank\"\u003eStatista\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOn y apprend donc que [Statista](https://fr.statista.com/) a pour but de compiler des informations en provenance de **sources statistiques** et de les mettre à disposition. Jolie présentation pour le site. L'infographie nous fournit des données statistiques, le site nous dit que compiler des statistiques c'est leur domaine d'expertise. Tout semble aller bien. **J'ai envie d'y croire**.\n\nBon, mais sinon, y a t-il un réel auteur ? Une présentation d'un designer ou artiste probablement. Et surtout **où voit t-on que l'auteur touche sa bille en statistique** ? Car bien malin celui qui penserait pouvoir exploiter des données brutes sans connaissances des nombreux biais à éviter pour obtenir des résultats « significatifs ».\n\nRendons nous sur Google Image Search et cherchons notre image en faisant une recherche par image puis rendons-nous dans toutes les tailles.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"526\" src=\"https://blog.lesieur.name/media/images/upload/google-search.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://images.google.com/\" target=\"_blank\"\u003eGoogle Search Image\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nEn jouant avec les dates on trouve 15 résultats et ils datent tous de cette dernières semaines. L'information semble être fraîche ! Vraiment ? En tout cas **j'ai envie d'y croire**.\n\nAprès avoir isolé la source initiale par la date, nous tombons sur l'article original.\n\nL'[infographie a donc été publiée le 18 juin 2018 sur cette page](https://fr.statista.com/infographie/14309/linstantaneite-du-contenu-sur-les-reseaux-sociaux/) et on y apprend que l'auteur est Claire Jenik. Elle est Data journaliste... Difficile à première vu, en aillant affaire à une journaliste des données, que l'infographie ne soit pas daté ou correctement sourcé (lien direct). Allons donc voir le CV de cette personne. Il semble qu'elle est commencé ce métier directement chez [Statista](https://fr.statista.com/). Elle a donc pu acquérir ses compétences de ses pairs experts chez [Statista](https://fr.statista.com/). Également elle a pu, au vu de ces études, êtres exposées à la méthode scientifique très similaire à la méthode d'investigation journalistique. Enfin, peut-être également qu'elle a étudié les statistiques de manière poussée. Donc de ce côté là, il n'y a rien qui nous permettrait de conclure que cette personne ne soit pas compétente dans son domaine.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"690\" src=\"https://blog.lesieur.name/media/images/upload/claire-jenik.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://fr.statista.com/infographie/14309/linstantaneite-du-contenu-sur-les-reseaux-sociaux/\" target=\"_blank\"\u003eArticle de Claire Jenik, Data journaliste\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nL'autorité de l'auteur est établie, il n'est pas impossible que nous ayons affaire à quelqu'un qui s'y connaisse assez en statistique et en méthode scientifique pour fournir une compilation de données correcte. Je n'ai pour le moment pas de raison suffisante de douter de ce côté là.\n\n\u003e *`l'`*  **Autorité de l'auteur** : une affirmation n'a de validité que si elle est faites par une personne dont l'affirmation touche son domaine de compétence. Si la personne n'a pas les moyens d'apporter des informations pour affirmer ses compétences dans un domaine, il n'y a pas plus de raison de croire à ce qu'elle affirme que quelqu'un d'autre.\n\u003e \n\u003e Source : https://fr.wikipedia.org/wiki/Argument_d%27autorit%C3%A9\n\nPeux-être que Claire Jenik n'est pas sensibilisé à la portée virale d'une telle infographie. En tout cas, mettons de côté le fait qu'elle le soit et que la réalisation « intemporelle » de son infographie soit volontaire, ce qui ne rendrait vraiment pas service à [Statista](https://fr.statista.com/).\n\nUne autre zone d'ombre se profile également : je n'ai rien vu qui laisserai transparaître que notre auteur ai une expertise pour la discrimination pertinente de données statistiques dans le domaine des médias / plateformes sociales. Ceci est très important pour éviter les facteurs de confusions.\n\n\u003e *`l'`*  **Facteur de confusion** : une affirmation basée sur des données publiquement consultable n'a de validité que si elle est faites par une personne dont c'est le domaine de compétence. Cela permet d'éviter les facteurs de confusion dont l'un des exemples le plus parlant reste [le paradoxe de Simpson](https://fr.wikipedia.org/wiki/Paradoxe_de_Simpson).\n\u003e \n\u003e Source : https://fr.wikipedia.org/wiki/Biais_de_confusion\n\n\n\n\n\n## Remonter à la source de l'infographie\n\nPuisque nous avons réussi à mettre la main sur la page qui nous donne plus d'information sur l'infographie, nous savons que ce n'est pas l'auteur qui a compilé les données mais que c'est une page qui l'avait fait avant elle. Elle en donne la source dans le texte comme [Statista en fait la promesse ici](https://fr.statista.com/sources/1/). Cela peut être rassurant car ce n'est pas parceque l'auteur à mal présenter ces données qu'elles sont fausses.\n\nNous arrivons donc sur [la source des données exposées dans l'infographie par Smarther](http://smarther.co/marketing/long-content-last-social-media/).\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"983\" src=\"https://blog.lesieur.name/media/images/upload/source-fake-news.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://smarther.co/marketing/long-content-last-social-media/\" target=\"_blank\"\u003eLa Source\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n**Ail !** La source date du 22 juillet 2017.\n\nLa source a déjà un an ! Je n'ai probablement pas l'expertise nécessaire en ce qui concerne la rapidité d'obsolescence des statistiques extraites de l'utilisation des plateformes sociales. Aussi, peut-être qu'un an est encore quelque chose d'acceptable ? Je m'en remet pour le moment à l'expertise de Claire Jenik qui doit avoir (c'est une nécessité) plus d'expérience que moi sur le sujet. Elle n'a pas pu passer a côté de cette information en tant que journaliste, un an c'est peut-être encore acceptable. **J'ai envie d'y croire**.\n\n\n\n### Parfois la source à quelque chose à vendre\n\nQue nous apprend la source [Smarther](http://smarther.co/marketing/long-content-last-social-media/) ? À première vu, ce n'est pas une étude, juste un article de blog. Cependant, cet article doit-lui se baser également sur une source ?\n\nCe qu'on apprend de [Smarther](http://smarther.co/marketing/long-content-last-social-media/) au niveau des valeurs est juste vis à vis de l'infographie, et en ce sens, l'infographie résume bien sa source directe. Mais ce n'est pas assez. Un article de blog n'est jamais une source fiable si il ne fournit pas de source et/ou la preuve de l'expertise de son auteur.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"675\" src=\"https://blog.lesieur.name/media/images/upload/smarther.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://smarther.co/\" target=\"_blank\"\u003eUne companie qui a quelque chose à vendre\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOn continue donc à lire la page de [Smarther](http://smarther.co/marketing/long-content-last-social-media/). Pas de référence, pas de source d'étude ? En fait on a une maigre mention à Mamsys, une société de développement logiciel en Inde qui serait les rapporteurs de cette information (« The Indian software developer Mamsys has interesting figures [...] »). On a donc une page qui affirme des choses en se basant sur des données non sourcées.\n\n*Carton rouge*. On devrait définitivement ne pas faire confiance à cette infographie.\n\n\u003e *`l'`*  **Source fiable** : Ce document n'aurait pas du faire office de source s'il ne mentionne pas lui même ces sources. Ainsi, ce n'est pas parce qu'un [article Wikipedia](https://fr.wikipedia.org/) n'est pas une étude que ce n'est pas une source d'information fiable car :\n- Il cite ces sources. On sait donc qu'au dela du résumé fait par les contributeurs, on peut soit même vérifier l'information.\n- Il est à jour. La page étant éditable en permanence, l'information est le plus à jour possible.\n\u003e \n\u003e https://fr.wikipedia.org/wiki/Aide:Identifiez_des_sources_fiables\n\nOn devrait donc s'arrêter ici et ce demander surtout pourquoi [Smarther](http://smarther.co/) nous livre un tel article puisque ce n'est visiblement pas leur métier premier en consultant leur page « à propos ».\n\n\u003e *`l'`*  **Intention de l'auteur** : pour arriver à savoir si une source d'information n'a pas de conflit d’intérêt, il faut savoir si la diffusion d'une information qu'elle donne peut lui être bénéfique soit sur le font, soit sur la forme.\n\nIci, en regardant ce que fait [Smarther](http://smarther.co/), on peut supposer l'intention originale des auteurs avec ce billet mal sourcé : promouvoir leurs produits en restant présent dans les flux d'actualités en produisant du contenu. Cela ne fournit aucun gage de qualité, aucune indication sur la *méthode de production des études*. Mais cette hypothèse ne prouve rien. **J'ai envie d'y croire**.\n\nÀ ce niveau il aurait pu se passer au moins deux choses puisque Claire Jenik est journaliste.\n\n- Soit notre infographiste ne se sert pas de cette source car elle n'a aucun aspect de fiabilité (date lointaine, pas de source précise, expertise du blog discutable). Elle se tourne donc sur autre chose pour produire son travail.\n\n- Soit elle cherche elle même avec les indices de la page à retrouver l'étude en question et la véracité des données qu'elle fournit, ce qui prend du temps pour un résultat peu engageant pour le moment.\n\nPuisque cette infographie existe, et que nous mettons de côté l'hypothèse que l'auteur est mal fait son travail et ne soit pas compétant pour le moment, alors elle a forcément suivi une piste.\n\nAllons creuser nous aussi du côté de la société indienne Mamsys.\n\n\n\n### Source introuvable\n\nAprès une recherche rapide sur Google ([ce site semble être la bonne compagnie](https://www.mamsys.com/digital-marketing/) ; bon nom, origine indienne), cherchons maintenant dans les publications avant le 22 juillet 2017 dans le blog de [Mamsys](https://www.mamsys.com/). C'est donc à partir de [la 5ième page](https://www.mamsys.com/blog/page/5/) (à date du 23 juin 2018) qu'on peut commencer à chercher l'information donc.\n\nRien qui ressemble au titre de [Smarther](http://smarther.co/) entre les pages 5 à 17 après lectures des titres et consultations des pages les plus probables d'avoir l'information. Rien à ressortir via le moteur de recherche. **Mais l'absence de preuve n'est pas la preuve de l'absence**. Je m'en tiens là pour cette piste.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"696\" src=\"https://blog.lesieur.name/media/images/upload/mamsys.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://www.mamsys.com/blog/page/5/\" target=\"_blank\"\u003e404 : Source Not Found\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nCe que j'ai vu des articles de [Mamsys](https://www.mamsys.com/), c'est qu'il ne sont pas « créateur de source » sur les pages que j'ai ouvertes, il sont juste relayeurs d'informations. **Les sources sont donc peut être disponibles ailleurs**.\n\n\n\n### Assez d'éléments pour évincer l'infographie comme source fiable\n\nVisiblement nous sommes dans un cul de sac ? Il aurait donc été raisonnable pour l'auteur d'abandonner la diffusions de ces informations. Cherchons un peu plus loin tout de même. **J'ai envie d'y croire**.\n\nCherchons dans des fenêtres temporelles avant 2017 avec les valeurs de l'article source « Twitter 18 minutes Facebook 5 hours Instagram 21 hours LinkedIn 24 hours YouTube 20 days Pinterest 4 months Blog 2 years » voir ce que nous sommes capable de trouver. Allons nous récupérer notre fameuse étude ?\n\nAprès avoir recroisé plusieurs liens mettant en évidence que la liste a été repartagée à droite à gauche [on tombe sur un article similaire](https://the-refinery.io/digital-marketing/how-long-does-a-social-media-post-last) à ce qu'aurait pu donner celui qui nous a manquer chez [Mamsys](https://www.mamsys.com/). La date du 12 juin 2016 ramène la source des données à 2 ans en arrière maintenant...\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"684\" src=\"https://blog.lesieur.name/media/images/upload/a-source-compilation.jpg\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://mtomconsulting.com/lifespan-social-media-post/\" target=\"_blank\"\u003ePas une mais des sources\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOn s'aperçoit en parcourant [les sources de cette lecture](https://mtomconsulting.com/lifespan-social-media-post/) que les données à la base de l'infographie n'est probablement pas une étude mais des études, autant que de plateforme sociale. Faire cette infographie va devenir complexe car **il va falloir compiler les données des études et vérifier qu'elles sont compatibles entre elles** pour en résumer le tout. Et des études incomparables, il y en a beaucoup. C'est là que l'expertise de Data journaliste de Claire Jenik va prendre tout son sens. **J'ai envie d'y croire**.\n\nOn trouve également cette [source pour la valeur de deux ans des blogs](http://www.convinceandconvert.com/content-marketing/lifetime-value-of-a-blog-post/).\n\n**Et là, c'est la douche froide**. Voici malheureusement ce que remonter aux sources nous donne.\n\n#### Twitter\n\nLe 18 minutes de Twitter est expliqué dans [cet article](https://moz.com/blog/when-is-my-tweets-prime-of-life) qui date du 12 novembre 2012 ! On y apprend que « Yep, for half of the users sampled, 18 minutes or less was the time it took for half of their tweets' RTs to occur. ». Notre hypothèse précédente placerait donc la barre à **50% des utilisateurs** concernant **50% des tweets visibles**.\n\n#### Facebook\n\nLe 5h de Facebook est expliqué dans [cet article](https://www.socialmediatoday.com/content/facebook-posts-lifetime-even-shorter-you-thought#node-1646986?utm_source=hootsuite\u0026utm_medium=twitter\u0026utm_campaign=hootsuite_tweets) qui date du 06 septembre 2013 ! On y apprend que « 75% of engagement happens within the first 5 hours ». Notre hypothèse précédente placerait donc la barre à **75% des utilisateurs** concernant **l'engagement sur ce qui est passé dans les flux**.\n\n#### Blog\n\nLe 2 ans des Blog est expliqué dans [cet article](http://www.convinceandconvert.com/content-marketing/lifetime-value-of-a-blog-post/) qui date du 28 août 2015 ! On y apprend que « only after two years will a blog post obtain 99 percent of its impressions ». Notre hypothèse précédente placerait donc la barre à **99% des utilisateurs** concernant **la visite d'un billet de blog**.\n\n*Nous n'avons pas besoin de poursuivre plus nos investigations puisque nous avons à présent assez d'éléments pour mettre à mal la véracité des informations de cette infographie*.\n\n\n\n\n\n## Conclusion : cette infographie est de la désinformation\n\nIl y a deux critères avec nos recherches qui permettent d'exclure cette infographie comme source fiable à présent :\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"847\" src=\"https://blog.lesieur.name/media/images/upload/fake-news.jpg\" alt=\"Contenu, apparence et comportement\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eInfographie utilisant des données non comparables et passées de date.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### À propos des dates\n\nC'est l'argument le moins solide car, n'étant pas expert en date de péremption des informations concernant les algorithmes des plateformes sociales, je ne peux pas affirmer avec certitude que les dates fournies relèvent de l'obsolescence. Cependant, au vu des dates qui courent de 2012 à 2015 pour les informations trouvées et la parution de l'infographie en 2018 ainsi que mon expérience dans le développement informatique : j'ai de bonne raison de croire que ces informations ne sont plus valides. Une bonne manière de le prouver serait de récupérer des chiffres récents (des derniers mois) contredisant chaque point dans des études comparatives faites par des statisticiens experts dans le domaine des médias sociaux.\n\n\n\n### À propos de la compilation statistique\n\nC'est l'argument qui discrimine définitivement cette infographie comme étant sérieuse : elle compare des valeurs qui sont incomparables puisque le seuil XX% est différent pour chacune et que la métrique visée est différente à chaque fois. Et encore une fois, les dates ne ciblent pas les mêmes temporalités ce qui ne reflète pas les mêmes utilisateurs globaux : pas le même contexte.\n\nIl est même fort probable qu'à **valeur de XX% égale**, pour **chacune des métriques** à **la même date** on obtienne un résultat **complètement différent**.\n\n\n\n\n### Où est-ce que ça à merdé ?\n\nTrès clairement, la source [Smarther](http://smarther.co/marketing/long-content-last-social-media/) n'est pas une source fiable. Comme Claire Jenik est journaliste, elle devait le savoir. Puisqu'elle est spécialisée dans la manipulation de données (Data journaliste) et si elle a suivi la piste des informations, elle doit également savoir qu'elles n'étaient pas comparables. Je m'arrêterai là et n'émettrai pas mon jugement personnel dans ce billet, ce n'est pas le but.\n\n\u003e *`le`*  **Procès d'intention** : c'est le fait de préter des intentions à quelqu'un sur la base d'élément qui ne sont pas suffisant pour exclure d'autres hypothèses. Aussi il ne faut pas attribuer à la malveillance ce qui peut être attribué à la simple bétise sans preuve.\n\u003e \n\u003e Source : https://fr.wikipedia.org/wiki/Proc%C3%A8s_d%27intention\n\n**Statista n'a pas rendu le service qu'il prétent offrir pour cette infographie et Claire Jenik n'a pas sérieusement fait son travail pour cette infographie.**\n\n\u003e *`la`*  **Généralisation abusive** : il ne serait pas correcte de conclure que [Statista](https://fr.statista.com/) ne rend pas le service qu'il prétend offrir en se basant sur uniquement une publication. Pour pouvoir affirmer cela dans la globalité il faudrait qu'un nombre significatif de publication soient démontrés fausses. Il faudrait également vérifier si [Statista](https://fr.statista.com/) s'engage sur un pourcentage de « vrai-positif » pour savoir à partir de quand on peut considérer qu'il ne rend pas le service qu'il affirme offrir.\n\u003e \n\u003e Source : https://cortecs.org/materiel/la-generalisation-abusive/\n\n\n\n\n\n### Oui, mais d'autres infographies confirme ces nombres !\n\nJ'ai trouvé assez d'élément pour confirmer que cette infographie est de la désinformation. Vraiment ? Je n'ai pas la certitude que les informations s'appuyaient réellement sur les sources que je cite pourtant. Il y a de grande chance que ce soit vrai : mais ce n'est pas une preuve irréfutable.\n\n\u003e *`le`*  **Biais d'attrition** : c'est le fait de prendre uniquement en compte les résultats que nous avons sous les yeux et que nous pensons valide en ne se demandant pas s'il n'y aurait pas plus de résultat que cela (ou en écartant volontairement des résultats déjà trouvé).\n\u003e \n\u003e Source : http://www.txrating.org/polycop/concept/attrition.htm\n\nJ'ai donc retenter la recherche en incluant le mot « Mamsys » avec la liste des autre valeurs.\n\nAprès avoir ouvert énormément de site (comme [ce presque plagiat LinkedIn](https://www.linkedin.com/pulse/marketing-tips-how-long-does-content-last-social-media-kumar-pandian/), [ce billet récent](http://mobileappdevelopmentcompany209.blogspot.com/2018/06/how-long-does-content-last-in-social.html), [ce plagia même pas formaté](https://www.scoop.it/t/mobile-app-development-company-13/?)) j'ai pu constater que tout comme l'auteur tout le monde sourçait [l'article de Smarther](http://smarther.co/marketing/long-content-last-social-media/).\n\nMais je suis tombé sur [cet article en allemand](http://smarther.co/marketing/long-content-last-social-media/) datant du 31 mai 2017 qui est antérieur donc à celui de [Smarther](http://smarther.co/). Et ce qui est intéressant, c'est qu'il source correctement Mamsys ! En voici [le lien qui est mort](https://www.mamsys.com/21-ways-extend-life-of-your-content/) mais qui nous indique tout de même que l'article en question s'appelait « 21 ways extend life of your content » !\n\nOn relance les recherches avec ce titre donc et là, c'est le graal.\n\n\u003cfigure\u003e\n\u003cimg width=\"1018\" height=\"572\" src=\"https://digitalidee.fr/wp-content/uploads/2017/09/dessin-42.png\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://digitalidee.fr/wp-content/uploads/2017/09/dessin-42.png\" target=\"_blank\"\u003eTimeline des infographies\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nOn obtient des « clones » de ce que devait être l'article original comme [ici](https://socialmediaonlineclasses.com/21-ways-to-extend-the-life-of-your-content-infographic) ou [là](https://socialmediaonlineclasses.com/21-ways-to-extend-the-life-of-your-content-infographic). Cela nous permet de voir que des autres infographies reprennent les mêmes valeurs ! Donnant l'illusion que ces informations sont véridiques ! Pourtant **ce n'est pas parce que le plus grand nombre affirme quelque chose que l'information est vrai**. L'important, c'est l'**expertise de celui qui affirme**.\n\nL'une des infographies ici nous permet directement de retrouver des sources correspondants aux valeurs incriminées. C'est la seconde sur le graphe ci-dessus :\n\n\u003cfigure\u003e\n\u003cimg width=\"675\" height=\"202\" src=\"https://digitalidee.fr/wp-content/uploads/2017/09/How-long-does-your-content-last-sources.png\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://digitalidee.fr/wp-content/uploads/2017/09/How-long-does-your-content-last-sources.png\" target=\"_blank\"\u003eSources des affirmations de l'infographie\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nEt [l'étude de ces sources réalisée par Paul Humbert](https://digitalidee.fr/attention-duree-de-contenu-cacher-une-autre/) m'amène également à la conclusions que les informations présentés ainsi en 2018 sont de la désinformation.\n\n\n\n\n\n## Et sinon ? Comment savoir quand une nouvelle fraîche ne l'est plus ?\n\nEt si on répondait à la question ?\n\n### Réponse courte\n\n- Pas de date, pas de source directe ? Direction poubelle.\n\n### Ma méthode\n\nLa méthode que j'utilise et qui me permet de faire cette discrimination au quotidien est [la zététique](https://www.lesieur.name/zetetique/).\n\nPour en faire un résumé, la Zététique vous permet :\n\n1) D'entraîner ses heuristiques de prise de décision intuitive :\n- en s'accommodant au mieux des biais cognitifs humains et\n- en repérant les arguments et logiques fallacieuses.\n\n2) D'améliorer sa prise de décision analytique :\n- en travaillant sa logique,\n- en faisant des réductions statistiques et\n- en étudiant des modèles probabilistes.\n\n3) De correctement s'informer :\n- en classifiant les preuves, en pondérant les hypothèses et en remontant aux sources afin\n- de distinguer ce que l'on crois de ce que l'on sait.\n\n4) De rester bienveillance et humble :\n- en remettant en causes les propos/actions pas les personnes,\n- en ne cherchant pas à avoir raison mais à se tromper le moins possible et\n- en acceptant nos croyances en tant que tel.\n\nC'est avec cette méthode que j'ai rédigé cet article !","urn":"l-instantaneite-du-contenu-et-les-etudes-statistiques-perimees-recyclees","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5b2e23d9c2bdd105cdf6709f"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5b2e636d5ed1322daabc6f0a"},{"$oid":"5310456355dfd5f7698d48c9"},{"$oid":"5310456355dfd5f7698d48ce"}],"dates":{"updated":[],"published":{"$date":"2018-06-23T10:51:00.000Z"}},"__v":0,"description":"Comment savoir quand une nouvelle fraîche ne l'est plus ? Un exemple d'utilisation de la méthode Zététique","image":"https://blog.lesieur.name/media/images/upload/fake-news.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"5c387e91b0193869db9084da"},"title":"JavaScript plus Homme de Paille et HOP : La cohérence aux chiottes","content":"Allez, on casse un petit homme de paille en informatique avec un jolie exemple JavaScript qui nous est joliment illustré par [Luc Damas](http://www.luc-damas.fr/humeurs/a-propos/) sur le site [HOP](https://www.luc-damas.fr/humeurs/js-array-keys/) (pour Houblon Oriented Programming. Oui, il y a de la bière !).\n\n\u003cfigure\u003e\n\u003cimg width=\"900\" height=\"871\" src=\"https://www.luc-damas.fr/humeurs/images/js_array_keys.png\" alt=\"Homme de paille sur JS array keys\n\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eSource : https://www.luc-damas.fr/\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nSi vous ne le savez pas, JavaScript souffre de harcèlement de la part de ses petits camarades à l'école car il est différent. Même si j'ai trouvé aussi cela drôle (oui, j'aime me moquer parfois) encore faut t-il que ce le soit pour de bonne raison. Nous avons ici à faire à de mauvaises raisons.\n\n\u003e **`Définition`** **Qu'est ce qu'un homme de paille ?**\n\u003e \n\u003e *“L’épouvantail, parfois appelé « argument de l'homme de paille » par traduction littérale de l'expression anglaise « straw man », est un sophisme qui consiste à présenter la position de son adversaire de façon volontairement erronée. Créer un argument épouvantail consiste à formuler un argument facilement réfutable puis à l'attribuer à son opposant.” — Wikipédia*\n\nPS : je ne dis pas qu'il n'existe pas de bonnes raisons de se moquer du JavaScript.\n\nPS2 : je ne dis pas que c'est bien de se moquer.\n\nPS3 : (PS signifie Post-scriptum et non pas PlayStation).\n\nBref, soyons un peu plus critique.\n\n## Les faits\n\nExposons plusieurs faits de ce pas.\n\n## Boucle for\n\nSeul le premier type de boucle garanti que `i` soit de type `number` puisque nous décidons nous même d'en faire un tel type (`let i = 0`, puis `i++`).\n\nRien ne nous empêcherait, par exemple, d'en faire un type `string` à chaque itération.\n\nAinsi `i` dans l'exemple suivant...\n\n```\nlet t = ['h', 'o', 'p'];\nfor (let i = '0'; i \u003c t.length; i = +i + 1 + '') {\n    console.log(i);\n    console.log(typeof i);\n}\n```\n\n...sera de type `string`.\n\n\n## Boucle for ... of\n\nEn ce qui concerne l'opérateur `for ... of`, l'exemple est fallacieux puisqu'en réalité `i` n'est pas censé représenter nécessairement un nombre, mais l'objet qui se trouve dans le tableau.\n\nAussi l'exemple suivant...\n\n```\nvar t = ['h', 'o', 'p'];\nfor (var i of t) {\n    console.log(i);\n    console.log(typeof i);\n}\n```\n\n...retournera des types `string` (et pas `number` comme l'utilisation de `t.keys()`.\n\nDonc naturellement, l'exemple suivant...\n\n```\nvar t = [true, false, true];\nfor (var i of t) {\n    console.log(i);\n    console.log(typeof i);\n}\n```\n\n...retournera pour `i` un type `boolean`.\n\nLe fait qu'avec l'utilisation de `.keys()` la valeur soit un `number` n'est donc pas de notre ressors mais de celui de cette fonction (qui retourne l'indice qui est un `number`).\n\n\n## Boucle for ... in\n\nPour finir, l'opérateur `for ... in` semble, lui, affecter à `i` une `string` (ce qui effectivement n'est pas la même chose que l'utilisation de `for` ou de `for ... of` couplé `.keys()`). Je me serai également attendu à ce qu'il affecte un `number` comme ça sans trop y réfléchir mais il n'y a rien d’étonnant non plus : `for ... in` n'est pas réservé aux `Array` mais peut également fonctionner avec des `Object`. Et les indices des objets ne sont pas nécessairement des nombres.\n\nRegardez l'exemple suivant :\n\n```\nlet v = {\n    'str1': 'h',\n    'str2': 'o',\n    'str3': 'p',\n};\n\nfor (var i in v) {\n    console.log(i);\n    console.log(typeof i);\n}\n```\n\nLogique que ça retourne un type `string` (`str1`, `str2`, `str3`).\n\nRegardez également l'exemple suivant :\n\n```\nconst symbol1 = Symbol('h');\nconst symbol2 = Symbol('o');\nconst symbol3 = Symbol('p');\n\nlet t = {\n    symbol1: 'h',\n    symbol2: 'o',\n    symbol3: 'p',\n};\n\nfor (var i in t) {\n    console.log(i);\n    console.log(typeof i);\n}\n```\n\nAinsi on utilise `.toString()` pour « représenter » le `Symbol`.\n\nIl n'est pas illogique que le système nous retourne une string (`symbol1`, `symbol2` et `symbol3`). Puisque `for ... in` doit être en mesure de retourner différent type de valeur.\n\n\n## Mon opinion\n\nIl a été décidé « arbitrairement » que le système retourne les indices en utilisant la valeur `toString()` (ce qui est quand même pratique pour les `string` ou les `Symbol` et accessoirement, fonctionne également avec `number`.\n\nBref, c'est bien marrant à première vu, mais il n'y a rien qui me choque nécessairement. Faire le choix de la `string` ou du `number` est quelque chose « d'arbitraire ».\n\nSi vous êtes sur que votre indice sera de type `number`, vous pouvez tout simplement convertir la valeur en `number` avec l'opérateur `+` si cela est réellement nécessaire.\n\n```\nvar t = ['h', 'o', 'p'];\nfor (var i in t) {\n    console.log(+i);\n    console.log(typeof +i);\n}\n```\n\nEt oui, « si l'objet est de type `Array` », alors faire que `for ... in` retourne un `number` plutôt qu'une `string` était quelque chose que arbitrairement il aurait été convenable de faire : pour preuve, cette image le montre. Mais ce n'était pas nécessairement plus « logique » que l'état actuelle en fonction du point de vu adopté.\n\nMaintenant, au delà de ça, l'argument « j'aime pas le JavaScript » est une idée valide (et une opinion) pour justifier le fait de jeter son PC dans les chiottes (même si la finalité me semble un peu excessive :D).\n\n\n## Ma nouvelle illustration\n\nPas besoin d'homme de paille donc, rectifions ça !\n\n\u003cfigure\u003e\n\u003cimg width=\"900\" height=\"871\" src=\"https://blog.lesieur.name/media/images/upload/hop.jpg\" alt=\"Homme de paille sur JS array keys\n\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eSource : https://www.luc-damas.fr/\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nMerci à [Pierre Ammeloot](http://pierre.ammeloot.fr/) pour le partage ;)","urn":"javascript-plus-homme-de-paille-et-hop-la-coherence-aux-chiottes","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5b2e23d9c2bdd105cdf6709f"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"58d68584389fd824fd7cf278"},{"$oid":"5310456355dfd5f7698d48b8"}],"dates":{"updated":[],"published":{"$date":"2019-01-11T11:31:00.000Z"}},"__v":0,"description":"Si vous ne le savez pas, JavaScript souffre de harcèlement de la part de ses petits camarades à l'école. Même si j'ai trouvé cela drôle, encore faut t-il que ce le soit pour de bonne raison.","image":"https://blog.lesieur.name/media/images/upload/hop.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"5c6c002fb0193869db9084db"},"title":"Comprendre et reproduire les animations de transitions Vue.js en CSS et JavaScript","content":"En tant que traducteur principal de [la documentation officielle française de Vue.js](https://fr.vuejs.org/), lors de la traduction de la page  [Transitions d'entrée, de sortie et de liste](https://fr.vuejs.org/v2/guide/transitions.html), j'ai été bluffé par la simplicité de gestion des animations de transition proposé par [Vue.js](https://vuejs.org/). J'ai mis un peu de temps à comprendre exactement comment ça pouvait fonctionner sous le capot et je vous propose de faire ce cheminement de compréhension ensemble à travers cet article.\n\nCela vous permettra :\n\n- De reproduire une fonction permettant de réaliser des animations de transition simple.\n- De comprendre comment fonctionne le système d'animation de transition de Vue.js.\n\n\u003cfigure\u003e\n\u003cimg width=\"900\" height=\"871\" src=\"https://fr.vuejs.org/images/transition.png\" alt=\"Transitions Vue.js\" style=\"max-width: 100%;height: auto;\"\u003e\n\u003cfigcaption\u003eSource : https://fr.vuejs.org/\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n\n\n## À la main\n\nCommençons par les bases et évinçons l'idée de transition pour le moment. De façon simple, pour changer l'état d'un composant il suffit d'une classe de changement d'état. Je vais pouvoir ainsi pouvoir indiquer dans ma feuille de style (que nous nommerons dans cet article « la CSS ») sur un élément en indiquant qu'il est dans l'état par défaut en `display: none;` et dire avec la classe d'état `.is-displayed` que l'élément est affiché via la propriété de style `display: block;`. Vous pourrez trouver [plus de détails sur cette notion dans cet article](https://blog.lesieur.name/conventions-html-css-js-et-architecture-front-end/#changement-d-tat-des-l-ments).\n\nVoyons cela simplement avec un élément de classe `.simple-example--message` qui possède son état initial et un état `.is-displayed`.\n\nHTML :\n\n```\n\u003cdiv class=\"simple-example\"\u003e\n\u0009\u003c!-- On créé un bouton --\u003e\n\u0009\u003cbutton class=\"simple-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\n\u0009\u003c!-- qui permet d'afficher ce message. --\u003e\n\u0009\u003cdiv class=\"simple-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* L'état initial. */\n.simple-example--message {\n\u0009display: none;\n}\n\n/* L'état affiché. */\n.simple-example--message.is-displayed {\n\u0009display: block;\n}\n```\n\nJavaScript :\n\n```\n// On récupère le bouton et le message.\nvar button = document.getElementsByClassName('simple-example--button')[0],\n    message = document.getElementsByClassName('simple-example--message')[0];\n\n// Quand on clique sur le bouton\nbutton.addEventListener('click', function () {\n\n\u0009// on affiche/masque le message.\n\u0009message.classList.toggle('is-displayed');\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"simple-example-1\"\u003e\n\u0009\u003cbutton class=\"simple-example-1--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"simple-example-1--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### Changement d'état avec transition\n\nUn changement d'état est rapide et abrupte, pour rendre cela plus élégant, nous pouvons accompagner cette disparition d'un effet de transition. Pour transformer ce simple changement d'état en une animation de transition nous allons utiliser la propriété `opacity` à la place de `display`. Nous verrons plus loin pourquoi nous faisons ce changement et allons voir de suite ce que cela peut donner.\n\nHTML :\n\n```\n\u003c!-- Note : identique à l'exemple précédent. --\u003e\n\u003cdiv class=\"simple-example\"\u003e\n\u0009\u003cbutton class=\"simple-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"simple-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n.simple-example--message {\n\n\u0009/* Nous allons permettre de changer */\n\u0009/* un élément invisible, */\n\u0009opacity: 0;\n\n\u0009/* en 1 seconde, */\n\u0009transition: opacity 1s;\n}\n.simple-example--message.is-displayed {\n\n\u0009/* en un élément visible. */\n\u0009opacity: 1;\n}\n```\n\nJavaScript :\n\n```\n// Note : identique à l'exemple précédent.\nvar button = document.getElementsByClassName('simple-example--button')[0],\n    message = document.getElementsByClassName('simple-example--message')[0];\n\nbutton.addEventListener('click', function () {\n\u0009message.classList.toggle('is-displayed');\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"simple-example-2\"\u003e\n\u0009\u003cbutton class=\"simple-example-2--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"simple-example-2--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### Les défauts de cette approche\n\n_Règles CSS imcompatibles_\n\nVous remarquerez cependant que pour permettre cela nous avons dû faire des choix. Effectivement, nous avons dû nous passer de la propriété `display` pour permettre à la transition de marcher. Un élément non affiché avant démarrage de la transition l'empêche de fonctionner. Cela change quelque peut notre approche puisque vous pouvez remarquer dans ce cas que l'espace sous le bouton existe déjà vu que nous le cachons simplement ici.\n\nMettons en évidence ce problème en le testant dans cet exemple.\n\nHTML :\n\n```\n\u003c!-- Note : identique à l'exemple précédent. --\u003e\n\u003cdiv class=\"simple-example\"\u003e\n\u0009\u003cbutton class=\"simple-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"simple-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n.simple-example--message {\n\n\u0009/* Ajout de la propriété `display`. */\n\u0009display: none;\n\u0009opacity: 0;\n\u0009transition: opacity 1s;\n}\n.simple-example--message.is-displayed {\n\n\u0009/* Ajout de la propriété `display`. */\n\u0009display: block;\n\u0009opacity: 1;\n}\n```\n\nJavaScript :\n\n```\n// Note : identique à l'exemple précédent.\nvar button = document.getElementsByClassName('simple-example--button')[0],\n    message = document.getElementsByClassName('simple-example--message')[0];\n\nbutton.addEventListener('click', function () {\n\u0009message.classList.toggle('is-displayed');\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"simple-example-3\"\u003e\n\u0009\u003cbutton class=\"simple-example-3--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"simple-example-3--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n_Ouverture et fermeture identique_\n\nQuand on effectue une transition, nous pouvons décrire deux états.\n\n- La transition qui accompagne l'élément de son état standard à son état `.is-display`. Nous appelons cela une **transition entrante** (ou transition d'ouverture).\n- La transition qui accompagne l'élément de son état `.is-display` à son état standard. Nous appelons cela une **transition sortante** (ou transition de fermeture).\n\nIl faut savoir dès lors que notre utilisation actuelle dans la CSS rend impossible de faire une transition entrante différente de la transition sortante. Nous entendons par différente le fait de faire autre chose que l'animation inverse. Il va falloir gérer les transitions ailleurs que dans la classe principale pour résoudre ce point.\n\nNous allons donc améliorer le code JavaScript pour répondre à ces problématiques !\n\n\n\n\n\n## Gestion de la méthode de transition ##\n\nLa première solution apportée par [Vue.js](https://fr.vuejs.org/v2/guide/transitions.html) est de gérer la durée de transition, les étapes de transition et la courbe de transition dans une classe séparée. Il va d'ailleurs y avoir deux classes. Une qui va gérer les instructions pour la transition entrante (de l'état standard à l'état alternatif) et une qui va gérer les instructions pour la transition sortante (de l'état alternatif à l'état standard).\n\n- C'est la classe `…-enter-active` qui gérera la transition de l'état standard à l'état `.is-displayed`.\n- C'est la classe `…-leave-active` qui gérera la transition de l'état `.is-displayed` à l'état standard.\n\nIl suffit dans ce modèle de remplacer les `…` par le nom que vous souhaitez donner à votre transition. Appelons la `display`. Voyons cela avec le code suivant.\n\nHTML :\n\n```\n\u003c!-- Note : similaire à l'exemple précédent avec le nom des classes différent. --\u003e\n\u003cdiv class=\"transition-example\"\u003e\n\u0009\u003cbutton class=\"transition-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"transition-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* Définition de l'état standard. */\n.transition-example--message {\n\u0009opacity: 0;\n\u0009transform: translateX(0)\n}\n\n/* Définition de l'état `.is-displayed`. */\n.transition-example--message.is-displayed {\n\u0009opacity: 1;\n\u0009transform: translateX(200px)\n}\n\n/* Instruction de transition entrante. */\n.transition-example--message.display-enter-active {\n\n\u0009/* Nous plaçons les informations de transition ici maintenant. */\n\u0009transition: opacity 1s, transform 1s;\n}\n\n/* Instruction de transition sortante. */\n.transition-example--message.display-leave-active {\n\n\u0009/* Nous décidons de masquer le message plus lentement qu'il ne s'affiche. */\n\u0009transition: opacity 4s, transform 4s;\n}\n```\n\nJavaScript :\n\n```\nvar button = document.getElementsByClassName('transition-example--button')[0],\n    message = document.getElementsByClassName('transition-example--message')[0];\n\nbutton.addEventListener('click', function () {\n\n\u0009// On vérifie l'état de notre composant.\n\u0009// Renvoi `true` s'il est ouvert.\n\u0009// Renvoi `false` s'il est fermé.\n\u0009var isDisplayed = message.classList.contains('is-displayed');\n\n\u0009// Remise à zéro des transitions.\n\u0009message.classList.remove('display-enter-active');\n\u0009message.classList.remove('display-leave-active');\n\n\u0009// On applique la transition souhaitée.\n\u0009// On inverse `isDisplayed` pour gérer la\n\u0009// transition entrante d'abord,\n\u0009if (!isDisplayed) {\n\n\u0009\u0009// en appliquant `…-enter-active` pour la transition entrante\n\u0009\u0009message.classList.add('display-enter-active');\n\n\u0009\u0009// et en appliquant l'état `.is-displayed`.\n\u0009\u0009message.classList.add('is-displayed');\n\n\u0009// Puis la transition sortante ensuite,\n\u0009} else {\n\n\u0009\u0009// en appliquant `…-leave-active` pour la transition sortante\n\u0009\u0009message.classList.add('display-leave-active');\n\n\u0009\u0009// et en appliquant l'état standard.\n\u0009\u0009message.classList.remove('is-displayed');\n\u0009}\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"transition-example-1\"\u003e\n\u0009\u003cbutton class=\"transition-example-1--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"transition-example-1--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n## État de début et de fin de transition ##\n\nLa seconde solution apportée par [Vue.js](https://fr.vuejs.org/v2/guide/transitions.html) pour gérer l'existence ou non de l'objet, ou le fait qu'il possède des propriétés qui rendent les transitions incompatibles (comme `display`) est de mettre en place un état de début et un état de fin de transition respectivement :\n\n- en démarrage et fin de transition entrante et\n- en démarrage et fin de transition sortante.\n\n\n\n### Ouverture\n\nLa transition entrante, à laquelle sera associée tout du long l'état `…-enter-active` se gère avec les classes suivantes :\n\n- La classe `…-enter` vous permettra de définir quelles sont les propriétés de démarrage, juste avant que l'on enclenche la transition entrante.\n- La classe `…-enter-to` vous permettra de définir quelles sont les propriétés à atteindre en fin de transition entrante.\n\nAinsi l'animation se jouera des valeurs de l'état `…-enter` jusqu'aux valeurs de l'état `…-enter-to` en suivant les instructions de transition dans `…-enter-active`.\n\n\n\n\n### Fermeture\n\nLa transition sortante, à laquelle sera associée tout du long l'état `…-leave-active` se gère avec les classes suivantes :\n\n- La classe `…-leave` vous permettra de définir quelles sont les propriétés de démarrage, juste avant que l'on enclenche la transition sortante.\n- La classe `…-leave-to` vous permettra de définir quelles sont les propriétés à atteindre en fin de transition sortante.\n\nAinsi l'animation se jouera des valeurs de l'état `…-leave` jusqu'aux valeurs de l'état `…-leave-to` en suivant les instructions de transition dans `…-enter-active`.\n\n\n\n\n### Exemple\n\nIl suffit dans ce modèle de remplacer les `…` par le nom que vous souhaitez donner à votre transition. Voyons cela avec le code suivant :\n\nHTML :\n\n```\n\u003c!-- Note : identique à l'exemple précédent. --\u003e\n\u003cdiv class=\"transition-example\"\u003e\n\u0009\u003cbutton class=\"transition-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"transition-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* Définition de l'état standard. */\n.transition-example--message {\n\u0009display: none;\n}\n\n/* Définition de l'état `.is-displayed`. */\n.transition-example--message.is-displayed {\n\u0009display: block;\n}\n\n\n/* Ici nous définissons l'état de l'élément au début */\n/* de la transition entrante. */\n.transition-example--message.display-enter {\n\u0009transform: translateY(0)\n}\n\n/* Ici nous définissons l'état de l'élément à la fin */\n/* de la transition entrante. */\n.transition-example--message.display-enter-to {\n\u0009transform: translateY(50px)\n}\n\n\n/* Ici nous définissons l'état de l'élément au début */\n/* de la transition sortante. */\n.transition-example--message.display-leave {\n\u0009transform: translateX(200px)\n}\n\n/* Ici nous définissons l'état de l'élément à la fin */\n/* de la transition sortante. */\n.transition-example--message.display-leave-to {\n\u0009transform: translateY(0)\n}\n\n\n/* Nous définissons ici les animations qui vont opérer */\n/* lors de la transition entrante. */\n.transition-example--message.display-enter-active {\n\u0009transition: transform 1s;\n}\n/* Nous définissons ici les animations qui vont opérer */\n/* lors de la transition sortante. */\n.transition-example--message.display-leave-active {\n\u0009transition: transform 4s;\n}\n```\n\nJavaScript :\n\n```\nvar button = document.getElementsByClassName(\"transition-example--button\")[0],\n\u0009message = document.getElementsByClassName(\"transition-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\u0009var isDisplayed = message.classList.contains(\"is-displayed\");\n\n\u0009// Lors de la transition entrante,\n\u0009if (!isDisplayed) {\n\n\u0009\u0009// on place l'état `.is-diplayed`,\n\u0009\u0009message.classList.add(\"is-displayed\");\n\n\u0009\u0009// on retire la classe de fin de la transition sortante et\n\u0009\u0009message.classList.remove(\"display-leave-to\");\n\n\u0009\u0009// on place la classe de début de la transition entrante.\n\u0009\u0009message.classList.add(\"display-enter\");\n\n\u0009\u0009// Puis une boucle plus tard,\n\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009// on explique comment ces propriétés vont varier\n\u0009\u0009\u0009// en appliquant la classe de transition entrante active.\n\u0009\u0009\u0009message.classList.add(\"display-enter-active\");\n\n\u0009\u0009\u0009// Puis une boucle plus tard,\n\u0009\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009\u0009// on déclenche la transition en intervertissant les valeurs\n\u0009\u0009\u0009\u0009// de début vers les valeurs de fin de transition entrante.\n\u0009\u0009\u0009\u0009message.classList.remove(\"display-enter\");\n\u0009\u0009\u0009\u0009message.classList.add(\"display-enter-to\");\n\n\u0009\u0009\u0009\u0009// Puis à la fin des 1 seconde,\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009\u0009\u0009// On retire la classe de transition entrante active.\n\u0009\u0009\u0009\u0009\u0009message.classList.remove(\"display-enter-active\");\n\u0009\u0009\u0009\u0009}, 1000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\n\u0009// Lors de la transition sortante.\n\u0009} else {\n\n\u0009\u0009// on retire la classe de fin de la transition entrante,\n\u0009\u0009message.classList.remove(\"display-enter-to\");\n\n\u0009\u0009// On place la classe de début de la transition sortante.\n\u0009\u0009message.classList.add(\"display-leave\");\n\n\u0009\u0009// Puis une boucle plus tard,\n\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009// on explique comment ces propriétés vont varier\n\u0009\u0009\u0009// en appliquant la classe de transition sortante active.\n\u0009\u0009\u0009message.classList.add(\"display-leave-active\");\n\n\u0009\u0009\u0009// Puis une boucle plus tard,\n\u0009\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009\u0009// on déclenche la transition en intervertissant les valeurs\n\u0009\u0009\u0009\u0009// de début vers les valeurs de fin de transition sortante.\n\u0009\u0009\u0009\u0009message.classList.remove(\"display-leave\");\n\u0009\u0009\u0009\u0009message.classList.add(\"display-leave-to\");\n\n\u0009\u0009\u0009\u0009// Puis à la fin des 4 secondes,\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\n\u0009\u0009\u0009\u0009\u0009// on retire la classe de transition entrante active et\n\u0009\u0009\u0009\u0009\u0009message.classList.remove(\"display-leave-active\");\n\n\u0009\u0009\u0009\u0009\u0009// on retire l'état `.is-diplayed`.\n\u0009\u0009\u0009\u0009\u0009message.classList.remove(\"is-displayed\");\n\u0009\u0009\u0009\u0009}, 4000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\u0009}\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"transition-example-2\"\u003e\n\u0009\u003cbutton class=\"transition-example-2--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"transition-example-2--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Aller plus loin ##\n\nDans notre exemple, le système se base sur l'état `.is-displayed` pour savoir s'il doit enclencher une transition entrante ou une transition sortante. Mais il y a d'autre moyen de prendre cette décision, notamment la présence de `…-enter` ou `…-leave-to` sur l'élément par exemple. Il est également possible, comme cela peut-être le cas pour Vue.js de se baser sur la présence ou non de l'élément dans le DOM avant transition.\n\n\n\n### La cible, la transition et l'état ###\n\nNous allons maintenant automatiser notre système dans une fonction que nous nommerons —et là je sens que je vais vous étonner— `transition`.\n\nHTML :\n\n```\n\u003c!-- Note : similaire à l'exemple précédent avec le nom des classes différent. --\u003e\n\u003cdiv class=\"animation-example\"\u003e\n\u0009\u003cbutton class=\"animation-example--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"animation-example--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* Définition de l'état standard et alternatif. */\n.animation-example--message {\n\u0009display: none;\n}\n.animation-example--message.is-displayed {\n\u0009display: block;\n}\n\n/* On créé une animation. */\n@keyframes bounce-in {\n  0% {\n    transform: scale(0);\n    opacicy: 0;\n  }\n  50% {\n    transform: scale(1.5);\n    opacicy: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacicy: 1;\n  }\n}\n\n/* On applique l'animation pour transition entrante. */\n.animation-example--message.animate-enter-active {\n\u0009animation: bounce-in 1s;\n}\n\n/* On applique l'animation pour transition sortante. */\n.animation-example--message.animate-leave-active {\n\u0009animation: bounce-in 4s reverse;\n}\n```\n\nJavaScript :\n\n```\nvar button, message;\n\n// On déplace tout dans une fonction avec 3 paramètres qui représentent la cible, le nom de transition et le nom de l'état.\n\n/**\n * Permet d'exécuter une transition entre deux états pour un élément spécifique.\n * @param  {HTMLElement} target     - L'élément HTML qui doit être animé.\n * @param  {string}      transition - Le nom de la transition remplaçant `…` pour les classes `…-enter`, `…-leave`, etc.\n * @param  {string}      state      - L'état placé au début d'une transition entrante et retiré en fin d'une transition sortante.\n */\nfunction transition(target, transition, state) {\n\u0009// On test s'il n'existe pas d'état de sortie.\n\u0009var hasNoState = !target.classList.contains(state);\n\n\u0009// Transition entrante s'il n'existe pas d'état.\n\u0009if (hasNoState) {\n\n\u0009\u0009// On gère le nom des classes d'état via le paramètre `state`.\n\u0009\u0009target.classList.add(state);\n\n\u0009\u0009// On gère les noms des classes de transition via le paramètre `transition`.\n\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\n\u0009\u0009// On gère l'élément HTML ciblé via le paramètre `target`.\n\u0009\u0009target.classList.add(transition + \"-enter\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-enter-active\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter-active\");\n\u0009\u0009\u0009\u0009}, 1000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\n\u0009// Transition sortante s'il existe un état.\n\u0009} else {\n\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009target.classList.add(transition + \"-leave\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-leave-active\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave-active\");\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(state);\n\u0009\u0009\u0009\u0009}, 4000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\u0009}\n}\n\nbutton = document.getElementsByClassName(\"animation-example--button\")[0];\nmessage = document.getElementsByClassName(\"animation-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\n\u0009// On applique les transitions en définissant\n\u0009// l'élément HTML `.transition-example--message` comme cible de l'animation,\n\u0009// le nom `display` comme préfixe remplaçant `…` dans les noms de transition et\n\u0009// le nom `is-displayed` comme état alternatif après animation entrante.\n\u0009transition(message, \"animate\", \"is-displayed\");\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"transition-example-3\"\u003e\n\u0009\u003cbutton class=\"transition-example-3--button\"\u003eAfficher/Masquer\u003c/button\u003e\n\u0009\u003cdiv class=\"transition-example-3--message\"\u003eTu me vois !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### L'état facultatif ###\n\nImaginons à présent que la totalité des propriétés CSS pour les transitions que l'on applique est compatible pour une transition (pas de présence de la propriété CSS `display` par exemple). Nous n'aurions alors pas besoin de gérer d'état. Sans état, nous ferrions alors le choix de deviner si nous devons effectuer une transition entrante ou sortante. Pour cela, nous pourrions nous baser sur la présence des classes `…-enter-to` ou de `…-leave` qui sont deux cas possibles qui indiquent que l'animation doit être une transition sortante. Dans le cas inverse, ce serait une transition entrante.\n\nNous allons donc rendre cela possible avec la fonction `transition` en utilisant le HTML et la CSS suivants :\n\nHTML :\n\n```\n\u003c!-- Note : similaire à l'exemple précédent avec le nom --\u003e\n\u003c!-- des classes et textes différents. --\u003e\n\u003cdiv class=\"stateless-example\"\u003e\n\u0009\u003cbutton class=\"stateless-example--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* Dans notre exemple, */\n/* l'état de début de la transition entrante */\n/* et l'état de fin de la transition sortante */\n/* sont les mêmes. */\n.stateless-example--message.animate-enter,\n.stateless-example--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n\n/* Dans notre exemple, */\n/* l'état de début de la transition sortante */\n/* et l'état de fin de la transition entrante */\n/* sont les mêmes. */\n.stateless-example--message.animate-leave,\n.stateless-example--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n\n/* Nous continuons cependant à utiliser une asymétrie de temps. */\n.stateless-example--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n```\n\nJavaScript\n\n```\nvar button, message;\n\n// Nous allons rendre le `state` facultatif et dans ce cas faire gérer\n// le changement d'état par la présence des classes de transition.\n\n/**\n * Permet d'exécuter une transition entre deux états pour un élément spécifique.\n * @param  {HTMLElement} target     - L'élément HTML qui doit être animé.\n * @param  {string}      transition - Le nom de la transition remplaçant `…` pour les classes `…-enter`, `…-leave`, etc.\n * @param  {string}      [state]    - L'état placé au début d'une transition entrante et retiré en fin d'une transition sortante.\n */\nfunction transition(target, transition, state) {\n\u0009var switchBase,\n\u0009\u0009// Est-ce qu'un état a été sciemment défini ?\n\u0009\u0009hasState = typeof state === 'string';\n\n\u0009// Gestion du critère de choix de transition entrante ou sortante.\n\u0009if (hasState) {\n\n\u0009\u0009// On utilise la présence de l'état défini.\n\u0009\u0009switchBase = target.classList.contains(state);\n\u0009} else {\n\n\u0009\u0009// On devine l'état suivant à partir des classes de transition sur l'élément.\n\u0009\u0009switchBase = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n\u0009}\n\n\u0009// Transition entrante.\n\u0009if (!switchBase) {\n\n\u0009\u0009// On vérifie s'il y a un état avant d'appliquer\n\u0009\u0009// le changement d'état qui indique l'état alternatif.\n\u0009\u0009hasState \u0026\u0026 target.classList.add(state);\n\n\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\u0009\u0009target.classList.add(transition + \"-enter\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-enter-active\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter-active\");\n\u0009\u0009\u0009\u0009}, 1000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\n\u0009// Transition sortante.\n\u0009} else {\n\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009target.classList.add(transition + \"-leave\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-leave-active\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave-active\");\n\n\u0009\u0009\u0009\u0009\u0009// On vérifie s'il y a un état avant d'appliquer\n\u0009\u0009\u0009\u0009\u0009// le changement d'état qui indique l'état standard.\n\u0009\u0009\u0009\u0009\u0009hasState \u0026\u0026 target.classList.remove(state);\n\u0009\u0009\u0009\u0009}, 4000);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\u0009}\n}\n\nbutton = document.getElementsByClassName(\"stateless-example--button\")[0];\nmessage = document.getElementsByClassName(\"stateless-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\n\u0009// On applique les transitions en définissant\n\u0009// l'élément HTML `.transition-example--message` comme cible de l'animation et\n\u0009// le nom `animate` comme préfixe remplaçant `…` dans les noms de transition.\n\u0009transition(message, \"animate\");\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"stateless-example\"\u003e\n\u0009\u003cbutton class=\"stateless-example--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### Temps automatiquement calculé ###\n\nIl ne vous aura certainement pas échappé que jusqu'à maintenant, nous indiquions manuellement que la transition entrante s'arrête au bout de `1000` millisecondes et que la transition sortante s'arrête au bout de `4000` millisecondes directement dans le code JavaScript. Nous allons créer une fonction qui calcule ce temps en fonction des instructions de transition dans la CSS. Profitons en également pour permettre de définir manuellement cette valeur lors de l'utilisation de la fonction `transition`.\n\nHTML :\n\n```\n\u003c!-- Note : identique à l'exemple précédent. --\u003e\n\u003cdiv class=\"stateless-example\"\u003e\n\u0009\u003cbutton class=\"stateless-example--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n/* Note : identique à l'exemple précédent. */\n.stateless-example--message.animate-enter,\n.stateless-example--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n\n.stateless-example--message.animate-leave,\n.stateless-example--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n\n.stateless-example--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n```\n\nJavaScript\n\n```\nvar button, message;\n\n// Nous allons permettre de définir nous même les transitions\n// ou de les calculer automatiquement sans précisions à l'utilisation.\n\n/**\n * Permet d'exécuter une transition entre deux états pour un élément spécifique.\n * @param  {HTMLElement}   target           - L'élément HTML qui doit être animé.\n * @param  {string}        transition       - Le nom de la transition remplaçant `…` pour les classes `…-enter`, `…-leave`, etc.\n * @param  {string}        [state]          - L'état placé au début d'une transition entrante et retiré en fin d'une transition sortante.\n * @param  {number|Object} [time]           - Si c'est un `number`, spécifie la durée de la transition entrante et sortante.\n                                              Si elle n'est pas précisée, cette durée est calculée à partir de la propriété `transition` ou `animation`.\n * @param  {number}        [time.enterTime] - Spécifie la durée de la transition entrante.\n                                              Le temps pour la transition sortante sera calculé si `time.leaveTime` n'est pas définie.\n * @param  {number}        [time.leaveTime] - Spécifie la durée de la transition sortante.\n                                              Le temps pour la transition entrante sera calculé si `time.leaveTime` n'est pas définie.\n */\nfunction transition(target, transition, state, time) {\n\u0009var switchBase,\n\n\u0009    // Un état est défini ?\n\u0009    hasState = typeof state === 'string',\n\n\u0009    // Un temps de transition entrante est défini ?\n\u0009    hasEnterTime = time \u0026\u0026 typeof time.enterTime === 'number',\n\n\u0009    // Un temps de transition sortante est défini ?\n\u0009    hasLeaveTime = time \u0026\u0026 typeof time.leaveTime === 'number',\n\n\u0009    // Au moins un temps est défini ?\n\u0009    hasTime = typeof time === 'number' || hasEnterTime || hasLeaveTime;\n\n\u0009// Nous créons une fonction qui extrais le temps le plus\n\u0009// long dans une série de transition.\n\u0009function mostLongest(target) {\n\u0009\u0009var max = 0,\n\u0009\u0009    hasTransition = getComputedStyle(target)['transition'],\n\u0009\u0009    hasAnimation = getComputedStyle(target)['animation'],\n\u0009\u0009    directive = hasTransition + ', ' + hasAnimation;\n\n\u0009\u0009// On parcours toutes les transitions/animations.\n\u0009\u0009directive.split(',').forEach(function (item) {\n\n\u0009\u0009\u0009// On extrait les valeurs te temps\n\u0009\u0009\u0009item.match(/([.0-9]+)s/g).forEach(function (item) {\n\n\u0009\u0009\u0009\u0009// et on retire les `s` et convertissons le temps\n\u0009\u0009\u0009\u0009// en milliseconde (ex `'4s'` devient `4000`).\n\u0009\u0009\u0009\u0009var time = item.replace(/s/g, '') * 1000;\n\u0009\u0009\u0009\u0009if (time \u003e max) {\n\n\u0009\u0009\u0009\u0009\u0009// On ne garde que le temps le plus long.\n\u0009\u0009\u0009\u0009\u0009max = time;\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009});\n\u0009\u0009});\n\n\u0009\u0009return max;\n\u0009}\n\n\u0009// Si le temps est précisé par l'utilisateur.\n\u0009if (hasTime) {\n\n\u0009\u0009// Alors on affecte ce temps globalement\n\u0009\u0009// ou spécifiquement pour la transition d'entrée\n\u0009\u0009enterTime = (hasEnterTime) ? time.enterTime : time;\n\n\u0009\u0009// ou spécifiquement pour la transition de sortie.\n\u0009\u0009leaveTime = (hasLeaveTime) ? time.leaveTime : time;\n\u0009}\n\n\u0009if (hasState) {\n\u0009\u0009switchBase = target.classList.contains(state);\n\u0009} else {\n\u0009\u0009switchBase = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n\u0009}\n\n\u0009// Transition entrante.\n\u0009if (!switchBase) {\n\u0009\u0009hasState \u0026\u0026 target.classList.add(state);\n\n\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\u0009\u0009target.classList.add(transition + \"-enter\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-enter-active\");\n\n\u0009\u0009\u0009// Si rien n'est précisé globalement,\n\u0009\u0009\u0009// ou rien n'est spécifié spécifiquement pour la transition entrante,\n\u0009\u0009\u0009if (!hasTime || (hasTime \u0026\u0026 !hasEnterTime \u0026\u0026 hasLeaveTime)) {\n\n\u0009\u0009\u0009\u0009// on récupère cette valeur depuis la CSS.\n\u0009\u0009\u0009\u0009enterTime = mostLongest(target);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter-active\");\n\u0009\u0009\u0009\u0009}, enterTime);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\n\u0009// Transition sortante.\n\u0009} else {\n\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009target.classList.add(transition + \"-leave\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-leave-active\");\n\n\u0009\u0009\u0009// Si rien n'est précisé globalement,\n\u0009\u0009\u0009// ou rien n'est spécifié spécifiquement pour la transition sortante,\n\u0009\u0009\u0009if (!hasTime || (hasTime \u0026\u0026 !hasLeaveTime \u0026\u0026 hasEnterTime)) {\n\n\u0009\u0009\u0009\u0009// on récupère cette valeur depuis la CSS.\n\u0009\u0009\u0009\u0009leaveTime = mostLongest(target);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave-active\");\n\n\u0009\u0009\u0009\u0009\u0009hasState \u0026\u0026 target.classList.remove(state);\n\u0009\u0009\u0009\u0009}, leaveTime);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\u0009}\n}\n\nbutton = document.getElementsByClassName(\"stateless-example--button\")[0];\nmessage = document.getElementsByClassName(\"stateless-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\n\u0009// Temps auto-calculé depuis la CSS.\n\u0009transition(message, \"animate\");\n\n\u0009// Exemple de temps mis à la main.\n\u0009/* transition(message, \"animate\", undefined, {\n\u0009\u0009timeEnter: 1000,\n\u0009\u0009timeLeave: 4000\n\u0009}); */\n\n\u0009// Temps mis à la main en mode raccourci si les temps\n\u0009// pour la transition entrante et sortante sont identiques.\n\u0009/* transition(message, \"animate\", undefined, 2000); */\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"stateless-example-1\"\u003e\n\u0009\u003cbutton class=\"stateless-example-1--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example-1--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### Fonctions de rappel ###\n\nMaintenant que nous sommes capable de gérer le temps de l'animation, nous allons gérer des fonctions que nous pourrons appeler quand l'animation sera terminée. Cela nous permettra de faire des animations en chaîne ou simplement de changer l'état manuellement, sans que ce soit la fonction de transition qui s'en occupe.\n\nNous allons également rassembler la totalité de ces actions sous un unique troisième paramètre pour avoir à éviter de mettre des valeurs de paramètre à `undefined` comme c'est le cas ici : `transition(message, \"animate\", undefined, 2000)`. Aussi si le troisième paramètre est une `string`, il s'agira de faire gérer une classe d'état par la fonction `transition`, si c'est un `number` de créer un temps avant fin d'animation identique pour les transitions entrante ou sortante et si c'est un objet, nous gérerons la totalité des options.\n\nNotez que toutes ces fonctions de rappels sont gérés en tant que point d'ancrage (« hooks ») par [Vue.js](https://fr.vuejs.org/v2/guide/transitions.html#hooks-JavaScript). Vous pouvez vous en inspirer pour ajouter autant de fonction de rappel que vous le souhaitez aux moments clés de la fonction `transition`.\n\nHTML :\n\n```\n\u003c!-- Note : identique à l'exemple précédent. --\u003e\n\u003cdiv class=\"stateless-example\"\u003e\n\u0009\u003cbutton class=\"stateless-example--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n.stateless-example--message {\n\u0009color: #000;\n}\n.stateless-example--message.is-highlighted {\n\u0009color: #ccc;\n}\n\n.stateless-example--message.animate-enter,\n.stateless-example--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n\n.stateless-example--message.animate-leave,\n.stateless-example--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n\n.stateless-example--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n```\n\nJavaScript\n\n```\nvar button, message;\n\n// Nous allons permettre de définir nous même des fonctions de rappel en début et fin de transition.\n\n/**\n * Permet d'exécuter une transition entre deux états pour un élément spécifique.\n * @param  {HTMLElement}                   target                    - L'élément HTML qui doit être animé.\n * @param  {string}                        transition                - Le nom de la transition remplaçant `…` pour les classes `…-enter`, `…-leave`, etc.\n * @param  {string|number|function|Object} [options]                 - Si c'est une `string`, spécifie l'état placé au début d'une transition entrante\n                                                                       et retiré en fin d'une transition sortante.\n                                                                     - Si c'est un `number`, spécifie la durée de la transition entrante et sortante.\n                                                                     - Si c'est une `function`, défini la fonction de rappel de début de transition entrante `enterCallback`\n                                                                       et de fin de transition sortante `leaveToCallback`.\n                                                                     - Si c'est un objet, voir le détail de chaque propriété.\n * @param  {string}                        [options.state]           - Spécifie l'état placé au début d'une transition entrante et retiré en fin d'une transition sortante.\n * @param  {number}                        [options.time]            - Spécifie la durée de la transition entrante et sortante.\n * @param  {number}                        [options.enterTime]       - Spécifie la durée de la transition entrante.\n                                                                       Le temps pour la transition sortante sera calculé si `time.leaveTime` n'est pas définie.\n * @param  {number}                        [options.leaveTime]       - Spécifie la durée de la transition sortante.\n                                                                       Le temps pour la transition entrante sera calculé si `time.leaveTime` n'est pas définie.\n * @param  {function}                      [options.enterCallback]   - Spécifie une fonction a exécuter au début de la transtion entrante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.enterToCallback] - Spécifie une fonction a exécuter à la fin de la transtion entrante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.leaveCallback]   - Spécifie une fonction a exécuter au début de la transtion sortante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.leaveToCallback] - Spécifie une fonction a exécuter à la fin de la transtion sortante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n */\nfunction transition(target, transition, options) {\n\u0009var hasNoState,\n\u0009    params = {};\n\n\u0009function mostLongest(target) {\n\u0009\u0009var max = 0,\n\u0009\u0009    hasTransition = getComputedStyle(target)['transition'],\n\u0009\u0009    hasAnimation = getComputedStyle(target)['animation'],\n\u0009\u0009    directive = hasTransition + ', ' + hasAnimation;\n\n\u0009\u0009directive.split(',').forEach(function (item) {\n\u0009\u0009\u0009item.match(/([.0-9]+)s/g).forEach(function (item) {\n\u0009\u0009\u0009\u0009var time = item.replace(/s/g, '') * 1000;\n\u0009\u0009\u0009\u0009if (time \u003e max) {\n\u0009\u0009\u0009\u0009\u0009max = time;\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009});\n\u0009\u0009});\n\u0009\u0009return max;\n\u0009}\n\n\u0009// Si aucune options n'est passée, la liste des options sera un objet vide.\n\u0009if (options === undefined || options === null) {\n\u0009\u0009options = {};\n\u0009}\n\n\u0009// Nous gérons la présence ou nom d'un état d'avant et d'après transition.\n\u0009params.state = options.state || (typeof options === 'string' ? options : undefined);\n\n\u0009// Nous gérons la présence d'un temps souhaité plutôt que calculé automatiquement.\n\u0009params.enterTime = options.enterTime || options.time || (typeof options === 'number' ? options : undefined);\n\u0009params.leaveTime = options.leaveTime || options.time || (typeof options === 'number' ? options : undefined);\n\n\u0009// Nous gérons la possibilité de faire appel à des fonctions de rappel en début et fin de transition entrante et de sortante.\n\u0009params.enterCallback = options.enterCallback || (typeof options === 'function' ? options : undefined);\n\u0009params.enterToCallback = options.enterToCallback;\n\u0009params.leaveCallback = options.leaveCallback;\n\u0009params.leaveToCallback = options.enterToCallback || (typeof options === 'function' ? options : undefined);\n\n\u0009// Élément permettant de savoir si on est sur une transition entrante ou sortante.\n\u0009if (params.state) {\n\u0009\u0009hasNoState = target.classList.contains(params.state);\n\u0009} else {\n\u0009\u0009hasNoState = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n\u0009}\n\n\u0009// Transiditon entrante.\n\u0009if (!hasNoState) {\n\n\u0009\u0009// Si un état est précisé, on l'applique en début de transition entrante.\n\u0009\u0009params.state \u0026\u0026 target.classList.add(params.state);\n\n\u0009\u0009// Appel de la fonction de début de transition entrante.\n\u0009\u0009if (params.enterCallback) {\n\u0009\u0009\u0009params.enterCallback(target, transition, params, options);\n\u0009\u0009}\n\n\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\u0009\u0009target.classList.add(transition + \"-enter\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-enter-active\");\n\u0009\u0009\u0009if (!params.enterTime) {\n\u0009\u0009\u0009\u0009params.enterTime = mostLongest(target);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter-active\");\n\n\u0009\u0009\u0009\u0009\u0009// Appel de la fonction de fin de transition sortante.\n\u0009\u0009\u0009\u0009\u0009if (params.enterToCallback) {\n\u0009\u0009\u0009\u0009\u0009\u0009params.enterToCallback(target, transition, params, options);\n\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009}, params.enterTime);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\n\u0009// Transition sortante.\n\u0009} else {\n\n\u0009\u0009// Appel de la fonction de début de transition sortante.\n\u0009\u0009if (params.leaveCallback) {\n\u0009\u0009\u0009params.leaveCallback(target, transition, params, options);\n\u0009\u0009}\n\n\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009target.classList.add(transition + \"-leave\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009target.classList.add(transition + \"-leave-active\");\n\u0009\u0009\u0009if (!params.leaveTime) {\n\u0009\u0009\u0009\u0009params.leaveTime = mostLongest(target);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave-active\");\n\n\u0009\u0009\u0009\u0009\u0009// Si un état est précisé, on l'applique en fin de transition sortante.\n\u0009\u0009\u0009\u0009\u0009params.state \u0026\u0026 target.classList.remove(params.state);\n\n\u0009\u0009\u0009\u0009\u0009// Appel de la fonction de fin de transition sortante.\n\u0009\u0009\u0009\u0009\u0009if (params.leaveToCallback) {\n\u0009\u0009\u0009\u0009\u0009\u0009params.leaveToCallback(target, transition, params, options);\n\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009}, params.leaveTime);\n\u0009\u0009\u0009}, 0);\n\u0009\u0009}, 0);\n\u0009}\n}\n\nbutton = document.getElementsByClassName(\"stateless-example--button\")[0];\nmessage = document.getElementsByClassName(\"stateless-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\n\u0009// On utilise la même fonction appelé en début de\n\u0009// transition entrante et en fin de transition sortante.\n\u0009transition(message, \"animate\", function (target, transition, params, options) {\n\u0009\u0009target.classList.toggle(\"is-highlighted\");\n\u0009});\n\n\u0009// On spécifie ici des fonctions différentes en début de\n\u0009// transition entrante et en fin de transition sortante.\n\u0009/* transition(message, \"animate\", {\n\u0009\u0009enterCallback: function (target, transition, params, options) {\n\u0009\u0009\u0009target.classList.add(\"is-highlighted\");\n\u0009\u0009},\n\u0009\u0009leaveToCallback: function (target, transition, params, options) {\n\u0009\u0009\u0009target.classList.remove(\"is-highlighted\");\n\u0009\u0009}\n\u0009}); */\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"stateless-example-2\"\u003e\n\u0009\u003cbutton class=\"stateless-example-2--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example-2--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n### Media Queries et délai de boucle ###\n\nEn fonction de la taille d'affichage, il est possible que vous ne souhaitez pas initier de transition. Nous allons gérer cela en conditionnant le mécanisme de transition par une Média Query. Également, dans certains cas, il est possible que vous préfériez que la transition s'exécute à tout les coups au détriment de la précision au millième de milliseconde. Nous allons pour cela vous laisser la main sur le temps qu'il va se passer entre chaque `setTimeout` dans notre fonction.\n\n```\n\u003c!-- Note : similaire à l'exemple précédent avec les nom des classes différent. --\u003e\n\u003cdiv class=\"larger-example\"\u003e\n\u0009\u003cbutton class=\"larger-example--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"larger-example--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n```\n\nCSS :\n\n```\n.larger-example--message.is-highlighted {\n\u0009transform: translateX(200px);\n\u0009color: #000;\n}\n.larger-example--message:not(.is-highlighted) {\n\u0009transform: translateX(0);\n\u0009color: #ccc;\n}\n\n/* On autorise l'animation que si */\n/* l'affichage est supérieur à 720px. */\n@media (min-width: 720px) {\n\u0009.larger-example--message.animate-enter,\n\u0009.larger-example--message.animate-leave-to {\n\u0009\u0009transform: translateX(0);\n\u0009}\n\n\u0009.larger-example--message.animate-leave,\n\u0009.larger-example--message.animate-enter-to {\n\u0009\u0009transform: translateX(200px);\n\u0009}\n\n\u0009.larger-example--message.animate-enter-active {\n\u0009\u0009transition: transform 1s;\n\u0009}\n\u0009.larger-example--message.animate-leave-active {\n\u0009\u0009transition: transform 4s;\n\u0009}\n}\n```\n\nJavaScript\n\n```\nvar button, message;\n\n// Nous allons permettre de gérer les animations que pour une certaine taille d'affichage (ou pour des appareils plus lents).\n\n/**\n * Permet d'exécuter une transition entre deux états pour un élément spécifique.\n * @param  {HTMLElement}                   target                    - L'élément HTML qui doit être animé.\n * @param  {string}                        transition                - Le nom de la transition remplaçant `…` pour les classes `…-enter`, `…-leave`, etc.\n * @param  {string|number|function|Object} [options]                 - Si c'est une `string`, spécifie l'état placé au début d'une transition entrante\n                                                                       et retiré en fin d'une transition sortante.\n                                                                     - Si c'est un `number`, spécifie la durée de la transition entrante et sortante.\n                                                                     - Si c'est une `function`, défini la fonction de rappel de début de transition entrante `enterCallback`\n                                                                       et de fin de transition sortante `leaveToCallback`.\n                                                                     - Si c'est un objet, voir le détail de chaque propriété.\n * @param  {string}                        [options.state]           - Spécifie l'état placé au début d'une transition entrante et retiré en fin d'une transition sortante.\n * @param  {number}                        [options.time]            - Spécifie la durée de la transition entrante et sortante.\n * @param  {number}                        [options.enterTime]       - Spécifie la durée de la transition entrante.\n                                                                       Le temps pour la transition sortante sera calculé si `time.leaveTime` n'est pas définie.\n * @param  {number}                        [options.leaveTime]       - Spécifie la durée de la transition sortante.\n                                                                       Le temps pour la transition entrante sera calculé si `time.leaveTime` n'est pas définie.\n * @param  {number}                        [options.tickDelay]       - Spécifie le délai utilisé entre chaque étape de gestion de transition.\n * @param  {number}                        [options.mediaQueries]    - Spécifie des instructions de Media Queries pour la transition courante.\n * @param  {function}                      [options.fallback]        - Spécifie une fonction a exécuter quand les Media Queries ne sont pas respectées.\n                                                                       Paramètres de la fonction de secour : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.enterCallback]   - Spécifie une fonction a exécuter au début de la transtion entrante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.enterToCallback] - Spécifie une fonction a exécuter à la fin de la transtion entrante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.leaveCallback]   - Spécifie une fonction a exécuter au début de la transtion sortante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n * @param  {function}                      [options.leaveToCallback] - Spécifie une fonction a exécuter à la fin de la transtion sortante.\n                                                                       Paramètres de la fonction de rappel : `target`, `transition`, `params`, `options`.\n */\nfunction transition(target, transition, options) {\n\u0009var hasNoState\n\u0009    mediaQueriesTest = false,\n\u0009    params = {};\n\n\u0009function mostLongest(target) {\n\u0009\u0009var max = 0,\n\u0009\u0009    hasTransition = getComputedStyle(target)['transition'],\n\u0009\u0009    hasAnimation = getComputedStyle(target)['animation'],\n\u0009\u0009    directive = hasTransition + ', ' + hasAnimation;\n\n\u0009\u0009directive.split(',').forEach(function (item) {\n\u0009\u0009\u0009item.match(/([.0-9]+)s/g).forEach(function (item) {\n\u0009\u0009\u0009\u0009var time = item.replace(/s/g, '') * 1000;\n\u0009\u0009\u0009\u0009if (time \u003e max) {\n\u0009\u0009\u0009\u0009\u0009max = time;\n\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009});\n\u0009\u0009});\n\u0009\u0009return max;\n\u0009}\n\n\u0009if (options === undefined || options === null) {\n\u0009\u0009options = {};\n\u0009}\n\n\u0009params.state = options.state || (typeof options === 'string' ? options : undefined);\n\u0009params.enterTime = options.enterTime || options.time || (typeof options === 'number' ? options : undefined);\n\u0009params.leaveTime = options.leaveTime || options.time || (typeof options === 'number' ? options : undefined);\n\u0009params.enterCallback = options.enterCallback || (typeof options === 'function' ? options : undefined);\n\u0009params.enterToCallback = options.enterToCallback;\n\u0009params.leaveCallback = options.leaveCallback;\n\u0009params.leaveToCallback = options.enterToCallback || (typeof options === 'function' ? options : undefined);\n\n\u0009// Nous attachons une fonction de rappel en cas de non respect des Media Queries.\n\u0009params.fallback = options.fallback;\n\n\u0009// Nous permettons de fixer le temps entre chaque `tick` d'étape de gestion de la transition.\n\u0009params.tickDelay = options.tickDelay || 0;\n\n\u0009// Nous gérons les conditions de fonctionnement de la transition.\n\u0009mediaQueriesTest = (options.mediaQueries) ? window.matchMedia(options.mediaQueries).matches : false;\n\n\u0009if (params.state) {\n\u0009\u0009hasNoState = target.classList.contains(params.state);\n\u0009} else {\n\u0009\u0009hasNoState = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n\u0009}\n\n\u0009// On enclenche le mécanisme uniquement s'il existe des Media Queries respectées où s'il n'en existe pas.\n\u0009if (options.mediaQueries \u0026\u0026 mediaQueriesTest || !options.mediaQueries) {\n\n\u0009\u0009// Transition entrante.\n\u0009\u0009if (!hasNoState) {\n\u0009\u0009\u0009params.state \u0026\u0026 target.classList.add(params.state);\n\n\u0009\u0009\u0009if (params.enterCallback) {\n\u0009\u0009\u0009\u0009params.enterCallback(target, transition, params, options);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\u0009\u0009\u0009target.classList.add(transition + \"-enter\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-active\");\n\u0009\u0009\u0009\u0009if (!params.enterTime) {\n\u0009\u0009\u0009\u0009\u0009params.enterTime = mostLongest(target);\n\u0009\u0009\u0009\u0009}\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009\u0009\u0009\u0009target.classList.add(transition + \"-enter-to\");\n\n\u0009\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-enter-active\");\n\n\u0009\u0009\u0009\u0009\u0009\u0009if (params.enterToCallback) {\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009params.enterToCallback(target, transition, params, options);\n\u0009\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009\u0009}, params.enterTime);\n\n\u0009\u0009\u0009\u0009// On applique les délais.\n\u0009\u0009\u0009\u0009}, params.tickDelay);\n\u0009\u0009\u0009}, params.tickDelay);\n\n\u0009\u0009// Transition sortante.\n\u0009\u0009} else {\n\u0009\u0009\u0009if (params.leaveCallback) {\n\u0009\u0009\u0009\u0009params.leaveCallback(target, transition, params, options);\n\u0009\u0009\u0009}\n\n\u0009\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009\u0009target.classList.add(transition + \"-leave\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-active\");\n\u0009\u0009\u0009\u0009if (!params.leaveTime) {\n\u0009\u0009\u0009\u0009\u0009params.leaveTime = mostLongest(target);\n\u0009\u0009\u0009\u0009}\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009\u0009\u0009\u0009target.classList.add(transition + \"-leave-to\");\n\n\u0009\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009\u0009target.classList.remove(transition + \"-leave-active\");\n\n\u0009\u0009\u0009\u0009\u0009\u0009params.state \u0026\u0026 target.classList.remove(params.state);\n\n\u0009\u0009\u0009\u0009\u0009\u0009if (params.leaveToCallback) {\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009params.leaveToCallback(target, transition, params, options);\n\u0009\u0009\u0009\u0009\u0009\u0009}\n\u0009\u0009\u0009\u0009\u0009}, params.leaveTime);\n\n\u0009\u0009\u0009\u0009// On applique les délais.\n\u0009\u0009\u0009\u0009}, params.tickDelay);\n\u0009\u0009\u0009}, params.tickDelay);\n\u0009\u0009}\n\u0009} else {\n\n\u0009\u0009// Si les Media Queries ne sont pas respectées\n\u0009\u0009// on retire les classes de transitions.\n\u0009\u0009target.classList.remove(transition + \"-enter\");\n\u0009\u0009target.classList.remove(transition + \"-enter-to\");\n\u0009\u0009target.classList.remove(transition + \"-leave\");\n\u0009\u0009target.classList.remove(transition + \"-leave-to\");\n\n\u0009\u0009// On laisse alors la possibilité de gérer ce qu'il se passe dans ce cas.\n\u0009\u0009if (params.fallback) {\n\u0009\u0009\u0009params.fallback(target, transition, params, options);\n\u0009\u0009}\n\u0009}\n}\n\nbutton = document.getElementsByClassName(\"larger-example--button\")[0];\nmessage = document.getElementsByClassName(\"larger-example--message\")[0];\n\nbutton.addEventListener(\"click\", function() {\n\n\u0009// Redimentionnez votre fenêtre pour voir la différence entre une\n\u0009// taille supérieure et inférieure à 720px.\n\u0009transition(message, \"animate\", {\n\u0009\u0009state: 'is-highlighted',\n\u0009\u0009mediaQueries: '(min-width: 720px)',\n\u0009\u0009fallback: function (target, transition, params, options) {\n\u0009\u0009\u0009target.classList.toggle(\"is-highlighted\");\n\u0009\u0009}\n\u0009});\n});\n```\n\nRésultat :\n\n\u003cdiv class=\"stateless-example-3\"\u003e\n\u0009\u003cbutton class=\"stateless-example-3--button\"\u003eAnimer\u003c/button\u003e\n\u0009\u003cdiv class=\"stateless-example-3--message\"\u003eAnimez-moi !\u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Le mot de la fin\n\nJe suppose qu'il existe des tas d'idées pour rendre cette fonction encore plus cool. Il y a sûrement également des cas limites ou elle ne fonctionne plus. Je vous laisse voir ça de votre côté mais vous avez les bases pour continuer un tel travail. N'oubliez pas également que une fonctionnalité équivalence qui gère sûrement ces cas limites existe déjà dans [Vue.js : allez tester !](https://fr.vuejs.org/v2/guide/transitions.html)\n\nSi vous trouvez des bugs et solutions dans les exemples suivants, n'hésitez pas à le faire savoir en commentaire !","urn":"comprendre-et-reproduire-les-animations-de-transitions-vuejs-en-css-et-javascript","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"530ef6a6789c1a55e4fde0af"},{"$oid":"5810c8b1db1391f2a90b5f28"},{"$oid":"5310456355dfd5f7698d48bb"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"56c4ad62675345bb2d63fced"},{"$oid":"5310456355dfd5f7698d48c3"},{"$oid":"5c95f1e82017127db1d7554c"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48bc"}],"dates":{"updated":[],"published":{"$date":"2019-02-19T13:10:00.000Z"}},"__v":0,"description":"À travers des exemples, je vous propose de récréer le fonctionnement des transitions de Vue.js.","image":"https://fr.vuejs.org/images/transition.png","script":"var button1 = document.getElementsByClassName('simple-example-1--button')[0],\n    message1 = document.getElementsByClassName('simple-example-1--message')[0];\n\nbutton1.addEventListener('click', function () {\n\u0009message1 .classList.toggle('is-displayed');\n});\n\nvar button2 = document.getElementsByClassName('simple-example-2--button')[0],\n    message2 = document.getElementsByClassName('simple-example-2--message')[0];\n\nbutton2.addEventListener('click', function () {\n\u0009message2.classList.toggle('is-displayed');\n});\n\nvar button3 = document.getElementsByClassName('simple-example-3--button')[0],\n    message3 = document.getElementsByClassName('simple-example-3--message')[0];\n\nbutton3.addEventListener('click', function () {\n\u0009message3.classList.toggle('is-displayed');\n});\n\nvar button11 = document.getElementsByClassName('transition-example-1--button')[0],\n\u0009message11 = document.getElementsByClassName('transition-example-1--message')[0];\n\nbutton11.addEventListener('click', function () {\n\u0009// On vérifie l'état de notre composant.\n\u0009// Renvoi `true` s'il est ouvert.\n\u0009// Renvoi `false` s'il est fermé.\n\u0009var isDisplayed = message11.classList.contains('is-displayed');\n\n\u0009// Remise à zéro des transitions.\n\u0009message11.classList.remove('display-enter-active');\n\u0009message11.classList.remove('display-leave-active');\n\n\u0009// On applique la transition souhaité.\n\u0009if (isDisplayed) {\n\u0009\u0009// `…-leave-active` pour la fermeture.\n\u0009\u0009message11.classList.add('display-leave-active');\n\u0009\u0009// et on met en état fermé.\n\u0009\u0009message11.classList.remove('is-displayed');\n\u0009} else {\n\u0009\u0009// `…-enter-active` pour l'ouverture.\n\u0009\u0009message11.classList.add('display-enter-active');\n\u0009\u0009// et on met en état ouvert.\n\u0009\u0009message11.classList.add('is-displayed');\n\u0009}\n});\n\nvar button12 = document.getElementsByClassName(\"transition-example-2--button\")[0],\n\u0009message12 = document.getElementsByClassName(\"transition-example-2--message\")[0];\n\nbutton12.addEventListener(\"click\", function() {\n\u0009var isDisplayed = message12.classList.contains(\"is-displayed\");\n\n\u0009if (isDisplayed) {\n\u0009\u0009message12.classList.remove(\"display-enter-to\");\n\n\u0009\u0009message12.classList.add(\"display-leave\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009message12.classList.add(\"display-leave-active\");\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009message12.classList.remove(\"display-leave\");\n\u0009\u0009\u0009\u0009message12.classList.add(\"display-leave-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009message12.classList.remove(\"display-leave-active\");\n\u0009\u0009\u0009\u0009\u0009message12.classList.remove(\"is-displayed\");\n\u0009\u0009\u0009\u0009}, 4000);\n\u0009\u0009\u0009}, 10);\n\u0009\u0009}, 10);\n\u0009} else {\n\u0009\u0009message12.classList.add(\"is-displayed\");\n\n\u0009\u0009message12.classList.remove(\"display-leave-to\");\n\n\u0009\u0009message12.classList.add(\"display-enter\");\n\n\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009message12.classList.add(\"display-enter-active\");\n\n\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009message12.classList.remove(\"display-enter\");\n\u0009\u0009\u0009\u0009message12.classList.add(\"display-enter-to\");\n\n\u0009\u0009\u0009\u0009setTimeout(function() {\n\u0009\u0009\u0009\u0009\u0009message12.classList.remove(\"display-enter-active\");\n\u0009\u0009\u0009\u0009}, 1000);\n\u0009\u0009\u0009}, 10);\n\u0009\u0009}, 10);\n\u0009}\n});\n\nvar button13 = document.getElementsByClassName(\"transition-example-3--button\")[0],\n\u0009message13 = document.getElementsByClassName(\"transition-example-3--message\")[0];\n\nfunction transition1(target, transition, state) {\n  var isDisplayed = target.classList.contains(state);\n\n  if (isDisplayed) {\n    target.classList.remove(transition + \"-enter-to\");\n    target.classList.add(transition + \"-leave\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-leave-active\");\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-leave\");\n        target.classList.add(transition + \"-leave-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-leave-active\");\n\n          target.classList.remove(state);\n        }, 4000);\n      }, 10);\n    }, 10);\n  } else {\n    target.classList.add(state);\n\n    target.classList.remove(transition + \"-leave-to\");\n    target.classList.add(transition + \"-enter\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-enter-active\");\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-enter\");\n        target.classList.add(transition + \"-enter-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-enter-active\");\n        }, 1000);\n      }, 10);\n    }, 10);\n  }\n}\n\nbutton13.addEventListener(\"click\", function() {\n\u0009transition1(message13, \"display\", \"is-displayed\");\n});\n\nfunction transition2(target, transition, state) {\n  var isEnded,\n      hasState = typeof state === 'string';\n\n  if (hasState) {\n  \u0009isEnded = target.classList.contains(state);\n  } else {\n  \u0009isEnded = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n  }\n\n  if (isEnded) {\n    target.classList.remove(transition + \"-enter-to\");\n    target.classList.add(transition + \"-leave\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-leave-active\");\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-leave\");\n        target.classList.add(transition + \"-leave-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-leave-active\");\n\n          hasState \u0026\u0026 target.classList.remove(state);\n        }, 4000);\n      }, 10);\n    }, 10);\n  } else {\n    hasState \u0026\u0026 target.classList.add(state);\n\n    target.classList.remove(transition + \"-leave-to\");\n    target.classList.add(transition + \"-enter\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-enter-active\");\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-enter\");\n        target.classList.add(transition + \"-enter-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-enter-active\");\n        }, 1000);\n      }, 10);\n    }, 10);\n  }\n}\n\nvar button30 = document.getElementsByClassName(\"stateless-example--button\")[0];\n\u0009message30 = document.getElementsByClassName(\"stateless-example--message\")[0];\n\nbutton30.addEventListener(\"click\", function() {\n\u0009transition2(message30, \"animate\");\n});\n\n\n\n\n\nfunction transition3(target, transition, state, time) {\n  var isEnded,\n      hasState = typeof state === 'string',\n      hasEnterTime = time \u0026\u0026 typeof time.enterTime === 'number',\n      hasLeaveTime = time \u0026\u0026 typeof time.leaveTime === 'number',\n      hasTime = typeof time === 'number' || hasEnterTime || hasLeaveTime;\n\n  function mostLongest(transition) {\n    var max = 0;\n    transition.split(',').forEach(function (item) {\n      item.match(/([.1-9]+)s/g).forEach(function (item) {\n        var time = item.replace(/s/g, '') * 1000;\n        if (time \u003e max) {\n          max = time;\n        }\n      });\n    });\n    return max;\n  }\n\n  // Si le temps est précisé par l'utilisateur\n  if (hasTime) {\n    enterTime = (hasEnterTime) ? time.enterTime : time;\n    leaveTime = (hasLeaveTime) ? time.leaveTime : time;\n  }\n\n  if (hasState) {\n  \u0009isEnded = target.classList.contains(state);\n  } else {\n  \u0009isEnded = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n  }\n\n  if (isEnded) {\n    target.classList.remove(transition + \"-enter-to\");\n    target.classList.add(transition + \"-leave\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-leave-active\");\n\n      if (!hasTime || (hasTime \u0026\u0026 !hasLeaveTime \u0026\u0026 hasEnterTime)) {\n        leaveTime = mostLongest(getComputedStyle(target)['transition']);\n      }\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-leave\");\n        target.classList.add(transition + \"-leave-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-leave-active\");\n\n          hasState \u0026\u0026 target.classList.remove(state);\n        }, leaveTime);\n      }, 10);\n    }, 10);\n  } else {\n    hasState \u0026\u0026 target.classList.add(state);\n\n    target.classList.remove(transition + \"-leave-to\");\n    target.classList.add(transition + \"-enter\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-enter-active\");\n\n      if (!hasTime || (hasTime \u0026\u0026 !hasEnterTime \u0026\u0026 hasLeaveTime)) {\n        enterTime = mostLongest(getComputedStyle(target)['transition']);\n      }\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-enter\");\n        target.classList.add(transition + \"-enter-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-enter-active\");\n        }, enterTime);\n      }, 10);\n    }, 10);\n  }\n}\n\nvar button31 = document.getElementsByClassName(\"stateless-example-1--button\")[0],\n\u0009message31 = document.getElementsByClassName(\"stateless-example-1--message\")[0];\n\nbutton31.addEventListener(\"click\", function() {\n\u0009transition3(message31, \"animate\");\n});\n\n\nfunction transition4(target, transition, options) {\n  var isEnded,\n      params = {};\n\n  function mostLongest(transition) {\n    var max = 0;\n    transition.split(',').forEach(function (item) {\n      item.match(/([.1-9]+)s/g).forEach(function (item) {\n        var time = item.replace(/s/g, '') * 1000;\n        if (time \u003e max) {\n          max = time;\n        }\n      });\n    });\n    return max;\n  }\n\n  if (typeof options === 'undefined' || typeof options === 'null') {\n    options = {};\n  }\n\n  params.state = options.state || (typeof options === 'string' ? options : undefined);\n  params.enterTime = options.enterTime || options.time || (typeof options === 'number' ? options : undefined);\n  params.leaveTime = options.leaveTime || options.time || (typeof options === 'number' ? options : undefined);\n  params.enterCallback = options.enterCallback || (typeof options === 'function' ? options : undefined);\n  params.enterToCallback = options.enterToCallback;\n  params.leaveCallback = options.leaveCallback;\n  params.leaveToCallback = options.enterToCallback || (typeof options === 'function' ? options : undefined);\n\n  if (params.state) {\n    isEnded = target.classList.contains(params.state);\n  } else {\n    isEnded = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n  }\n\n  if (isEnded) {\n    if (params.leaveCallback) {\n      params.leaveCallback(target, transition, params, options);\n    }\n\n    target.classList.remove(transition + \"-enter-to\");\n    target.classList.add(transition + \"-leave\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-leave-active\");\n      if (!params.leaveTime) {\n        params.leaveTime = mostLongest(getComputedStyle(target)['transition']);\n      }\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-leave\");\n        target.classList.add(transition + \"-leave-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-leave-active\");\n\n          params.state \u0026\u0026 target.classList.remove(params.state);\n\n          if (params.leaveToCallback) {\n            params.leaveToCallback(target, transition, params, options);\n          }\n        }, params.leaveTime);\n      }, 0);\n    }, 0);\n  } else {\n    params.state \u0026\u0026 target.classList.add(params.state);\n\n    if (params.enterCallback) {\n      params.enterCallback(target, transition, params, options);\n    }\n\n    target.classList.remove(transition + \"-leave-to\");\n    target.classList.add(transition + \"-enter\");\n\n    setTimeout(function() {\n      target.classList.add(transition + \"-enter-active\");\n      if (!params.enterTime) {\n        params.enterTime = mostLongest(getComputedStyle(target)['transition']);\n      }\n\n      setTimeout(function() {\n        target.classList.remove(transition + \"-enter\");\n        target.classList.add(transition + \"-enter-to\");\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-enter-active\");\n\n          if (params.enterToCallback) {\n            params.enterToCallback(target, transition, params, options);\n          }\n        }, params.enterTime);\n      }, 0);\n    }, 0);\n  }\n}\n\nvar button32 = document.getElementsByClassName(\"stateless-example-2--button\")[0],\n\u0009message32 = document.getElementsByClassName(\"stateless-example-2--message\")[0];\n\nbutton32.addEventListener(\"click\", function() {\n  transition4(message32, \"animate\", function (target, transition, params, options) {\n    target.classList.toggle(\"is-highlighted\");\n  });\n});\n\nfunction transition5(target, transition, options) {\n  var isEnded\n      mediaQueriesTest = false,\n      params = {};\n\n  function mostLongest(transition) {\n    var max = 0;\n    if (transition) {\n      transition.split(',').forEach(function (item) {\n        item.match(/([.1-9]+)s/g).forEach(function (item) {\n          var time = item.replace(/s/g, '') * 1000;\n          if (time \u003e max) {\n            max = time;\n          }\n        });\n      });\n\n    // Au cas ou la Media Query n'est pas respecté.\n    // La transition n'existe pas.\n    // Nous la plaçons symboliquement à la valeur\n    // Du `tickDelay` de base.\n    } else {\n      return params.tickDelay;\n    }\n    return max;\n  }\n\n  if (typeof options === 'undefined' || typeof options === 'null') {\n    options = {};\n  }\n\n  params.state = options.state || (typeof options === 'string' ? options : undefined);\n  params.enterTime = options.enterTime || options.time || (typeof options === 'number' ? options : undefined);\n  params.leaveTime = options.leaveTime || options.time || (typeof options === 'number' ? options : undefined);\n  params.enterCallback = options.enterCallback || (typeof options === 'function' ? options : undefined);\n  params.enterToCallback = options.enterToCallback;\n  params.leaveCallback = options.leaveCallback;\n  params.leaveToCallback = options.enterToCallback || (typeof options === 'function' ? options : undefined);\n\n  // Nous attachons une fonction de rappel en cas de non respect des Media Queries\n  params.fallback = options.fallback;\n\n  // Nous permettons de fixer le temps entre chaque `tick` d'étape de gestion de la transition.\n  params.tickDelay = options.tickDelay || 0;\n\n  // Nous gérons les conditions de fonctionnement de la transition\n  mediaQueriesTest = (options.mediaQueries) ? window.matchMedia(options.mediaQueries).matches : false;\n\n  if (params.state) {\n    isEnded = target.classList.contains(params.state);\n  } else {\n    isEnded = target.classList.contains(transition + \"-enter-to\") || target.classList.contains(transition + \"-leave\")\n  }\n\n  // On enclenche le mécanisme uniquement s'il existe des Media Queries respectées où s'il n'en existe pas.\n  if (options.mediaQueries \u0026\u0026 mediaQueriesTest || !options.mediaQueries) {\n    if (isEnded) {\n      if (params.leaveCallback) {\n        params.leaveCallback(target, transition, params, options);\n      }\n\n      target.classList.remove(transition + \"-enter-to\");\n      target.classList.add(transition + \"-leave\");\n\n      setTimeout(function() {\n        target.classList.add(transition + \"-leave-active\");\n        if (!params.leaveTime) {\n          params.leaveTime = mostLongest(getComputedStyle(target)['transition']);\n        }\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-leave\");\n          target.classList.add(transition + \"-leave-to\");\n\n          setTimeout(function() {\n            target.classList.remove(transition + \"-leave-active\");\n\n            params.state \u0026\u0026 target.classList.remove(params.state);\n\n            if (params.leaveToCallback) {\n              params.leaveToCallback(target, transition, params, options);\n            }\n          }, params.leaveTime);\n        // On applique les delais.\n        }, params.tickDelay);\n      }, params.tickDelay);\n\n    } else {\n      params.state \u0026\u0026 target.classList.add(params.state);\n\n      if (params.enterCallback) {\n        params.enterCallback(target, transition, params, options);\n      }\n\n      target.classList.remove(transition + \"-leave-to\");\n      target.classList.add(transition + \"-enter\");\n\n      setTimeout(function() {\n        target.classList.add(transition + \"-enter-active\");\n        if (!params.enterTime) {\n          params.enterTime = mostLongest(getComputedStyle(target)['transition']);\n        }\n\n        setTimeout(function() {\n          target.classList.remove(transition + \"-enter\");\n          target.classList.add(transition + \"-enter-to\");\n\n          setTimeout(function() {\n            target.classList.remove(transition + \"-enter-active\");\n\n            if (params.enterToCallback) {\n              params.enterToCallback(target, transition, params, options);\n            }\n          }, params.enterTime);\n        // On applique les delais.\n        }, params.tickDelay);\n      }, params.tickDelay);\n    }\n  } else {\n    target.classList.remove(transition + \"-enter\");\n    target.classList.remove(transition + \"-enter-to\");\n    target.classList.remove(transition + \"-leave\");\n    target.classList.remove(transition + \"-leave-to\");\n    if (params.fallback) {\n      params.fallback(target, transition, params, options);\n    }\n  }\n}\n\nvar button33 = document.getElementsByClassName(\"stateless-example-3--button\")[0],\nmessage33 = document.getElementsByClassName(\"stateless-example-3--message\")[0];\n\nbutton33.addEventListener(\"click\", function() {\n  transition5(message33, \"animate\", {\n    state: 'is-highlighted',\n    mediaQueries: '(min-width: 720px)',\n    tickDelay: 10,\n    fallback: function (target, transition, params, options) {\n      target.classList.toggle(\"is-highlighted\");\n    }\n  });\n});","stylesheet":".simple-example-1 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.simple-example-1--message {\n\u0009display: none;\n}\n.simple-example-1--message.is-displayed {\n\u0009display: block;\n}\n\n\n\n.simple-example-2 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.simple-example-2--message {\n\u0009opacity: 0;\n\u0009transition: opacity 1s;\n}\n.simple-example-2--message.is-displayed {\n\u0009opacity: 1;\n}\n\n\n\n.simple-example-3 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.simple-example-3--message {\n\u0009display: none;\n\u0009opacity: 0;\n\u0009transition: opacity 1s;\n}\n.simple-example-3--message.is-displayed {\n\u0009display: block;\n\u0009opacity: 1;\n}\n\n\n\n.transition-example-1 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.transition-example-1--message {\n\u0009opacity: 0;\n\u0009width: 100px;\n\u0009transform: translateX(0)\n}\n.transition-example-1--message.display-enter-active {\n\u0009transition: opacity 1s, transform 1s;\n}\n.transition-example-1--message.display-leave-active {\n\u0009transition: opacity 4s, transform 4s;\n}\n.transition-example-1--message.is-displayed {\n\u0009opacity: 1;\n\u0009transform: translateX(200px)\n}\n\n\n.transition-example-2 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.transition-example-2--message {\n\u0009width: 100px;\n\u0009display: none;\n}\n.transition-example-2--message.is-displayed {\n\u0009display: block;\n}\n.transition-example-2--message.display-enter {\n\u0009transform: translateY(0)\n}\n.transition-example-2--message.display-enter-to {\n\u0009transform: translateY(50px)\n}\n.transition-example-2--message.display-leave {\n\u0009transform: translateX(200px)\n}\n.transition-example-2--message.display-leave-to {\n\u0009transform: translateX(0)\n}\n.transition-example-2--message.display-enter-active {\n\u0009transition: transform 1s;\n}\n.transition-example-2--message.display-leave-active {\n\u0009transition: transform 4s;\n}\n\n\n\n.transition-example-3 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.transition-example-3--message {\n\u0009width: 100px;\n\u0009display: none;\n}\n.transition-example-3--message.is-displayed {\n\u0009display: block;\n}\n\n@keyframes bounce-in {\n  0% {\n    transform: scale(0);\n    opacicy: 0;\n  }\n  50% {\n    transform: scale(1.5);\n    opacicy: 0.8;\n  }\n  100% {\n    transform: scale(1);\n    opacicy: 1;\n  }\n}\n\n.transition-example-3--message.display-enter-active {\n\u0009animation: bounce-in 1s;\n}\n.transition-example-3--message.display-leave-active {\n\u0009animation: bounce-in 4s reverse;\n}\n\n\n.stateless-example {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.stateless-example--message {\n\u0009width: 100px;\n}\n.stateless-example--message.animate-enter,\n.stateless-example--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n.stateless-example--message.animate-leave,\n.stateless-example--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n.stateless-example--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n\n.stateless-example-1 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.stateless-example-1--message {\n\u0009width: 100px;\n}\n.stateless-example-1--message.animate-enter,\n.stateless-example-1--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n.stateless-example-1--message.animate-leave,\n.stateless-example-1--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n.stateless-example-1--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example-1--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n\n.stateless-example-2 {\n\u0009padding: 8px;\n\u0009border: 1px solid #ccc;\n}\n.stateless-example-2--message.animate-enter,\n.stateless-example-2--message.animate-leave-to {\n\u0009transform: translateX(0)\n}\n.stateless-example-2--message.animate-leave,\n.stateless-example-2--message.animate-enter-to {\n\u0009transform: translateX(200px)\n}\n.stateless-example-2--message.animate-enter-active {\n\u0009transition: transform 1s;\n}\n.stateless-example-2--message.animate-leave-active {\n\u0009transition: transform 4s;\n}\n.stateless-example-2--message:not(.is-highlighted) {\n  color: #ccc;\n}\n\n.stateless-example-3 {\n  padding: 8px;\n  border: 1px solid #ccc;\n}\n.stateless-example-3--message {\n  width: 100px;\n}\n\n.stateless-example-3--message.is-highlighted {\n  transform: translateX(200px);\n  color: #000;\n}\n.stateless-example-3--message:not(.is-highlighted) {\n  transform: translateX(0);\n  color: #ccc;\n}\n\n@media (min-width: 720px) {\n  .stateless-example-3--message.animate-enter,\n  .stateless-example-3--message.animate-leave-to {\n    transform: translateX(0);\n  }\n\n  .stateless-example-3--message.animate-leave,\n  .stateless-example-3--message.animate-enter-to {\n    transform: translateX(200px);\n  }\n\n  .stateless-example-3--message.animate-enter-active {\n    transition: transform 1s;\n  }\n  .stateless-example-3--message.animate-leave-active {\n    transition: transform 4s;\n  }\n}"}
{"_id":{"$oid":"5c94e0b85c091602d0f75513"},"title":"Comment HTTPS et Tor protègent ensemble vos données et votre anonymat ?","content":"Petit guide interactif pour vérifier en un clin d'œil quels sont les informations disponibles à quels niveaux du réseau avec HTTPS et/ou Tor !\n\nPour résumé, voici ce que vous pourrez apprendre ici pour aider à garder votre anonymat.\n\n- Le QUOI : utiliser HTTPS vous aide à empêcher qu'on sache qu'est-ce qui est envoyé.\n- Le OÙ : utiliser Tor vous aide à empêcher à qu'on sache d'où et vers où c'est envoyé.\n- Le QUI : ajuster vos habitudes vous aide à empêcher qu'on sache qui a envoyé.\n\n\n\n\n\n## Le visuel interactif\n\nCe visuel interactif est adapté de l'article original : « \u003ca href=\"https://www.eff.org/pages/tor-and-https\" target=\"_blank\"\u003eHow HTTPS and Tor Work Together to Protect Your Anonymity and Privacy\u003c/a\u003e ».\n\nIl vous permet de rapidement comprendre parmi les éléments suivants :\n\n- Qui, Quoi, d'Où, vers Où, Comment ;\n\nquelles méthodes :\n\n- HTTPS ou Tor ;\n\nvous protègent des\n\n- Pirates, Agents, Administrateurs, Webmasters, Police, Avocats, etc.\n\n__Instructions :__\n\n- Cliquez sur le bouton « Tor » pour voir quelles sont les données visibles par les intermédiaires quand vous utilisez Tor. Le bouton sera en vert pour indiquer que Tor est actif.\n- Cliquez sur le bouton « HTTPS » pour voir quelles sont les données visibles par les intermédiaires quand vous utilisez HTTPS. Le bouton sera en vert pour indiquer que HTTPS est actif.\n- Quand les deux boutons sont verts, vous pouvez voir quelles sont les données visibles par les intermédiaires quand HTTPS et Tor sont couplés.\n- Quand les deux boutons sont gris, vous pouvez voir quelles sont les données visibles par les intermédiaires quand vous n'utilisez aucunes de ces technologies.\n\n__Explications :__\n\n- Les données potentiellement visibles sont : l'adresse du site que vous visitez (www.site.com), votre nom d'utilisateur et votre mot de passe (Id-MdP), les données que vous transmettez (Données), votre adresse IP publique (Position) et si vous êtes sur le réseau Tor ou pas (Tor).\n- Vous pouvez suivre le trajet de ces données depuis « Vous » jusqu'à « www.site.com » et voir qui et à quels niveaux peut avoir accès à quoi. Vous croiserez sur cette route le « WiFi » qui est l'accès à vos échanges entre votre appareil et votre box Internet et la portion de câble allant de votre lieu de connexion jusqu'au fournisseur d'accès à Internet (FAI). Ce même accès à Internet existe du côté du service auquel vous accédez. Entre les deux il y a la toile où en se plaçant aux bon endroits on peut intercepter des paquets et pour finir le réseau Tor et ses nœuds d'entrés, intermédiaires et de sorties.\n\n\u003cdiv class=\"schema\"\u003e\n\u003cbutton class=\"tor\"\u003eTor\u003c/button\u003e\n\u003cbutton class=\"https\"\u003eHTTPS\u003c/button\u003e\n\u003cimg class=\"schema-img s-t-s-h\" src=\"./media/images/upload/pas-tor-pas-https.png\" alt=\"Naviguer sans HTTPS et sans Tor\"\u003e\n\u003cimg class=\"schema-img s-t-a-h\" src=\"./media/images/upload/pas-tor-avec-https.png\" alt=\"Naviguer avec HTTPS et sans Tor\"\u003e\n\u003cimg class=\"schema-img a-t-s-h\" src=\"./media/images/upload/avec-tor-pas-https.png\" alt=\"Naviguer sans HTTPS et avec Tor\"\u003e\n\u003cimg class=\"schema-img a-t-a-h\" src=\"./media/images/upload/avec-tor-avec-https.png\" alt=\"Naviguer avec HTTPS et avec Tor\"\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Qu'est-ce que c'est HTTPS ?\n\nSelon \u003ca href=\"https://fr.wikipedia.org/wiki/HyperText_Transfer_Protocol_Secure\" target=\"_blank\"\u003eWikipedia\u003c/a\u003e, « HTTPS permet au visiteur de vérifier l'identité du site web auquel il accède, grâce à un certificat d'authentification émis par une autorité tierce, réputée fiable (et faisant généralement partie de la liste blanche des navigateurs internet). Il garantit théoriquement la confidentialité et l'intégrité des données envoyées par l'utilisateur (notamment des informations entrées dans les formulaires) et reçues du serveur. Il peut permettre de valider l'identité du visiteur, si celui-ci utilise également un certificat d'authentification client. »\n\n\n\n\n\n## Qu'est-ce que c'est Tor ?\n\nSelon \u003ca href=\"https://fr.wikipedia.org/wiki/Tor_(r%C3%A9seau)\" target=\"_blank\"\u003eWikipedia\u003c/a\u003e, « Tor est un réseau informatique superposé mondial et décentralisé. Il se compose d'un certain nombre de serveurs, appelés nœuds du réseau et dont la liste est publique. Ce réseau permet d'anonymiser l'origine de connexions TCP. Cela peut entre autres servir à anonymiser la source d'une session de navigation Web ou de messagerie instantanée. Cependant, l'anonymisation du flux n'est pas suffisante, car l'application peut potentiellement transmettre des informations annexes permettant d'identifier la personne : c'est pourquoi le projet Tor développe également un navigateur Web basé sur Firefox, Tor Browser, ainsi que d'autres applications spécialement modifiées pour préserver l'anonymat de leurs usagers. »\n\n\n\n\n\n## Utiliser Tor Browser pour vos sites HTTPS\n\nSelon \u003ca href=\"https://fr.wikipedia.org/wiki/Tor_Browser\" target=\"_blank\"\u003eWikipedia\u003c/a\u003e, « Développé par The Tor Project, Tor Browser est un navigateur web libre basé sur Mozilla Firefox ESR, destiné à naviguer sur le réseau d'anonymisation Tor. Il permet d'accéder au réseau Tor et Internet de manière techniquement sécurisée parce qu'il bloque par défaut les extensions telles que Flash et JavaScript. De plus, il permet, grâce à une extension intégrée nommée HTTPS Everywhere, de privilégier les connexions sécurisées au moyen du protocole HTTPS. Il inclut également NoScript, un plugin destiné à bloquer les programmes JavaScript de façon sélective. Il est intégré en tant que navigateur web par défaut dans le système d'exploitation Tails. »\n\n\u003e \u003ca href=\"https://www.torproject.org/projects/torbrowser.html.en\" target=\"_blank\"\u003eTélécharger Tor Browser\u003c/a\u003e\n\n\n\n\n\n## Les limites de l'anonymat avec HTTPS et Tor\n\nVous aurez remarqué que peu importe le fait que vous utilisiez HTTPS et/ou Tor, les Admins (administrateurs systèmes, webmasters, etc.) du service en bout ont accès à vos données (tel que identifiant, email, mot de passe (peut-être même en non hashé selon les services), etc.). C'est ici que la dernière part de travail pour un anonymat complet sur le web vous revient.\n\n### Création et utilisation de comptes anonymes\n\nSi vous utilisez le réseau Tor un service avec vos identifiants de compte personnel, en bout de chaine, vous ne serez forcément pas anonyme. Il est donc important d'utiliser des comptes anonymes (sur des services dont les conditions d'utilisation vous le permettent. Cela veut donc dire que vous n'aurez pas accès à tous les services si vous souhaitez préserver votre anonymat).\n\nCependant, si vous créez un compte anonyme depuis une connexion non Tor, alors votre anonymat et/ou localisation est sabordée dès le début. Idem si vous accédez une seul fois à vos comptes anonymes depuis des connexions non Tor. Autrement dit, « tout ce qui est fait sur Tor, doit rester sur Tor ».\n\nIl en va également de même pour toute communication d'information vous reliant directement avec la connexion (comme, à tout hasard, des cartes de crédits... voir même des mots de passes identiques (même s'ils sont hashés)).\n\nCe qu'il faut bien comprendre, c'est que sur Internet, vous êtes le dernier nœud (relais Tor) pour le reste du monde. Il n'est alors pas garanti que ce nœud lui-même n'essais pas de récupérer vos informations. Il est donc important que ces informations soient anonymes.\n\n\n\n\n\n## D'autres choses à savoir ?\n\n\u003e **`Important`À savoir** : vos habitudes, Tor et HTTPS ne préserve pas votre anonymat des gens qui se tiennent derrière vous !\n\nN'hésitez pas à compléter cette page de vos commentaires ci-dessous, que ce soit pour poser des questions ou apporter des réponses !","urn":"comment-https-et-tor-protegent-ensemble-vos-donnees-et-votre-anonymat","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5310456355dfd5f7698d48c1"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5c95f16f2017127db1d7554b"},{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48cc"}],"dates":{"updated":[],"published":{"$date":"2019-03-22T13:18:00.000Z"}},"__v":0,"description":"Pour vérifier en un clin d'œil quels sont les informations disponibles à quels niveaux du réseau avec HTTPS et/ou Tor !","image":"https://blog.lesieur.name/media/images/upload/avec-tor-avec-https.png","script":"var tor = document.getElementsByClassName('tor')[0],\n    https = document.getElementsByClassName('https')[0],\n    schema = document.getElementsByClassName('schema')[0];\n\ntor.addEventListener('click', function () {\n   schema.classList.toggle('is-tor');\n   tor.classList.toggle('is-tor');\n});\nhttps.addEventListener('click', function () {\n   schema.classList.toggle('is-https');\n   https.classList.toggle('is-https');\n});","stylesheet":".schema-img {\n  width: 100%;\n  height: auto;\n  margin-top: 0;\n}\n.s-t-a-h,\n.a-t-s-h,\n.a-t-a-h {\n   display: none;\n}\n.is-https .s-t-s-h,\n.is-tor .s-t-s-h {\n   display: none;\n}\n.is-tor:not(.is-https) .a-t-s-h {\n   display: block;\n}\n.is-https:not(.is-tor) .s-t-a-h {\n   display: block;\n}\n.is-tor.is-https .a-t-a-h {\n   display: block;\n}\n.tor.is-tor {\n    background-color: #39B54A;\n    color: #fff;\n}\n.https.is-https {\n    background-color: #39B54A;\n    color: #fff;\n}\n.schema {\n  position: relative;\n  margin-top: 40px;\n}\n.tor, .https {\n    position: absolute;\n    width: 12%;\n    padding-left: 1px;\n    padding-right: 1px;\n}\n.tor{\n    left: 0;\n    top: -16px;\n}\n\n.https {\n    left: 0;\n    top: 28px;\n}"}
{"_id":{"$oid":"5cb9bb0433b2d83e44049777"},"title":"Un dé pour les gouverner tous ! Le d120 ultime !","content":"Si je vous parle de dés, immédiatement vous imaginez un petit cube à 6 faces numérotées de 1 à 6 : c'est ce que l'on appel un d6 dans le jargon des jeux de rôle. Mais le d6 n'est pas le seul, et surtout, le d6 plus performant en terme d'équilibre de hasard.\n\nC'est pourquoi je souhaite vous présenter le seul dé capable de simuler à lui seul des dés comme les d4, d6, d8, d10, d12 ou d20 et j'en passe tout en étant le plus équilibré qu'il soit possible de l'être : j'ai nommé le d120 !\n\n\u003cfigure\u003e\n\u003cimg width=\"288\" height=\"232\" src=\"https://blog.lesieur.name/media/images/upload/D120Amber.jpg\" alt=\"Le dé ultime, le d120 !\" style=\"max-width: 288px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://thedicelab.com/\" target=\"_blank\"\u003ed120 de The Dice Lab\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nJe vous propose de découvrir dans cet article :\n\n- pourquoi le d120 est appelé (ici) le dé ultime,\n- comment le d120 peut être à lui seul utilisé pour faire office de d1 jusqu'au d119 (en passant bien entendu par le très utile d100),\n- les tables de correspondance associées des dés multiples de 120,\n- les outils pour aligner votre d120 sur vos statistiques ou aligner vos statistiques sur votre d120.\n- les idées originales pour profiter des 120 valeurs à votre disposition.\n\nOn finira bien entendu par le moyen de vous procurrer le d120 !\n\n\u003e Si vous êtes développeur JavaScript et que vous cherchez des exemples d'utilisation de [Vue.js](https://vuejs.org/) à la volée (comme on utiliserait simplement jQuery), ou que vou souhaitez vérifier les fonctions utilisées dans cet article, vous pouvez jeter un œil au code source de cet article derrière le CodePen suivant : https://codepen.io/Haeresis/pen/qGQLvp\n\n\n\n\n\n## Pourquoi le d120 est le dé ultime ?\n\nSaviez-vous que la sommes de chacun des côtés opposés d'un d6 fait 7 ? En effet `1 + 6 = 7`, `2 + 5 = 7` et `3 + 4 = 7` ! Intuitivement, on pourrait se dire que c'est une manière de répartir correctement les valeurs du dé pour que celui-ci ne soit pas pipé. Et bien en réalité, pas tout à fait.\n\n### Le problème du d6\n\nSi on observe le dé depuis les sommets, on s'aperçoit que l'un des sommets touche les 3 plus petites valeurs (1, 2 et 3) et que son opposé touche les trois plus grosses valeurs (4, 5 et 6). En d'autres termes, s'il semble difficile de faire tomber le dé exactement sur une face par chance, cela l'est moins en ce qui concerne de le faire tomber sur une partie plutôt qu'une autre plus souvent ; et donc, si on est doué, de jouer avec le hasard.\n\n\u003cfigure\u003e\n\u003cimg width=\"260\" height=\"220\" src=\"https://blog.lesieur.name/media/images/upload/1-2-3-4-5-6.png\" alt=\"Équilibre du dé 6\" style=\"max-width: 260px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003eÉquilibre du dé 6\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### Des alternatives ?\n\nBien sûr, il est possible de répartir plus équitablement les valeurs autour des faces mais cela se fait alors au détriment de l'égalité de valeur sur les faces opposées et inversement. Ainsi il existe des dés bien plus équilibré que le d6 classique comme la collection de _The Dice Lab_ : les dés OptiDice™ avec ses d4, d6, d8, d10, d12 et d20 hautement équilibré mais... toujours imparfait.\n\n\u003cfigure\u003e\n\u003cimg width=\"310\" height=\"201\" src=\"https://blog.lesieur.name/media/images/upload/OptiDiceSetBlue.jpg\" alt=\"d4, d6, d8, d10 (d100), d12, d20\" style=\"max-width: 310px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://thedicelab.com/\" target=\"_blank\"\u003eOptiDices de The Dice Lab\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nImparfait car il semble impossible d'obtenir avec les dés OptiDice™ (ou tout autre dé similaire) un dé parfait dont :\n\n- La somme des valeurs de chaque pair de faces opposés (si elles existent) soit identique ET\n- La moyenne de la somme des valeurs des faces autour de chaque sommet soit identique.\n\n\n\n### Le d120, la solution !\n\nAlors la question se pause : est-il possible de créer un dé qui puisse à la fois avoir les sommes de tous ses côtés opposés identiques, des faces ayant absoluement la même forme et également une répartition des valeurs sur les faces autour de ces sommets de manière à ce que le dé soit équilibré ?\n\nEt bien oui ! Le d120 (soit 120 faces identiques) répond à ces critères et constitue le plus petit dé équilibré que l'on puisse créer ! Tout y est :\n\n- La somme des valeurs de chaque pair de faces opposés est égale à 121 ET\n- La moyenne de la somme des valeurs des faces autour de chaqu'un de ses 62 sommets vaut toujours 60,5 (605 / 10 pour 12 sommets, 363 / 6 pour 20 sommets et 242 / 4 pour 30 sommets). Cela correspond également à la moyenne des 120 faces.\n\n\u003cfigure\u003e\n\u003cimg width=\"360\" height=\"283\" src=\"https://blog.lesieur.name/media/images/upload/d120five0316.jpg\" alt=\"d120\" style=\"max-width: 260px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"http://thedicelab.com/\" target=\"_blank\"\u003eLes d120 de The Dice Lab\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nEn plus de répondre à tous les critères précédents, il permet de simuler en un seul jet de dé les d1, d2, d3, d4, d5, d6, d8, d10, d12, d15, d20, d24, d30, d40, d60 et d120. Il peut également simuler les autres dés non nommés précédemment du d7 jusqu'au d119 en minimum un jet de dé ! C'est ce que nous allons voir plus loin.\n\nPour savoir plus en détail pourquoi le d120 est ultime, je vous laisse jeter un œil à la vidéo de Mickaël Launay de la chaine Mickmath sur le sujet :\n\n\u003ciframe style=\"display: block; width: 100%; max-width: 560px; height: 315px; margin-left:auto; margin-right: auto; margin-top: 16px\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/N-DPQ7XOHnU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen\u003e\u003c/iframe\u003e\n\n\n\n\n\n## Tables standards\n\nTout d'abord commençons par les tables standards qui ne nécessitent qu'un seul jet de dé. Il s'agit de table dont le X de dX est un multiple de 120. Il en existe 16.\n\n  \n  \n### Simuler des dés standards avec un d120\n\nAccédez aux tables associatives ci-dessous pour simuler le dé dont vous avez besoin. Quand votre dé tombe sur une valeur comprise dans l'intervalle de la colonne de gauche, votre résultat est en réalité la valeur de la colonne de droite.\n\n\u003cul\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d1\"\u003eSimuler un d1 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d2\"\u003eSimuler un d2 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d3\"\u003eSimuler un d3 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d4\"\u003eSimuler un d4 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d5\"\u003eSimuler un d5 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d6\"\u003eSimuler un d6 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d8\"\u003eSimuler un d8 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d10\"\u003eSimuler un d10 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d12\"\u003eSimuler un d12 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d15\"\u003eSimuler un d15 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d20\"\u003eSimuler un d20 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d24\"\u003eSimuler un d24 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d30\"\u003eSimuler un d30 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d40\"\u003eSimuler un d40 avec un d120\u003c/a\u003e\u003c/li\u003e\n    \u003cli\u003e\u003ca href=\"https://blog.lesieur.name/d120/#d60\"\u003eSimuler un d60 avec un d120\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cdiv class=\"standards\"\u003e\n\u003cdiv\n        v-for=\"dice in diceList()\"\n        :key=\"dice.value\"\u003e\n        \u003cdiv class=\"h3\" :id=\"'d' + dice.value\"\u003eSimuler un d{{ dice.value }} avec un d{{ d120 }}\u003c/div\u003e\n        \u003ctable\u003e\n            \u003ctr\u003e\n                \u003cth\u003eSi vous faites entre … et … (inclus)\u003c/th\u003e\n                \u003cth\u003ealors le résultat est …\u003c/th\u003e\n            \u003c/tr\u003e\n            \u003ctr\n                v-for=\"table in tableList(dice.value)\"\n                :key=\"table.to\"\u003e\n                \u003ctd\u003e{{ table.fromLowerDisplay }} - {{ table.fromUpperDisplay }}\u003c/td\u003e\n                \u003ctd class=\"to\"\u003e{{ table.to }}\u003c/td\u003e\n            \u003c/tr\u003e\n        \u003c/table\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\n\n\n## Table personnalisée\n\nCependant, il est également possible de simuler des dés non standards comme le d7, d9, d11, d13, …, d118 et d119. Plus le dé sera petit, plus il y aura de chance que la résolution de la valeur dans la table ne se face qu'avec un seul jet de dé. Cependant, pour les valeurs limites, afin de trancher, il faudra relancer un dé (voir plus).\n\n\n\n### Simuler un dé personnalisé avec un d120\n\nRemplissez le champ ci-dessous pour choisir le dé que vous souhaitez utiliser.\n\n\u003cdiv class=\"custom\"\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\n\u003cstrong\u003e\u003csamp\u003eOK\u003c/samp\u003e\u003c/strong\u003e\nQuel dé voulez-vous simuler ?\n\u003cinput type=\"\" name=\"\" v-model=\"custom\" placeholder=\"dé entre 1 et 120\"\u003e\n\u003cspan v-if=\"(customInt \u0026\u0026 customInt \u003e d120) || (customInt \u0026\u0026 customInt \u003c 1)\"\u003e\u003cem\u003eLa valeur doit être comprise entre 1 et {{ d120 }}.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"isNaN(customInt)\"\u003e\u003cem\u003eLa valeur doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote v-if=\"customInt \u0026\u0026 customInt \u003c= d120 \u0026\u0026 customInt \u003e 0\"\u003e\n\u003cp\u003e\nMultiplicateur de dé \u003cinput type=\"\" name=\"\" v-model=\"multiplicator\" placeholder=\"nombre de d120\"\u003e\n\u003cspan v-if=\"multiplicatorInt \u0026\u0026 multiplicatorInt \u003c 1\"\u003e\u003cem\u003eLa valeur doit être 1 ou plus.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"isNaN(multiplicatorInt)\"\u003e\u003cem\u003eLa valeur doit être un nombre.\u003c/em\u003e\u003c/span\u003e\u003cspan\u003e\u003cem\u003e\u003ca href=\"https://blog.lesieur.name/d120/#convertisseur-de-dés-multiples-équilibrés\"\u003eVoir la section suivante pour comprendre l'utilité du multiplicateur\u003c/a\u003e\u003c/em\u003e\u003c/span\u003e\n\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cdiv v-if=\"customInt \u0026\u0026 customInt \u003c= d120 \u0026\u0026 customInt \u003e 0 \u0026\u0026 multiplicatorInt \u0026\u0026 multiplicatorInt \u003e 0\"\u003e\n\u003cdiv class=\"h3\" id=\"custom\"\u003eSimuler un d{{ customInt }} avec un d{{ d120 }}\u003c/div\u003e\n\u003cp\u003eQuand votre dé tombe sur une valeur de la colonne de gauche, vous avez en réalité fait la valeur de la colonne de droite. Quand il vous est proposé de lancer un \u003ca href=\"https://blog.lesieur.name/d120/#d10-rapide-avec-un-d120\"\u003ed10\u003c/a\u003e, le résultat de ce lancer va décider si votre résultat est la valeur basse ou la valeur haute. Si la valeur du \u003ca href=\"https://blog.lesieur.name/d120/#d10-rapide-avec-un-d120\"\u003ed10\u003c/a\u003e est :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003einférieure au chiffre le plus à gauche de la liste entre « […] » alors le résultat est la valeur basse,\u003c/li\u003e\n\u003cli\u003esupérieur au chiffre le plus à gauche de la liste entre « […] » alors le résultat est la valeur haute,\u003c/li\u003e\n\u003cli\u003eégale au chiffre le plus à gauche de la liste entre « […] » alors recommencez avec le chiffre suivant le plus à gauche.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSi vous arrivez au dernier chiffre, faire ce chiffre signifie que le résultat est la valeur basse.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\nFiltrez une valeur du dé \u003cinput type=\"\" name=\"\" v-model=\"customFilter\" placeholder=\"valeur faites par votre d120\"\u003e\n\u003cspan v-if=\"(customFilterInt \u0026\u0026 customFilterInt \u003e d120) || (customFilterInt \u0026\u0026 customFilterInt \u003c 1)\"\u003e\u003cem\u003eLa valeur doit être comprise entre 0 et {{ d120 }}.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"isNaN(customFilterInt)\"\u003e\u003cem\u003eLa valeur doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ctable\u003e\n\u003ctr\u003e\n\u003cth\u003eSi vous faites …\u003c/th\u003e\n\u003cth\u003ealors le résultat est …\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctemplate\nv-for=\"(table, index) in tableList(customInt)\"\n:key=\"table.from\"\u003e\n\u003ctr\u003e\n\u003ctd\u003e\n{{ table.from }} \u003cspan v-if=\"table.list\"\u003epuis lancer un \u003ca href=\"https://blog.lesieur.name/d120/#d10-rapide-avec-un-d120\"\u003ed10\u003c/a\u003e !\u003c/span\u003e\n\u003c/td\u003e\n\u003ctd class=\"to\"\nv-if=\"!table.list\"\u003e{{ table.to * multiplicatorInt }}\u003c/td\u003e\n\u003ctd class=\"to info\"\nv-if=\"table.list\"\u003e\n{{ table.to * multiplicatorInt }} ou {{ table.toPlus * multiplicatorInt }} \u003csmall\u003e[{{ table.list }}]\u003c/small\u003e\n\u003csmall class=\"plus\"\u003eSi la valeur du \u003ca href=\"https://blog.lesieur.name/d120/#d10-rapide-avec-un-d120\"\u003ed10\u003c/a\u003e est :\u003cbr\u003e- inférieure au chiffre le plus à gauche de la liste entre « […] » alors le résultat est un {{ table.to }},\u003cbr\u003e- supérieur au chiffre le plus à gauche de la liste entre « […] » alors le résultat est un {{ table.toPlus }},\u003cbr\u003e- égale au chiffre le plus à gauche de la liste entre « […] » alors recommencez avec le chiffre suivant le plus à gauche. Si vous arrivez au dernier chiffre, faire ce chiffre signifie que le résultat est un {{ table.to }}.\u003c/small\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/template\u003e\n\u003c/table\u003e\n\u003c/div\u003e\n\n  \n  \n  \n  \n## Multiples lancers avec un d120\n  \nSi vous faites du jeu de rôle, vous connaissez surement la notation **AdX**. Dans cette notation :\n\n- A est le nombre de dés qu'il faut lancer (pouvant être omis s'il vaut 1, \ncomme partout dans cet article),\n- X est le nombre de face pour chacun des dés.\n\nAinsi s'il vous est demandé de faire un **6d6** cela signifie que vous devez lancer 6 dés de six faces… ou 1d36 avec la table personnalisée du d120 pour créer un d36 !\n\n\n\n### Limitations sans d120\n  \n\u003e _`OK`_\n\u003e Dans un lancé **AdX** standard, il y a deux phénomènes inhérants au fait qu'on utilise plusieurs dés. Le premier est l'_inaccessibilité des valeurs basses_ et le second la _non équiprobabilité des résultats_.\n\u003e \n\u003e #### L'inaccessibilité des valeurs basses\n\u003e \n\u003e Si vous lancez 6d6, vous pourrez uniquement obtenir des résultats entre 6 et 36 car l'usage de 6 dés signifie qu'au minimum chaque dé tomberra sur 1 (`1 + 1 + 1 + 1 + 1 + 1 = 6`). Vous ne pourrez donc jamais atteindre la valeur 4.\n\u003e \n\u003e #### La non équiprobabilité des résultats\n\u003e \n\u003e Si je demande quelle est la probabilité d'obtenir plus de 90 lors d'un lancé de 6d20 (1d120), alors puisque 90 représente 3/4 de 120, on serait tenté de dire rapidement qu'elle est de 25%. Pour le dire autrement, une chance sur 4 de faire au moins 90 ou plus. Hors ce n'est absoluement pas le cas.\n\u003e \n\u003e En réalité, il n'existe qu'une seule manière d'obtenir 120 (`20 + 20 + 20 + 20 + 20 + 20 = 120`), mais il existe 6 manière d'obtenir 119 (5 dé d'une valeur de 20 et un dé d'une valeur 19, c.-à-d. 6 possibilités différentes car chacun des dés peut être le 19 alors que tous les autres peuvent être le 20)), etc. Cela signifie qu'il y a 6 fois plus de chance d'obtenir 119 que d'obtenir 120. On comprend donc rapidement qu'il est compliqué pour notre cerveau d'estimer, même approximativement les probabilités d'apparition de chaque valeur. En réalité, dans notre exemple du 6d20, on a 2.97% de chance de faire une valeur supérieur à 90 (et non 25% !).\n\u003e \n\u003e Vous pouvez jouer avec ces probabilités sur le site https://anydice.com/. Dans notre exemple, tapez `output 6d20`, puis cliquez sur `Calculate` et `At least` et lisez la ligne 90.\n\n\n\n### Convertisseur de dés multiples équilibrés\n  \nVoici un petit outil pour convertir n'importe quel nombre de lancer de dé multiple en un unique lancer de d120 sans souffrir des limitations précédemment évoqués.\n\nUn multiplicateur est utilisé quand la valeur maximale du lancer multiple de dé dépasse 120. Par exemple, dans le cas d'un 2d70 (équivalent à lancer un 7d20), la valeur maximale est 140. Hors, sur un d120 on ne peut gérer que 120 valeurs. On utilise alors la valeur de A comme multiplicateur de résultat. On peut ainsi couvrir sur un d70 des valeurs de 1 à 140 en perdant de la précison (valeur de 2 en 2 au lieu de 1 en 1). Vous pouvez toujours décider de réellement lancer deux d70 mais vous reviendrez sur les limitations expliqués plus haut.\n\n\u003cblockquote\u003e\n\u003cp\u003e\n\u003cstrong\u003e\u003csamp\u003eOK\u003c/samp\u003e\u003c/strong\u003e\nQuelle valeur doit être convertie ?\n\u003cinput type=\"\" name=\"\" v-model=\"valueA\" placeholder=\"A\" style=\"width: 24px;text-align: center\"\u003e d \u003cinput type=\"\" name=\"\" v-model=\"valueX\" placeholder=\"X\" style=\"width: 24px;text-align: center\"\u003e\u003cspan v-if=\"valueA \u0026\u0026 customA \u003e 0 \u0026\u0026 valueX\"\u003e se simule avec \u003cstrong\u003e{{ diceSuite().A }}\u003cspan class=\"a dice-suite\" v-on:click=\"goToTable\"\u003ed{{ diceSuite().X }}\u003c/span\u003e\u003c/strong\u003e\u003cspan v-if=\"diceSuite().A \u003e 1\"\u003e ou alors utilisez un \u003cspan class=\"a dice-suite\" v-on:click=\"goToTable\"\u003ed{{ diceSuite().X }}\u003c/span\u003e et multipliez le résultat par {{ diceSuite().A }}\u003c/span\u003e.\u003c/span\u003e\n\u003cspan v-if=\"valueA \u0026\u0026 customA \u003c 1\"\u003e\u003cem\u003eLa valeur A doit être supérieure à 0.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"valueA \u0026\u0026 isNaN(customA)\"\u003e\u003cem\u003eLa valeur A doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003cspan v-if=\"valueX \u0026\u0026 customX \u003c 1\"\u003e\u003cem\u003eLa valeur X doit être supérieure à 0.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"valueX \u0026\u0026 isNaN(customX)\"\u003e\u003cem\u003eLa valeur X doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n  \n\n### Conserver les limitations\n\nSi vous souhaitez conserver l'_inaccessibilité des valeurs basses_ et le second la _non équiprobabilité des résultats_ avec un d120 voici la marche à suivre.\n\n#### L'inaccessibilité des valeurs basses\n\n- Vous pouvez simplement réellement simuler les dés d'origines autant de fois dans des lancer séparé. En d'autre terme, au lieu de lancer 1d24 pour simuler 4d6, lancez réellement 4 dé de 6 simuler avec un d120. La limitation ici est que vous aurez également la non équiprobabilité des résultats avec cette méthode.\n  \n- Pour ne reproduire que cette limitation sans l'autre, voici comment procéder. Imaginons que nous voulions reproduire un 4d6. La valeur de `A = 4` et la valeur de `X = 6`. Les résultats obtenables vont donc de 4 (`4 x 1`) à 24 (`4 x 6`). Le \u003ca href=\"https://blog.lesieur.name/d120/#convertisseur-de-dés-multiples-équilibrés\"\u003econvertisseur de dés multiples équilibrés\u003c/a\u003e vous indiquera alors qu'un 4d6 se simule sur un d120 avec un d24 (ou 1d24). Il vous suffit donc de retrancher la valeur de A au d24 pour simuler un d20 (ou 1d20). Après votre jet de d20, une fois votre résultat obtenue, rajoutez simplement à celui-ci la valeur de A (si le résultat est de 1, vous avez en réalité fait 4 et si le résultat est de 20, vous avez en réalité fait 24).\n\n\u003cblockquote\u003e\n\u003cp\u003e\n\u003cstrong\u003e\u003csamp\u003eOK\u003c/samp\u003e\u003c/strong\u003e\nQuelle valeur doit être convertie ?\n\u003cinput type=\"\" name=\"\" v-model=\"valueA\" placeholder=\"A\" style=\"width: 24px;text-align: center\"\u003e d \u003cinput type=\"\" name=\"\" v-model=\"valueX\" placeholder=\"X\" style=\"width: 24px;text-align: center\"\u003e\u003cspan v-if=\"valueA \u0026\u0026 customA \u003e 0 \u0026\u0026 valueX \u0026\u0026 diceSuite().A \u003c 2\"\u003e se simule avec un \u003cstrong\u003e\u003cspan class=\"a dice-suite\" v-on:click=\"goToTable\"\u003ed{{ diceSuite().X - customX }}\u003c/span\u003e\u003c/strong\u003e en ajoutant ensuite {{ customX }} au résultat.\u003c/span\u003e\n\u003cspan v-if=\"valueA \u0026\u0026 customA \u003c 1\"\u003e\u003cem\u003eLa valeur A doit être supérieure à 0.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"valueA \u0026\u0026 isNaN(customA)\"\u003e\u003cem\u003eLa valeur A doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003cspan v-if=\"valueX \u0026\u0026 customX \u003c 1\"\u003e\u003cem\u003eLa valeur X doit être supérieure à 0.\u003c/em\u003e\u003c/span\u003e\u003cspan v-if=\"valueX \u0026\u0026 isNaN(customX)\"\u003e\u003cem\u003eLa valeur X doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n\u003cspan v-if=\"valueA \u0026\u0026 valueX \u0026\u0026 diceSuite().A \u003e 1\"\u003e\u003cem\u003eNe supporte que les valeurs simulable avec un d120.\u003c/em\u003e\u003c/span\u003e\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n#### La non équiprobabilité des résultats\n\nPour cette partie c'est un peu plus compliqué. Également, conserver la non équiprobabilité des résultats impose également de conserver l'inaccessibilité des valeurs basses.\n\n- Vous pouvez simplement réellement simuler les dés d'origines autant de fois dans des lancer séparés. En d'autre terme, au lieu de lancer 1d36 pour simuler 6d6, lancez réellement 6 dé de 6 simuler avec un d120.\n  \n- Une manière plus compliqué est de répartir sur les 120 valeurs du d120 la distribution de répartition que génèrerait le lancer de plusieurs dés. Vous pouvez utilisez le site https://anydice.com/ pour vous y aider ou utiliser cet outil.\n\u003c/div\u003e\n\n\n\n\n\n## Interprétation de dé rapide\n\nIl peut être compliqué de manipuler les tables élevés pour déduire des valeurs de dé. C'est pourquoi il vous est proposé sur cette page des tables d'associations par dé. On peut cependant se passer de ces tables et lire les valeurs d'un d120 rapidement. Cela nécessite assez peu de gymnastique mentale pour les d2, d5, d8, d10, d12, d20 ou d24 et de connaitre les tables de multiplication usuelles jusqu'à 6 pour les d3, d4, d15, d30, d40 ou d60.\n\n\u003e **`OK`** **Interprétation des termes**\n\u003e\n\u003e _**Unités**_\n\u003e - Quand un résultat a 3 chiffres, l'unité correspond au premier chiffre. *Exemple :* 11**3** donne 3.\n\u003e - Quand un résultat a 2 chiffres, l'unité correspond au deuxième chiffre. *Exemple :* 7**6** donne 6.\n\u003e - Quand un résultat n'a qu'un chiffre, l'unité correspond à ce chiffre. *Exemple :* **4** donne 4.\n\u003e - La valeur 0 des unités est à interpréter comme un 10. *Exemple :* 4**0** donne 10.\n\u003e\n\u003e _**Dizaines étendues**_\n\u003e - Quand un résultat a 3 chiffres, la dizaine étendue correspond aux deux premiers chiffres. *Exemple :* **11**3 donne 11.\n\u003e - Quand un résultat à 2 chiffres, la dizaine étendue correspond au premier chiffre. *Exemple :* **7**6 donne 7.\n\u003e - Quand un résultat n'a qu'un chiffre, la dizaine étendue correspond à 12. *Exemple :* 4 donne 12.\n\u003e - Dit autrement, la valeur 0 des dizaines étendues est à interpréter comme un 12. *Exemple :* **0**4 donne 12.\n\n\n\n### d2 rapide avec un d120 (pile ou face)\n\nTous les nombres ont une équiprobabilité d'être pairs ou impairs. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Impaires : vous avez fait un 1,\n- Paires : vous avez fait un 2.\n\n\n\n### d3 rapide avec un d120\n\nTous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-4, 5-8 et 9-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-4 : vous avez fait un 1,\n- Dizaines 5-8 : vous avez fait un 2,\n- Dizaines 9-12 : vous avez fait un 3.\n\n\n\n### d4 rapide avec un d120\n\nTous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-3, 4-6, 7-9 et 10-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-3 : vous avez fait un 1,\n- Dizaines 4-6 : vous avez fait un 2,\n- Dizaines 7-9 : vous avez fait un 3,\n- Dizaines 10-12 : vous avez fait un 4.\n\n\n\n### d5 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable. L'idée ici est d'ignorer les dizaines étendues et de ne prendre en compte que les unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Unités 1-5 : vous avez fait le résultat indiqué,\n- Unités 6-10 : soustrayez 5 à cette valeur et vous avez fait le résultat indiqué.\n\n\n\n### d6 rapide avec un d120\n\nLes nombres des dizaines étendues sont au nombre de 12 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ou 12) et peuvent sortir de manière équiprobable. L'idée ici est d'ignorer les unités et de ne prendre en compte que les dizaines étendues. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-6 : vous avez fait le résultat indiqué,\n- Dizaines 7-12 : soustrayez 6 à cette valeur et vous avez fait le résultat indiqué.\n\n\n\n### d8 rapide avec un d120\n\nLes nombres des dizaines étendues sont au nombre de 12 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ou 12) et peuvent sortir de manière équiprobable indépendamment du chiffre des unités. De même, les chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et ont une équiprobabilité d'être pairs ou impairs indépendamment du nombre des dizaines étendues. L'idée ici va être d'utiliser les dizaines étendues uniquement jusqu'à 8 et d'utiliser les unités au dela de 8 pour départager les valeurs. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-8 : vous avez fait le résultat indiqué,\n- Dizaines 9-12 avec unités impaires : soustrayez 8 à cette valeur et vous avez fait le résultat indiqué,\n- Dizaines 9-12 avec unités paires : soustrayez 4 à cette valeur et vous avez fait le résultat indiqué.\n\n\n\n### d10 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. Lancez un d120 puis vérifiez la valeur des unités : vous avez fait le résultat indiqué.\n\n\n\n### d12 rapide avec un d120\n\nLes nombres des dizaines étendues sont au nombre de 12 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ou 12) et peuvent sortir de manière équiprobable indépendamment du chiffre des unités. Lancez un d120 puis vérifiez la valeur des dizaines : vous avez fait le résultat indiqué.\n\n\n\n### d15 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. De même, tous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-4, 5-8 et 9-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-4 et \n  - Unités 1-5 : vous avez fait le résultat indiqué,\n  - Unités 6-10 : soustrayez 5 à cette valeur et vous avez fait le résultat indiqué,\n- Dizaines 5-8 et\n  - Unités 1-5 : vous avez fait le résultat indiqué que vous multipliez par 2,\n  - Unités 6-10 : soustrayez 5 à cette valeur et vous avez fait le résultat indiqué que vous multipliez par 2,\n- Dizaines 9-12 et\n  - Unités 1-5 : vous avez fait le résultat indiqué que vous multipliez par 3,\n  - Unités 6-10 : soustrayez 5 à cette valeur et vous avez fait le résultat indiqué que vous multipliez par 3.\n\n\n\n### d20 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. De même, les nombres des dizaines étendues sont au nombre de 12 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ou 12) et ont une équiprobabilité d'être pairs ou impairs indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines impaires : vous avez fait le résultat indiqué par les unités,\n- Dizaines paires : vous avez fait le résultat indiqué par les unités que vous multipliez par 2.\n\n\n\n### d24 rapide avec un d120\n\nLes nombres des dizaines étendues sont au nombre de 12 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ou 12) et peuvent sortir de manière équiprobable indépendamment du nombre des unités. De même, les chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 10) et ont une équiprobabilité d'être pairs ou impairs indépendamment du nombre des dizaines étendues. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Unités impaires : vous avez fait le résultat indiqué par les dizaines étendues,\n- Unités paires : vous avez fait le résultat indiqué par les dizaines étendues que vous multipliez par 2.\n\n\n\n### d30 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. De même, tous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-4, 5-8 et 9-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-4 : vous avez fait le résultat indiqué par les unités,\n- Dizaines 5-8 : vous avez fait le résultat indiqué par les unités que vous multipliez par 2,\n- Dizaines 9-12 : vous avez fait le résultat indiqué par les unités que vous multipliez par 3.\n\n\n\n### d40 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. De même, tous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-3, 4-6, 7-9 et 10-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-3 : vous avez fait le résultat indiqué par les unités,\n- Dizaines 4-6 : vous avez fait le résultat indiqué par les unités que vous multipliez par 2,\n- Dizaines 7-9 : vous avez fait le résultat indiqué par les unités que vous multipliez par 3,\n- Dizaines 10-12 : vous avez fait le résultat indiqué par les unités que vous multipliez par 4.\n\n\n\n### d60 rapide avec un d120\n\nLes chiffres des unités sont au nombre de 10 (1, 2, 3, 4, 5, 6, 7, 8, 9 ou 0 (c-à-d. 10)) et peuvent sortir de manière équiprobable indépendamment du nombre des dizaines étendues. De même, tous les nombres des dizaines étendues ont une équiprobabilité d'être compris entre 1-2, 2-4, 4-5, 6-7, 8-9, 10-11 et 10-12 indépendamment du chiffre des unités. Lancez un d120 puis vérifiez si les valeurs sont ;\n\n- Dizaines 1-2 : vous avez fait le résultat indiqué par les unités,\n- Dizaines 3-4 : vous avez fait le résultat indiqué par les unités que vous multipliez par 2,\n- Dizaines 5-6 : vous avez fait le résultat indiqué par les unités que vous multipliez par 3,\n- Dizaines 7-8 : vous avez fait le résultat indiqué par les unités que vous multipliez par 4,\n- Dizaines 9-10 : vous avez fait le résultat indiqué par les unités que vous multipliez par 5,\n- Dizaines 11-12 : vous avez fait le résultat indiqué par les unités que vous multipliez par 6.\n\n\n\n\n\n## d100 en deux lancers\n\nIl est possible de simuler un d100 en deux lancer de d120. Le premier lancer représente le nombre des dizaines. Le second lancer correspond au chiffre des unités.\n\n\n\n### Simuler un d100 avec deux d120\n\nPour cela simuler deux \u003ca href=\"https://blog.lesieur.name/d120/#d10-rapide-avec-un-d120\"\u003ed10\u003c/a\u003e. Quand votre dé tombe sur une valeur comprise dans l'intervalle de la colonne de gauche, vous avez en réalité fait la valeur de la colonne du milieu pour le premier lancer et la valeur de la colonne de droite pour le second lancer.\n\n\u003ctable\u003e\n    \u003ctbody\u003e\n        \u003ctr\u003e\n            \u003cth\u003eSi vous faites entre … et … (inclus)\u003c/th\u003e\n            \u003cth\u003ealors au 1er lancer le résultat est …\u003c/th\u003e\n            \u003cth\u003epuis au 2nd lancer le résultat est …\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e1 - 12\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e10\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e13 - 24\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e20\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+2\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e25 - 36\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e30\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+3\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e37 - 48\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e40\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+4\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e49 - 60\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e50\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+5\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e61 - 72\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e60\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+6\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e73 - 84\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e70\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+7\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e85 - 96\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e80\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+8\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e97 - 108\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e90\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+9\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n            \u003ctd\u003e109 - 120\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e0\u003c/td\u003e\n            \u003ctd class=\"to\"\u003e+10\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/tbody\u003e\n\u003c/table\u003e\n\n  \n  \n  \n\n## Utiliser un d120\n\nJusqu'à maintenant nous avons vu comment utiliser le d120 pour en faire un autre dé afin de l'adapter aux spécificités de vos statistiques. Cependant, l'utilité première d'un d120 est tout de même de faire un lancer parfaitement équilibré en terme de hasard sur 120 valeurs. Aussi voyons comment adapter vos statistiques pour qu'elles se jouent avec un d120 ! \n\n\n\n### Des stats de 1 à 120\n\nLa première utilisation est celle où vous adaptez les valeurs de vos statistiques pour qu'elles aillent de 1 à 120. Si par exemple dans votre jeu préféré les statistiques des personnages vont de 1 à 100 alors convertissez-les pour aller de 1 à 120. Voici un outil de conversion ou les valeurs sont adaptées (et arrondies le cas échéant).\n\nPour l'exemple avec des statistiques allant jusqu'à 100, il faut remplir le champ « Statistiques sur » avec __100__. Puis si, par exemple, vos réussites critiques vont jusqu'à 5, alors il faut remplir le champ « Si la valeur est de » avec __5__. Vous obtenez la nouvelle valeur de réussites critique sur 120 sur la ligne « elle devient ».\n\n\u003cdiv class=\"use-120\"\u003e\n    \u003ctable\u003e\n        \u003ctr\u003e\n            \u003ctd\u003eStatistiques sur \u003cinput type=\"\" name=\"\" v-model=\"base\"\u003e\u003c/td\u003e\n            \u003ctd\u003econverties sur \u003cstrong\u003e{{ d120 }}\u003c/strong\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr v-if=\"(base \u0026\u0026 base \u003c= d120) \u0026\u0026 (base \u0026\u0026 base \u003e 0)\"\u003e\n            \u003ctd\u003eSi la valeur est de \u003cinput type=\"\" name=\"\" v-model=\"custom\"\u003e\u003c/td\u003e\n            \u003ctd\u003e\u003cspan v-if=\"(custom \u0026\u0026 custom \u003e 0)\"\u003eelle devient \u003cstrong\u003e{{ roundCustom }}\u003c/strong\u003e\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/table\u003e\n    \u003cp\u003e\n        \u003cspan v-if=\"(base \u0026\u0026 base \u003e d120) || (base \u0026\u0026 base \u003c 1)\"\u003e\u003cem\u003eLa valeur à convertir doit être supérieur à 0 et inférieure ou égale à {{ d120 }}.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"isNaN(base)\"\u003e\u003cem\u003eLa valeur à convertir doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"(custom \u0026\u0026 custom \u003c 1)\"\u003e\u003cem\u003eLa valeur à convertir doit être supérieur à 0.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"isNaN(custom)\"\u003e\u003cem\u003eLa valeur à convertir doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n\n\n\n### Des stats de 1 à 100\n\nVous pourriez trouver que faire vos calcules sur des divisions par 120 est plutôt compliquée où du moins, pas aussi simple que de les faire sur 100. C'est pourquoi il est également possible d'utiliser son d120 en tant que d100 en un seul lancer (au détriment de l'équiprobabilité des résultats) et de se servir des valeurs restantes pour faire des actions spéciales (voir \u003ca href=\"https://blog.lesieur.name/d120/#actions-supplémentaires\"\u003eActions supplémentaires\u003c/a\u003e).\n\nPour l'exemple avec des statistiques allant jusqu'à 10, il faut remplir le champ « Statistiques sur » avec __10__. Puis si votre statistique de _Force_ est de 7, alors il faut remplir le champ « Si la valeur est de » avec __7__. Vous obtenez la nouvelle valeur sur la ligne « elle devient ».\n\n\u003cdiv class=\"use-100\"\u003e\n    \u003ctable\u003e\n        \u003ctr\u003e\n            \u003ctd\u003eStatistiques sur \u003cinput type=\"\" name=\"\" v-model=\"base\"\u003e\u003c/td\u003e\n            \u003ctd\u003econverties sur \u003cstrong\u003e{{ 100 }}\u003c/strong\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr v-if=\"(base \u0026\u0026 base \u003c= 100) \u0026\u0026 (base \u0026\u0026 base \u003e 0)\"\u003e\n            \u003ctd\u003eSi la valeur est de \u003cinput type=\"\" name=\"\" v-model=\"custom\"\u003e\u003c/td\u003e\n            \u003ctd\u003e\u003cspan v-if=\"(custom \u0026\u0026 custom \u003e 0)\"\u003eelle devient \u003cstrong\u003e{{ roundCustom }}\u003c/strong\u003e\u003c/span\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n    \u003c/table\u003e\n    \u003cp\u003e\n        \u003cspan v-if=\"(base \u0026\u0026 base \u003e 100) || (base \u0026\u0026 base \u003c 1)\"\u003e\u003cem\u003eLa valeur à convertir doit être supérieur à 0 et inférieure ou égale à {{ 100 }}.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"isNaN(base)\"\u003e\u003cem\u003eLa valeur à convertir doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"(custom \u0026\u0026 custom \u003c 1)\"\u003e\u003cem\u003eLa valeur à convertir doit être supérieur à 0.\u003c/em\u003e\u003c/span\u003e\n        \u003cspan v-if=\"isNaN(custom)\"\u003e\u003cem\u003eLa valeur à convertir doit être un nombre.\u003c/em\u003e\u003c/span\u003e\n    \u003c/p\u003e\n\u003c/div\u003e\n\n#### Actions supplémentaires\n\nVoici quelques idées d'utilisations.\n\n##### Actions critiques\n\nOn peut introduire des plages de nombre dédiées aux actions critiques.  \n\n- Si votre lancer est entre 1 et 100, alors vous aurez fait la valeur indiquée sans jamais qu'il ne soit possible que cette valeur soit une réussite ou un échec critique.\n- Si votre lancer est entre 101 et 110, alors vous aurez fait entre 91 et 100 mais en version échec (ou inversement) critique (à vous d'appliquer ce que cela implique).\n- Si votre lancer est entre 111 et 120, alors vous aurez fait entre 1 et 10 mais en version réussite (ou inversement) critique (à vous d'appliquer ce que cela implique).\n\n##### Bouclier\n\nImaginons une valeur de bouclier de 4 sur un ennemi. Tant qu'il a son bouclier, il faut faire moins de 40 pour le toucher. Dès qu'il n'a plus de bouclier, il faut faire moins de 80 par exemple. Les valeurs de 1 à 100 sont des valeurs normales. Les valeurs de 101 à 110 brise 1 bouclier et celle de 111 à 120 en brise 2 (par exemple). Dans ce cas, la valeur des unités multipliées par 10 correspond à la valeur initiale sur 100 et on ajoute +5 si le chiffre des dizaines est un 0.\n\nExemple : faire 103, signifie que vous retirez 1 bouclier et que vous avez fait 35 (3x10 + 5). Faire 112 signifie que vous retirez par exemple 2 boucliers et que vous faites 20 (2x10 + 0).\n\n##### Modificateur\n\nLe chiffre des unités peut être utilisé pour obtenir la valeur réel entre 1 et 10 tandis que les 12 dizaines permettent d'appliquer des modificateurs.\n\n- Modificateur complet : ajoute (ou retire si malus) jusqu'à 12 au résultat des unités.\n- Modificateur moitié : ajoute (ou retire si malus) jusqu'à 6 au résultat des unités. Il faut prendre l'écart entre la valeur obtenue et 6 pour les nombres égaux ou inférieur à 6 OU prendre l'écart entre 7 et la valeur obtenue pour les nombres égaux ou supérieures à 7.\n- Modificateur tier : etc…\n\n##### Choix de résultat\n\nOn peut utiliser par exemple le chiffre des unités et celui des dizaines comme deux valeurs séparé. Ainsi le résultat 95 donnera 9 et 5. Dans une situation de bonus, on peu imaginer que le joueur fait 9. Dans une situation de malus, on peut imaginer que le joueur fait 5. On peut également utiliser l'écart entre les nombres comme valeur réel et décider ici que le résultat est 4, etc.\n\n\n\n\n\n## Acheter un d120 parfaitement équilibré\n\nAprès tout cela, vous vous demandez peut-être où vous procurrez un tel dé ?\n\nVous pourrez l'obtenir sur [la boutique en ligne](https://www.mathartfun.com/DiceLabDice.html) de [The Dice Lab](http://thedicelab.com/). Il vous est proposer de les acheter à l'unité où par lot de 5.","urn":"d120","others":{"markdown":true,"published":true},"cache":{"comment":{"number":0}},"categories":[{"$oid":"5c95f351bdee591a81a98118"},{"$oid":"5310456355dfd5f7698d48c9"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48c0"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5b2e23d9c2bdd105cdf6709f"}],"dates":{"updated":[],"published":{"$date":"2019-04-19T12:11:00.000Z"}},"__v":0,"description":"Présentation du dé 120 alias d120. Un dé pour les gouverner tous !","image":"https://blog.lesieur.name/media/images/upload/D120Amber.jpg","script":"var script = document.createElement(\"script\");\nscript.type = \"text/javascript\";\nscript.src = \"https://unpkg.com/vue/dist/vue.min.js\";\n\nscript.addEventListener(\"load\", function() {\n\n    var d120 = 120;\n\n    new Vue({\n        el: \".standards\",\n        data: {\n            d120: d120\n        },\n        methods: {\n            isPure: function (value) {\n                return this.d120 / value === Math.floor(this.d120 / value);\n            },\n            diceList: function() {\n                var createD = [];\n\n                for (var i = 0; i \u003c this.d120 - 1; i++) {\n                    obj = {}\n                    obj.value = i + 1;\n                    obj.pure = false;\n\n                    if (this.isPure(i + 1)) {\n                        obj.pure = true;\n                    }\n\n                    if (obj.pure) {\n                        createD.push(obj);\n                    }\n                }\n\n                return createD;\n            },\n            tableList: function(d) {\n                var createD = [],\n                    obj,\n                    base,\n                    temp = 0;\n\n                for (var i = 1; i \u003c= d; i++) {\n                    base = ((this.d120) * i) / d;\n                    obj = {}\n                    obj.to = i;\n                    obj.fromLower = temp;\n                    obj.fromUpper = base;\n\n                    obj.fromLowerDisplay = Math.floor(obj.fromLower) + 1;\n                    obj.fromUpperDisplay = Math.floor(obj.fromUpper);\n\n                    createD.push(obj);\n\n                    temp = obj.fromUpper;\n                }\n\n                return createD;\n            }\n        }\n    });\n\n    new Vue({\n        el: \".custom\",\n        data: {\n            d120: d120,\n            custom: '',\n            customFilter: '',\n            valueA: '',\n            valueX: '',\n            multiplicator: 1,\n            distribution: {},\n        },\n        computed: {\n            customInt: function () {\n                return parseInt(this.custom, 10);\n            },\n            multiplicatorInt: function () {\n                return parseInt(this.multiplicator, 10);\n            },\n            customFilterInt: function () {\n                return parseInt(this.customFilter, 10);\n            },\n            customA: function () {\n                return parseInt(this.valueA, 10);\n            },\n            customX: function () {\n                return parseInt(this.valueX, 10);\n            }\n        },\n        methods: {\n            async getDistribution () {\n              const formData  = new FormData();\n              formData.append('program', 'output 1d1');\n\n              this.distribution = await fetch('https://anydice.com/calculator_limited.php', {\n                method: 'POST',\n                body: formData,\n              })\n            },\n            diceSuite: function () {\n                var vm = this,\n                    max = this.customA * this.customX,\n                    listD120 = [];\n\n                function addDice(max) {\n                    var limit = max / d120,\n                        number,\n                        isTransformed = true;\n\n                    if (limit \u003e 1) {\n                        number = Math.ceil(limit);\n                        if (max / number === Math.floor(max / number)) {                        \n                            return {\n                                A: number,\n                                X: max / number\n                            };\n                        } else {\n                            return {\n                                A: vm.customA,\n                                X: vm.customX\n                            };\n                        }\n                    } else {\n                        return {\n                            A: 1,\n                            X: max\n                        };\n                    }\n                }\n\n                if (this.customA \u003e 0 \u0026\u0026 this.customX) {\n                    return addDice(this.customA * this.customX);\n                }\n\n                return \"\";\n\n            },\n            goToTable: function () {\n                this.custom = this.diceSuite().X;\n                this.multiplicator = this.diceSuite().A;\n                this.customFilter = \"\";\n                location.href = \"https://blog.lesieur.name/d120/#simuler-un-dé-personnalisé-avec-un-d120\";\n            },\n            isPure: function (value) {\n                return this.d120 / value === Math.floor(this.d120 / value);\n            },\n            tableList: function(d) {\n                var vm = this,\n                    createD = [],\n                    offset = this.d120 / this.custom,\n                    offsets = [],\n                    indice = 0,\n                    delta = this.isPure(this.customInt) ? 0 : 0.55555555555555,\n                    to = 0,\n                    list = \"\";\n\n                for (var i = 0; i \u003c this.custom; i++) {\n                    offsets[i] = (((i + 1) * this.d120) / this.custom) + delta;\n                }\n\n                for (var i = 0; i \u003c this.d120; i++) {\n                    if (i + 2 \u003c= offsets[indice]) {\n                        to = indice + 1;\n                        toPlus = undefined;\n                        list = \"\"\n                    } else {\n                        to = parseInt(indice + 1, 10);\n                        toPlus = parseInt(indice + 1 !== this.customInt ? indice + 2 : 1, 10);\n                        list = ((offsets[indice] + \"\").split('.')[1] || '').split('').join('-');\n                        indice++;\n                    }\n                    createD.push({ from: i + 1, to: to, toPlus: toPlus, list: list });\n                }\n\n                if (this.customFilterInt \u003e 0 \u0026\u0026 this.customFilterInt \u003c= this.d120) {\n                    return createD.filter(function (a) {\n                        return a.from === vm.customFilterInt;\n                    });\n                } else {\n                    return createD;\n                }\n\n            }\n        }\n    });\n\n    new Vue({\n        el: '.use-120',\n        data: {\n            d120: d120,\n            base: 100,\n            custom: 5\n        },\n        computed: {\n            roundCustom: function () {\n                return Math.round((this.custom * this.d120) / this.base)\n            }\n        } \n    });\n\n    new Vue({\n        el: '.use-100',\n        data: {\n            base: 10,\n            custom: 7\n        },\n        computed: {\n            roundCustom: function () {\n                return Math.round((this.custom * 100) / this.base)\n            }\n        } \n    });\n});\n\n\n/*var d120 = 120;\nvar dX = 7;\nvar offset = d120 / dX;\nvar offsets = [];\nvar indice = 0;\nvar input = [];\nvar output = [];\nvar delta = 0.55555555555555;\nvar result = 0;\n\nfor (var i = 0; i \u003c dX; i++) {\n    offsets[i] = (((i + 1) * d120) / dX) + delta;\n}\nconsole.log(offsets);\n\nconsole.log(1, offsets[0] - delta, '=', offsets[0], ' - ', delta);\nfor (var k = 0; k \u003c offsets.length - 1; k++) {\n    console.log(k + 2, offsets[k + 1] - offsets[k], '=', offsets[k + 1], ' - ', offsets[k]);\n}\n\nfor (var i = 0; i \u003c d120; i++) {\n    if (i + 2 \u003c offsets[indice]) {\n        result = indice + 1;\n    } else {\n        result = parseInt(indice + 1, 10) + \" ou \" + parseInt((indice + 1 !== dX) ? indice + 2 : 1, 10) + \" [\" + ((offsets[indice] + \"\").split('.')[1] || '').split('').join('-') + \"]\";\n        indice++;\n    }\n    console.log(i + 1, result);\n}*/\n\ndocument.getElementsByTagName(\"body\")[0].appendChild(script);","stylesheet":".article table, .article tr, .article th, .article td {\n    border: 1px solid #e0e0e0;\n    border-collapse: collapse;\n    border-radius: .2857rem;\n}\n.article table {\n    width: 100%;\n}\n.article .h3 {\n    margin-top: 24px;\n}\n.article th {\n    font-weight: normal;\n}\n.article td, .article th {\n    padding: 4px 8px;\n}\n.article .to {\n    text-align: center;\n    position: relative;\n}\n.article .to small.plus {\n    display: none;\n    position: absolute;\n    top: 0;\n    left: 100%;\n    width: 320px;\n}\n.article .to.info {\n    cursor: help;\n}\n.article .dice-suite {\n    cursor: pointer;\n    font-weight: bold;\n}\n.article .to:hover small.plus {\n    padding: 8px;\n    text-align: left;\n    background-color: #FFF;\n    display: block;\n    position: absolute;\n    top: -1px;\n    left: auto;\n    right: 100%;\n    border-radius: .2857rem;\n    border: 1px solid #e0e0e0;\n    box-shadow: 0 0 10px 2px #e0e0e0\n}\n.article .a {\n  color: #48739e;\n}\n.article .a:hover {\n  color: #c00;\n}\narticle.article li \u003e ul {\n  margin: 0 0 16px 0;\n}"}
{"_id":{"$oid":"5d3a8bc1f1e3226f06811d5e"},"dates":{"updated":[],"published":{"$date":"2019-07-26T05:12:00.000Z"}},"cache":{"comment":{"number":0}},"others":{"markdown":true,"published":false},"categories":[],"title":"Au cœur du JavaScript — Édition ES2017+","content":"C'est la _deuxième édition_ de « Au cœur du JavaScript ». C'est une vue globale consacré au langage de programmation ECMAScript et des composants de base de son système d'exécution.\n\n\u003e *`Niveau`* Type de lecteur : Développeurs expérimentés, professionnels.\n\nLa [première édition](https://fgribreau.com/articles/voyage-au-coeur-de-javascript.html) de l'article couvre les aspects génériques du langage JavaScript, en utilisant des abstractions principalement de la spécification hérité de ES3, avec quelques références aux changements appropriés dans ES5 et ES6 (aka ES2015).\n\nÀ partir de ES2015, les descriptions et les structures de certains composants de base ont changé et de nouveaux modèles ont été introduit par la spécification. Dans cette édition, nous nous concentrons sur les abstractions les plus récentes, la terminologie mise à jour, mais en conservant des structures JavaScript très simples qui restent cohérentes dans toutes les versions des spécifications.\n\nCet article porte donc sur le système d'exécution ES2017+.\n\n\u003e Remarque : la dernière version de [la spécification ECMAScript](https://tc39.github.io/ecma262/) se trouve sur le site Web de TC-39.\n\nNous commençons notre discussion avec le concept d'_objet_, ce qui est fondamental pour ECMAScript.\n\n\n\n\n\n## Object\n\nECMAScript est un langage de programmation _orienté objet_ avec une organisation _basé sur les prototypes_, ayant le concept d'_objet_ comme abstraction de base.\n\n\u003e **`Définition`** **Déf. 1. Objet** : Un _objet_ est un ensemble de propriétés ainsi qu'un unique _objet prototype_. Le prototype peut être soit un objet ou la valeur `null`.\n\nPrenons un objet basique en tant qu'exemple. Un prototype d'objet est référencé par la propriété interne `[[Prototype]]`, laquelle est accessible au niveau de l'utilisateur du langage via la propriété `__proto__`.\n\nPour le code :\n\n```js\nlet point = {\n\u0009x: 10,\n\u0009y: 20\n};\n```\n\nnous avons une structure avec deux _propriétés explicites propres_ et une propriété _implicite_ `__proto__` qui est la référence au prototype de l'objet `point` :\n\n\u003cfigure\u003e\n\u003cimg width=\"1369\" height=\"392\" src=\"http://dmitrysoshnikov.com/wp-content/uploads/2017/11/js-object.png\" alt=\"Figure 1. Un objet de base avec un prototype.\" style=\"max-width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003eFigure 1. Un objet de base avec un prototype.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\u003e Remarque : Les objets peuvent également stocker des _symboles_. Vous pouvez obtenir plus d'informations sur les symboles dans [cette documentation](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Symbol).\n\nLes objets prototypes sont utilisés pour implémenter de l'_héritage_ avec le mécanisme d'_envoi dynamique (“dynamic dispatch”)_. Tournons nous vers le concept de _chaîne de prototype (“prototype chain”)_ pour voir ce mécanisme en détail.\n\n## Prototype\n\nChaque objet, lors de sa création, reçoit son _prototype_. Si le prototype n'est pas _explicitement_ définie, les objets reçoivent un _prototype par défaut_ en tant qu'_objet hérité (“inheritance object”)_.\n\n\u003e **`Définition`** **Déf. 2. Prototype** : Un prototype est un objet de délégation utilisé pour implémenter l'héritage de prototype.\n\nLe prototype peut être définie _explicitement_ par l'intermédiaire soit la propriété de `__proto__`, ou de manière plus formelle par la méthode `Object.create` :\n\n```js\n// Objet de base.\nlet point = {\n\u0009x: 10,\n\u0009y: 20\n};\n\n// Héritage explicite de l'objet `point` avec `__proto__`.\nlet point3D = {\n\u0009z: 30,\n\u0009__proto__: point\n};\n\nconsole.log(\n\u0009point3D.x, // `10`, hérité.\n\u0009point3D.y, // `20`, hérité.\n\u0009point3D.z  // `30`, propre.\n);\n```\n\n\u003e Remarque : par défaut, les objets reçoivent `Object.prototype` en tant qu'objet hérité.\n\nTout objet peut être utilisé en tant que prototype d'un autre objet, et le prototype lui-même peut avoir son propre prototype. Si un prototype a une référence non nulle à son prototype (le prototype possède un prototype), et ainsi de suite, on appelle cela la _chaîne de prototype_.\n\n\u003e **`Définition`** **Déf. 3. Chaîne de prototype** : Une chaîne de prototype est une chaîne finie d'objets utilisés pour implémenter l'_héritage_ et les _propriétés partagées (“shared properties”)_.\n\n\u003cfigure\u003e\n\u003cimg width=\"1335\" height=\"108\" src=\"http://dmitrysoshnikov.com/wp-content/uploads/2017/11/js-object.png\" alt=\"Figure 2. Une chaîne de prototype.\" style=\"max-width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003eFigure 2. Une chaîne de prototype.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nLa règle est très simple : si une propriété ne se trouve pas dans l'objet lui-même, il y a une tentative de le _résoudre_ dans le prototype, puis dans le prototype du prototype, etc. jusqu'à ce que l'ensemble de la chaîne de prototype ai été considéré.\n\nTechniquement ce mécanisme est connu en tant qu'_envoi dynamique_ ou _délégation_.\n\n**`Définition`** **Déf. 4: Délégation** : Un mécanisme utilisé pour résoudre une propriété dans la chaîne d'héritage. Le processus se produit lors de l'exécution c'est pourquoi il est également appelé __envoi dynamique__.\n\n\u003e Remarque : par contraste avec l'_envoi statique (“static dispatch”)_ effectué lorsque les références sont résolues au moment de la _compilation_, l'envoi dynamique résout les références à l'_exécution_.\n\nEt si une propriété est finalement pas été trouvé dans la chaîne de prototype, la valeur `undefined` est retournée :\n\n```js\n// Un object « vide ».\nlet empty = {};\n \nconsole.log(\n \n\u0009// retourne une `function`, celle du prototype assigné par défaut.\n\u0009empty.toString,\n   \n\u0009// retourne la valeur `undefined`.\n\u0009empty.x\n \n);\n```\n\nComme on peut le voir, un objet par défaut est en fait _jamais vide_, il hérite toujours de _quelque chose_ de `Object.prototype`. Pour créer un _dictionnaire sans prototype (“prototype-less dictionary”)_, nous devons définir explicitement son prototype à `null` :\n\n```js\n// N'hérite de rien du tout.\nlet dict = Object.create(null);\n \nconsole.log(dict.toString); // Retourne cette fois `undefined`.\n```\n\nLe mécanisme d'_envoi dynamique_ permet la _mutabilité complète_ de la chaîne d'héritage, offrant une capacité de changer l'objet de délégation :\n\n```\nlet protoA = { x: 10 };\nlet protoB = { x: 20 };\n \n// La même chose que `let objectC = { __proto__: protoA };` :\nlet objectC = Object.create(protoA);\nconsole.log(objectC.x); // `10`\n \n// Changer la délégation :\nObject.setPrototypeOf(objectC, protoB);\nconsole.log(objectC.x); // `20`\n```\n\n\u003e Remarque : même si la propriété `__proto__` est standardisée aujourd'hui et est plus facile à utiliser dans une démarche d'explications, en pratique préférez l'utilisation de l'API pour les manipulations de prototypes, comme `Object.create`, `Object.getPrototypeOf`, `Object.setPrototypeOf` et de même avel le module `Reflect`.\n\nAvec l'exemple de `Object.prototype`, on voit que le _même prototype_ peut être partagé entre _plusieurs objets_. L'_héritage de classes_ est implémenté dans ECMAScript sous ce principe. Voyons plus d'exemple, et regardons sous le capot l'abstraction « de classe » en JavaScript.\n\n\n\n\n\n## Classe\n\nLorsque plusieurs objets partagent le même comportement et état initial, ils forment une _classification_.\n\n\u003e **`Définition`** **Déf. 5. Classe** : Une classe est un ensemble abstrait formel qui spécifie l'état initial et le comportement de ses objets.\n\nDans le cas où nous avons besoin de _plusieurs objets_ héritant du même prototype, on pourrait bien sûr créer le prototype en question, et le faire hériter explicitement par les objets nouvellement créés :\n\n```\n// Prototype générique pour toutes les lettres.\nlet letter = {\n\u0009getNumber() {\n\u0009\u0009return this.number;\n\u0009}\n};\n \nlet a = { number: 1, __proto__: letter };\nlet b = { number: 2, __proto__: letter };\n// ...\nlet z = { number: 26, __proto__: letter };\n \nconsole.log(\n\u0009a.getNumber(), // `1`\n\u0009b.getNumber(), // `2`\n\u0009z.getNumber() // `26`\n);\n```\n\nOn peut voir ces relations sur la figure ci-dessous :\n\n\u003cfigure\u003e\n\u003cimg width=\"1205\" height=\"1035\" src=\"http://dmitrysoshnikov.com/wp-content/uploads/2017/11/shared-prototype.png\" alt=\"Figure 3. Un prototype partagé.\" style=\"max-width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003eFigure 3. Un prototype partagé.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nCependant, ceci n'est pas sans _lourdeurs_. C'est exactement à pallier ce problème que sert l'abstraction de classe sert. En tant que _sucre syntaxique_ (c'est-à-dire une construction qui _fait sémantiquement la même chose_, mais dans une _forme syntaxique plus agréable), il permet de créer de tels objets multiples avec un model pratique :\n\n```\nclass Letter {\n\u0009constructor(number) {\n\u0009\u0009this.number = number;\n\u0009}\n \n\u0009getNumber() {\n\u0009\u0009return this.number;\n\u0009}\n}\n \nlet a = new Letter(1);\nlet b = new Letter(2);\n// ...\nlet z = new Letter(26);\n \nconsole.log(\n\u0009a.getNumber(), // `1`\n\u0009b.getNumber(), // `2`\n\u0009z.getNumber() // `26`\n);\n```\n\n\u003e Remarque : l'_héritage de classes_ dans ECMAScript est implémenté par dessus la _délégation basé sur les prototypes_.\n\n\u003e Remarque : une « classe » est juste une _abstraction théorique_. Techniquement, il peut être implémenté avec l'_envoi statique_ en Java ou C++, ou l'_envoi dynamique (délégation)_ comme en JavaScript, Python, Ruby, etc.\n\nTechniquement une « classe » est représentée comme une paire _« fonction constructeur + prototype »_. Ainsi, une fonction constructeur crée des objets et définit _automatiquement_ le _prototype_ de ses instances nouvellement créées. Ce prototype est stocké dans la propriété `\u003cConstructorFunction\u003e.prototype`.\n\n\u003e **`Définition`** **Déf. 6. Constructeur** : Un constructeur est une fonction qui est utilisée pour créer des instances, et associer automatiquement leur prototype.\n\nIl est possible d'utiliser une fonction constructeur explicitement. Avant l'introduction de l'abstraction de classe, les développeurs JavaScript utilisaient cette méthode pour cause de ne pas avoir de meilleure alternative (nous pouvons encore trouver majoritairement ce type de ce code sur le net) :\n\n```\nfunction Letter(number) {\n\u0009this.number = number;\n}\n \nLetter.prototype.getNumber = function() {\n\u0009return this.number;\n};\n \nlet a = new Letter(1);\nlet b = new Letter(2);\n// ...\nlet z = new Letter(26);\n \nconsole.log(\n\u0009a.getNumber(), // `1`\n\u0009b.getNumber(), // `2`\n\u0009z.getNumber() // `26`\n);\n```\n\nBien que la création d'un constructeur à un seul niveau était assez facile, le modèle d'héritage des classes parent nécessitait beaucoup plus. Ce standard est maintenant caché comme un détail d'implémentation mais cela reste exactement ce qui se passe sous le capot lorsque nous créons une classe en JavaScript.\n\n\u003e Remarque : les fonctions constructeurs ne sont que les détails d'implémentation de l'héritage de classes.\n\nVoyons voir les relations des objets et leur classe :\n\n\u003cfigure\u003e\n\u003cimg width=\"1779\" height=\"1035\" src=\"http://dmitrysoshnikov.com/wp-content/uploads/2017/11/js-constructor.png\" alt=\"Figure 4. Un constructeur et la relation entre les objets.\" style=\"max-width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003eFigure 4. Un constructeur et la relation entre les objets.\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nLa figure ci-dessus montre que _chaque objet_ a un prototype associé. Même la fonction constructeur (classe) `Lettre` a son propre prototype, qui est `Function.prototype`. Remarquez que `Letter.prototype` est le prototype des instances de lettre `a`, `b`, et `z`.\n\n\u003e Remarque : le prototype _réel_ de n'_importe quel_ objet est _toujours_ la référence `__proto__`. Et la propriété `prototype` explicite sur la fonction constructeur est juste une référence au prototype de ses _instances_. Du point de vu des intances, cette référence est toujours sous `__proto__`. Voir les détails [ici](https://blog.lesieur.name/les-constructeurs-et-les-prototypes/#propri%C3%A9t%C3%A9s-explicites-prototype-vs-propri%C3%A9t%C3%A9s-implicite-prototype).\n\nVous pouvez trouver une discussion détaillée sur les concepts génériques de la programation orientée objet (y compris une description détaillée de la base de classes, basé sur un prototype, etc.) dans l'article anglais : [ES3. 7.1 OOP: The general theory](http://dmitrysoshnikov.com/ecmascript/chapter-7-1-oop-general-theory/).\n\nMaintenant que nous comprenons les relations fondamentales entre les objets ECMAScript, nous allons regarder de plus prêt le _système d'exécution_ JavaScript. Comme nous le verrons, presque tout peut aussi être présenté comme un objet.\n\n\n\n\n\n## Contexte d'exécution\n\nPour exécuter du code JavaScript et tracer ces évaluations à l'exécution, les spécifications ECMAScript définissent le concepte de _contexte d'exécution_. Ces contextes d'exécution sont maintenus à l'aide d'une _pile_ (la _pile des contextes d'exécution_ comme nous le verrons bientôt), qui correspond au concept générique de _pile d'appel_.\n\n\u003e **`Définition`** **Déf. 6. Contexte d'exécution** : Un _contexte d'exécution_ est un dispositif qui est utilisé pour suivre l'évaluation de l'exécution du code.\n\nIl existe plusieurs types de code ECMAScript : le _code global_, le _code de fonction_, le _code d'évaluation intégrée_ `eval` et le _code de module_ ; chaque code est évalué dans son contexte d'exécution. Les différents types de code et leurs objets respectifs peuvent affecter la structure d'un contexte d'exécution : par exemple, les _fonctions de générateur_ enregistrent leur _objet générateur_ dans le contexte.\n\nConsidérons un appel de fonction récursif :\n\n```\nfunction recursive(flag) {\n \n\u0009// Condition de sortie.\n\u0009if (flag === 2) {\n\u0009\u0009return;\n\u0009}\n \n\u0009// Appel récursif.\n\u0009recursive(++flag);\n}\n \n// Go.\nrecursive(0);\n```","urn":"au-coeur-du-javascript-seconde-edition","__v":0,"description":"Au cœur du JavaScript — Édition ES2017+","image":"","script":"","stylesheet":""}
{"_id":{"$oid":"601fb7ca7ef08e7eca32596e"},"dates":{"updated":[],"published":{"$date":"2021-02-07T09:50:00.000Z"}},"cache":{"comment":{"number":0}},"others":{"markdown":true,"published":true},"categories":[{"$oid":"5310456355dfd5f7698d48cd"},{"$oid":"5310456355dfd5f7698d48ca"},{"$oid":"5310456355dfd5f7698d48ba"},{"$oid":"5310456355dfd5f7698d48b8"},{"$oid":"58d68584389fd824fd7cf278"}],"title":"Expression versus structure de contrôle en JavaScript","content":"Cet article de blog se penche sur une distinction syntaxique qui est malheureusement assez importante en JavaScript : la différence entre les *expressions* et les *structures de contrôle* (aussi appelées, dans certains cas, *déclarations*).\n\n\u003cfigure\u003e\n\u003cimg width=\"502\" height=\"600\" src=\"https://blog.lesieur.name/media/images/upload/expression-vs-statement.jpg\" alt=\"Expression versus structure de contrôle en JavaScript\" style=\"max-width: 100%;height: auto;border: 1px solid rgba(39,41,43,.15)\"\u003e\n\u003c/figure\u003e\n\n\n\n\n\n## Expressions et structures de contrôle\n\nLe JavaScript est composé d'une suite d'instruction que l'on distingue en deux groupes : les *expressions* et les *structures de contrôle* (« *statements* »).\n\n### Les expressions\n\nUne expression produit une valeur et peut être écrite partout où une valeur est attendue (par exemple en tant qu'argument dans un appel de fonction). Chacune des lignes suivantes contient une expression :\n\n```js\n\u003e  /**\n    * Accès explicite à une propriété\n    * de l'objet global inexistante\n    */\n   window.globalAttribute // Expression\n\u003c· undefined // Résultat de type `undefined`\n```\n\n```js\n\u003e  /**\n    * Affectation d'une valeur dans une\n    * propriété implicite de l'objet global\n    */\n   globalAttribute = 7 // Expression\n\u003c· 7 // Résultat de type `number`\n```\n\n```js\n\u003e  /**\n    * Accès implicite à une propriété\n    * de l'objet global\n    */\n   globalAttribute // Expression\n\u003c· 7 // Résultat de type `number`\n```\n\n```js\n\u003e  /**\n    * opération arithmétique avec\n    * l'opérateur binaire d'addition\n    */\n   3 + globalAttribute // Expression\n\u003c· 10 // Résultat de type `number`\n```\n\n```js\n\u003e  /**\n    * Exécution d'une fonction\n    * (méthode de l'objet global)\n    */\n   parseInt('14', 10) // Expression\n\u003c· 14 // Résultat de type `number`\n```\n\nUne expression est composée d'une suite d'opérandes et d'opérateurs qui produisent une valeur. Il existent des opérateurs unaires (`+`, `.`, `,`, etc.), qui se placent en amont ou après une opérande, des opérateurs binaires (`+`, `-`, `*`, `/`, etc.) qui s'entercalent entre deux opérandes et même un opérateur ternaires (`?—:`) qui en se basant sur une première opérande, permet d'en retourner une parmi deux autres. Elles ont des rôles divers et variés tel que l'affectation, la comparaison, l'arithmétique, la logique, la condition, le relationnel, etc.\n\n\n\n### Les structures de contrôle\n\nUne structure de contrôle réalise une action.\n\nLa structure de contrôle de base est une simple instruction qui contient une unique expression (« expression statement ») et qui a pour action de l'analyser. Elle est implicite quand aucune autre structure de contrôle est utilisée ou est explicite quand elle se termine par le caractère `;`.\n\nLes autres structures de contrôle produisent d'autres actions comme :\n\n- les structures conditionnelles (`if`, `if–else if—else`, `switch`, …) qui sélectionnent les instructions,\n- les structures itératives (`while`, `do–while`, `for`, …) qui bouclent sur des mêmes instructions,\n- les déclarations de fonction qui groupent des instructions pour un usage ultérieur,\n- les déclarations de variables/constantes qui stoquent des valeurs finales d'expression ou\n- les simples blocs qui isôlent les comportements d'autres structures ou permettent d'atribuer des étiquettes aux expressions.\n\nUn programme est essentiellement une séquence de stucture de contrôle pilotant l'ordre dans lequel les expressions seront exécutées : on nomme cela le flux de contrôle. Partout où le JavaScript attend une structure de contrôle, vous pouvez écrire à la place une expression (elle sera prise en charge par la structure de contrôle d'analyse d'expression). L'inverse n'est cependant pas possible : vous ne pouvez pas écrire une structure de contrôle là où le JavaScript attend obligatoirement une expression. Par exemple, une structure conditionnelle `if`, ne peut pas devenir l'argument d'une fonction.\n\n\n\n\n\n## Contrôle de flux\n\nLa différence entre les structures de contrôle et les expressions devient plus claire si nous examinons la syntaxe des deux catégories pour produire un flux de contrôle similaire. Effectivement, les opérateurs des expressions permettent également de contrôler le flux de donnée.\n\n### `if—else` versus `?—:`\n\nVoici l'exemple de la structure de contrôle conditionnelle `if—else` :\n\n```js\n\u003e  /**\n    * Structure de contrôle conditionnelle `if—else`\n    */\n   if ('0' === 0) {\n      'évalué à vrai' // Expression\n   } else {\n      'évalué à faux' // Expression\n   }\n\u003c· \"évalué à faux\" // Résultat de type `string`, retourne la valeur de la dernière expression exécutée par le contrôle de flux\n```\n\ndont une équivalence sous forme d'expression, appelée opérateur ternaire conditionnel donne :\n\n```js\n\u003e  /**\n    * Expression avec opérateur ternaire conditionnelle\n    */\n\u003e  '0' === 0 ? 'évalué à vrai' : 'évalué à faux' // Expression\n\u003c· \"évalué à faux\" // Résultat de type `string`\n```\n\n### Point-virgule versus virgule\n\nEn JavaScript, la structure de contrôle d'analyse d'expression utilise le point-virgule pour explicitement indiquer la fin de l'expression courante. Il sépare ainsi l'analyse de deux expressions.\n\n```js\n\u003e  /**\n    * Structure de contrôle d'analyse\n    * d'expression explicite suivi d'une\n    * analyse d'expression implicite\n    */\n\u003e  parseInt('4', 10); parseInt('voiture', 10)\n\u003c· NaN // Résultat de type `number`, retourne la valeur de la dernière expression exécutée par le contrôle de flux\n```\n\ndont une équivalence est l'opérateur binaire évaluant en une seule expression chaque partie de part et d'autre du caractère `,` et ne retourne que la valeur de la dernière partie :\n\n```js\n\u003e  /**\n    * Expression avec opérateur binaire virgule\n    */\n\u003e  parseInt('4', 10), parseInt('voiture', 10)\n\u003c· NaN // Résultat de type `number`, retourne la valeur de la dernière partie\n```\n\n\n\n\n\n## Syntaxe identique\n\nCertaines expressions ressemblent à des structures de contrôle alors qu'en réalité elles n'en sont pas. Nous examinerons pourquoi cela pose problème à la fin de cette section.\n\n### Objets littéraux versus blocs\n\nLe code suivant, s'il est interprété à un endroit ou seule une expression est attendue, est un objet littéral qui est une expression parfaitement légale :\n\n```js\n\u003e  /**\n    * Expression de déclaration d'un\n    * objet littéral\n    */\n   (   // Une expression est attendue après cette position\n       {\n           expected: parseInt('3', 10)\n       }\n   )\n\u003c· {expected: 3} // Résultat de type `object`\n```\n\nCependant, c'est aussi une structure de contrôle parfaitement légale :\n\n```js\n\u003e  /**\n    * Contrôle de flux de type bloc\n    */\n   {   // Une structure de contrôle est attendue après cette position\n       {\n           unexpected: parseInt('3', 10)\n       }\n   }\n\u003c· 3 // Résultat de type `number`, le label est ignoré\n```\n\navec ces éléments :\n\n- un bloc, qui est une structure de contrôle avec des accolades ;\n- une étiquette, que vous pouvez placer devant n'importe quelle structure de contrôle. Ici, l'étiquette est `unexpected` ;\n- une structure de contrôle d'analyse d'expression : ici l'appel de fonction `parseInt('3', 10)`.\n\nC'est cette ambuiguité d'usage des parenthèses à une place ou structure de contrôle ou expression sont autorisées qui peut mener à des résultats contre intuitifs tel que :\n\n```js\n\u003e  /**\n    * Expression de création de tableau\n    * avec opérateur binaire de concaténation\n    * sur une création d'objet\n    */\n\u003e  [] + {}\n\u003c· \"[object Object]\" // Résultat de type `string`\n```\n\nmais\n\n```js\n\u003e  /**\n    * Structure de contrôle de type bloc\n    * puis expression avec opérateur du plus\n    * unaire de coercition sur une création de\n    * tableau\n    */\n\u003e  {} + []\n\u003c· 0 // Résultat de type `number`\n```\n\nPour bien comprendre les deux exemples précédents, voici ce qu'il se produit.\n\n\u003e Dans le cas de `[] + {}`, la totalité de la ligne est traitée comme une expression. Nous avons donc ici à faire à deux objets (`typeof []` retourne `object` et `typeof {}` retourne `object`) : le premier est un tableau (`[] instanceof Array` retourne `true`) et le second est un simple objet (`({}) instanceof Array` retourne `false`). Dans cet exemple, l'expression est traitée comme suit : *opérande opérateur opérande*. Or l'opérateur de concaténation binaire `+` réclame de part et d'autre un type `string`. Le moteur JavaScript va donc faire appel au mécanisme de coercition de type implicite pour transformer le tableau en `string` (l'équivalent de `[]` de type `object` en `string` est la chaine de caractères vide `\"\"`) et l'objet en `string` (l'équivalent de `{}` de type `object` en `string` est la chaine de caractères `\"[object Object]\"`). Cela est donc équivalent à demander `\"\" + \"[object Object]\"` aboutissant à la valeur de retour `\"[object Object]\"`.\n\n\u003e Dans le cas de `{} + []`, on a ici la partie `{}` qui est traitée comme une structure de contrôle de type bloc qui ne possède ni étiquette, ni instruction : cela ne produira rien. Puis vient la partie `+ []` qui est traitée comme l'expression *opérateur opérande*. Or l'opérateur de coercition unaire `+` réclame à sa droite une valeur de type `number`. Le moteur JavaScript va donc faire appel au mécanisme de coercition de type implicite pour transformer le tableau en `number` (l'équivalent de `[]` de type `object` en `number` est la valeur numérique `0`). Cela est donc équivalent à demander `+ 0` aboutissant à la valeur de retour `0`.\n\nLe JavaScript a des stuctures de contrôle de type bloc. Vous serez peut-être surpris d'apprendre que le JavaScript comporte des blocs qui peuvent exister seuls (par opposition aux structures de boucle ou de condition). Les codes suivants illustrent des cas d'utilisation de ces blocs.\n\nVous pouvez leur donner une étiquette et les séparer :\n\n```js\n\u003e  /**\n    * Structure de contrôle de\n    * type déclaration de fonction\n    * avec définition utilisant une\n    * étiquette\n    */\n   function test(printTwo) {\n       printing: {\n           console.log('One');\n           if (!printTwo) break printing;\n           console.log('Two');\n       }\n       console.log('Three');\n    }\n\u003c· undefined // Résultat de type `undefined`\n```\n\nque l'on peut utiliser comme suit\n\n```js\n\u003e  test(false)\n\u003c  One\n\u003c  Three\n\u003c· undefined // Résultat de type `undefined`\n```\n\nou comme suit\n\n```js\n\u003e  test(true)\n\u003c  One\n\u003c  Two\n\u003c  Three\n\u003c· undefined // Résultat de type `undefined`\n```\n\nVous pouvez également isoler la portée d'une variable :\n\n```js\n\u003e  /**\n    * Structure de contrôle de\n    * type déclaration de fonction\n    * avec définition utilisant une\n    * étiquette\n    */\n   {\n       var external = 'external'\n       let internal = 'internal'\n   }\n\n   external // Retourne `'external'`\n   internal // Error\n\u003c· « ReferenceError : internal n'est pas défini »\n```\n\n\n\n### Déclaration de fonction versus expression de fonction\n\nQuand une fonction est déclarée dans un endroit ou une structule de contrôle est attendue, la déclaration de cette fonction est elle-même une structure de contrôle. Elle ne retourne donc aucune valeur et est ajoutée à son objet d'activation lors de la phase d'entrée dans la fonction parent. Il en résulte donc que lors de l'excécution de sa fonction parente, une fonction déclarée plus tard peut-être exécutée avant.\n\n```js\n\u003e  /**\n    * Expression de type\n    * exécution de fonction\n    */\n   predestination() // Aucune erreur car cette fonction existe bien dans l'objet des variables\n\n   /**\n    * Structure de contrôle de\n    * type déclaration de fonction\n    */\n   function predestination() {}\n\u003c· undefined // Résultat de type `undefined`\n```\n\nCependant, quand une expression de fonction est utilisée dans un endroit ou une expression est attendue, celle-ci se retourne elle-même comme valeur, prête à être exécutée.\n\n```js\n\u003e  /**\n    * Expression de type\n    * déclaration de fonction\n    */\n   (   // Une expression est attendue après cette position\n       function () {}\n   )\n\u003c· ƒ () {} // Résultat de type `function`, valeur retournée par l'opérateur de groupement de l'expression\n```\n\nAussi on peut exécuté le code immédiatement puisqu'une valeur est retournée\n\n```js\n\u003e  (\n       function () {}\n   )() // Opérateur d'exécution de fonction\n\u003c· undefined // Résultat de type `undefined`, valeur retournée par la fonction exécutée de l'expression\n```\n\nIl est également possible de créer des expressions de fonction nommée en attribuant un nom facultatif qui pourra servir en interne seulement :\n\n```js\n\u003e  var external = function internal(x) {\n       // L'expression de fonction \n       // est accessible via son nom `internal`\n       return x \u003c= 1 ? 1 : x * internal(x - 1) \n   }\n\n   // L'expression de fonction est\n   // accessible via sa variable `external`\n   external(10)\n\n   // L'expression de fonction n'est pas\n   // accessible via son nom `internal`\n   internal(10)\n\u003c· « ReferenceError : internal n'est pas défini »\n```\n\nLa syntaxe d'une expression de fonction nommée (une expression) est indicernable d'une déclaration de fonction (une structure de contrôle). Mais leurs effets sont différents : une expression de fonction produit une valeur (la fonction elle-même). Une déclaration de fonction conduit à une action, la création d'une variable stockée dans l'objet d'activation dont la valeur est la fonction elle-même. En outre, seule une expression de fonction peut être immédiatement invoquée, mais pas une déclaration de fonction.\n\n\n\n\n\n## L'ambuïguité des `{ }`\n\nNous avons vu que certaines expressions sont indicernables des structures de contrôle. Cela signifie que le même code fonctionne différemment selon qu'il apparaît dans un contexte d'expression ou dans un contexte de structure de contrôle. Normalement, les deux contextes sont clairement séparés.\n\nCependant, dans le cas des structures de contrôle d'analyse d'expression (« *expression statements* »), il y a un chevauchement puisque les expressions apparaissent là où une structure de contrôle est également possible. Afin d'éviter toute ambiguïtée, la grammaire JavaScript interdit aux expressions de commencer par une accolade ou par le mot-clé `function` là où une structure de contrôle est possible :\n\n*Pseudo-code*\n\n```js\nExpressionStatement : // Là où une structure de contrôle est possible...\n    [lookahead ∉ {\"{\", \"function\"}] Expression ; // ...une expression ne peut pas commencer par `{` ou `function`\n```\n\nAlors que faire si vous voulez écrire une expression qui commence par l'un de ces deux caractères à une telle position ? Vous pouvez utiliser l'opérateur de groupement `( )`, ce qui ne change pas son résultat, mais garantit qu'il apparaît dans un contexte ou seule les expressions sont autorisées. Examinons deux exemples : les codes d'évaluation intégrée `eval` et les expressions de fonction immédiatement invoquée.\n\n\u003e Note : cette règle s'applique uniquement pour \"function\" mais pas pour \"{\" dans la console JavaScript des navigateurs dans le contexte global.\n\u003e\n\u003e ```js\n\u003e \u003e  {} + {}\n\u003e \u003c· \"[object Object][object Object]\" // Résultat de type `string`\n\u003e ```\n\u003e mais\n\u003e ```js\n\u003e \u003e  eval('{} + {}')\n\u003e \u003c· NaN // Résultat de type `number`\n\u003e ```\n\n\n\n### Codes d'évaluation intégrée\n\n`eval` analyse son argument dans un contexte de structure de contrôle sans ambuguïté : il analyse donc prioritairement le code commençant par `{` ou `function` comme une structure de contrôle de type bloc ou déclaration de fonction. Si vous voulez que `eval` renvoi un objet, vous devez utiliser (par exemple) l'opérateur de groupement autour d'un objet littéral.\n\n```js\n\u003e  /**\n    * Évaluer comme la structure\n    * de contrôle de type bloc\n    * avec le label `example`\n    */\n   eval(\"{ example: 123 }\")\n\u003c· 123 // Résultat de type `number`\n```\n\nmais\n\n```js\n\u003e  /**\n    * Évaluer comme une\n    * expression contenant\n    * un objet littéral\n    */\n   eval('({ example: 123 })')\n\u003c· {example: 123} // Résultat de type `object`\n```\n\nD'autres opérateurs peuvent forcer le moteur JavaScript à lever l'ambuïguité entre expression et structure de contrôle. Voyez plus loin.\n\n\n\n### Expressions de fonction immédiatement invoquée\n\nNous avons vu plus avant que les expressions de fonction pouvaient être invoquées directement. Entrons un peu plus dans les détails ici.\n\n```js\n\u003e  /**\n    * Expression de fonction\n    * immédiatement invoquée\n    */\n   (function () { return 'abc' }())\n\u003c· \"abc\" // Résultat de type `string`\n```\n\nSi vous omettez les parenthèses, vous obtenez une erreur de syntaxe :\n\n```js\n\u003e  /**\n    * Déclaration de fonction\n    * sans nom (erreur)\n    */\n   function () { return 'abc' }()\n\u003c· « Uncaught SyntaxError : les déclarations de fonction nécessitent un nom de fonction »\n```\n\nSi vous ajoutez un nom, vous obtenez également une erreur de syntaxe :\n\n```js\n\u003e  /**\n    * Déclaration de fonction\n    * immédiatement invoquée (erreur)\n    */\n   function foo() { return 'abc' }()\n\u003c· « Uncaught SyntaxError : caractère ')' non attendu »\n```\n\nUne autre façon de garantir qu'une expression est analysée dans un contexte d'expression est d'utiliser un opérateur unaire tel que `+` ou `!` qui force l'analyse en tant qu'expression. Mais, contrairement aux parenthèses, ces opérateurs modifient la valeur retournée par l'expression (ce qui n'est pas grave, si vous n'en avez pas besoin) :\n\n```js\n\u003e  /**\n    * Expression de fonction\n    * immédiatement invoquée avec\n    * opérateur `+` unaire\n    */\n   +function () { return 'Hello' }()\n\u003c· NaN // Résultat de type `number`\n```\n\n`NaN` est la coercition de l'utilisation du `+` unaire sur une `string` qui ne représente aucun nombre (ici `'Hello'`). Un autre opérateur utilisable pourrait également être l'opérateur `void`, qui force l'expression à renvoyer la valeur `undefined` dans tous les cas.\n\n```js\n\u003e  /**\n    * Expression de fonction\n    * immédiatement invoquée avec\n    * opérateur `void`\n    */\n   void function () { return 'Hello' }()\n\u003c· undefined // Résultat de type `undefined`\n```\n\nVous trouverez plus d'explications sur les expressions de fonction immédiatement invoquée dans ce billet sur [les fonctions](https://blog.lesieur.name/les-fonctions/).\n\n\n\n### Concaténation\n\nSoyez méfiant avec l'utilisation des opérateurs de groupement `( )` et les expressions de fonction. Regardez cette exemple avec deux expressions de fonction immédiatement invoquée.\n\n```js\n\u003e  /**\n    * Plusieurs expressions de fonction\n    * immédiatement invoquée\n    */\n   (function () {}())\n   (function () {}())\n\u003c· « TypeError: `undefined` n'est pas une fonction »\n```\n\nCe code produit une erreur, car le moteur JavaScript interprète la seconde ligne comme une tentative d'exécution de la valeur retournée par la première ligne (qui est une fonction) avec un opérateur `()` d'exécution de fonction à qui on aurait passé en argument une expression de fonction.\n\nLa solution consiste alors à ajouter un point-virgule pour séparer les deux expressions :\n\n```js\n\u003e  /**\n    * Plusieurs expressions de fonction\n    * immédiatement invoquée\n    */\n   (function () {}());\n   (function () {}())\n\u003c· undefined // Résultat de type `undefined`\n```\n\nUne autre solution consiste à utiliser des opérateurs qui lève l'anbuguïté comme `,` ou `void` :\n\n```js\n\u003e  /**\n    * Plusieurs expressions de fonction\n    * immédiatement invoquée\n    */\n   void function () {}()\n   void function () {}()\n\u003c· undefined // Résultat de type `undefined`\n```\n\nDans ce cas, le JavaScript se comporte « comme si » un point-virgule avait implicitement été utilisé car `void` n'est pas un élément valide pour une structure de contrôle et commence nécessairement une expression.\n\n```js\n\u003e  /**\n    * Expression de plusieurs fonctions\n    * immédiatement invoquées\n    */\n   0,\n   function () {}(),\n   function () {}()\n\u003c· undefined // Résultat de type `undefined`\n```\n\nNotez également que `0` peut être remplacé par n'importe quel opérande valide (`null`, `undefined`, `'Ici commence mes exécutions de fonctions'`, etc.)\n\n\n\n\n## Mot de la fin\n\nJ'espère que cet article vous aura aidé à comprendre quelque comportement mal compris de JavaScript et que cela sera plus clair pour vous. N'hésitez pas à partager vos techniques pour lever les ambuguïtés d'interprétation entre expression et structure de contrôle en commentaire !\n\nCet article s'inspire de [ce billet anglais](https://2ality.com/2012/09/expressions-vs-statements.html) qui aura servi de plan pour exposer les différences entre structures de contrôle et expressions. Tout en étant plus étoffé, le présent article n'en est pas à proprement une traduction.","urn":"expression-versus-structure-de-controle-en-javascript","__v":0,"description":"Cet article de blog se penche sur une distinction syntaxique qui est malheureusement assez importante en JavaScript : la différence entre les expressions et les structures de contrôle.","image":"https://blog.lesieur.name/media/images/upload/expression-vs-statement.jpg","script":"","stylesheet":""}
{"_id":{"$oid":"605afebe7ef08e7eca325970"},"dates":{"updated":[],"published":{"$date":"2021-03-24T08:56:00.000Z"}},"cache":{"comment":{"number":0}},"others":{"markdown":true,"published":true},"categories":[{"$oid":"5b2e23d9c2bdd105cdf6709f"},{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48bd"},{"$oid":"5310456355dfd5f7698d48cb"}],"title":"Introduction à l'alternative sceptique • Méthode Z","content":"Les médias traditionnels comme les médias alternatifs déçoivent par leur manque de fiabilité. Et s'il existait une 3ème alternative ?\n\n\u003e Suivez cette série proposée par [Mr. Sam - Point d'interrogation\n](https://www.youtube.com/channel/UCh2YBKhYIy-_LtfCIn2Jycg) dédiée aux scepticismes et découvrez la Méthode Z !\n\n\u003cfigure\u003e\n\u003cimg width=\"850\" height=\"480\" src=\"https://skeptikon.fr/lazy-static/previews/d9c06887-cc1b-4e02-ac79-8d7b32e99146.jpg\" alt=\"C'est quoi la communauté sceptique ?\" style=\"max-width: 850px; width: 80%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eC'est quoi la communauté sceptique ? \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003cbr\u003e« Pas sûr que j'en sois assez sûr. »\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n\n\n## Regarder la vidéo hébergée sur Skeptikón\n\n\u003cdiv class=\"video\"\u003e\n\u0009\u003ciframe width=\"560\" height=\"315\" sandbox=\"allow-same-origin allow-scripts allow-popups\" src=\"https://skeptikon.fr/videos/embed/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\nVous pouvez directement accéder à cette vidéo sur [PeerTube](https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146) ou alternativement [ici](https://www.youtube.com/watch?v=g7m5-auOUDM).\n\n\n\n\n\n## Lire la transcription de l'épisode 1 de la Méthode Z\n\n### Intro\n\n« — _La communauté sceptique désigne l'ensemble des personnes partageant les mêmes préceptes issues de la Zététique, une discipline qui se définie comme étant l'art du doute. Cela consiste à douter de tout et à rejeter les informations qui n'ont pas été prouvées scientifiquement ainsi qu'à favoriser les informations officielles quand elles n'ont pas été démontrées fausses._\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/HM4561ZenssV1Z4sXI/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n— Oh, tu me fais marcher là ?\n\n— _Non._\n\n— Non ? Beh, mais, mais toi non. Vraiment, Non. Non.\n\n— _Veuillez préciser ?_\n\n— Beh, art du doute ? Prouver scientifiquement ? Informations officielles ? On fout ce qu'on veut là dedans. Y a rien qui va dans ta phrase !\n\n— _Donc, non ?_\n\n— Voilà ! Comme quand c'est oui. Sauf que c'est non. »\n\n\u003cfigure\u003e\n\u003cimg width=\"1784\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z.jpg\" alt=\"La Méthode Z\" style=\"max-width: 1784px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eLa Méthode Z \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### État des lieux\n\nLes grands médias et les gouvernements ont perdus la confiance de beaucoup de gens. Conflits d'intérêts, informations partiales, tronquées ; quand c'est pas complètement fausses. Inconsistence et incohérances dans les discours et les prises de décisions. Alors de façon parfaitement sensée, les gens —et c'est peut-être de vous que je parle— se sont tournées vers les paroles libres, qui —même si elles sont moins professionnelles— ne sont pas embourbées dans ses sacs de nœuds de suspission tout azimut comme peuvent l'être les grands médias et les communications gouvernementales.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/7UOeKs8fRJ4uSuUJsp/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nProblème ? C'est lieux de paroles libres —les médias alternatifs— sont un refuge idéal pour tous les afabulateurs en manque de tribunes. Ajoutez à cela une majorité d'orateurs sincèrement bien intentionnés et convainquants —mais pas aussi bien renseignés qu'ils le laissent entendre—, et vous vous retrouvez avec une parole, certe libre, mais truffée d'informations qui ne survivent pas à une vérification rigoureuse.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/lCtDlJeMsExgddUVns/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nAutrement dit, vous vous retrouvez avec le choix entre de l'info potentiellement manipulée par les puissants ou des réseaux truffés de fake news et d'hypothèses complotistes. En 2021, il est extrêmement difficile de savoir à quel saint se vouer.\n\n\u003e Mais il existe une troisième alternative.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/Ls7jPC3uxL9aBCmWR3/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nC'est pourquoi je vous propose de rejoindre la communauté sceptique qui dit toujours la vérité. Haha... non, je déconne. Nan mais vraiment, y a vraiment des sceptiques qui pensent ça, et donc, là aussi, on va faire un petit peu de nettoyage.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/12gKbgppLO3bBeAsCW/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nD'un côté comme de l'autre, on comprend assez mal ce que sont censés être les sceptiques. Oui, parce que —comme je viens de le dire— même les sceptiques comprennent mal ce qu'ils sont censés être. De nombreux média traditionnelles nous prennent pour des sous-journalistes qui s'amusent à enquêter sur « Vikipedia ». Et de nombreux média alternatifs nous prennent pour des agents de la pensée unique au service des industriels.\n\n\u003e [Genre] « — Chacun de nous contribue à la réussie de l'entreprise. »\n\nPourquoi ? Et bien parce qu'en fait, on est d'accord ni avec l'un, ni avec l'autre. Dans le scepticisme, on ne choisit __pas__ une source en qui on va avoir confiance par défaut. On écoute un maximum de sources et d'opinions, quelque soit leurs provenances. Et puis, on pèse la valeur de l'information en fonction de la robustesse des raisons d'y croire qui nous sont présentés.\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-source-methode-prudence.jpg\" alt=\"Source, Méthode, Prudence\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eSource, Méthode, Prudence \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nLes sources, la méthode employée, le niveau de prudence. etc. Ça a l'air simple dit comme ça, mais avec un peu de contexte c'est ce qui conduit à l'existence d'une bonnes vingtaines de chaines YouTube sur le sujet, avec des centaines de vidéos. Et des blogs, plein de blogs. Et une communauté tout autour.\n\n\u003e La communauté sceptique !\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/PqXsOOK6Brd8ELksEr/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nAlors si vous aussi, vous vous êtes fait avoir par des grands médias peu scrupuleux, des théories du complots, des beaux parleurs charlatants, des politiciens contradictoires, des croyances irrationnelles ou même, la publicité...\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/pmNnEvRZsGcgBXdyjV/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\u003e Vous êtes au bon endroit !\n\nVous vous êtes déjà demandé pourquoi vous ou un proche tombez encore et encore dans les mêmes pièges, alors que vous pensiez que la leçon était apprise ?\n\n\u003e Vous n'êtes pas seul !\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/Y0TllNtKlfzqLVcA3V/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nLa communauté sceptique, c'est __LA__ communauté des gens qui s'intéressent au scepticisme : c'est à dire « quand », « comment » et « pourquoi » il convient de « douter » ou de « croire ».\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-quand-comment-pourquoi-douter-croire.jpg\" alt=\"Quand • Comment • Pourquoi Douter / Croire\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eQuand • Comment • Pourquoi\u003cbr\u003eDouter / Croire \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### Définition de ce qu'est la communauté sceptique\n\nOuais, bon ok. Avec un peu plus de subtilité, je dirais que c'est la communauté des gens qui s'intéressent en priorité à la solidité des raisons de croire ou de ne pas croire en quelque chose. C'est pas la même chose hein : le sujet, et la solidité des raisons d'y croire.\n\nSi on y réfléchi un peu, bah, tout ça ne peut que conduire de nombreux sceptiques à parfois défendre des positions plutôt impopulaires, parce qu'en fait, elles sont juste mal documentés auprès du grand public. Alors que l'objectif, beh, c'est comme pour la plupard des gens. C'est juste : faire le bien, sauver des vies, être progressiste, etc. Mais ça rend pas très populaire d'expliquer aux gens que les raisons pour lesquels ils militent pour un truc qui leur tiens à cœur reposent sur des fakes news, des infos imcompletes ou fausse.\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-une-affirmation-vs-les-raisons-d-y-croire.jpg\" alt=\"Une affirmation vs les raisons d'y croire\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eUne affirmation vs les raisons d'y croire \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### Le sceptique idéal\n\nLe sceptique idéal —qui se demande si le médicament « Bobotamal » est efficace— n'aura pas comme premier réflexe de demander à son voisin s'il en est satisfait. Parce que son voisin peut tout à fait être sincèrement satisfait d'une fausse thérapie chelou genre un grigri. Et donc, bah c'est pas un argument super solide. Le sceptique idéal est censé chercher les meilleurs arguments. Et s'il n'en trouve pas après avoir bien cherché : il a de très bonnes raisons d'ajouter son curseur sur « peu crédible ».\n\n« — _Le Bobotamal marche sur moi, donc je sais que c'est efficace._\n\n— Oui mais [il faut également savoir que]\n\n— _Les grigris marchent sur moi, donc je sais que c'est efficace._\n\n— ... Allez. Ffft, ffft, dégage... »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/CrfLUrLONUntMenAbl/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\u003e Conclusion : me dire qu'un remède marche sur sois, donc c'est efficace, n'est pas une raison suffisante pour que j'augmente significativement ma croyance au remède.\n\nBon, alors du moins, cette analyse des raisons de croire quelque chose, est censé être le « goal » de cette commu : pas toujours atteint. Mais ça, on va en reparler.\n\n\n\n### Les dangers de la méthode populaire\n\nDans le quotidien, on croise une majorité de gens qui pensent que c'est leur expérience combiné à leur intuition qui permet de moins se faire pigeonné que les autres. Et en général cette expérience et intuition leur fait plutôt confondre une information solide avec une information populaire. Mais en gros, la plupart des gens se demandent « qui » croire avant de se demander « que » croire. Même moi, je le fais. Et c'est bien normal. On en reparlera : on ne peut pas être expert en tout. Mais ma petite trousse sceptique me permet quand même d'avoir rapidement et simplement d'autres éléments pour juger de la pertinence d'une information.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/jsxVSg5D00t0AqN0xk/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Les informations contrôlées (illustration)\n\nEt il n'y a pas que la recherche du meilleur expert ou du meilleur site à croire, hein. Par exemple, accrochez-vous bien parce que ma phrase va être un petit peu compliquée :\n\n« — Nous avons “spontanément tendance” à accorder “moins de confiance” aux informations en fonction de la “probabilité” que ces informations soient “contrôlées”.\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-confiance-aux-informations-potentiellement-controlees.jpg\" alt=\"Moins de confiance aux informations potentiellement contrôlées\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eMoins de confiance aux informations potentiellement contrôlées \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nVoilà. Maintenant je mets un petit dessin. Voilà. On comprend mieux.\n\nEt maintenant je mange une pomme. Parce qu'elle était là. Elle me faisait envie. C'est bon. »\n\nLes avis sur Tripadvisor, par exemple, vous paraitront plus crédibles que les avis sur le site web du même restaurant, parce que le restorateur à moins de contrôle sur les avis qui sont sur Tripadvisor que sur les avis qu'il y a sur son site web. Alors ; c'est pas idiot comme raisonnement bien sûr. Mais en vrai, c'est pas parce que je tape mon commentaire sur Tripadvisor ou sur le site du resto que mon commentaire est soudainement plus ou moins fiable.\n\n\n\n### Quand on ne connait pas l'autodéfense intellectuelle\n\nQuand on ne sait pas qu'il existe d'autres méthodes diablement plus fiables, ou qu'on croit qu'on les connait mais quand fait, on les connait mal : on est bien souvent —et bien malgré soit— une véritable passoir à mauvaises interprétations, à fakes news, à théories fumeuses ou pour utiliser le terme spécifique employé dans la communauté sceptique : « À caca de taureau ».\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/6RLZcSm16UVoR2sv0X/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nLa communauté sceptique, c'est l'ensemble des gens qui s'intéressent aux techniques, aux méthodes, aux astuces qui permettent de pratiquer ce qu'on appel :\n\n\u003e l'autodéfense intellectuelle.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/od005SDBDUA8abWNsC/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nMais ce mot, sceptique, il veut dire quoi, en fait ?\n\n\n\n### Vrai et faux sceptique ?\n\nQu'est-ce qui me permet de dire que quelqu'un qui croit aux théories du complot sur le 11 septembre n'est pas un sceptique, et que quelqu'un qui croit la version officielle sur le 11 septembre, est un sceptique ? Je veux dire : les deux sont pourtant bel et bien sceptique d'une version de l'histoire ? Ceux qui croient que Bush a commandité les attentats sont les sceptiques de la version officielle, tandis que ceux qui croient que Ben Laden a commanditer les attentats sont les sceptiques de la théorie du complot ?\n\nIl y aurait des faux sceptiques ? Et des vrais sceptiques ?\n\n« — _Et des fausses sceptiques, haha._ »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/tEDqtdP5CRtZPjxYyb/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Les sceptiques sur les réseaux sociaux\n\nLes sceptiques —comme toutes les communautés millitants pour plus de quelque chose et moins de ceci et cela— sont hélas représentés par leurs membres les plus taquins sur les réseaux sociaux, dans les grands médias, etc, etc ; les plus affirmatifs et les plus sûr d'eux quand ils déclament une vérité ; les plus donneurs de leçons, ceux qui savent exactement ce que les autres ferraient mieux de penser, etc, etc. Un petit peu comme les fans de Star Wars.\n\n« — _Ou comme toi ?_ »\n\nEt bon, avouons que cette attitude communautaire de sceptiques extrémistes plein de certitudes qui rejettent toutes les idées alternatives d'un bloc, en se moquant de ses opposants, et beh, on l'a pas volé. Pour une communauté qui s'intéresse aux problèmes de nos certitudes mals fondées, vu l'attitude de certain, bah, ça fait pas très cohérant.\n\n« — _Comme Star Wars._\n\n— Là, oui, là oui. Là. Là d'accord oui. »\n\n\u003e Alors du coup, on va tout de suite oublier cette partie désagréable de la commu sceptique et se focaliser sur ce qu'elle a de bon à __vous apporter__.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/kkVQaWBGWcjPGOlG7d/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Le scepticisme antique\n\nÀ l'origine, le sceptiscisme est un courant philosophique dont l'objectif n'est pas du tout de faire moins d'erreurs, ou alors —comme ont le dit souvent entre sceptiques— de moins dire de trucs faux et de moins se faire avoir par des trucs faux. Nan, nan, nan, à l'origine, pendant la Grèce antique le scepticisme a pour objectif d'éviter les conflits de partis pris, de dogme. Et aussi de diminuer la souffrance qu'on ressent quand on se rend compte qu'on croit des trucs complètement faux. \n\nBah oui. Si je vous dit qu'en réalité, par exemple, les ceintures d'astéroïdes façon Star Wars, ça n'existe pas. Et qu'en réalité les astéroïdes sont séparés par plusieurs centaines de milliers de kilomètres : bah, vous ressentez une petite déception, une petite douleur. Alors imaginez pour des croyances plus importantes.\n\n« — On tape beaucoup sur Star Wars dans cette vidéo... »\n\nLes sceptiques antiques se soulagent donc de cette souffrance en partant d'un seul constat :\n\n« — Il n'existe pas de “moyen objectif” pour reconnaître “la vérité”. »\n\n\u003cfigure\u003e\n\u003cimg width=\"2000\" height=\"847\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-il-n-existe-pas-de-moyen-objectif-pour-reconnaitre-la-verite.jpg\" alt=\"Il n'existe pas de moyen objectif pour reconnaître la vérité\" style=\"max-width: 2000px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eIl n'existe pas de moyen objectif pour reconnaître la vérité \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nVous ne pouvez pas acquérir de façon rationnelle la certitude qu'une chose est vrai. Point. Non non non, même pas ce truc là auquel vous venez de penser. Et du coup, bah, exit le militantisme chevroné puisqu'il n'existe aucune possibilité objective d'être sûr qu'on est dans le vrai. Le sceptique antique est donc censé être au-dessus de tous les conflits et regarder avec tendresse et compassion ses semblables s'entre tuer et pourrir leur environnement pour des questions de « c'est moi qui a raison pour de vrai, et pas toi ».\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/l9bevgYF3D6WwONkX0/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n« — _Bullshit, Fakes news, Bullshit, Bullshit, Fakes news, Bullshit..._\n\n— Ahh... je ne suis que tendresse et compassion pour cet homme qui pense avoir raison pour de vrai, et pas moi.\n\n— _...Bullshit_ »\n\nBon, alors c'est une caricature. On peut être sceptique façon antiquité et quand même militer pour plein de truc. Mais... ça ne sera pas vraiment en tant que sceptique façon antiquité, du coup.\n\n\n\n### C'est quoi la communauté sceptique alors ?\n\nEt surtout, à un moment donné de l'histoire, le scepticisme c'est complètement transformé en plus de s'être copieusement diversifié : Zétitique, Debunk, Scepticisme scientifique, Millitant sceptique, Rationnalisme, Cartésianisme ; c'est le Bordélisme.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/Slf97Apt4vptCYjaGk/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\u003e Mais alors c'est quoi la communauté sceptique ?\n\nJe l'ai dit « La communauté sceptique c'est __LA__ communauté des gens qui s'intéressent au scepticisme ». Sauf qu'en fait ça s'écrit « auXxxx scepticismeSsss », au pluriel.\n\n\u003cfigure\u003e\n\u003cimg width=\"2000\" height=\"847\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-aux-scepticismes.jpg\" alt=\"La communauté sceptique c'est LA communauté des gens qui s'intéressent auX scepticismeS\" style=\"max-width: 2000px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eLa communauté sceptique c'est LA communauté des gens qui s'intéresse auX scepticismeS \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nDu coup entre eux les sceptiques sont loin, très loin, d'être d'accord ou unanime. Sauf, sauf sur la nécessité d'avoir de l'esprit critique. Mais encore, faut t-il se mettre d'accord sûr ce qu'est et ce que n'est pas l'esprit critique. Et là, mes amis, heyhéhéhé... on est pas arrivé.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/ySEkEVek2DkH0YSXMs/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nComme c'est pas trop le sujet de la vidéo, on va faire simple. Les sceptiques partagent leurs connaissances des outils, des méthodes, des astuces qui permettent de vérifier la fiabilité d'une information. Et encore, méthodes qu'ils interprètent et utilisent souvent, en fait, assez mal. D'où là raison d'être de cette série de vidéo : intéresser les nouveaux venus à un scepticisme un petit peu plus subtile que d'habitude, et intéresser les connaisseurs à réviser leurs connaissances depuis mon point de vu.\n\n\n\n### Aucun sceptique n'a raison\n\nParce que, bah non, il n'y a pas de sceptiques qui a raison mais y a surtout beaucoup de sceptiques qui ont plus ou moins tort. Mais aucun ne détient LA méthode ni LA définition de ce que c'est d'être sceptique.\n\n\n\n### Un peu trop peu\n\nPassons à ce qui ce dit à mon sens un peu trop peu.\n\n« — Sympa à dire ça « un peu trop peu » : « un peu trop peu, un peu trop peu, un peu trop peu.\n\n— 🎶 Un peu trop peu, un peu trop peu, un peu trop peu. Un peu trop peu, un peu trop peu, un peu trop peu. Un peu trop peu, un peu trop peu, un peu trop peu. Un peu trop peu, un peu trop peu, un peu trop peu. 🎶 »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/MjOOLevDIU5PfyLwKL/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nSaviez-vous, par exemple, que le Rasoir d'Ockham, l'un des outils les plus vantés et utilisé par les sceptiques n'a absoluement pas pour but de vous permettre d'être dans le vrai et conduit même à de nombreux biais. Saviez-vous ce qu'est le Rasoir d'Ockham et savez-vous ce qu'est un biais ?\n\n\u003e Voilà, donc là c'est le moment ou vous [vous abonnez à la chaine](https://www.youtube.com/channel/UCh2YBKhYIy-_LtfCIn2Jycg) et ou vous cliquez sur la petite cloche parce que vous avez très très envie de briller en société sur ces questions.\n\nEt c'est ce foisonnement de déssaccords entre sceptiques qui permet de faire émerger de nouveaux outils, de nouvelles pratiques, souvent inspirées des sciences pour s'approcher un peu plus de l'inatteignable vérité !\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/RlE9dOyYjzZP8NOFYV/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Ce que ça change dans la vie\n\nMais demandons nous plutôt ce __que ça change dans la vie__ :\n\n« — _Avant, quand quelqu'un disait quelque chose, j'utilisais mon bon sens et mon expérience pour savoir si c'était vrai. Et en fonction de ça, je l'ajoutais à ma théorie sur le monde. Je cherchais la vérité._\n\n_Aujourd'hui, lorsque quelqu'un dit quelque chose, je me demande “comment il sait que c'est vrai”, et si ce comment est une méthode qui permet vraiment d'éviter de croire un truc faux. Je cultive ma vision du monde avec les autres sceptiques en cherchant avant tout à comprendre ce qui peu nous conduire à commettre des erreurs._ »\n\nEt oui ! Personne n'a le super pouvoir de deviner la vérité au feeling : même si on en a tous l'intuition.\n\n\n\n### Ce qui intéresse le sceptique idéal \n\n« — Le sceptique idéal s'intéresse aux “méthodes” qui permettent de “mieux penser contre” ce qu'il a envie de “croire”. »\n\n\u003cfigure\u003e\n\u003cimg width=\"2000\" height=\"847\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-methodes-pour-mieux-penser-contre-soit.jpg\" alt=\"Le sceptique idéal s'intéresse aux méthodes qui permettent de mieux penser contre ce qu'il a envie de croire\" style=\"max-width: 2000px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eLe sceptique idéal s'intéresse aux méthodes qui permettent de mieux penser contre ce qu'il a envie de croire \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nEt c'est de cette fameuse méthode que cette série va parler.\n\n\u003e « — Héhéhé ouuiiii. Après avoir vu mes vidéos, vous serez beaucoup plus intelligent, beaucoup plus fort, et pour certain même : beaucoup plus beau. Parce que bon... là... »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/ccv0CZFPDo0AFvjhSn/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n« — _J'avais raison de dire que les sceptiques doutent de tout._\n\n— Absoluement pas. Je veux dire, on doute que lorsqu'il y a de bonnes raisons de douter et on ne croit que lorsqu'il y a de bonnes raisons de croire. Et puis parfois, on se plante aussi, parce qu'aucune solution n'est parfaite : il y a toujours un font de subjectivité.\n\n— _Veuillez définir “bonnes raisons”._\n\n— Bah ça, c'est justement de ça qu'on va parler dans la suite. »\n\n\n\n### Outro\n\n« — La “méthode Z” est ce que vous en ferez.\n\nVous pouvez en faire une arme pour “remporter les débats”, mais n'espérez pas que “l'autre change” subitement d'avis.\n\nVous pouvez en faire un miroir pour “avoir moins tort”, mais apprêtez-vous à vivre dans un monde qui a beaucoup plus de “certitudes” que vous.\n\nVous pouvez en faire une bouée pour “aider les autres” à sortir de croyances toxiques, mais vous ne pourrez “forcer personne” à l'utiliser.\n\nLa méthode Z est ce que vous en ferez, alors “prenez-en soin”. »\n\n\u003cfigure\u003e\n\u003cimg width=\"1784\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-la-methode-z-est-ce-que-vous-en-ferez-alors-prenez-en-soin.jpg\" alt=\"La méthode Z est ce que vous en ferez, alors prenez-en soin\" style=\"max-width: 1784px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/d9c06887-cc1b-4e02-ac79-8d7b32e99146\" target=\"_blank\"\u003eLa méthode Z est ce que vous en ferez, alors prenez-en soin \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n## À propos de Mr. Sam\n\n\u003e Si cet article basé sur la vidéo de [Mr. Sam - Point d'interrogation\n](https://www.youtube.com/channel/UCh2YBKhYIy-_LtfCIn2Jycg) vous a plus, n'hésitez pas à supporter son travail sur [Tipeee](https://fr.tipeee.com/mrsam) pour avoir d'autres vidéos !","urn":"introduction-a-l-alternative-sceptique-c-est-quoi-la-communaute-sceptique-methode-z","__v":0,"description":"Les médias traditionnels comme les médias alternatifs déçoivent par leur manque de fiabilité. Et s'il existait une 3ème alternative ?","image":"https://skeptikon.fr/lazy-static/previews/d9c06887-cc1b-4e02-ac79-8d7b32e99146.jpg","script":"","stylesheet":".video {\n\u0009margin: 8px 0;\n}\n.video iframe {\n\u0009width: 100%;\n\u0009margin: 0 auto;\n}"}
{"_id":{"$oid":"6064323346c9023f2123a0f9"},"dates":{"updated":[],"published":{"$date":"2021-03-31T08:26:00.000Z"}},"cache":{"comment":{"number":0}},"others":{"markdown":true,"published":false},"categories":[{"$oid":"5310456355dfd5f7698d48be"},{"$oid":"5b2e23d9c2bdd105cdf6709f"},{"$oid":"5310456355dfd5f7698d48cb"},{"$oid":"5310456355dfd5f7698d48bc"},{"$oid":"5310456355dfd5f7698d48bd"}],"title":"Le malheur des sophismes • Méthode Z","content":"La liste des \"sophismes\" permet de repérer facilement les faiblesses d'un argument. Mais cet outil si cher à la communauté sceptique est-il réellement efficace ?\n\n\u003e Suivez cette série proposée par [Mr. Sam - Point d'interrogation\n](https://www.youtube.com/channel/UCh2YBKhYIy-_LtfCIn2Jycg) dédiée aux scepticismes et découvrez la Méthode Z !\n\n\u003cfigure\u003e\n\u003cimg width=\"850\" height=\"480\" src=\"https://skeptikon.fr/lazy-static/previews/[ID SKEPTICON].jpg\" alt=\"Une méthode pour gagner les débats ?\" style=\"max-width: 850px; width: 80%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eUne méthode pour gagner les débats ? \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003cbr\u003e« C'est toi qui a raison, je m'incline. »\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n\n\n## Regarder la vidéo hébergée sur Skeptikón\n\n\u003cdiv class=\"video\"\u003e\n\u0009\u003ciframe width=\"560\" height=\"315\" sandbox=\"allow-same-origin allow-scripts allow-popups\" src=\"https://skeptikon.fr/videos/embed/[ID SKEPTICON]\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\nVous pouvez directement accéder à cette vidéo sur [PeerTube](https://skeptikon.fr/videos/watch/[ID SKEPTICON]) ou alternativement [ici](https://www.youtube.com/watch?v=x9twbRDJEdQ).\n\n\n\n\n\n## Lire la transcription de l'épisode 2 de la Méthode Z\n\n### Intro\n\n« — _Un sophisme est un argument contenant une illusion logique. Identifier un sophisme revient à identifier une fausse information._\n\n— Waouh... Skeptos, te v'la un sceptique accompli.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/0IBnwLRO9bwijoL5Ld/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n— _Merci._\n\n— Parce que là, tu commets une des erreurs les plus répandues, en fait, dans la communauté sceptique : tu fais le sophisme du sophisme.\n\n— _Veuillez préciser ?_\n\n— Préciser, euh... beh, beh écoute, on va se faire un épisode. Mais je te le dis hein, tu es devenu comme les autres, presque tout le monde se plante sur ce sujet et ça transforme beaucoup de sceptiques en parfait trou de... d'anus. »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/ehlsMRTL76E5o845ad/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Le pouvoir des sophismes\n\nLes débutants du scepticisme adorent les sophismes ! Et il y a de quoi. Ce sont de petites règles simples à comprendre en apparence et, tout d'un coup, on a l'impression d'avoir une immense clairvoyance sur la qualité d'une information.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/KQtXEaa1276xh8rJY4/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nMais je l'ai dit : en apparence seulement, oui, j'y suis passé moi aussi. Mes vieilles vidéos en sont truffées. En gros, ça vous donne l'impression d'avoir craqué le code du cerveau des gens. Tout à coup, vous savez faire la différence entre un bon et un mauvais argument sans devoir y passer des heures. C'est pas beau ça ?\n\n\u003e Alors ouais. C'est pas non plus complètement faux, mais c'est surtout complètement pas vrai.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/ImJzyZSe4uTu0iP0AK/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nDans cette série de vidéos, nous allons explorer le sens de très nombreux sophismes, même si en fait, c'est pas vraiment ça que ça veut dire. Il y a son sens strict qui implique une manipulation intentionnelle, et son usage commun, qui grosso merdo, est un synonyme de « Paralogisme » : on y reviendra plus tard vite fait.\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-sophisme-paralogisme.jpg\" alt=\"Sophisme n'est pas paralogisme\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eSophisme n'est pas paralogisme \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n\n\n### Le biais de confirmation\n\nPar exemple, il y a notre tendance à ne pas vérifier des informations qui confirment déjà ce qu'on pense. Bah non, puisque ça colle avec ce qu'on sait : c'est que c'est vrai ! Tout en étant extrêmement sévère avec les informations qui nous contredisent. Hey, si c'est pas d'accord avec nous, alors là... là ouais, là on est prêt à chercher la faille jusqu'à dans les moindres petits détails. Bon on le fait rarement hein, mais on est prêt quand même.\n\nEt c'est ce petit aggloméra de sophismes qu'on appel : le biais de confirmation.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/i08zFtaKBl96671GRn/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nC'est ce qui fait que l'arbitre d'un match, par exemple, nous paraîtra toujours trop sévère avec notre équipe et beaucoup trop complaisant avec l'équipe adverse.\n\nEn bon sceptique, je suis censé me méfier des informations qui me font un effet intense. Que ce soit par la peur, l'indignation, l'émerveillement, la révolte : les informations qui me donnent une forte envie de les partager sont le signe que ma vigilence est endormie par mon impulsivité ; et donc, que je suis censé utiliser ma Méthode Z pour les vérifier.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/Ep7xlMLoeVOq1zSjfA/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Le procès d'intention\n\nAutre exemple de sophisme bien connu, le procès d'intention *(pweet)*. Discréditer quelqu'un sur base de ses intentions cachées. Alors évidemment, c'est pas un sophisme si on a pu prouver les intentions cachées de la personne ; faut pas déconner non plus. Mais pensez-y : pour pouvoir affirmer que quelqu'un a des intention cachées, il faut quand même des preuves bien explicites. Et donc, en fait, c'est plutôt rare.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/jH6x8Qj9gFoDyGvkc1/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nLa plupart du temps, on commet des procès d'intention, parce que « ça expliquerait » pourquoi la personne est en désaccord avec nous. Mais on oublit qu'une explication, euh... c'est pas une preuve, hein. C'est pas parce que ça colle, que c'est vrai. Et du coup, bah on condamne la personne pour l'interprétation qu'on fait à sa place des motivations de son désaccord.\n\nTypiquement : quand on en vient à penser sans preuve que quelqu'un qui nous contredit est payé pour le faire : __c'est un procès d'intention__.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/iIHVfyEJuDPe5i8Dbp/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nOn affirme que la personne ment pour de l'argent parce qu'on a beaucoup de mal à envisager que quelqu'un puisse être en désaccord avec nous, de façon sincère et honnête. Mais en fait : bah si, c'est possible. Y a bien des gens qui préfèrent X-Box à PlayStation.\n\n« — _Qu'est ce que t'as dit là ?_\n\n_Répète un peu ? Qui te paie ?_\n\n— J'ai pas...\n\n— _Qui te paie !_\n\n— J'ai pas voul...\n\n— _Qui te paie ! Avoue !_\n\n— J'ai pas... »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/XU2NI80dD63dP8uMSr/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nEt ce petit biais existe aussi dans le quotidien, par exemple quand on soupçonne son partenaire de tromperie sur la base d'indices qui sont en réalité très très faibles mais qu'on considère beaucoup plus important qu'ils ne le sont une fois cumulés. Ou alors quand on pense qu'un voisin ne nous aime pas, simplement parce qu'il nous a pas sourit alors que, ça se trouve, je sais pas moi, il vient juste de regarder la dernière vidéo de Jancovici, « hahaha ». Etc, etc, des exemples il y en a à l'infini : procès d'intention ça veut bien dire ce que ça veut dire.\n\n\n\n### Exemple avec le Docteur Gentil\n\nAutre exemple, mais cette fois à destination des sceptiques qui se pensent aguerris. Voici le Docteur Gentil.\n\n« — _Bonjour, je suis Docteur. Et ! Je suis gentil._ »\n\nLe Docteur Gentil soigne ses patients à l'aide de câbles RJ45 magiques. Mais j'ai retrouvé un tweet du Docteur Gentil dans lequel il avoue lui-même que la médecine par les câbles n'est __pas__ prouvée scientifiquement. Une seule conclusion s'impose...\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/5SBVUYZZNdSLpWPCYv/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n« — IL sait qu'il ment...\n\nAH AH ! Je t'ai percé à jour Docteur Gentil ! Comme tu as eu une formation scientifique pendant tes études, tu SaAvAaiiS que les câbles ne sont PAS efficaces parcequ'Ils n'Ont Pas Été Prouvé Scientifiquement !! Tu es un meEennteUrr !! Doublé d'un ChaarrLaaTann !!\n\n— _Ça se tiens, hein. Mais non._\n\n— MENtTeuuuRRR !! J'vais l'TweEteEER !! »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/eAdixp7FEjGafzO1dG/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nAffirmer que le Docteur Gentil est un menteur doublé d'un charlatan parce qu'il y a des paradoxes dans son discours, c'est un bon gros procès d'intention. Et c'est très embêtant, parce que le Docteur Gentil est là pour parler du soin par les câbles RJ45. Et à cause de votre procès d'intention, il se retrouve contraint de d'abord devoir se justifier de votre accusation. Bref, la conversation part très mal...\n\n« — T'as entendu parlé de la 5G ? »\n\nParce que si ça se trouve, le Docteur Gentil ne voit pas du tout ça comme des incohérences dans son discours. Il se dit peut-être que les études vont arrivées, qu'il y aura bien une explication tôt ou tard. Après tout, il a bien trouvé des réponses à d'autres problèmes dans ses hypothèses par le passé ? Qui n'ont d'ailleurs fait que renforcer sa conviction aux soins par les câbles RJ45. En croyant trop vite l'avoir percé à jour, j'ai fait un procès d'intention au gentil Docteur Gentil.\n\n\n\n### Gentil Docteur Gentil\n\n« — Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil...\n\n— _Bonjour._\n\n— ...Docteur Gentil...\n\n— (Bonjour)_\n\n— ...Docteur Gentil...\n\n— _(Bonjour)_\n\n— ...Docteur Gentil...\n\n— _(Bonjour)_\n\n— ...Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil...\n\n— _Bonjour._\n\n...Docteur Gentil...\n\n— _Je suis Docteur._\n\n— ...Docteur Gentil...\n\n— _Et ! Je suis gentil._\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/6xo8JWlY7WSbI919aE/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n— ...Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil...\n\n— _Bonjour._\n\n...Docteur Gentil...\n\n— _(Bonjour)_\n\n...Docteur Gentil...\n\n— _(Bonjour)_\n\n...Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil, Docteur Gentil...\n\n— _Bonjour._\n\n...Docteur Gentil...\n\n— _Je suis Docteur._\n\n— ...Docteur Gentil...\n\n— _Et ! Je suis gentil._\n\n— ...Docteur Gentil. »\n\nLe sceptique idéal se méfie toujours de la qualité des arguments qui lui donnent l'impression d'avoir deviner les intentions cachées chez quelqu'un.\n\nBah oui, pour affirmer qu'une personne a des intentions cachées, il faut des preuves accablantes, d'un très haut niveau de fiabilité. Mais la plupart des sceptiques, comme tous les humains se disent :\n\n« — Si j'avais de telles incohérences dans mon discours, je me rendrais compte que je dis de la merde... Donc ? Il ment ?! »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/6IcGaJawrqTkzzenRk/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nBah non, vous oubliez tout simplement que __vous n'êtes pas__ le Docteur Gentil. Vous oubliez que vous n'en savez rien. Et même parfois, vous ne savez pas vous-même ce qui vous motive réellement à critiquer le Docteur Gentil. Ouais, c'est chaud, c'est chaud, ouais.\n\n\n\n### L'appel à la tradition et à la nouveauté\n\nDans les sophismes célèbres il y a aussi le fameux appel à la tradition. Si c'est ancien, c'est que c'est mieux. Bah oui. Bah sauf que non. Y a plein de truc qui sont moins bien parce qu'ils sont anciens. Et d'ailleurs, il y a même l'opposé : l'appel à la nouveauté, si c'est nouveau, bah alors c'est mieux.\n\n\n\n### Ce que sont les sophismes\n\nBah oui mais c'est toujours non. Les sophismes, même si je le répète encore, c'est pas le bon mot et au sens strict du terme on devrait en fait parler de paralogisme, les sophismes dans leurs sens commun, donc, sont une collection d'illusions logiques faites de pièges à cerveau humain, d'argumentations moisies, etc, dans lesquels nous tombons tous. Oui, oui, même-vous. Si si, si si, si. Et il y en a des centaines comme ça.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/EDHRGtVN99l5POER2e/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nConnaître les sophismes donne l'impression d'être dans un monde ou le vrai et le faux sont extrêmement simple à dicerner, on croit se rendre compte soudainement que la plupart des gens passent leurs temps à se convaincre les uns les autres avec des arguments super pourris. Ou alors pire, on se met à trier le vrai du faux, le bon du mauvais, le bien du mal. Alors qu'en fait, bah on ferait mieux de placer un curseur flexible entre tous ces extrêmes. Mais ça, on va en reparler dans un autre épisode.\n\n\n\n### L'appel à la nature et l'argument d'autorité\n\nVotre oncle vous explique que les plats préparés sont mauvais parce qu'ils sont chimiques.\n\n« — _C'est... ChiMiQue !_ »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/FzImX6Ipa46X9dt6Lg/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nAppel à la nature ! Tout est à la fois chimique et naturel ! Ça ne renseigne absoluement pas sur la qualité d'un plat.\n\nUn psychologue vous recommande de boire du jus de betterave pour perdre du poids ?\n\n« — _Tu me remercieras dans 5 petites minutes... Boit !_ »\n\nArgument d'autorité ! Le psychologue n'est pas diététicien.\n\n« — Il sort de son domaine de compétence Jamy, son avis sur la perte de poids vaut autant que celui d'un mathématicien. »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/mi3tLg2m4gBb8VfArF/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Le sophisme du sophisme\n\nEtc. Etc. L'identification des sophismes c'est le troisième œil ! Vous percez à jour toutes les erreurs dans les discours des autres. Sauf que : beh, au fond, quand mon oncle me dit que les plats préparés sont chimiques —déjà, en fait, objectivement c'est vrai— pis il veut peut être me dire que c'est pas ce qu'il y a de plus saint à manger, hein ? Trop gras, trop sucré, trop salé. Il utilise juste de mauvais arguments, ou en tout cas, des arguments qu'il formule mal.\n\nEt le psychologue qui me recommande du jus de betterave là, il veut juste mon bien. Il croit vraiment m'aider. Et ce sera moi le connard si je rejete ce qu'ils disent à cause des illusions logiques dans leurs arguments : ils ne disent pas rien, ils ne veulent pas rien.\n\nCroire qu'un sophisme permet de conclure qu'une information est fausse : c'est ça, le sophisme du sophisme.\n\n\n### Les sophismes servent pour soi ?\n\nAlors, les sceptiques ont une parade. Ils prétendent que les sophismes servent avant tout à détecter ses propres sophismes, à soi. Pour soi-même dire moins de conneries et moins se faire pigeonner. Et c'est pas faux, hein. Celui qui connaît bien sa liste de sophisme croira en moyenne beaucoup, beaucoup moins de choses fausses que quelqu'un qui les connaît pas...\n\n« — _Avez vous une preuve de cette affirmation ?_\n\n— Preuve de... C'est à dire ?\n\n— _Qu'il suffit de connaître par cœur la liste des sophismes pour croire en moyenne beaucoup moins de choses fausses ?_\n\n— Bah, j'suis... Bweuh, non mais, bweuh... un peu de bon sss... bah je veux dire : ça doit exister j'imagine, je, ça... Ça me semble logique ?\n\n— _Je vais suspendre mon jugement sur cette affirmation._\n\n— Bah... Pfff... Mouais... c'est vrai... C'est vrai, d'accord, d'accord. J'avoue, j'avoue, c'est une, c'est une déduction quoi. Mais... mais en fait j'en sais rien. »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/Vz5vInY135cPT8XWe7/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nEt oui un des pièges dans lesquels tombent les sceptiques, c'est de croire que leurs déductions sont aussi fiables que les informations sur lesquelles elles s'appuient. Et ça, si on y réfléchi un petit peu, c'est l'inverse du sophisme des sophismes.\n\nMais qu'on ne se meprenne pas sur ce que je dis, les sophismes, mot toujours utilisés dans son sens commun, sont bels et bien un véritablement atout pour moins se tromper : et une constituante centrale de ma Méthode Z. Alors ? Qu'est-ce que le baises ?\n\n\n\n### Dénoncer les sophismes\n\nPartons d'un simple constat : la pleinte la plus courante chez les sceptiques débutants c'est que : de dire à quelqu'un ses sophismes ne l'incite pas du tout à changer d'avis.\n\n« — Mais c'est chimique, ça ne veut rien dire ?\n\n— _Je m'en branle : fait pas semblant de pas comprendre ce que je veux dire !_\n\n_C'est ChiMiQue !_ »\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/3ro6NNKF1NFydnbrb0/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nMais alors ça convainc pas du tout, du tout. Conclusion ?\n\n« — Tu es incapable de remettre en question tes croyances puisque tu ne reconnais pas ton tort.\n\n— _Tu fais semblant de ne pas comprendre de quoi je parle, et m'accuser comme tu le fais, me conduit à penser que tu es un sale petit prétentieux. Continue comme ça, et tu toucheras un chèque de l'industrie agroalimentaire._\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/6ibhJus5wYgYrXnaRW/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n— Procès d'intention. Tu fais partie de ces personnes obtues qui refusent par égo de reconnaître leurs propres sophismes et qui en viennent à croire que les sophismes sont brandis par les sceptiques pour se dispenser de réfléchir. Tout ça, pour préserver ta fausse conviction.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/PmOk98Tlj2c7bbbDpr/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n— _Tu n'as pas l'esprit ouvert. Ta trop grande confiance aux institutions t'as transformé en mouton du système._\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/FcHsRmJzGb3lL65HFD/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\nEt beh vous savez quoi ? En fait, moi je pense que c'est Tonton Tony qui a raison. Les sceptiques qui dénoncent les sophismes des autres sont de sales petits prétentieux qui manquent cruellement d'ouverture d'esprit : ou en tout cas, dit poliment : ils manquent d'écoute, de curiosité de l'autre, ils sont beaucoup trop sûr d'eux-mêmes.\n\nJe l'ai dit, le sophisme du sophisme est une des erreurs les plus répandues dans la communauté sceptique. Alors, que vous soyez un vétérant, un nouveau venu, ou un simple curieux : arrêtez de croire que c'est en dénonçant des sophismes que vous ferez avancer des choses.\n\n\n\n### Définition stricte du mot sophisme\n\nUn petit mot sur la définition du mot sophisme maintenant. Parce qu'avec ça, on le confond avec le mot « Biais », « Biais cognitif », « Argument fallacieux », « Rhétorique », « Bullshit » même ; et je vous passe les variantes levels experts comme « Syllogisme », « Paralogisme », etc.\n\nAlors, le Larousse nous donne cette définition de sophisme :\n\n« Raisonnement “vicié à la base” reposant sur un jeu de mots, un argument séduisant mais faux, “destiné” à induire l'interlocuteur en erreur. »\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-sophisme-definition.jpg\" alt=\"Sophisme : raisonnement vicié à la base reposant sur un jeu de mots, un argument séduisant mais faux, destiné à induire l'interlocuteur en erreur\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eSophisme : raisonnement vicié à la base reposant sur un jeu de mots, un argument séduisant mais faux, destiné à induire l'interlocuteur en erreur \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n« Destiné » : dans le sens « voulu ». Un sophisme c'est donc au sens strict du terme censé être prononcé toujours par un menteur. Je veux dire, un menteur qui sait qu'il ment. Un sophisme est prononcé par une personne qui est consciente des failles de son propos, mais, qui les utilisent quand même dans le but de tenter de convaincre. Et ça, en fait, bah c'est très rare.\n\nSi on respectait cette définition : dire à quelqu'un qu'il commet des sophismes, et beh, ce serait très souvent un procès d'intention. Beaucoup de croyances supportent les zones d'ombres, les paradoxes, etc, parce que, héé, « on sait pas tout ».\n\n« — Ouais. “La science”, par exemple ? »\n\nAh... ouais ? Ouais... ouais. Je prends un risque là quand même, hein.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/0KsaVpRLTnfPSGNZEz/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\n\n### Illusion logique\n\nBon, parlons peu, parlons bien. Le mot sophisme est, certe, employé à tort du point de vu du sens strict. Mais bon, au fond, je trouve que ça sonne un peu comme un mot compliqué, alors, dans ma Méthode Z, on va plutôt utiliser le terme : __illusion logique__.\n\nOn va même rendre sa définition plus vaste :\n\nUne illusion logique ça sera à la fois un biais, c'est-à-dire un moyen de contourner un obstacle ou un problème et un paralogisme, c'est-à-dire, un raisonnement qui à l'air vrai de prime abord mais qui est faux et qui est prononcé par quelqu'un qui est de bonne foi.\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-illusion-logique-ressemble-tres-fort-a-une-preuve.jpg\" alt=\"Illusion logique : ressemble très fort à une preuve mais n'en est pas une\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eIllusion logique : ressemble très fort à une preuve mais n'en est pas une \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\nBref, un truc qui est censé être une preuve mais, qui en fait, prouve absoluement rien du tout, et qui, si on y prend pas garde, ressemble très très fort à une preuve.\n\nC'est généralement un argument qui semble convaincant, mais qui pourrait être utilisé pour convaincre les gens qu'un truc faux, est vrai.\n\nEt toute la subtilité est là : est-ce que parce que une personne défend mal ce qu'elle pense, ce qu'elle pense n'a aucun intérêt ? Aucune valeur ? Les illusions logiques ce sont simplement des raccourcis. Des trucs qui permettent d'atteindre une conclusion avec beaucoup moins d'efforts qu'en ayant lourdement vérifié. Mais elles ne sont __pas__ parole d'évangile. Un petit peu comme... la parole d'Évangile.\n\n\n\n### Question VS conclusion\n\nAlors, la question à mille points : est-ce qu'une illusion logique conduit toujours à une conclusion illogique ? Beh non. Moi, avec ma Méthode Z, je pense qu'il faut plutôt chercher ce qu'une personne tente réellement d'exprimer plutôt que de s'arrêter aux arguments qu'elle emploit pour supporter ce qu'elle veut dire.\n\n« — Le sceptique idéale réfléchit aux “questions” qu'une personne se posent, au lieu de combattre les “conclusions” qu'elle lui expose. »\n\n\u003cfigure\u003e\n\u003cimg width=\"2400\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-reflechir-aux-questions-vs-combattre-les-conclusions.jpg\" alt=\"Réfléchir aux questions vs combattre les conclusions\" style=\"max-width: 2400px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eRéfléchir aux questions vs combattre les conclusions \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n« — _Pourtant, si une personne ne me donne pas de bonnes raisons de la croire, je n'ai aucune raison de la croire._\n\n— Là, je reconnais bien la partie “artificielle” du terme “intelligence artificielle”.\n\nIl n'y a pas que croire une information Skeptos, il y a aussi comprendre la personne. Et on comprend pas quelqu'un avant de l'avoir écouté et questionné, et ré-écouté encore : avec compassion. Voir même, je dirais, avec amitié pour effacer l'idée qu'on s'en faisait avant de lui parler.\n\nÉcouter quelqu'un, c'est pas juste écouter ses conclusions, c'est aussi tenter de comprendre les questions qu'il ce pose, et pourquoi pas, l'aider à mieux formuler son propos. C'est tenter de ce mettre à sa place. C'est chercher à comprendre : d'où il vient, à partir de quoi il pense, quels aspects sont importants pour lui ? Peut-être que son désaccord est motivés par des réalités que tu connais pas ? Peux-être qu'il s'inquiête de problème qui sont pas les tiens ?\n\nDans tout ça, une illusion logique, ça fait partie de la forme, ça fait pas partie du fond. Et ça emmerde tout le monde, quand on s'arrête à la forme : tout comme ça emmerde tout le monde quand on dit que le fond est ce qui est le plus important. »\n\nAvant de vous détailler ces formidables outils que sont les moyens d'identifier les illusions logiques, je voulais juste m'assurer que vous n'utiliseriez pas ce grand pouvoir, cette grande responsabilité...\n\n« — OK BOOMER »\n\n...pour devenir des trous d'anus qui rejettent le fond au prétexte que la forme manque de charpente, ni qui dénigre l'importance de la forme au prétexte que le fond est juste.\n\nComme le dit si bien, Phil Plait, un éminent sceptique anglophone : “Don't be a Dick”.\n\n\u003cfigure\u003e\n\u003cimg width=\"480\" height=\"270\" style=\"width: 100%; max-width: 480px;height: auto\" src=\"https://media.giphy.com/media/xvTrULuwvB2FJVUDqm/giphy.gif\" alt=\"Giphy\"\u003e\n\u003c/figure\u003e\n\n\u003e Ne soyez pas des zizis.\n\n\n\n### Outro\n\n« — La “méthode Z” est ce que vous en ferez.\n\nVous pouvez en faire une arme pour “remporter les débats”, mais n'espérez pas que “l'autre change” subitement d'avis.\n\nVous pouvez en faire un miroir pour “avoir moins tort”, mais apprêtez-vous à vivre dans un monde qui a beaucoup plus de “certitudes” que vous.\n\nVous pouvez en faire une bouée pour “aider les autres” à sortir de croyances toxiques, mais vous ne pourrez “forcer personne” à l'utiliser.\n\nLa méthode Z est ce que vous en ferez, alors “prenez-en soin”. »\n\n\u003cfigure\u003e\n\u003cimg width=\"1784\" height=\"1016\" src=\"https://blog.lesieur.name/media/images/upload/methode-z-la-methode-z-est-ce-que-vous-en-ferez-alors-prenez-en-soin.jpg\" alt=\"La méthode Z est ce que vous en ferez, alors prenez-en soin\" style=\"max-width: 1784px; width: 100%; height: auto;\"\u003e\n\u003cfigcaption\u003e\u003ca href=\"https://skeptikon.fr/videos/watch/[ID SKEPTICON]\" target=\"_blank\"\u003eLa méthode Z est ce que vous en ferez, alors prenez-en soin \u003cem\u003epar Mr. Sam\u003c/em\u003e\u003c/a\u003e\u003c/figcaption\u003e\n\u003c/figure\u003e\n\n## À propos de Mr. Sam\n\n\u003e Si cet article basé sur la vidéo de [Mr. Sam - Point d'interrogation\n](https://www.youtube.com/channel/UCh2YBKhYIy-_LtfCIn2Jycg) vous a plus, n'hésitez pas à supporter son travail sur [Tipeee](https://fr.tipeee.com/mrsam) pour avoir d'autres vidéos !","urn":"le-malheur-des-sophismes-une-methode-pour-gagner-les-debats","__v":0,"description":"La liste des \"sophismes\" permet de repérer facilement les faiblesses d'un argument. Mais cet outil si cher à la communauté sceptique est-il réellement efficace ?","image":"","script":"","stylesheet":""}
